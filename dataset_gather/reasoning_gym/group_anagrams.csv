ID,dataset,question,answer,full_data
0,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""maniacs"", ""caimans"", ""manasic"", ""yabber"", ""babery"", ""reconvention"", ""conventioner""]
","[[""babery"", ""yabber""], [""caimans"", ""manasic"", ""maniacs""], [""conventioner"", ""reconvention""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""maniacs\"", \""caimans\"", \""manasic\"", \""yabber\"", \""babery\"", \""reconvention\"", \""conventioner\""]\n"",
    ""answer"": ""[[\""babery\"", \""yabber\""], [\""caimans\"", \""manasic\"", \""maniacs\""], [\""conventioner\"", \""reconvention\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 0,
        ""words"": [
            ""maniacs"",
            ""caimans"",
            ""manasic"",
            ""yabber"",
            ""babery"",
            ""reconvention"",
            ""conventioner""
        ],
        ""solution"": [
            [
                ""babery"",
                ""yabber""
            ],
            [
                ""caimans"",
                ""manasic"",
                ""maniacs""
            ],
            [
                ""conventioner"",
                ""reconvention""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
1,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""prosely"", ""leprosy"", ""copras"", ""carpos"", ""siren"", ""reins"", ""rinse"", ""resin"", ""subarration"", ""saburration""]
","[[""carpos"", ""copras""], [""leprosy"", ""prosely""], [""reins"", ""resin"", ""rinse"", ""siren""], [""saburration"", ""subarration""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""prosely\"", \""leprosy\"", \""copras\"", \""carpos\"", \""siren\"", \""reins\"", \""rinse\"", \""resin\"", \""subarration\"", \""saburration\""]\n"",
    ""answer"": ""[[\""carpos\"", \""copras\""], [\""leprosy\"", \""prosely\""], [\""reins\"", \""resin\"", \""rinse\"", \""siren\""], [\""saburration\"", \""subarration\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 1,
        ""words"": [
            ""prosely"",
            ""leprosy"",
            ""copras"",
            ""carpos"",
            ""siren"",
            ""reins"",
            ""rinse"",
            ""resin"",
            ""subarration"",
            ""saburration""
        ],
        ""solution"": [
            [
                ""carpos"",
                ""copras""
            ],
            [
                ""leprosy"",
                ""prosely""
            ],
            [
                ""reins"",
                ""resin"",
                ""rinse"",
                ""siren""
            ],
            [
                ""saburration"",
                ""subarration""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
2,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""labiodental"", ""dentolabial"", ""intaglios"", ""ligations"", ""isolating"", ""incorporated"", ""adrenotropic"", ""samiti"", ""timias"", ""ostracodan"", ""cardosanto"", ""unadept"", ""untaped"", ""aeneid"", ""diaene"", ""aedine"", ""trumperiness"", ""surprisement"", ""od"", ""do"", ""desmic"", ""medics""]
","[[""adrenotropic"", ""incorporated""], [""aedine"", ""aeneid"", ""diaene""], [""cardosanto"", ""ostracodan""], [""dentolabial"", ""labiodental""], [""desmic"", ""medics""], [""do"", ""od""], [""intaglios"", ""isolating"", ""ligations""], [""samiti"", ""timias""], [""surprisement"", ""trumperiness""], [""unadept"", ""untaped""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""labiodental\"", \""dentolabial\"", \""intaglios\"", \""ligations\"", \""isolating\"", \""incorporated\"", \""adrenotropic\"", \""samiti\"", \""timias\"", \""ostracodan\"", \""cardosanto\"", \""unadept\"", \""untaped\"", \""aeneid\"", \""diaene\"", \""aedine\"", \""trumperiness\"", \""surprisement\"", \""od\"", \""do\"", \""desmic\"", \""medics\""]\n"",
    ""answer"": ""[[\""adrenotropic\"", \""incorporated\""], [\""aedine\"", \""aeneid\"", \""diaene\""], [\""cardosanto\"", \""ostracodan\""], [\""dentolabial\"", \""labiodental\""], [\""desmic\"", \""medics\""], [\""do\"", \""od\""], [\""intaglios\"", \""isolating\"", \""ligations\""], [\""samiti\"", \""timias\""], [\""surprisement\"", \""trumperiness\""], [\""unadept\"", \""untaped\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 2,
        ""words"": [
            ""labiodental"",
            ""dentolabial"",
            ""intaglios"",
            ""ligations"",
            ""isolating"",
            ""incorporated"",
            ""adrenotropic"",
            ""samiti"",
            ""timias"",
            ""ostracodan"",
            ""cardosanto"",
            ""unadept"",
            ""untaped"",
            ""aeneid"",
            ""diaene"",
            ""aedine"",
            ""trumperiness"",
            ""surprisement"",
            ""od"",
            ""do"",
            ""desmic"",
            ""medics""
        ],
        ""solution"": [
            [
                ""adrenotropic"",
                ""incorporated""
            ],
            [
                ""aedine"",
                ""aeneid"",
                ""diaene""
            ],
            [
                ""cardosanto"",
                ""ostracodan""
            ],
            [
                ""dentolabial"",
                ""labiodental""
            ],
            [
                ""desmic"",
                ""medics""
            ],
            [
                ""do"",
                ""od""
            ],
            [
                ""intaglios"",
                ""isolating"",
                ""ligations""
            ],
            [
                ""samiti"",
                ""timias""
            ],
            [
                ""surprisement"",
                ""trumperiness""
            ],
            [
                ""unadept"",
                ""untaped""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
3,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""prepared"", ""dapperer"", ""upstare"", ""pasteur"", ""atiptoe"", ""atopite"", ""parlatory"", ""portrayal"", ""debriding"", ""rebidding"", ""sombreness"", ""somberness"", ""zabian"", ""banzai"", ""secondi"", ""codeins"", ""nofile"", ""enfoil"", ""chalmer"", ""charmel""]
","[[""atiptoe"", ""atopite""], [""banzai"", ""zabian""], [""chalmer"", ""charmel""], [""codeins"", ""secondi""], [""dapperer"", ""prepared""], [""debriding"", ""rebidding""], [""enfoil"", ""nofile""], [""parlatory"", ""portrayal""], [""pasteur"", ""upstare""], [""somberness"", ""sombreness""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""prepared\"", \""dapperer\"", \""upstare\"", \""pasteur\"", \""atiptoe\"", \""atopite\"", \""parlatory\"", \""portrayal\"", \""debriding\"", \""rebidding\"", \""sombreness\"", \""somberness\"", \""zabian\"", \""banzai\"", \""secondi\"", \""codeins\"", \""nofile\"", \""enfoil\"", \""chalmer\"", \""charmel\""]\n"",
    ""answer"": ""[[\""atiptoe\"", \""atopite\""], [\""banzai\"", \""zabian\""], [\""chalmer\"", \""charmel\""], [\""codeins\"", \""secondi\""], [\""dapperer\"", \""prepared\""], [\""debriding\"", \""rebidding\""], [\""enfoil\"", \""nofile\""], [\""parlatory\"", \""portrayal\""], [\""pasteur\"", \""upstare\""], [\""somberness\"", \""sombreness\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 3,
        ""words"": [
            ""prepared"",
            ""dapperer"",
            ""upstare"",
            ""pasteur"",
            ""atiptoe"",
            ""atopite"",
            ""parlatory"",
            ""portrayal"",
            ""debriding"",
            ""rebidding"",
            ""sombreness"",
            ""somberness"",
            ""zabian"",
            ""banzai"",
            ""secondi"",
            ""codeins"",
            ""nofile"",
            ""enfoil"",
            ""chalmer"",
            ""charmel""
        ],
        ""solution"": [
            [
                ""atiptoe"",
                ""atopite""
            ],
            [
                ""banzai"",
                ""zabian""
            ],
            [
                ""chalmer"",
                ""charmel""
            ],
            [
                ""codeins"",
                ""secondi""
            ],
            [
                ""dapperer"",
                ""prepared""
            ],
            [
                ""debriding"",
                ""rebidding""
            ],
            [
                ""enfoil"",
                ""nofile""
            ],
            [
                ""parlatory"",
                ""portrayal""
            ],
            [
                ""pasteur"",
                ""upstare""
            ],
            [
                ""somberness"",
                ""sombreness""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
4,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""almanac"", ""mancala"", ""scaupers"", ""acupress"", ""spermalist"", ""slipstream"", ""psalmister"", ""wheeled"", ""wheedle"", ""unplied"", ""unpiled"", ""praepostor"", ""pterospora"", ""coat"", ""taco""]
","[[""acupress"", ""scaupers""], [""almanac"", ""mancala""], [""coat"", ""taco""], [""praepostor"", ""pterospora""], [""psalmister"", ""slipstream"", ""spermalist""], [""unpiled"", ""unplied""], [""wheedle"", ""wheeled""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""almanac\"", \""mancala\"", \""scaupers\"", \""acupress\"", \""spermalist\"", \""slipstream\"", \""psalmister\"", \""wheeled\"", \""wheedle\"", \""unplied\"", \""unpiled\"", \""praepostor\"", \""pterospora\"", \""coat\"", \""taco\""]\n"",
    ""answer"": ""[[\""acupress\"", \""scaupers\""], [\""almanac\"", \""mancala\""], [\""coat\"", \""taco\""], [\""praepostor\"", \""pterospora\""], [\""psalmister\"", \""slipstream\"", \""spermalist\""], [\""unpiled\"", \""unplied\""], [\""wheedle\"", \""wheeled\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 4,
        ""words"": [
            ""almanac"",
            ""mancala"",
            ""scaupers"",
            ""acupress"",
            ""spermalist"",
            ""slipstream"",
            ""psalmister"",
            ""wheeled"",
            ""wheedle"",
            ""unplied"",
            ""unpiled"",
            ""praepostor"",
            ""pterospora"",
            ""coat"",
            ""taco""
        ],
        ""solution"": [
            [
                ""acupress"",
                ""scaupers""
            ],
            [
                ""almanac"",
                ""mancala""
            ],
            [
                ""coat"",
                ""taco""
            ],
            [
                ""praepostor"",
                ""pterospora""
            ],
            [
                ""psalmister"",
                ""slipstream"",
                ""spermalist""
            ],
            [
                ""unpiled"",
                ""unplied""
            ],
            [
                ""wheedle"",
                ""wheeled""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
5,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""placode"", ""pedocal"", ""mastomenia"", ""seminomata"", ""taise"", ""saite""]
","[[""mastomenia"", ""seminomata""], [""pedocal"", ""placode""], [""saite"", ""taise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""placode\"", \""pedocal\"", \""mastomenia\"", \""seminomata\"", \""taise\"", \""saite\""]\n"",
    ""answer"": ""[[\""mastomenia\"", \""seminomata\""], [\""pedocal\"", \""placode\""], [\""saite\"", \""taise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 5,
        ""words"": [
            ""placode"",
            ""pedocal"",
            ""mastomenia"",
            ""seminomata"",
            ""taise"",
            ""saite""
        ],
        ""solution"": [
            [
                ""mastomenia"",
                ""seminomata""
            ],
            [
                ""pedocal"",
                ""placode""
            ],
            [
                ""saite"",
                ""taise""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
6,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""encrusted"", ""undersect"", ""uncrested"", ""pretaste"", ""tapester"", ""prestate"", ""peartest"", ""topological"", ""optological"", ""chapote"", ""apothec"", ""amelcorn"", ""cornmeal"", ""ted"", ""det"", ""umlauts"", ""mutuals"", ""extirpates"", ""sexpartite""]
","[[""amelcorn"", ""cornmeal""], [""apothec"", ""chapote""], [""det"", ""ted""], [""encrusted"", ""uncrested"", ""undersect""], [""extirpates"", ""sexpartite""], [""mutuals"", ""umlauts""], [""optological"", ""topological""], [""peartest"", ""prestate"", ""pretaste"", ""tapester""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""encrusted\"", \""undersect\"", \""uncrested\"", \""pretaste\"", \""tapester\"", \""prestate\"", \""peartest\"", \""topological\"", \""optological\"", \""chapote\"", \""apothec\"", \""amelcorn\"", \""cornmeal\"", \""ted\"", \""det\"", \""umlauts\"", \""mutuals\"", \""extirpates\"", \""sexpartite\""]\n"",
    ""answer"": ""[[\""amelcorn\"", \""cornmeal\""], [\""apothec\"", \""chapote\""], [\""det\"", \""ted\""], [\""encrusted\"", \""uncrested\"", \""undersect\""], [\""extirpates\"", \""sexpartite\""], [\""mutuals\"", \""umlauts\""], [\""optological\"", \""topological\""], [\""peartest\"", \""prestate\"", \""pretaste\"", \""tapester\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 6,
        ""words"": [
            ""encrusted"",
            ""undersect"",
            ""uncrested"",
            ""pretaste"",
            ""tapester"",
            ""prestate"",
            ""peartest"",
            ""topological"",
            ""optological"",
            ""chapote"",
            ""apothec"",
            ""amelcorn"",
            ""cornmeal"",
            ""ted"",
            ""det"",
            ""umlauts"",
            ""mutuals"",
            ""extirpates"",
            ""sexpartite""
        ],
        ""solution"": [
            [
                ""amelcorn"",
                ""cornmeal""
            ],
            [
                ""apothec"",
                ""chapote""
            ],
            [
                ""det"",
                ""ted""
            ],
            [
                ""encrusted"",
                ""uncrested"",
                ""undersect""
            ],
            [
                ""extirpates"",
                ""sexpartite""
            ],
            [
                ""mutuals"",
                ""umlauts""
            ],
            [
                ""optological"",
                ""topological""
            ],
            [
                ""peartest"",
                ""prestate"",
                ""pretaste"",
                ""tapester""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
7,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""chetty"", ""tetchy"", ""disponer"", ""prisoned"", ""rhamnoside"", ""admonisher"", ""harmonised"", ""borrower"", ""reborrow"", ""campsite"", ""campiest""]
","[[""admonisher"", ""harmonised"", ""rhamnoside""], [""borrower"", ""reborrow""], [""campiest"", ""campsite""], [""chetty"", ""tetchy""], [""disponer"", ""prisoned""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""chetty\"", \""tetchy\"", \""disponer\"", \""prisoned\"", \""rhamnoside\"", \""admonisher\"", \""harmonised\"", \""borrower\"", \""reborrow\"", \""campsite\"", \""campiest\""]\n"",
    ""answer"": ""[[\""admonisher\"", \""harmonised\"", \""rhamnoside\""], [\""borrower\"", \""reborrow\""], [\""campiest\"", \""campsite\""], [\""chetty\"", \""tetchy\""], [\""disponer\"", \""prisoned\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 7,
        ""words"": [
            ""chetty"",
            ""tetchy"",
            ""disponer"",
            ""prisoned"",
            ""rhamnoside"",
            ""admonisher"",
            ""harmonised"",
            ""borrower"",
            ""reborrow"",
            ""campsite"",
            ""campiest""
        ],
        ""solution"": [
            [
                ""admonisher"",
                ""harmonised"",
                ""rhamnoside""
            ],
            [
                ""borrower"",
                ""reborrow""
            ],
            [
                ""campiest"",
                ""campsite""
            ],
            [
                ""chetty"",
                ""tetchy""
            ],
            [
                ""disponer"",
                ""prisoned""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
8,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ingresses"", ""singeress"", ""tumbles"", ""stumble"", ""groper"", ""porger"", ""aesculin"", ""lunacies"", ""centrodorsal"", ""doroscentral"", ""dorsocentral"", ""cloturing"", ""courtling"", ""pastimer"", ""primates"", ""ligroines"", ""religions"", ""shames"", ""mashes""]
","[[""aesculin"", ""lunacies""], [""centrodorsal"", ""doroscentral"", ""dorsocentral""], [""cloturing"", ""courtling""], [""groper"", ""porger""], [""ingresses"", ""singeress""], [""ligroines"", ""religions""], [""mashes"", ""shames""], [""pastimer"", ""primates""], [""stumble"", ""tumbles""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ingresses\"", \""singeress\"", \""tumbles\"", \""stumble\"", \""groper\"", \""porger\"", \""aesculin\"", \""lunacies\"", \""centrodorsal\"", \""doroscentral\"", \""dorsocentral\"", \""cloturing\"", \""courtling\"", \""pastimer\"", \""primates\"", \""ligroines\"", \""religions\"", \""shames\"", \""mashes\""]\n"",
    ""answer"": ""[[\""aesculin\"", \""lunacies\""], [\""centrodorsal\"", \""doroscentral\"", \""dorsocentral\""], [\""cloturing\"", \""courtling\""], [\""groper\"", \""porger\""], [\""ingresses\"", \""singeress\""], [\""ligroines\"", \""religions\""], [\""mashes\"", \""shames\""], [\""pastimer\"", \""primates\""], [\""stumble\"", \""tumbles\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 8,
        ""words"": [
            ""ingresses"",
            ""singeress"",
            ""tumbles"",
            ""stumble"",
            ""groper"",
            ""porger"",
            ""aesculin"",
            ""lunacies"",
            ""centrodorsal"",
            ""doroscentral"",
            ""dorsocentral"",
            ""cloturing"",
            ""courtling"",
            ""pastimer"",
            ""primates"",
            ""ligroines"",
            ""religions"",
            ""shames"",
            ""mashes""
        ],
        ""solution"": [
            [
                ""aesculin"",
                ""lunacies""
            ],
            [
                ""centrodorsal"",
                ""doroscentral"",
                ""dorsocentral""
            ],
            [
                ""cloturing"",
                ""courtling""
            ],
            [
                ""groper"",
                ""porger""
            ],
            [
                ""ingresses"",
                ""singeress""
            ],
            [
                ""ligroines"",
                ""religions""
            ],
            [
                ""mashes"",
                ""shames""
            ],
            [
                ""pastimer"",
                ""primates""
            ],
            [
                ""stumble"",
                ""tumbles""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
9,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dittanies"", ""daintiest"", ""carols"", ""claros"", ""bunged"", ""bedung"", ""unshaded"", ""undashed"", ""veeps"", ""vepse"", ""providers"", ""disprover"", ""infarcted"", ""infracted"", ""tumbester"", ""umbrettes""]
","[[""bedung"", ""bunged""], [""carols"", ""claros""], [""daintiest"", ""dittanies""], [""disprover"", ""providers""], [""infarcted"", ""infracted""], [""tumbester"", ""umbrettes""], [""undashed"", ""unshaded""], [""veeps"", ""vepse""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dittanies\"", \""daintiest\"", \""carols\"", \""claros\"", \""bunged\"", \""bedung\"", \""unshaded\"", \""undashed\"", \""veeps\"", \""vepse\"", \""providers\"", \""disprover\"", \""infarcted\"", \""infracted\"", \""tumbester\"", \""umbrettes\""]\n"",
    ""answer"": ""[[\""bedung\"", \""bunged\""], [\""carols\"", \""claros\""], [\""daintiest\"", \""dittanies\""], [\""disprover\"", \""providers\""], [\""infarcted\"", \""infracted\""], [\""tumbester\"", \""umbrettes\""], [\""undashed\"", \""unshaded\""], [\""veeps\"", \""vepse\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 9,
        ""words"": [
            ""dittanies"",
            ""daintiest"",
            ""carols"",
            ""claros"",
            ""bunged"",
            ""bedung"",
            ""unshaded"",
            ""undashed"",
            ""veeps"",
            ""vepse"",
            ""providers"",
            ""disprover"",
            ""infarcted"",
            ""infracted"",
            ""tumbester"",
            ""umbrettes""
        ],
        ""solution"": [
            [
                ""bedung"",
                ""bunged""
            ],
            [
                ""carols"",
                ""claros""
            ],
            [
                ""daintiest"",
                ""dittanies""
            ],
            [
                ""disprover"",
                ""providers""
            ],
            [
                ""infarcted"",
                ""infracted""
            ],
            [
                ""tumbester"",
                ""umbrettes""
            ],
            [
                ""undashed"",
                ""unshaded""
            ],
            [
                ""veeps"",
                ""vepse""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
10,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ditas"", ""adits"", ""staid"", ""plastinoid"", ""palinodist"", ""cytomere"", ""merocyte""]
","[[""adits"", ""ditas"", ""staid""], [""cytomere"", ""merocyte""], [""palinodist"", ""plastinoid""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ditas\"", \""adits\"", \""staid\"", \""plastinoid\"", \""palinodist\"", \""cytomere\"", \""merocyte\""]\n"",
    ""answer"": ""[[\""adits\"", \""ditas\"", \""staid\""], [\""cytomere\"", \""merocyte\""], [\""palinodist\"", \""plastinoid\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 10,
        ""words"": [
            ""ditas"",
            ""adits"",
            ""staid"",
            ""plastinoid"",
            ""palinodist"",
            ""cytomere"",
            ""merocyte""
        ],
        ""solution"": [
            [
                ""adits"",
                ""ditas"",
                ""staid""
            ],
            [
                ""cytomere"",
                ""merocyte""
            ],
            [
                ""palinodist"",
                ""plastinoid""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
11,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""escrod"", ""decors"", ""scored"", ""semitaur"", ""muriates""]
","[[""decors"", ""escrod"", ""scored""], [""muriates"", ""semitaur""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""escrod\"", \""decors\"", \""scored\"", \""semitaur\"", \""muriates\""]\n"",
    ""answer"": ""[[\""decors\"", \""escrod\"", \""scored\""], [\""muriates\"", \""semitaur\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 11,
        ""words"": [
            ""escrod"",
            ""decors"",
            ""scored"",
            ""semitaur"",
            ""muriates""
        ],
        ""solution"": [
            [
                ""decors"",
                ""escrod"",
                ""scored""
            ],
            [
                ""muriates"",
                ""semitaur""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
12,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""granitite"", ""iterating"", ""helium"", ""humlie"", ""nizam"", ""nazim"", ""striplings"", ""slipstring"", ""rearrest"", ""arrester"", ""bf"", ""fb"", ""tadpolism"", ""diplomats"", ""cunan"", ""canun""]
","[[""arrester"", ""rearrest""], [""bf"", ""fb""], [""canun"", ""cunan""], [""diplomats"", ""tadpolism""], [""granitite"", ""iterating""], [""helium"", ""humlie""], [""nazim"", ""nizam""], [""slipstring"", ""striplings""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""granitite\"", \""iterating\"", \""helium\"", \""humlie\"", \""nizam\"", \""nazim\"", \""striplings\"", \""slipstring\"", \""rearrest\"", \""arrester\"", \""bf\"", \""fb\"", \""tadpolism\"", \""diplomats\"", \""cunan\"", \""canun\""]\n"",
    ""answer"": ""[[\""arrester\"", \""rearrest\""], [\""bf\"", \""fb\""], [\""canun\"", \""cunan\""], [\""diplomats\"", \""tadpolism\""], [\""granitite\"", \""iterating\""], [\""helium\"", \""humlie\""], [\""nazim\"", \""nizam\""], [\""slipstring\"", \""striplings\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 12,
        ""words"": [
            ""granitite"",
            ""iterating"",
            ""helium"",
            ""humlie"",
            ""nizam"",
            ""nazim"",
            ""striplings"",
            ""slipstring"",
            ""rearrest"",
            ""arrester"",
            ""bf"",
            ""fb"",
            ""tadpolism"",
            ""diplomats"",
            ""cunan"",
            ""canun""
        ],
        ""solution"": [
            [
                ""arrester"",
                ""rearrest""
            ],
            [
                ""bf"",
                ""fb""
            ],
            [
                ""canun"",
                ""cunan""
            ],
            [
                ""diplomats"",
                ""tadpolism""
            ],
            [
                ""granitite"",
                ""iterating""
            ],
            [
                ""helium"",
                ""humlie""
            ],
            [
                ""nazim"",
                ""nizam""
            ],
            [
                ""slipstring"",
                ""striplings""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
13,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""eldern"", ""lender"", ""fp"", ""pf"", ""cohere"", ""cheero"", ""anglican"", ""canaling"", ""converters"", ""reconverts"", ""wandy"", ""dawny""]
","[[""anglican"", ""canaling""], [""cheero"", ""cohere""], [""converters"", ""reconverts""], [""dawny"", ""wandy""], [""eldern"", ""lender""], [""fp"", ""pf""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""eldern\"", \""lender\"", \""fp\"", \""pf\"", \""cohere\"", \""cheero\"", \""anglican\"", \""canaling\"", \""converters\"", \""reconverts\"", \""wandy\"", \""dawny\""]\n"",
    ""answer"": ""[[\""anglican\"", \""canaling\""], [\""cheero\"", \""cohere\""], [\""converters\"", \""reconverts\""], [\""dawny\"", \""wandy\""], [\""eldern\"", \""lender\""], [\""fp\"", \""pf\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 13,
        ""words"": [
            ""eldern"",
            ""lender"",
            ""fp"",
            ""pf"",
            ""cohere"",
            ""cheero"",
            ""anglican"",
            ""canaling"",
            ""converters"",
            ""reconverts"",
            ""wandy"",
            ""dawny""
        ],
        ""solution"": [
            [
                ""anglican"",
                ""canaling""
            ],
            [
                ""cheero"",
                ""cohere""
            ],
            [
                ""converters"",
                ""reconverts""
            ],
            [
                ""dawny"",
                ""wandy""
            ],
            [
                ""eldern"",
                ""lender""
            ],
            [
                ""fp"",
                ""pf""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
14,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""drapers"", ""sparred"", ""ahmet"", ""mathe"", ""interplead"", ""peridental""]
","[[""ahmet"", ""mathe""], [""drapers"", ""sparred""], [""interplead"", ""peridental""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""drapers\"", \""sparred\"", \""ahmet\"", \""mathe\"", \""interplead\"", \""peridental\""]\n"",
    ""answer"": ""[[\""ahmet\"", \""mathe\""], [\""drapers\"", \""sparred\""], [\""interplead\"", \""peridental\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 14,
        ""words"": [
            ""drapers"",
            ""sparred"",
            ""ahmet"",
            ""mathe"",
            ""interplead"",
            ""peridental""
        ],
        ""solution"": [
            [
                ""ahmet"",
                ""mathe""
            ],
            [
                ""drapers"",
                ""sparred""
            ],
            [
                ""interplead"",
                ""peridental""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
15,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unmail"", ""lumina"", ""alumin"", ""alumni"", ""endothecia"", ""theodicean"", ""shipholder"", ""holdership"", ""mestees"", ""esteems"", ""semiprivate"", ""imperatives"", ""deduces"", ""seduced"", ""depeche"", ""cheeped""]
","[[""alumin"", ""alumni"", ""lumina"", ""unmail""], [""cheeped"", ""depeche""], [""deduces"", ""seduced""], [""endothecia"", ""theodicean""], [""esteems"", ""mestees""], [""holdership"", ""shipholder""], [""imperatives"", ""semiprivate""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unmail\"", \""lumina\"", \""alumin\"", \""alumni\"", \""endothecia\"", \""theodicean\"", \""shipholder\"", \""holdership\"", \""mestees\"", \""esteems\"", \""semiprivate\"", \""imperatives\"", \""deduces\"", \""seduced\"", \""depeche\"", \""cheeped\""]\n"",
    ""answer"": ""[[\""alumin\"", \""alumni\"", \""lumina\"", \""unmail\""], [\""cheeped\"", \""depeche\""], [\""deduces\"", \""seduced\""], [\""endothecia\"", \""theodicean\""], [\""esteems\"", \""mestees\""], [\""holdership\"", \""shipholder\""], [\""imperatives\"", \""semiprivate\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 15,
        ""words"": [
            ""unmail"",
            ""lumina"",
            ""alumin"",
            ""alumni"",
            ""endothecia"",
            ""theodicean"",
            ""shipholder"",
            ""holdership"",
            ""mestees"",
            ""esteems"",
            ""semiprivate"",
            ""imperatives"",
            ""deduces"",
            ""seduced"",
            ""depeche"",
            ""cheeped""
        ],
        ""solution"": [
            [
                ""alumin"",
                ""alumni"",
                ""lumina"",
                ""unmail""
            ],
            [
                ""cheeped"",
                ""depeche""
            ],
            [
                ""deduces"",
                ""seduced""
            ],
            [
                ""endothecia"",
                ""theodicean""
            ],
            [
                ""esteems"",
                ""mestees""
            ],
            [
                ""holdership"",
                ""shipholder""
            ],
            [
                ""imperatives"",
                ""semiprivate""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
16,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cp"", ""pc"", ""natalist"", ""atlantis"", ""horseless"", ""shoreless"", ""nonenergic"", ""nongeneric"", ""harateen"", ""theraean"", ""contoid"", ""odontic"", ""tampering"", ""premating"", ""gerundive"", ""ungrieved"", ""eslabon"", ""bonsela"", ""sonable"", ""soleness"", ""noseless""]
","[[""atlantis"", ""natalist""], [""bonsela"", ""eslabon"", ""sonable""], [""contoid"", ""odontic""], [""cp"", ""pc""], [""gerundive"", ""ungrieved""], [""harateen"", ""theraean""], [""horseless"", ""shoreless""], [""nonenergic"", ""nongeneric""], [""noseless"", ""soleness""], [""premating"", ""tampering""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cp\"", \""pc\"", \""natalist\"", \""atlantis\"", \""horseless\"", \""shoreless\"", \""nonenergic\"", \""nongeneric\"", \""harateen\"", \""theraean\"", \""contoid\"", \""odontic\"", \""tampering\"", \""premating\"", \""gerundive\"", \""ungrieved\"", \""eslabon\"", \""bonsela\"", \""sonable\"", \""soleness\"", \""noseless\""]\n"",
    ""answer"": ""[[\""atlantis\"", \""natalist\""], [\""bonsela\"", \""eslabon\"", \""sonable\""], [\""contoid\"", \""odontic\""], [\""cp\"", \""pc\""], [\""gerundive\"", \""ungrieved\""], [\""harateen\"", \""theraean\""], [\""horseless\"", \""shoreless\""], [\""nonenergic\"", \""nongeneric\""], [\""noseless\"", \""soleness\""], [\""premating\"", \""tampering\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 16,
        ""words"": [
            ""cp"",
            ""pc"",
            ""natalist"",
            ""atlantis"",
            ""horseless"",
            ""shoreless"",
            ""nonenergic"",
            ""nongeneric"",
            ""harateen"",
            ""theraean"",
            ""contoid"",
            ""odontic"",
            ""tampering"",
            ""premating"",
            ""gerundive"",
            ""ungrieved"",
            ""eslabon"",
            ""bonsela"",
            ""sonable"",
            ""soleness"",
            ""noseless""
        ],
        ""solution"": [
            [
                ""atlantis"",
                ""natalist""
            ],
            [
                ""bonsela"",
                ""eslabon"",
                ""sonable""
            ],
            [
                ""contoid"",
                ""odontic""
            ],
            [
                ""cp"",
                ""pc""
            ],
            [
                ""gerundive"",
                ""ungrieved""
            ],
            [
                ""harateen"",
                ""theraean""
            ],
            [
                ""horseless"",
                ""shoreless""
            ],
            [
                ""nonenergic"",
                ""nongeneric""
            ],
            [
                ""noseless"",
                ""soleness""
            ],
            [
                ""premating"",
                ""tampering""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
17,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dees"", ""seed"", ""eductions"", ""seduction"", ""argentine"", ""tangerine""]
","[[""argentine"", ""tangerine""], [""dees"", ""seed""], [""eductions"", ""seduction""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dees\"", \""seed\"", \""eductions\"", \""seduction\"", \""argentine\"", \""tangerine\""]\n"",
    ""answer"": ""[[\""argentine\"", \""tangerine\""], [\""dees\"", \""seed\""], [\""eductions\"", \""seduction\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 17,
        ""words"": [
            ""dees"",
            ""seed"",
            ""eductions"",
            ""seduction"",
            ""argentine"",
            ""tangerine""
        ],
        ""solution"": [
            [
                ""argentine"",
                ""tangerine""
            ],
            [
                ""dees"",
                ""seed""
            ],
            [
                ""eductions"",
                ""seduction""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
18,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""shouted"", ""southed"", ""chorions"", ""isochron"", ""desex"", ""dexes"", ""sexed"", ""lilts"", ""tills"", ""still"", ""thein"", ""thine"", ""velicate"", ""celative"", ""muratorian"", ""mortuarian"", ""fester"", ""freest"", ""tapery"", ""tepary"", ""pratey"", ""petary""]
","[[""celative"", ""velicate""], [""chorions"", ""isochron""], [""desex"", ""dexes"", ""sexed""], [""fester"", ""freest""], [""lilts"", ""still"", ""tills""], [""mortuarian"", ""muratorian""], [""petary"", ""pratey"", ""tapery"", ""tepary""], [""shouted"", ""southed""], [""thein"", ""thine""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""shouted\"", \""southed\"", \""chorions\"", \""isochron\"", \""desex\"", \""dexes\"", \""sexed\"", \""lilts\"", \""tills\"", \""still\"", \""thein\"", \""thine\"", \""velicate\"", \""celative\"", \""muratorian\"", \""mortuarian\"", \""fester\"", \""freest\"", \""tapery\"", \""tepary\"", \""pratey\"", \""petary\""]\n"",
    ""answer"": ""[[\""celative\"", \""velicate\""], [\""chorions\"", \""isochron\""], [\""desex\"", \""dexes\"", \""sexed\""], [\""fester\"", \""freest\""], [\""lilts\"", \""still\"", \""tills\""], [\""mortuarian\"", \""muratorian\""], [\""petary\"", \""pratey\"", \""tapery\"", \""tepary\""], [\""shouted\"", \""southed\""], [\""thein\"", \""thine\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 18,
        ""words"": [
            ""shouted"",
            ""southed"",
            ""chorions"",
            ""isochron"",
            ""desex"",
            ""dexes"",
            ""sexed"",
            ""lilts"",
            ""tills"",
            ""still"",
            ""thein"",
            ""thine"",
            ""velicate"",
            ""celative"",
            ""muratorian"",
            ""mortuarian"",
            ""fester"",
            ""freest"",
            ""tapery"",
            ""tepary"",
            ""pratey"",
            ""petary""
        ],
        ""solution"": [
            [
                ""celative"",
                ""velicate""
            ],
            [
                ""chorions"",
                ""isochron""
            ],
            [
                ""desex"",
                ""dexes"",
                ""sexed""
            ],
            [
                ""fester"",
                ""freest""
            ],
            [
                ""lilts"",
                ""still"",
                ""tills""
            ],
            [
                ""mortuarian"",
                ""muratorian""
            ],
            [
                ""petary"",
                ""pratey"",
                ""tapery"",
                ""tepary""
            ],
            [
                ""shouted"",
                ""southed""
            ],
            [
                ""thein"",
                ""thine""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
19,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""surbases"", ""rubasses"", ""seeings"", ""genesis"", ""trichinosis"", ""histrionics"", ""beagle"", ""glebae"", ""ceps"", ""psec"", ""spec""]
","[[""beagle"", ""glebae""], [""ceps"", ""psec"", ""spec""], [""genesis"", ""seeings""], [""histrionics"", ""trichinosis""], [""rubasses"", ""surbases""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""surbases\"", \""rubasses\"", \""seeings\"", \""genesis\"", \""trichinosis\"", \""histrionics\"", \""beagle\"", \""glebae\"", \""ceps\"", \""psec\"", \""spec\""]\n"",
    ""answer"": ""[[\""beagle\"", \""glebae\""], [\""ceps\"", \""psec\"", \""spec\""], [\""genesis\"", \""seeings\""], [\""histrionics\"", \""trichinosis\""], [\""rubasses\"", \""surbases\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 19,
        ""words"": [
            ""surbases"",
            ""rubasses"",
            ""seeings"",
            ""genesis"",
            ""trichinosis"",
            ""histrionics"",
            ""beagle"",
            ""glebae"",
            ""ceps"",
            ""psec"",
            ""spec""
        ],
        ""solution"": [
            [
                ""beagle"",
                ""glebae""
            ],
            [
                ""ceps"",
                ""psec"",
                ""spec""
            ],
            [
                ""genesis"",
                ""seeings""
            ],
            [
                ""histrionics"",
                ""trichinosis""
            ],
            [
                ""rubasses"",
                ""surbases""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
20,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pialyn"", ""alypin"", ""plainy"", ""unsubtracted"", ""subtruncated"", ""prosecutory"", ""orycteropus"", ""legendist"", ""glistened"", ""fondu"", ""found"", ""shyster"", ""thyrses""]
","[[""alypin"", ""pialyn"", ""plainy""], [""fondu"", ""found""], [""glistened"", ""legendist""], [""orycteropus"", ""prosecutory""], [""shyster"", ""thyrses""], [""subtruncated"", ""unsubtracted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pialyn\"", \""alypin\"", \""plainy\"", \""unsubtracted\"", \""subtruncated\"", \""prosecutory\"", \""orycteropus\"", \""legendist\"", \""glistened\"", \""fondu\"", \""found\"", \""shyster\"", \""thyrses\""]\n"",
    ""answer"": ""[[\""alypin\"", \""pialyn\"", \""plainy\""], [\""fondu\"", \""found\""], [\""glistened\"", \""legendist\""], [\""orycteropus\"", \""prosecutory\""], [\""shyster\"", \""thyrses\""], [\""subtruncated\"", \""unsubtracted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 20,
        ""words"": [
            ""pialyn"",
            ""alypin"",
            ""plainy"",
            ""unsubtracted"",
            ""subtruncated"",
            ""prosecutory"",
            ""orycteropus"",
            ""legendist"",
            ""glistened"",
            ""fondu"",
            ""found"",
            ""shyster"",
            ""thyrses""
        ],
        ""solution"": [
            [
                ""alypin"",
                ""pialyn"",
                ""plainy""
            ],
            [
                ""fondu"",
                ""found""
            ],
            [
                ""glistened"",
                ""legendist""
            ],
            [
                ""orycteropus"",
                ""prosecutory""
            ],
            [
                ""shyster"",
                ""thyrses""
            ],
            [
                ""subtruncated"",
                ""unsubtracted""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
21,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""theine"", ""ethine"", ""generated"", ""greatened"", ""unoffensiveness"", ""noneffusiveness"", ""fluorated"", ""outflared"", ""ramona"", ""oarman"", ""romana""]
","[[""ethine"", ""theine""], [""fluorated"", ""outflared""], [""generated"", ""greatened""], [""noneffusiveness"", ""unoffensiveness""], [""oarman"", ""ramona"", ""romana""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""theine\"", \""ethine\"", \""generated\"", \""greatened\"", \""unoffensiveness\"", \""noneffusiveness\"", \""fluorated\"", \""outflared\"", \""ramona\"", \""oarman\"", \""romana\""]\n"",
    ""answer"": ""[[\""ethine\"", \""theine\""], [\""fluorated\"", \""outflared\""], [\""generated\"", \""greatened\""], [\""noneffusiveness\"", \""unoffensiveness\""], [\""oarman\"", \""ramona\"", \""romana\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 21,
        ""words"": [
            ""theine"",
            ""ethine"",
            ""generated"",
            ""greatened"",
            ""unoffensiveness"",
            ""noneffusiveness"",
            ""fluorated"",
            ""outflared"",
            ""ramona"",
            ""oarman"",
            ""romana""
        ],
        ""solution"": [
            [
                ""ethine"",
                ""theine""
            ],
            [
                ""fluorated"",
                ""outflared""
            ],
            [
                ""generated"",
                ""greatened""
            ],
            [
                ""noneffusiveness"",
                ""unoffensiveness""
            ],
            [
                ""oarman"",
                ""ramona"",
                ""romana""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
22,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""eternities"", ""entireties"", ""ophis"", ""hopis"", ""conformer"", ""reconform"", ""mf"", ""fm""]
","[[""conformer"", ""reconform""], [""entireties"", ""eternities""], [""fm"", ""mf""], [""hopis"", ""ophis""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""eternities\"", \""entireties\"", \""ophis\"", \""hopis\"", \""conformer\"", \""reconform\"", \""mf\"", \""fm\""]\n"",
    ""answer"": ""[[\""conformer\"", \""reconform\""], [\""entireties\"", \""eternities\""], [\""fm\"", \""mf\""], [\""hopis\"", \""ophis\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 22,
        ""words"": [
            ""eternities"",
            ""entireties"",
            ""ophis"",
            ""hopis"",
            ""conformer"",
            ""reconform"",
            ""mf"",
            ""fm""
        ],
        ""solution"": [
            [
                ""conformer"",
                ""reconform""
            ],
            [
                ""entireties"",
                ""eternities""
            ],
            [
                ""fm"",
                ""mf""
            ],
            [
                ""hopis"",
                ""ophis""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
23,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bouffon"", ""buffoon"", ""balanites"", ""basaltine"", ""stainable"", ""pactolian"", ""placation"", ""pactional""]
","[[""balanites"", ""basaltine"", ""stainable""], [""bouffon"", ""buffoon""], [""pactional"", ""pactolian"", ""placation""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bouffon\"", \""buffoon\"", \""balanites\"", \""basaltine\"", \""stainable\"", \""pactolian\"", \""placation\"", \""pactional\""]\n"",
    ""answer"": ""[[\""balanites\"", \""basaltine\"", \""stainable\""], [\""bouffon\"", \""buffoon\""], [\""pactional\"", \""pactolian\"", \""placation\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 23,
        ""words"": [
            ""bouffon"",
            ""buffoon"",
            ""balanites"",
            ""basaltine"",
            ""stainable"",
            ""pactolian"",
            ""placation"",
            ""pactional""
        ],
        ""solution"": [
            [
                ""balanites"",
                ""basaltine"",
                ""stainable""
            ],
            [
                ""bouffon"",
                ""buffoon""
            ],
            [
                ""pactional"",
                ""pactolian"",
                ""placation""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
24,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""care"", ""crea"", ""sulfamide"", ""feudalism"", ""lurries"", ""surlier"", ""sprig"", ""grips"", ""constrainers"", ""contrariness"", ""petrolist"", ""portliest"", ""hematolin"", ""maholtine"", ""elogy"", ""goyle"", ""nexus"", ""unsex"", ""carminette"", ""remittance""]
","[[""care"", ""crea""], [""carminette"", ""remittance""], [""constrainers"", ""contrariness""], [""elogy"", ""goyle""], [""feudalism"", ""sulfamide""], [""grips"", ""sprig""], [""hematolin"", ""maholtine""], [""lurries"", ""surlier""], [""nexus"", ""unsex""], [""petrolist"", ""portliest""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""care\"", \""crea\"", \""sulfamide\"", \""feudalism\"", \""lurries\"", \""surlier\"", \""sprig\"", \""grips\"", \""constrainers\"", \""contrariness\"", \""petrolist\"", \""portliest\"", \""hematolin\"", \""maholtine\"", \""elogy\"", \""goyle\"", \""nexus\"", \""unsex\"", \""carminette\"", \""remittance\""]\n"",
    ""answer"": ""[[\""care\"", \""crea\""], [\""carminette\"", \""remittance\""], [\""constrainers\"", \""contrariness\""], [\""elogy\"", \""goyle\""], [\""feudalism\"", \""sulfamide\""], [\""grips\"", \""sprig\""], [\""hematolin\"", \""maholtine\""], [\""lurries\"", \""surlier\""], [\""nexus\"", \""unsex\""], [\""petrolist\"", \""portliest\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 24,
        ""words"": [
            ""care"",
            ""crea"",
            ""sulfamide"",
            ""feudalism"",
            ""lurries"",
            ""surlier"",
            ""sprig"",
            ""grips"",
            ""constrainers"",
            ""contrariness"",
            ""petrolist"",
            ""portliest"",
            ""hematolin"",
            ""maholtine"",
            ""elogy"",
            ""goyle"",
            ""nexus"",
            ""unsex"",
            ""carminette"",
            ""remittance""
        ],
        ""solution"": [
            [
                ""care"",
                ""crea""
            ],
            [
                ""carminette"",
                ""remittance""
            ],
            [
                ""constrainers"",
                ""contrariness""
            ],
            [
                ""elogy"",
                ""goyle""
            ],
            [
                ""feudalism"",
                ""sulfamide""
            ],
            [
                ""grips"",
                ""sprig""
            ],
            [
                ""hematolin"",
                ""maholtine""
            ],
            [
                ""lurries"",
                ""surlier""
            ],
            [
                ""nexus"",
                ""unsex""
            ],
            [
                ""petrolist"",
                ""portliest""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
25,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""detruss"", ""dusters"", ""inwritten"", ""intertwin""]
","[[""detruss"", ""dusters""], [""intertwin"", ""inwritten""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""detruss\"", \""dusters\"", \""inwritten\"", \""intertwin\""]\n"",
    ""answer"": ""[[\""detruss\"", \""dusters\""], [\""intertwin\"", \""inwritten\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 25,
        ""words"": [
            ""detruss"",
            ""dusters"",
            ""inwritten"",
            ""intertwin""
        ],
        ""solution"": [
            [
                ""detruss"",
                ""dusters""
            ],
            [
                ""intertwin"",
                ""inwritten""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
26,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""housebug"", ""bughouse"", ""rowens"", ""resown"", ""worsen"", ""owners"", ""listwork"", ""slitwork"", ""bridelace"", ""calibered"", ""kai"", ""aik""]
","[[""aik"", ""kai""], [""bridelace"", ""calibered""], [""bughouse"", ""housebug""], [""listwork"", ""slitwork""], [""owners"", ""resown"", ""rowens"", ""worsen""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""housebug\"", \""bughouse\"", \""rowens\"", \""resown\"", \""worsen\"", \""owners\"", \""listwork\"", \""slitwork\"", \""bridelace\"", \""calibered\"", \""kai\"", \""aik\""]\n"",
    ""answer"": ""[[\""aik\"", \""kai\""], [\""bridelace\"", \""calibered\""], [\""bughouse\"", \""housebug\""], [\""listwork\"", \""slitwork\""], [\""owners\"", \""resown\"", \""rowens\"", \""worsen\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 26,
        ""words"": [
            ""housebug"",
            ""bughouse"",
            ""rowens"",
            ""resown"",
            ""worsen"",
            ""owners"",
            ""listwork"",
            ""slitwork"",
            ""bridelace"",
            ""calibered"",
            ""kai"",
            ""aik""
        ],
        ""solution"": [
            [
                ""aik"",
                ""kai""
            ],
            [
                ""bridelace"",
                ""calibered""
            ],
            [
                ""bughouse"",
                ""housebug""
            ],
            [
                ""listwork"",
                ""slitwork""
            ],
            [
                ""owners"",
                ""resown"",
                ""rowens"",
                ""worsen""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
27,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""anisopod"", ""isopodan"", ""toxicol"", ""loxotic"", ""everglade"", ""leveraged"", ""adeline"", ""delaine"", ""aliened"", ""aubrietas"", ""aubretias""]
","[[""adeline"", ""aliened"", ""delaine""], [""anisopod"", ""isopodan""], [""aubretias"", ""aubrietas""], [""everglade"", ""leveraged""], [""loxotic"", ""toxicol""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""anisopod\"", \""isopodan\"", \""toxicol\"", \""loxotic\"", \""everglade\"", \""leveraged\"", \""adeline\"", \""delaine\"", \""aliened\"", \""aubrietas\"", \""aubretias\""]\n"",
    ""answer"": ""[[\""adeline\"", \""aliened\"", \""delaine\""], [\""anisopod\"", \""isopodan\""], [\""aubretias\"", \""aubrietas\""], [\""everglade\"", \""leveraged\""], [\""loxotic\"", \""toxicol\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 27,
        ""words"": [
            ""anisopod"",
            ""isopodan"",
            ""toxicol"",
            ""loxotic"",
            ""everglade"",
            ""leveraged"",
            ""adeline"",
            ""delaine"",
            ""aliened"",
            ""aubrietas"",
            ""aubretias""
        ],
        ""solution"": [
            [
                ""adeline"",
                ""aliened"",
                ""delaine""
            ],
            [
                ""anisopod"",
                ""isopodan""
            ],
            [
                ""aubretias"",
                ""aubrietas""
            ],
            [
                ""everglade"",
                ""leveraged""
            ],
            [
                ""loxotic"",
                ""toxicol""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
28,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""discouple"", ""clupeoids"", ""infarction"", ""infraction"", ""draba"", ""barad"", ""chordal"", ""dorlach"", ""racers"", ""screar"", ""carers"", ""radiators"", ""sartoriad""]
","[[""barad"", ""draba""], [""carers"", ""racers"", ""screar""], [""chordal"", ""dorlach""], [""clupeoids"", ""discouple""], [""infarction"", ""infraction""], [""radiators"", ""sartoriad""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""discouple\"", \""clupeoids\"", \""infarction\"", \""infraction\"", \""draba\"", \""barad\"", \""chordal\"", \""dorlach\"", \""racers\"", \""screar\"", \""carers\"", \""radiators\"", \""sartoriad\""]\n"",
    ""answer"": ""[[\""barad\"", \""draba\""], [\""carers\"", \""racers\"", \""screar\""], [\""chordal\"", \""dorlach\""], [\""clupeoids\"", \""discouple\""], [\""infarction\"", \""infraction\""], [\""radiators\"", \""sartoriad\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 28,
        ""words"": [
            ""discouple"",
            ""clupeoids"",
            ""infarction"",
            ""infraction"",
            ""draba"",
            ""barad"",
            ""chordal"",
            ""dorlach"",
            ""racers"",
            ""screar"",
            ""carers"",
            ""radiators"",
            ""sartoriad""
        ],
        ""solution"": [
            [
                ""barad"",
                ""draba""
            ],
            [
                ""carers"",
                ""racers"",
                ""screar""
            ],
            [
                ""chordal"",
                ""dorlach""
            ],
            [
                ""clupeoids"",
                ""discouple""
            ],
            [
                ""infarction"",
                ""infraction""
            ],
            [
                ""radiators"",
                ""sartoriad""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
29,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""brontides"", ""stonebird"", ""horotelic"", ""ochrolite"", ""lackers"", ""calkers"", ""slacker"", ""rarely"", ""rearly"", ""unhearsed"", ""unsheared"", ""criey"", ""ricey"", ""scomfit"", ""comfits"", ""pergamic"", ""crimpage"", ""unrip"", ""purin""]
","[[""brontides"", ""stonebird""], [""calkers"", ""lackers"", ""slacker""], [""comfits"", ""scomfit""], [""criey"", ""ricey""], [""crimpage"", ""pergamic""], [""horotelic"", ""ochrolite""], [""purin"", ""unrip""], [""rarely"", ""rearly""], [""unhearsed"", ""unsheared""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""brontides\"", \""stonebird\"", \""horotelic\"", \""ochrolite\"", \""lackers\"", \""calkers\"", \""slacker\"", \""rarely\"", \""rearly\"", \""unhearsed\"", \""unsheared\"", \""criey\"", \""ricey\"", \""scomfit\"", \""comfits\"", \""pergamic\"", \""crimpage\"", \""unrip\"", \""purin\""]\n"",
    ""answer"": ""[[\""brontides\"", \""stonebird\""], [\""calkers\"", \""lackers\"", \""slacker\""], [\""comfits\"", \""scomfit\""], [\""criey\"", \""ricey\""], [\""crimpage\"", \""pergamic\""], [\""horotelic\"", \""ochrolite\""], [\""purin\"", \""unrip\""], [\""rarely\"", \""rearly\""], [\""unhearsed\"", \""unsheared\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 29,
        ""words"": [
            ""brontides"",
            ""stonebird"",
            ""horotelic"",
            ""ochrolite"",
            ""lackers"",
            ""calkers"",
            ""slacker"",
            ""rarely"",
            ""rearly"",
            ""unhearsed"",
            ""unsheared"",
            ""criey"",
            ""ricey"",
            ""scomfit"",
            ""comfits"",
            ""pergamic"",
            ""crimpage"",
            ""unrip"",
            ""purin""
        ],
        ""solution"": [
            [
                ""brontides"",
                ""stonebird""
            ],
            [
                ""calkers"",
                ""lackers"",
                ""slacker""
            ],
            [
                ""comfits"",
                ""scomfit""
            ],
            [
                ""criey"",
                ""ricey""
            ],
            [
                ""crimpage"",
                ""pergamic""
            ],
            [
                ""horotelic"",
                ""ochrolite""
            ],
            [
                ""purin"",
                ""unrip""
            ],
            [
                ""rarely"",
                ""rearly""
            ],
            [
                ""unhearsed"",
                ""unsheared""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
30,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""verbatim"", ""ambivert"", ""redictation"", ""tinoceratid"", ""cerastes"", ""cateress"", ""tylosis"", ""tossily""]
","[[""ambivert"", ""verbatim""], [""cateress"", ""cerastes""], [""redictation"", ""tinoceratid""], [""tossily"", ""tylosis""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""verbatim\"", \""ambivert\"", \""redictation\"", \""tinoceratid\"", \""cerastes\"", \""cateress\"", \""tylosis\"", \""tossily\""]\n"",
    ""answer"": ""[[\""ambivert\"", \""verbatim\""], [\""cateress\"", \""cerastes\""], [\""redictation\"", \""tinoceratid\""], [\""tossily\"", \""tylosis\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 30,
        ""words"": [
            ""verbatim"",
            ""ambivert"",
            ""redictation"",
            ""tinoceratid"",
            ""cerastes"",
            ""cateress"",
            ""tylosis"",
            ""tossily""
        ],
        ""solution"": [
            [
                ""ambivert"",
                ""verbatim""
            ],
            [
                ""cateress"",
                ""cerastes""
            ],
            [
                ""redictation"",
                ""tinoceratid""
            ],
            [
                ""tossily"",
                ""tylosis""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
31,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""epistatic"", ""pistacite"", ""commissioned"", ""decommission"", ""unportrayed"", ""unpredatory"", ""chandelle"", ""chanelled"", ""footpad"", ""padfoot"", ""noma"", ""oman"", ""noam"", ""innodate"", ""antinode"", ""anointed"", ""distater"", ""tardiest"", ""striated"", ""shapka"", ""pashka""]
","[[""anointed"", ""antinode"", ""innodate""], [""chandelle"", ""chanelled""], [""commissioned"", ""decommission""], [""distater"", ""striated"", ""tardiest""], [""epistatic"", ""pistacite""], [""footpad"", ""padfoot""], [""noam"", ""noma"", ""oman""], [""pashka"", ""shapka""], [""unportrayed"", ""unpredatory""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""epistatic\"", \""pistacite\"", \""commissioned\"", \""decommission\"", \""unportrayed\"", \""unpredatory\"", \""chandelle\"", \""chanelled\"", \""footpad\"", \""padfoot\"", \""noma\"", \""oman\"", \""noam\"", \""innodate\"", \""antinode\"", \""anointed\"", \""distater\"", \""tardiest\"", \""striated\"", \""shapka\"", \""pashka\""]\n"",
    ""answer"": ""[[\""anointed\"", \""antinode\"", \""innodate\""], [\""chandelle\"", \""chanelled\""], [\""commissioned\"", \""decommission\""], [\""distater\"", \""striated\"", \""tardiest\""], [\""epistatic\"", \""pistacite\""], [\""footpad\"", \""padfoot\""], [\""noam\"", \""noma\"", \""oman\""], [\""pashka\"", \""shapka\""], [\""unportrayed\"", \""unpredatory\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 31,
        ""words"": [
            ""epistatic"",
            ""pistacite"",
            ""commissioned"",
            ""decommission"",
            ""unportrayed"",
            ""unpredatory"",
            ""chandelle"",
            ""chanelled"",
            ""footpad"",
            ""padfoot"",
            ""noma"",
            ""oman"",
            ""noam"",
            ""innodate"",
            ""antinode"",
            ""anointed"",
            ""distater"",
            ""tardiest"",
            ""striated"",
            ""shapka"",
            ""pashka""
        ],
        ""solution"": [
            [
                ""anointed"",
                ""antinode"",
                ""innodate""
            ],
            [
                ""chandelle"",
                ""chanelled""
            ],
            [
                ""commissioned"",
                ""decommission""
            ],
            [
                ""distater"",
                ""striated"",
                ""tardiest""
            ],
            [
                ""epistatic"",
                ""pistacite""
            ],
            [
                ""footpad"",
                ""padfoot""
            ],
            [
                ""noam"",
                ""noma"",
                ""oman""
            ],
            [
                ""pashka"",
                ""shapka""
            ],
            [
                ""unportrayed"",
                ""unpredatory""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
32,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""taplash"", ""asphalt"", ""spathal"", ""melam"", ""lemma"", ""kirve"", ""kiver"", ""duali"", ""dulia"", ""harpists"", ""tsarship"", ""starship"", ""wonnot"", ""wonton"", ""mowha"", ""mohwa"", ""caupo"", ""acoup"", ""bucrnia"", ""rubican"", ""brucina""]
","[[""acoup"", ""caupo""], [""asphalt"", ""spathal"", ""taplash""], [""brucina"", ""bucrnia"", ""rubican""], [""duali"", ""dulia""], [""harpists"", ""starship"", ""tsarship""], [""kirve"", ""kiver""], [""lemma"", ""melam""], [""mohwa"", ""mowha""], [""wonnot"", ""wonton""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""taplash\"", \""asphalt\"", \""spathal\"", \""melam\"", \""lemma\"", \""kirve\"", \""kiver\"", \""duali\"", \""dulia\"", \""harpists\"", \""tsarship\"", \""starship\"", \""wonnot\"", \""wonton\"", \""mowha\"", \""mohwa\"", \""caupo\"", \""acoup\"", \""bucrnia\"", \""rubican\"", \""brucina\""]\n"",
    ""answer"": ""[[\""acoup\"", \""caupo\""], [\""asphalt\"", \""spathal\"", \""taplash\""], [\""brucina\"", \""bucrnia\"", \""rubican\""], [\""duali\"", \""dulia\""], [\""harpists\"", \""starship\"", \""tsarship\""], [\""kirve\"", \""kiver\""], [\""lemma\"", \""melam\""], [\""mohwa\"", \""mowha\""], [\""wonnot\"", \""wonton\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 32,
        ""words"": [
            ""taplash"",
            ""asphalt"",
            ""spathal"",
            ""melam"",
            ""lemma"",
            ""kirve"",
            ""kiver"",
            ""duali"",
            ""dulia"",
            ""harpists"",
            ""tsarship"",
            ""starship"",
            ""wonnot"",
            ""wonton"",
            ""mowha"",
            ""mohwa"",
            ""caupo"",
            ""acoup"",
            ""bucrnia"",
            ""rubican"",
            ""brucina""
        ],
        ""solution"": [
            [
                ""acoup"",
                ""caupo""
            ],
            [
                ""asphalt"",
                ""spathal"",
                ""taplash""
            ],
            [
                ""brucina"",
                ""bucrnia"",
                ""rubican""
            ],
            [
                ""duali"",
                ""dulia""
            ],
            [
                ""harpists"",
                ""starship"",
                ""tsarship""
            ],
            [
                ""kirve"",
                ""kiver""
            ],
            [
                ""lemma"",
                ""melam""
            ],
            [
                ""mohwa"",
                ""mowha""
            ],
            [
                ""wonnot"",
                ""wonton""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
33,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sycones"", ""coyness"", ""cogniser"", ""coresign"", ""coreigns"", ""glumose"", ""lugsome"", ""stanitsa"", ""satanist"", ""mistrace"", ""camister"", ""camerist"", ""poietic"", ""epiotic"", ""rouse"", ""euros"", ""roues"", ""woodhack"", ""hackwood""]
","[[""camerist"", ""camister"", ""mistrace""], [""cogniser"", ""coreigns"", ""coresign""], [""coyness"", ""sycones""], [""epiotic"", ""poietic""], [""euros"", ""roues"", ""rouse""], [""glumose"", ""lugsome""], [""hackwood"", ""woodhack""], [""satanist"", ""stanitsa""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sycones\"", \""coyness\"", \""cogniser\"", \""coresign\"", \""coreigns\"", \""glumose\"", \""lugsome\"", \""stanitsa\"", \""satanist\"", \""mistrace\"", \""camister\"", \""camerist\"", \""poietic\"", \""epiotic\"", \""rouse\"", \""euros\"", \""roues\"", \""woodhack\"", \""hackwood\""]\n"",
    ""answer"": ""[[\""camerist\"", \""camister\"", \""mistrace\""], [\""cogniser\"", \""coreigns\"", \""coresign\""], [\""coyness\"", \""sycones\""], [\""epiotic\"", \""poietic\""], [\""euros\"", \""roues\"", \""rouse\""], [\""glumose\"", \""lugsome\""], [\""hackwood\"", \""woodhack\""], [\""satanist\"", \""stanitsa\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 33,
        ""words"": [
            ""sycones"",
            ""coyness"",
            ""cogniser"",
            ""coresign"",
            ""coreigns"",
            ""glumose"",
            ""lugsome"",
            ""stanitsa"",
            ""satanist"",
            ""mistrace"",
            ""camister"",
            ""camerist"",
            ""poietic"",
            ""epiotic"",
            ""rouse"",
            ""euros"",
            ""roues"",
            ""woodhack"",
            ""hackwood""
        ],
        ""solution"": [
            [
                ""camerist"",
                ""camister"",
                ""mistrace""
            ],
            [
                ""cogniser"",
                ""coreigns"",
                ""coresign""
            ],
            [
                ""coyness"",
                ""sycones""
            ],
            [
                ""epiotic"",
                ""poietic""
            ],
            [
                ""euros"",
                ""roues"",
                ""rouse""
            ],
            [
                ""glumose"",
                ""lugsome""
            ],
            [
                ""hackwood"",
                ""woodhack""
            ],
            [
                ""satanist"",
                ""stanitsa""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
34,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""crouches"", ""couchers"", ""nonrebel"", ""ennobler"", ""resiance"", ""cerasein"", ""increase""]
","[[""cerasein"", ""increase"", ""resiance""], [""couchers"", ""crouches""], [""ennobler"", ""nonrebel""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""crouches\"", \""couchers\"", \""nonrebel\"", \""ennobler\"", \""resiance\"", \""cerasein\"", \""increase\""]\n"",
    ""answer"": ""[[\""cerasein\"", \""increase\"", \""resiance\""], [\""couchers\"", \""crouches\""], [\""ennobler\"", \""nonrebel\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 34,
        ""words"": [
            ""crouches"",
            ""couchers"",
            ""nonrebel"",
            ""ennobler"",
            ""resiance"",
            ""cerasein"",
            ""increase""
        ],
        ""solution"": [
            [
                ""cerasein"",
                ""increase"",
                ""resiance""
            ],
            [
                ""couchers"",
                ""crouches""
            ],
            [
                ""ennobler"",
                ""nonrebel""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
35,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""asseour"", ""arouses"", ""prev"", ""perv"", ""wined"", ""dwine"", ""edwin""]
","[[""arouses"", ""asseour""], [""dwine"", ""edwin"", ""wined""], [""perv"", ""prev""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""asseour\"", \""arouses\"", \""prev\"", \""perv\"", \""wined\"", \""dwine\"", \""edwin\""]\n"",
    ""answer"": ""[[\""arouses\"", \""asseour\""], [\""dwine\"", \""edwin\"", \""wined\""], [\""perv\"", \""prev\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 35,
        ""words"": [
            ""asseour"",
            ""arouses"",
            ""prev"",
            ""perv"",
            ""wined"",
            ""dwine"",
            ""edwin""
        ],
        ""solution"": [
            [
                ""arouses"",
                ""asseour""
            ],
            [
                ""dwine"",
                ""edwin"",
                ""wined""
            ],
            [
                ""perv"",
                ""prev""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
36,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nomological"", ""monological"", ""predelay"", ""replayed"", ""parleyed"", ""restretch"", ""stretcher"", ""unpooled"", ""unlooped"", ""gein"", ""gien"", ""arginine"", ""nigerian"", ""makars"", ""karmas"", ""inhales"", ""leanish"", ""cenchrus"", ""crunches""]
","[[""arginine"", ""nigerian""], [""cenchrus"", ""crunches""], [""gein"", ""gien""], [""inhales"", ""leanish""], [""karmas"", ""makars""], [""monological"", ""nomological""], [""parleyed"", ""predelay"", ""replayed""], [""restretch"", ""stretcher""], [""unlooped"", ""unpooled""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nomological\"", \""monological\"", \""predelay\"", \""replayed\"", \""parleyed\"", \""restretch\"", \""stretcher\"", \""unpooled\"", \""unlooped\"", \""gein\"", \""gien\"", \""arginine\"", \""nigerian\"", \""makars\"", \""karmas\"", \""inhales\"", \""leanish\"", \""cenchrus\"", \""crunches\""]\n"",
    ""answer"": ""[[\""arginine\"", \""nigerian\""], [\""cenchrus\"", \""crunches\""], [\""gein\"", \""gien\""], [\""inhales\"", \""leanish\""], [\""karmas\"", \""makars\""], [\""monological\"", \""nomological\""], [\""parleyed\"", \""predelay\"", \""replayed\""], [\""restretch\"", \""stretcher\""], [\""unlooped\"", \""unpooled\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 36,
        ""words"": [
            ""nomological"",
            ""monological"",
            ""predelay"",
            ""replayed"",
            ""parleyed"",
            ""restretch"",
            ""stretcher"",
            ""unpooled"",
            ""unlooped"",
            ""gein"",
            ""gien"",
            ""arginine"",
            ""nigerian"",
            ""makars"",
            ""karmas"",
            ""inhales"",
            ""leanish"",
            ""cenchrus"",
            ""crunches""
        ],
        ""solution"": [
            [
                ""arginine"",
                ""nigerian""
            ],
            [
                ""cenchrus"",
                ""crunches""
            ],
            [
                ""gein"",
                ""gien""
            ],
            [
                ""inhales"",
                ""leanish""
            ],
            [
                ""karmas"",
                ""makars""
            ],
            [
                ""monological"",
                ""nomological""
            ],
            [
                ""parleyed"",
                ""predelay"",
                ""replayed""
            ],
            [
                ""restretch"",
                ""stretcher""
            ],
            [
                ""unlooped"",
                ""unpooled""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
37,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""antlike"", ""atinkle"", ""salpoid"", ""psaloid""]
","[[""antlike"", ""atinkle""], [""psaloid"", ""salpoid""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""antlike\"", \""atinkle\"", \""salpoid\"", \""psaloid\""]\n"",
    ""answer"": ""[[\""antlike\"", \""atinkle\""], [\""psaloid\"", \""salpoid\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 37,
        ""words"": [
            ""antlike"",
            ""atinkle"",
            ""salpoid"",
            ""psaloid""
        ],
        ""solution"": [
            [
                ""antlike"",
                ""atinkle""
            ],
            [
                ""psaloid"",
                ""salpoid""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
38,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""commissioned"", ""decommission"", ""neogenesis"", ""noegenesis"", ""queeve"", ""eveque""]
","[[""commissioned"", ""decommission""], [""eveque"", ""queeve""], [""neogenesis"", ""noegenesis""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""commissioned\"", \""decommission\"", \""neogenesis\"", \""noegenesis\"", \""queeve\"", \""eveque\""]\n"",
    ""answer"": ""[[\""commissioned\"", \""decommission\""], [\""eveque\"", \""queeve\""], [\""neogenesis\"", \""noegenesis\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 38,
        ""words"": [
            ""commissioned"",
            ""decommission"",
            ""neogenesis"",
            ""noegenesis"",
            ""queeve"",
            ""eveque""
        ],
        ""solution"": [
            [
                ""commissioned"",
                ""decommission""
            ],
            [
                ""eveque"",
                ""queeve""
            ],
            [
                ""neogenesis"",
                ""noegenesis""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
39,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sporogeny"", ""gynospore"", ""lamellae"", ""malellae"", ""reptatorial"", ""proletariat"", ""madecase"", ""academes"", ""chrome"", ""chomer"", ""barcoo"", ""baroco"", ""showering"", ""reshowing""]
","[[""academes"", ""madecase""], [""barcoo"", ""baroco""], [""chomer"", ""chrome""], [""gynospore"", ""sporogeny""], [""lamellae"", ""malellae""], [""proletariat"", ""reptatorial""], [""reshowing"", ""showering""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sporogeny\"", \""gynospore\"", \""lamellae\"", \""malellae\"", \""reptatorial\"", \""proletariat\"", \""madecase\"", \""academes\"", \""chrome\"", \""chomer\"", \""barcoo\"", \""baroco\"", \""showering\"", \""reshowing\""]\n"",
    ""answer"": ""[[\""academes\"", \""madecase\""], [\""barcoo\"", \""baroco\""], [\""chomer\"", \""chrome\""], [\""gynospore\"", \""sporogeny\""], [\""lamellae\"", \""malellae\""], [\""proletariat\"", \""reptatorial\""], [\""reshowing\"", \""showering\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 39,
        ""words"": [
            ""sporogeny"",
            ""gynospore"",
            ""lamellae"",
            ""malellae"",
            ""reptatorial"",
            ""proletariat"",
            ""madecase"",
            ""academes"",
            ""chrome"",
            ""chomer"",
            ""barcoo"",
            ""baroco"",
            ""showering"",
            ""reshowing""
        ],
        ""solution"": [
            [
                ""academes"",
                ""madecase""
            ],
            [
                ""barcoo"",
                ""baroco""
            ],
            [
                ""chomer"",
                ""chrome""
            ],
            [
                ""gynospore"",
                ""sporogeny""
            ],
            [
                ""lamellae"",
                ""malellae""
            ],
            [
                ""proletariat"",
                ""reptatorial""
            ],
            [
                ""reshowing"",
                ""showering""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
40,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ponerid"", ""poinder"", ""ionomers"", ""moonrise"", ""shipowner"", ""ownership""]
","[[""ionomers"", ""moonrise""], [""ownership"", ""shipowner""], [""poinder"", ""ponerid""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ponerid\"", \""poinder\"", \""ionomers\"", \""moonrise\"", \""shipowner\"", \""ownership\""]\n"",
    ""answer"": ""[[\""ionomers\"", \""moonrise\""], [\""ownership\"", \""shipowner\""], [\""poinder\"", \""ponerid\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 40,
        ""words"": [
            ""ponerid"",
            ""poinder"",
            ""ionomers"",
            ""moonrise"",
            ""shipowner"",
            ""ownership""
        ],
        ""solution"": [
            [
                ""ionomers"",
                ""moonrise""
            ],
            [
                ""ownership"",
                ""shipowner""
            ],
            [
                ""poinder"",
                ""ponerid""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
41,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ashery"", ""hayers"", ""generation"", ""renegation"", ""flyover"", ""overfly"", ""ideist"", ""teiids"", ""tidies"", ""obiter"", ""orbite"", ""bitore"", ""excreta"", ""exacter""]
","[[""ashery"", ""hayers""], [""bitore"", ""obiter"", ""orbite""], [""exacter"", ""excreta""], [""flyover"", ""overfly""], [""generation"", ""renegation""], [""ideist"", ""teiids"", ""tidies""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ashery\"", \""hayers\"", \""generation\"", \""renegation\"", \""flyover\"", \""overfly\"", \""ideist\"", \""teiids\"", \""tidies\"", \""obiter\"", \""orbite\"", \""bitore\"", \""excreta\"", \""exacter\""]\n"",
    ""answer"": ""[[\""ashery\"", \""hayers\""], [\""bitore\"", \""obiter\"", \""orbite\""], [\""exacter\"", \""excreta\""], [\""flyover\"", \""overfly\""], [\""generation\"", \""renegation\""], [\""ideist\"", \""teiids\"", \""tidies\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 41,
        ""words"": [
            ""ashery"",
            ""hayers"",
            ""generation"",
            ""renegation"",
            ""flyover"",
            ""overfly"",
            ""ideist"",
            ""teiids"",
            ""tidies"",
            ""obiter"",
            ""orbite"",
            ""bitore"",
            ""excreta"",
            ""exacter""
        ],
        ""solution"": [
            [
                ""ashery"",
                ""hayers""
            ],
            [
                ""bitore"",
                ""obiter"",
                ""orbite""
            ],
            [
                ""exacter"",
                ""excreta""
            ],
            [
                ""flyover"",
                ""overfly""
            ],
            [
                ""generation"",
                ""renegation""
            ],
            [
                ""ideist"",
                ""teiids"",
                ""tidies""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
42,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""spignel"", ""spingel"", ""kra"", ""ark"", ""romance"", ""cremona"", ""ascebc"", ""ebcasc"", ""spoored"", ""prosode"", ""corrida"", ""ricardo"", ""brisk"", ""birks"", ""stract"", ""tracts"", ""tusseh"", ""tushes"", ""shutes"", ""calipers"", ""spiracle""]
","[[""ark"", ""kra""], [""ascebc"", ""ebcasc""], [""birks"", ""brisk""], [""calipers"", ""spiracle""], [""corrida"", ""ricardo""], [""cremona"", ""romance""], [""prosode"", ""spoored""], [""shutes"", ""tushes"", ""tusseh""], [""spignel"", ""spingel""], [""stract"", ""tracts""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""spignel\"", \""spingel\"", \""kra\"", \""ark\"", \""romance\"", \""cremona\"", \""ascebc\"", \""ebcasc\"", \""spoored\"", \""prosode\"", \""corrida\"", \""ricardo\"", \""brisk\"", \""birks\"", \""stract\"", \""tracts\"", \""tusseh\"", \""tushes\"", \""shutes\"", \""calipers\"", \""spiracle\""]\n"",
    ""answer"": ""[[\""ark\"", \""kra\""], [\""ascebc\"", \""ebcasc\""], [\""birks\"", \""brisk\""], [\""calipers\"", \""spiracle\""], [\""corrida\"", \""ricardo\""], [\""cremona\"", \""romance\""], [\""prosode\"", \""spoored\""], [\""shutes\"", \""tushes\"", \""tusseh\""], [\""spignel\"", \""spingel\""], [\""stract\"", \""tracts\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 42,
        ""words"": [
            ""spignel"",
            ""spingel"",
            ""kra"",
            ""ark"",
            ""romance"",
            ""cremona"",
            ""ascebc"",
            ""ebcasc"",
            ""spoored"",
            ""prosode"",
            ""corrida"",
            ""ricardo"",
            ""brisk"",
            ""birks"",
            ""stract"",
            ""tracts"",
            ""tusseh"",
            ""tushes"",
            ""shutes"",
            ""calipers"",
            ""spiracle""
        ],
        ""solution"": [
            [
                ""ark"",
                ""kra""
            ],
            [
                ""ascebc"",
                ""ebcasc""
            ],
            [
                ""birks"",
                ""brisk""
            ],
            [
                ""calipers"",
                ""spiracle""
            ],
            [
                ""corrida"",
                ""ricardo""
            ],
            [
                ""cremona"",
                ""romance""
            ],
            [
                ""prosode"",
                ""spoored""
            ],
            [
                ""shutes"",
                ""tushes"",
                ""tusseh""
            ],
            [
                ""spignel"",
                ""spingel""
            ],
            [
                ""stract"",
                ""tracts""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
43,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unstrict"", ""instruct"", ""ensient"", ""intense"", ""sennite"", ""sentine"", ""markets"", ""estmark"", ""ailuro"", ""ourali"", ""sour"", ""ours"", ""rous"", ""petroleur"", ""poulterer"", ""uglier"", ""guiler"", ""reguli"", ""gluier"", ""ligure"", ""merosthenic"", ""microsthene"", ""surreal"", ""serrula""]
","[[""ailuro"", ""ourali""], [""ensient"", ""intense"", ""sennite"", ""sentine""], [""estmark"", ""markets""], [""gluier"", ""guiler"", ""ligure"", ""reguli"", ""uglier""], [""instruct"", ""unstrict""], [""merosthenic"", ""microsthene""], [""ours"", ""rous"", ""sour""], [""petroleur"", ""poulterer""], [""serrula"", ""surreal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unstrict\"", \""instruct\"", \""ensient\"", \""intense\"", \""sennite\"", \""sentine\"", \""markets\"", \""estmark\"", \""ailuro\"", \""ourali\"", \""sour\"", \""ours\"", \""rous\"", \""petroleur\"", \""poulterer\"", \""uglier\"", \""guiler\"", \""reguli\"", \""gluier\"", \""ligure\"", \""merosthenic\"", \""microsthene\"", \""surreal\"", \""serrula\""]\n"",
    ""answer"": ""[[\""ailuro\"", \""ourali\""], [\""ensient\"", \""intense\"", \""sennite\"", \""sentine\""], [\""estmark\"", \""markets\""], [\""gluier\"", \""guiler\"", \""ligure\"", \""reguli\"", \""uglier\""], [\""instruct\"", \""unstrict\""], [\""merosthenic\"", \""microsthene\""], [\""ours\"", \""rous\"", \""sour\""], [\""petroleur\"", \""poulterer\""], [\""serrula\"", \""surreal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 43,
        ""words"": [
            ""unstrict"",
            ""instruct"",
            ""ensient"",
            ""intense"",
            ""sennite"",
            ""sentine"",
            ""markets"",
            ""estmark"",
            ""ailuro"",
            ""ourali"",
            ""sour"",
            ""ours"",
            ""rous"",
            ""petroleur"",
            ""poulterer"",
            ""uglier"",
            ""guiler"",
            ""reguli"",
            ""gluier"",
            ""ligure"",
            ""merosthenic"",
            ""microsthene"",
            ""surreal"",
            ""serrula""
        ],
        ""solution"": [
            [
                ""ailuro"",
                ""ourali""
            ],
            [
                ""ensient"",
                ""intense"",
                ""sennite"",
                ""sentine""
            ],
            [
                ""estmark"",
                ""markets""
            ],
            [
                ""gluier"",
                ""guiler"",
                ""ligure"",
                ""reguli"",
                ""uglier""
            ],
            [
                ""instruct"",
                ""unstrict""
            ],
            [
                ""merosthenic"",
                ""microsthene""
            ],
            [
                ""ours"",
                ""rous"",
                ""sour""
            ],
            [
                ""petroleur"",
                ""poulterer""
            ],
            [
                ""serrula"",
                ""surreal""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
44,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tex"", ""ext"", ""godding"", ""dodging"", ""upbreak"", ""breakup"", ""unmemoried"", ""unmemoired"", ""connected"", ""condecent"", ""logarithms"", ""algorithms"", ""electric"", ""lectrice""]
","[[""algorithms"", ""logarithms""], [""breakup"", ""upbreak""], [""condecent"", ""connected""], [""dodging"", ""godding""], [""electric"", ""lectrice""], [""ext"", ""tex""], [""unmemoired"", ""unmemoried""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tex\"", \""ext\"", \""godding\"", \""dodging\"", \""upbreak\"", \""breakup\"", \""unmemoried\"", \""unmemoired\"", \""connected\"", \""condecent\"", \""logarithms\"", \""algorithms\"", \""electric\"", \""lectrice\""]\n"",
    ""answer"": ""[[\""algorithms\"", \""logarithms\""], [\""breakup\"", \""upbreak\""], [\""condecent\"", \""connected\""], [\""dodging\"", \""godding\""], [\""electric\"", \""lectrice\""], [\""ext\"", \""tex\""], [\""unmemoired\"", \""unmemoried\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 44,
        ""words"": [
            ""tex"",
            ""ext"",
            ""godding"",
            ""dodging"",
            ""upbreak"",
            ""breakup"",
            ""unmemoried"",
            ""unmemoired"",
            ""connected"",
            ""condecent"",
            ""logarithms"",
            ""algorithms"",
            ""electric"",
            ""lectrice""
        ],
        ""solution"": [
            [
                ""algorithms"",
                ""logarithms""
            ],
            [
                ""breakup"",
                ""upbreak""
            ],
            [
                ""condecent"",
                ""connected""
            ],
            [
                ""dodging"",
                ""godding""
            ],
            [
                ""electric"",
                ""lectrice""
            ],
            [
                ""ext"",
                ""tex""
            ],
            [
                ""unmemoired"",
                ""unmemoried""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
45,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""uncoif"", ""cuinfo"", ""browse"", ""bowers"", ""bowser"", ""clava"", ""caval"", ""shopbook"", ""bookshop"", ""silverer"", ""resilver"", ""sliverer"", ""revilers"", ""armor"", ""morra"", ""maror""]
","[[""armor"", ""maror"", ""morra""], [""bookshop"", ""shopbook""], [""bowers"", ""bowser"", ""browse""], [""caval"", ""clava""], [""cuinfo"", ""uncoif""], [""resilver"", ""revilers"", ""silverer"", ""sliverer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""uncoif\"", \""cuinfo\"", \""browse\"", \""bowers\"", \""bowser\"", \""clava\"", \""caval\"", \""shopbook\"", \""bookshop\"", \""silverer\"", \""resilver\"", \""sliverer\"", \""revilers\"", \""armor\"", \""morra\"", \""maror\""]\n"",
    ""answer"": ""[[\""armor\"", \""maror\"", \""morra\""], [\""bookshop\"", \""shopbook\""], [\""bowers\"", \""bowser\"", \""browse\""], [\""caval\"", \""clava\""], [\""cuinfo\"", \""uncoif\""], [\""resilver\"", \""revilers\"", \""silverer\"", \""sliverer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 45,
        ""words"": [
            ""uncoif"",
            ""cuinfo"",
            ""browse"",
            ""bowers"",
            ""bowser"",
            ""clava"",
            ""caval"",
            ""shopbook"",
            ""bookshop"",
            ""silverer"",
            ""resilver"",
            ""sliverer"",
            ""revilers"",
            ""armor"",
            ""morra"",
            ""maror""
        ],
        ""solution"": [
            [
                ""armor"",
                ""maror"",
                ""morra""
            ],
            [
                ""bookshop"",
                ""shopbook""
            ],
            [
                ""bowers"",
                ""bowser"",
                ""browse""
            ],
            [
                ""caval"",
                ""clava""
            ],
            [
                ""cuinfo"",
                ""uncoif""
            ],
            [
                ""resilver"",
                ""revilers"",
                ""silverer"",
                ""sliverer""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
46,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tanproof"", ""antproof"", ""converser"", ""conserver"", ""sneaksman"", ""masskanne"", ""outlive"", ""ovulite"", ""stylate"", ""stately""]
","[[""antproof"", ""tanproof""], [""conserver"", ""converser""], [""masskanne"", ""sneaksman""], [""outlive"", ""ovulite""], [""stately"", ""stylate""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tanproof\"", \""antproof\"", \""converser\"", \""conserver\"", \""sneaksman\"", \""masskanne\"", \""outlive\"", \""ovulite\"", \""stylate\"", \""stately\""]\n"",
    ""answer"": ""[[\""antproof\"", \""tanproof\""], [\""conserver\"", \""converser\""], [\""masskanne\"", \""sneaksman\""], [\""outlive\"", \""ovulite\""], [\""stately\"", \""stylate\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 46,
        ""words"": [
            ""tanproof"",
            ""antproof"",
            ""converser"",
            ""conserver"",
            ""sneaksman"",
            ""masskanne"",
            ""outlive"",
            ""ovulite"",
            ""stylate"",
            ""stately""
        ],
        ""solution"": [
            [
                ""antproof"",
                ""tanproof""
            ],
            [
                ""conserver"",
                ""converser""
            ],
            [
                ""masskanne"",
                ""sneaksman""
            ],
            [
                ""outlive"",
                ""ovulite""
            ],
            [
                ""stately"",
                ""stylate""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
47,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ensuing"", ""gunnies"", ""delapse"", ""elapsed"", ""sepaled"", ""iridous"", ""isuroid"", ""beatille"", ""etabelli""]
","[[""beatille"", ""etabelli""], [""delapse"", ""elapsed"", ""sepaled""], [""ensuing"", ""gunnies""], [""iridous"", ""isuroid""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ensuing\"", \""gunnies\"", \""delapse\"", \""elapsed\"", \""sepaled\"", \""iridous\"", \""isuroid\"", \""beatille\"", \""etabelli\""]\n"",
    ""answer"": ""[[\""beatille\"", \""etabelli\""], [\""delapse\"", \""elapsed\"", \""sepaled\""], [\""ensuing\"", \""gunnies\""], [\""iridous\"", \""isuroid\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 47,
        ""words"": [
            ""ensuing"",
            ""gunnies"",
            ""delapse"",
            ""elapsed"",
            ""sepaled"",
            ""iridous"",
            ""isuroid"",
            ""beatille"",
            ""etabelli""
        ],
        ""solution"": [
            [
                ""beatille"",
                ""etabelli""
            ],
            [
                ""delapse"",
                ""elapsed"",
                ""sepaled""
            ],
            [
                ""ensuing"",
                ""gunnies""
            ],
            [
                ""iridous"",
                ""isuroid""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
48,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pantod"", ""dopant"", ""helistop"", ""hoplites"", ""isopleth"", ""unteem"", ""umteen"", ""nietzsche"", ""zechstein"", ""smuttier"", ""trisetum"", ""gelosin"", ""longies"", ""lignose""]
","[[""dopant"", ""pantod""], [""gelosin"", ""lignose"", ""longies""], [""helistop"", ""hoplites"", ""isopleth""], [""nietzsche"", ""zechstein""], [""smuttier"", ""trisetum""], [""umteen"", ""unteem""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pantod\"", \""dopant\"", \""helistop\"", \""hoplites\"", \""isopleth\"", \""unteem\"", \""umteen\"", \""nietzsche\"", \""zechstein\"", \""smuttier\"", \""trisetum\"", \""gelosin\"", \""longies\"", \""lignose\""]\n"",
    ""answer"": ""[[\""dopant\"", \""pantod\""], [\""gelosin\"", \""lignose\"", \""longies\""], [\""helistop\"", \""hoplites\"", \""isopleth\""], [\""nietzsche\"", \""zechstein\""], [\""smuttier\"", \""trisetum\""], [\""umteen\"", \""unteem\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 48,
        ""words"": [
            ""pantod"",
            ""dopant"",
            ""helistop"",
            ""hoplites"",
            ""isopleth"",
            ""unteem"",
            ""umteen"",
            ""nietzsche"",
            ""zechstein"",
            ""smuttier"",
            ""trisetum"",
            ""gelosin"",
            ""longies"",
            ""lignose""
        ],
        ""solution"": [
            [
                ""dopant"",
                ""pantod""
            ],
            [
                ""gelosin"",
                ""lignose"",
                ""longies""
            ],
            [
                ""helistop"",
                ""hoplites"",
                ""isopleth""
            ],
            [
                ""nietzsche"",
                ""zechstein""
            ],
            [
                ""smuttier"",
                ""trisetum""
            ],
            [
                ""umteen"",
                ""unteem""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
49,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sturnine"", ""runniest"", ""set"", ""est"", ""neurad"", ""endura"", ""unread"", ""hotches"", ""shochet"", ""rehallow"", ""hallower"", ""dismalities"", ""dissimilate"", ""halfungs"", ""flashgun"", ""tirelessness"", ""ritelessness"", ""dirca"", ""carid"", ""daric"", ""darci"", ""batiste"", ""bastite""]
","[[""bastite"", ""batiste""], [""carid"", ""darci"", ""daric"", ""dirca""], [""dismalities"", ""dissimilate""], [""endura"", ""neurad"", ""unread""], [""est"", ""set""], [""flashgun"", ""halfungs""], [""hallower"", ""rehallow""], [""hotches"", ""shochet""], [""ritelessness"", ""tirelessness""], [""runniest"", ""sturnine""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sturnine\"", \""runniest\"", \""set\"", \""est\"", \""neurad\"", \""endura\"", \""unread\"", \""hotches\"", \""shochet\"", \""rehallow\"", \""hallower\"", \""dismalities\"", \""dissimilate\"", \""halfungs\"", \""flashgun\"", \""tirelessness\"", \""ritelessness\"", \""dirca\"", \""carid\"", \""daric\"", \""darci\"", \""batiste\"", \""bastite\""]\n"",
    ""answer"": ""[[\""bastite\"", \""batiste\""], [\""carid\"", \""darci\"", \""daric\"", \""dirca\""], [\""dismalities\"", \""dissimilate\""], [\""endura\"", \""neurad\"", \""unread\""], [\""est\"", \""set\""], [\""flashgun\"", \""halfungs\""], [\""hallower\"", \""rehallow\""], [\""hotches\"", \""shochet\""], [\""ritelessness\"", \""tirelessness\""], [\""runniest\"", \""sturnine\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 49,
        ""words"": [
            ""sturnine"",
            ""runniest"",
            ""set"",
            ""est"",
            ""neurad"",
            ""endura"",
            ""unread"",
            ""hotches"",
            ""shochet"",
            ""rehallow"",
            ""hallower"",
            ""dismalities"",
            ""dissimilate"",
            ""halfungs"",
            ""flashgun"",
            ""tirelessness"",
            ""ritelessness"",
            ""dirca"",
            ""carid"",
            ""daric"",
            ""darci"",
            ""batiste"",
            ""bastite""
        ],
        ""solution"": [
            [
                ""bastite"",
                ""batiste""
            ],
            [
                ""carid"",
                ""darci"",
                ""daric"",
                ""dirca""
            ],
            [
                ""dismalities"",
                ""dissimilate""
            ],
            [
                ""endura"",
                ""neurad"",
                ""unread""
            ],
            [
                ""est"",
                ""set""
            ],
            [
                ""flashgun"",
                ""halfungs""
            ],
            [
                ""hallower"",
                ""rehallow""
            ],
            [
                ""hotches"",
                ""shochet""
            ],
            [
                ""ritelessness"",
                ""tirelessness""
            ],
            [
                ""runniest"",
                ""sturnine""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
50,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""physa"", ""shapy"", ""fritts"", ""strift"", ""tonger"", ""geront"", ""groten"", ""colpeurynter"", ""counterreply""]
","[[""colpeurynter"", ""counterreply""], [""fritts"", ""strift""], [""geront"", ""groten"", ""tonger""], [""physa"", ""shapy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""physa\"", \""shapy\"", \""fritts\"", \""strift\"", \""tonger\"", \""geront\"", \""groten\"", \""colpeurynter\"", \""counterreply\""]\n"",
    ""answer"": ""[[\""colpeurynter\"", \""counterreply\""], [\""fritts\"", \""strift\""], [\""geront\"", \""groten\"", \""tonger\""], [\""physa\"", \""shapy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 50,
        ""words"": [
            ""physa"",
            ""shapy"",
            ""fritts"",
            ""strift"",
            ""tonger"",
            ""geront"",
            ""groten"",
            ""colpeurynter"",
            ""counterreply""
        ],
        ""solution"": [
            [
                ""colpeurynter"",
                ""counterreply""
            ],
            [
                ""fritts"",
                ""strift""
            ],
            [
                ""geront"",
                ""groten"",
                ""tonger""
            ],
            [
                ""physa"",
                ""shapy""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
51,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sanes"", ""sensa"", ""sidewalk"", ""walkside"", ""evictors"", ""vortices"", ""ratan"", ""antar"", ""antra"", ""sata"", ""asta"", ""diopside"", ""dipodies"", ""ga"", ""ag"", ""lader"", ""daler"", ""readl"", ""solver"", ""lovers""]
","[[""ag"", ""ga""], [""antar"", ""antra"", ""ratan""], [""asta"", ""sata""], [""daler"", ""lader"", ""readl""], [""diopside"", ""dipodies""], [""evictors"", ""vortices""], [""lovers"", ""solver""], [""sanes"", ""sensa""], [""sidewalk"", ""walkside""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sanes\"", \""sensa\"", \""sidewalk\"", \""walkside\"", \""evictors\"", \""vortices\"", \""ratan\"", \""antar\"", \""antra\"", \""sata\"", \""asta\"", \""diopside\"", \""dipodies\"", \""ga\"", \""ag\"", \""lader\"", \""daler\"", \""readl\"", \""solver\"", \""lovers\""]\n"",
    ""answer"": ""[[\""ag\"", \""ga\""], [\""antar\"", \""antra\"", \""ratan\""], [\""asta\"", \""sata\""], [\""daler\"", \""lader\"", \""readl\""], [\""diopside\"", \""dipodies\""], [\""evictors\"", \""vortices\""], [\""lovers\"", \""solver\""], [\""sanes\"", \""sensa\""], [\""sidewalk\"", \""walkside\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 51,
        ""words"": [
            ""sanes"",
            ""sensa"",
            ""sidewalk"",
            ""walkside"",
            ""evictors"",
            ""vortices"",
            ""ratan"",
            ""antar"",
            ""antra"",
            ""sata"",
            ""asta"",
            ""diopside"",
            ""dipodies"",
            ""ga"",
            ""ag"",
            ""lader"",
            ""daler"",
            ""readl"",
            ""solver"",
            ""lovers""
        ],
        ""solution"": [
            [
                ""ag"",
                ""ga""
            ],
            [
                ""antar"",
                ""antra"",
                ""ratan""
            ],
            [
                ""asta"",
                ""sata""
            ],
            [
                ""daler"",
                ""lader"",
                ""readl""
            ],
            [
                ""diopside"",
                ""dipodies""
            ],
            [
                ""evictors"",
                ""vortices""
            ],
            [
                ""lovers"",
                ""solver""
            ],
            [
                ""sanes"",
                ""sensa""
            ],
            [
                ""sidewalk"",
                ""walkside""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
52,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""velout"", ""volute"", ""septicopyemic"", ""pyosepticemic"", ""tanega"", ""agnate"", ""freshet"", ""hefters"", ""ableness"", ""sensable"", ""blaeness"", ""verrugas"", ""gravures""]
","[[""ableness"", ""blaeness"", ""sensable""], [""agnate"", ""tanega""], [""freshet"", ""hefters""], [""gravures"", ""verrugas""], [""pyosepticemic"", ""septicopyemic""], [""velout"", ""volute""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""velout\"", \""volute\"", \""septicopyemic\"", \""pyosepticemic\"", \""tanega\"", \""agnate\"", \""freshet\"", \""hefters\"", \""ableness\"", \""sensable\"", \""blaeness\"", \""verrugas\"", \""gravures\""]\n"",
    ""answer"": ""[[\""ableness\"", \""blaeness\"", \""sensable\""], [\""agnate\"", \""tanega\""], [\""freshet\"", \""hefters\""], [\""gravures\"", \""verrugas\""], [\""pyosepticemic\"", \""septicopyemic\""], [\""velout\"", \""volute\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 52,
        ""words"": [
            ""velout"",
            ""volute"",
            ""septicopyemic"",
            ""pyosepticemic"",
            ""tanega"",
            ""agnate"",
            ""freshet"",
            ""hefters"",
            ""ableness"",
            ""sensable"",
            ""blaeness"",
            ""verrugas"",
            ""gravures""
        ],
        ""solution"": [
            [
                ""ableness"",
                ""blaeness"",
                ""sensable""
            ],
            [
                ""agnate"",
                ""tanega""
            ],
            [
                ""freshet"",
                ""hefters""
            ],
            [
                ""gravures"",
                ""verrugas""
            ],
            [
                ""pyosepticemic"",
                ""septicopyemic""
            ],
            [
                ""velout"",
                ""volute""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
53,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""navet"", ""nevat"", ""venta"", ""runkly"", ""knurly"", ""roqueting"", ""requoting"", ""archine"", ""chainer"", ""scrime"", ""crimes""]
","[[""archine"", ""chainer""], [""crimes"", ""scrime""], [""knurly"", ""runkly""], [""navet"", ""nevat"", ""venta""], [""requoting"", ""roqueting""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""navet\"", \""nevat\"", \""venta\"", \""runkly\"", \""knurly\"", \""roqueting\"", \""requoting\"", \""archine\"", \""chainer\"", \""scrime\"", \""crimes\""]\n"",
    ""answer"": ""[[\""archine\"", \""chainer\""], [\""crimes\"", \""scrime\""], [\""knurly\"", \""runkly\""], [\""navet\"", \""nevat\"", \""venta\""], [\""requoting\"", \""roqueting\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 53,
        ""words"": [
            ""navet"",
            ""nevat"",
            ""venta"",
            ""runkly"",
            ""knurly"",
            ""roqueting"",
            ""requoting"",
            ""archine"",
            ""chainer"",
            ""scrime"",
            ""crimes""
        ],
        ""solution"": [
            [
                ""archine"",
                ""chainer""
            ],
            [
                ""crimes"",
                ""scrime""
            ],
            [
                ""knurly"",
                ""runkly""
            ],
            [
                ""navet"",
                ""nevat"",
                ""venta""
            ],
            [
                ""requoting"",
                ""roqueting""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
54,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hor"", ""rho"", ""unremote"", ""routemen""]
","[[""hor"", ""rho""], [""routemen"", ""unremote""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hor\"", \""rho\"", \""unremote\"", \""routemen\""]\n"",
    ""answer"": ""[[\""hor\"", \""rho\""], [\""routemen\"", \""unremote\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 54,
        ""words"": [
            ""hor"",
            ""rho"",
            ""unremote"",
            ""routemen""
        ],
        ""solution"": [
            [
                ""hor"",
                ""rho""
            ],
            [
                ""routemen"",
                ""unremote""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
55,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""volutae"", ""ovulate"", ""bobac"", ""cabob"", ""tylotus"", ""stoutly"", ""urinous"", ""ruinous""]
","[[""bobac"", ""cabob""], [""ovulate"", ""volutae""], [""ruinous"", ""urinous""], [""stoutly"", ""tylotus""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""volutae\"", \""ovulate\"", \""bobac\"", \""cabob\"", \""tylotus\"", \""stoutly\"", \""urinous\"", \""ruinous\""]\n"",
    ""answer"": ""[[\""bobac\"", \""cabob\""], [\""ovulate\"", \""volutae\""], [\""ruinous\"", \""urinous\""], [\""stoutly\"", \""tylotus\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 55,
        ""words"": [
            ""volutae"",
            ""ovulate"",
            ""bobac"",
            ""cabob"",
            ""tylotus"",
            ""stoutly"",
            ""urinous"",
            ""ruinous""
        ],
        ""solution"": [
            [
                ""bobac"",
                ""cabob""
            ],
            [
                ""ovulate"",
                ""volutae""
            ],
            [
                ""ruinous"",
                ""urinous""
            ],
            [
                ""stoutly"",
                ""tylotus""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
56,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dobe"", ""bode"", ""daleth"", ""lathed"", ""halted"", ""unredacted"", ""underacted"", ""rebundle"", ""blendure"", ""latinos"", ""talions"", ""caried"", ""acider"", ""ericad"", ""mugweed"", ""gumweed"", ""phaseouts"", ""taphouses""]
","[[""acider"", ""caried"", ""ericad""], [""blendure"", ""rebundle""], [""bode"", ""dobe""], [""daleth"", ""halted"", ""lathed""], [""gumweed"", ""mugweed""], [""latinos"", ""talions""], [""phaseouts"", ""taphouses""], [""underacted"", ""unredacted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dobe\"", \""bode\"", \""daleth\"", \""lathed\"", \""halted\"", \""unredacted\"", \""underacted\"", \""rebundle\"", \""blendure\"", \""latinos\"", \""talions\"", \""caried\"", \""acider\"", \""ericad\"", \""mugweed\"", \""gumweed\"", \""phaseouts\"", \""taphouses\""]\n"",
    ""answer"": ""[[\""acider\"", \""caried\"", \""ericad\""], [\""blendure\"", \""rebundle\""], [\""bode\"", \""dobe\""], [\""daleth\"", \""halted\"", \""lathed\""], [\""gumweed\"", \""mugweed\""], [\""latinos\"", \""talions\""], [\""phaseouts\"", \""taphouses\""], [\""underacted\"", \""unredacted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 56,
        ""words"": [
            ""dobe"",
            ""bode"",
            ""daleth"",
            ""lathed"",
            ""halted"",
            ""unredacted"",
            ""underacted"",
            ""rebundle"",
            ""blendure"",
            ""latinos"",
            ""talions"",
            ""caried"",
            ""acider"",
            ""ericad"",
            ""mugweed"",
            ""gumweed"",
            ""phaseouts"",
            ""taphouses""
        ],
        ""solution"": [
            [
                ""acider"",
                ""caried"",
                ""ericad""
            ],
            [
                ""blendure"",
                ""rebundle""
            ],
            [
                ""bode"",
                ""dobe""
            ],
            [
                ""daleth"",
                ""halted"",
                ""lathed""
            ],
            [
                ""gumweed"",
                ""mugweed""
            ],
            [
                ""latinos"",
                ""talions""
            ],
            [
                ""phaseouts"",
                ""taphouses""
            ],
            [
                ""underacted"",
                ""unredacted""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
57,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pettles"", ""spettle"", ""knars"", ""narks"", ""oenologist"", ""ontologise"", ""ontologies"", ""neoologist""]
","[[""knars"", ""narks""], [""neoologist"", ""oenologist"", ""ontologies"", ""ontologise""], [""pettles"", ""spettle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pettles\"", \""spettle\"", \""knars\"", \""narks\"", \""oenologist\"", \""ontologise\"", \""ontologies\"", \""neoologist\""]\n"",
    ""answer"": ""[[\""knars\"", \""narks\""], [\""neoologist\"", \""oenologist\"", \""ontologies\"", \""ontologise\""], [\""pettles\"", \""spettle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 57,
        ""words"": [
            ""pettles"",
            ""spettle"",
            ""knars"",
            ""narks"",
            ""oenologist"",
            ""ontologise"",
            ""ontologies"",
            ""neoologist""
        ],
        ""solution"": [
            [
                ""knars"",
                ""narks""
            ],
            [
                ""neoologist"",
                ""oenologist"",
                ""ontologies"",
                ""ontologise""
            ],
            [
                ""pettles"",
                ""spettle""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
58,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rondelles"", ""norselled"", ""criminate"", ""carminite"", ""metrician"", ""antimeric"", ""flook"", ""kloof"", ""stamnoi"", ""manitos"", ""incisure"", ""sciurine""]
","[[""antimeric"", ""carminite"", ""criminate"", ""metrician""], [""flook"", ""kloof""], [""incisure"", ""sciurine""], [""manitos"", ""stamnoi""], [""norselled"", ""rondelles""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rondelles\"", \""norselled\"", \""criminate\"", \""carminite\"", \""metrician\"", \""antimeric\"", \""flook\"", \""kloof\"", \""stamnoi\"", \""manitos\"", \""incisure\"", \""sciurine\""]\n"",
    ""answer"": ""[[\""antimeric\"", \""carminite\"", \""criminate\"", \""metrician\""], [\""flook\"", \""kloof\""], [\""incisure\"", \""sciurine\""], [\""manitos\"", \""stamnoi\""], [\""norselled\"", \""rondelles\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 58,
        ""words"": [
            ""rondelles"",
            ""norselled"",
            ""criminate"",
            ""carminite"",
            ""metrician"",
            ""antimeric"",
            ""flook"",
            ""kloof"",
            ""stamnoi"",
            ""manitos"",
            ""incisure"",
            ""sciurine""
        ],
        ""solution"": [
            [
                ""antimeric"",
                ""carminite"",
                ""criminate"",
                ""metrician""
            ],
            [
                ""flook"",
                ""kloof""
            ],
            [
                ""incisure"",
                ""sciurine""
            ],
            [
                ""manitos"",
                ""stamnoi""
            ],
            [
                ""norselled"",
                ""rondelles""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
59,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""omnitenent"", ""intonement"", ""rightable"", ""bergalith"", ""missary"", ""syriasm""]
","[[""bergalith"", ""rightable""], [""intonement"", ""omnitenent""], [""missary"", ""syriasm""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""omnitenent\"", \""intonement\"", \""rightable\"", \""bergalith\"", \""missary\"", \""syriasm\""]\n"",
    ""answer"": ""[[\""bergalith\"", \""rightable\""], [\""intonement\"", \""omnitenent\""], [\""missary\"", \""syriasm\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 59,
        ""words"": [
            ""omnitenent"",
            ""intonement"",
            ""rightable"",
            ""bergalith"",
            ""missary"",
            ""syriasm""
        ],
        ""solution"": [
            [
                ""bergalith"",
                ""rightable""
            ],
            [
                ""intonement"",
                ""omnitenent""
            ],
            [
                ""missary"",
                ""syriasm""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
60,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lodger"", ""golder"", ""tolderia"", ""tailored"", ""hipline"", ""philine"", ""hotpresses"", ""prostheses"", ""replanted"", ""predental"", ""interposure"", ""neuropteris"", ""ochidore"", ""choreoid"", ""protreaty"", ""reptatory""]
","[[""choreoid"", ""ochidore""], [""golder"", ""lodger""], [""hipline"", ""philine""], [""hotpresses"", ""prostheses""], [""interposure"", ""neuropteris""], [""predental"", ""replanted""], [""protreaty"", ""reptatory""], [""tailored"", ""tolderia""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lodger\"", \""golder\"", \""tolderia\"", \""tailored\"", \""hipline\"", \""philine\"", \""hotpresses\"", \""prostheses\"", \""replanted\"", \""predental\"", \""interposure\"", \""neuropteris\"", \""ochidore\"", \""choreoid\"", \""protreaty\"", \""reptatory\""]\n"",
    ""answer"": ""[[\""choreoid\"", \""ochidore\""], [\""golder\"", \""lodger\""], [\""hipline\"", \""philine\""], [\""hotpresses\"", \""prostheses\""], [\""interposure\"", \""neuropteris\""], [\""predental\"", \""replanted\""], [\""protreaty\"", \""reptatory\""], [\""tailored\"", \""tolderia\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 60,
        ""words"": [
            ""lodger"",
            ""golder"",
            ""tolderia"",
            ""tailored"",
            ""hipline"",
            ""philine"",
            ""hotpresses"",
            ""prostheses"",
            ""replanted"",
            ""predental"",
            ""interposure"",
            ""neuropteris"",
            ""ochidore"",
            ""choreoid"",
            ""protreaty"",
            ""reptatory""
        ],
        ""solution"": [
            [
                ""choreoid"",
                ""ochidore""
            ],
            [
                ""golder"",
                ""lodger""
            ],
            [
                ""hipline"",
                ""philine""
            ],
            [
                ""hotpresses"",
                ""prostheses""
            ],
            [
                ""interposure"",
                ""neuropteris""
            ],
            [
                ""predental"",
                ""replanted""
            ],
            [
                ""protreaty"",
                ""reptatory""
            ],
            [
                ""tailored"",
                ""tolderia""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
61,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""woolf"", ""wolof"", ""sye"", ""yes"", ""sey"", ""poetaster"", ""operettas"", ""demisolde"", ""melodised"", ""swarth"", ""thraws"", ""wraths"", ""ark"", ""kra"", ""antiextreme"", ""exterminate"", ""denis"", ""snide"", ""nides"", ""bago"", ""boga""]
","[[""antiextreme"", ""exterminate""], [""ark"", ""kra""], [""bago"", ""boga""], [""demisolde"", ""melodised""], [""denis"", ""nides"", ""snide""], [""operettas"", ""poetaster""], [""sey"", ""sye"", ""yes""], [""swarth"", ""thraws"", ""wraths""], [""wolof"", ""woolf""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""woolf\"", \""wolof\"", \""sye\"", \""yes\"", \""sey\"", \""poetaster\"", \""operettas\"", \""demisolde\"", \""melodised\"", \""swarth\"", \""thraws\"", \""wraths\"", \""ark\"", \""kra\"", \""antiextreme\"", \""exterminate\"", \""denis\"", \""snide\"", \""nides\"", \""bago\"", \""boga\""]\n"",
    ""answer"": ""[[\""antiextreme\"", \""exterminate\""], [\""ark\"", \""kra\""], [\""bago\"", \""boga\""], [\""demisolde\"", \""melodised\""], [\""denis\"", \""nides\"", \""snide\""], [\""operettas\"", \""poetaster\""], [\""sey\"", \""sye\"", \""yes\""], [\""swarth\"", \""thraws\"", \""wraths\""], [\""wolof\"", \""woolf\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 61,
        ""words"": [
            ""woolf"",
            ""wolof"",
            ""sye"",
            ""yes"",
            ""sey"",
            ""poetaster"",
            ""operettas"",
            ""demisolde"",
            ""melodised"",
            ""swarth"",
            ""thraws"",
            ""wraths"",
            ""ark"",
            ""kra"",
            ""antiextreme"",
            ""exterminate"",
            ""denis"",
            ""snide"",
            ""nides"",
            ""bago"",
            ""boga""
        ],
        ""solution"": [
            [
                ""antiextreme"",
                ""exterminate""
            ],
            [
                ""ark"",
                ""kra""
            ],
            [
                ""bago"",
                ""boga""
            ],
            [
                ""demisolde"",
                ""melodised""
            ],
            [
                ""denis"",
                ""nides"",
                ""snide""
            ],
            [
                ""operettas"",
                ""poetaster""
            ],
            [
                ""sey"",
                ""sye"",
                ""yes""
            ],
            [
                ""swarth"",
                ""thraws"",
                ""wraths""
            ],
            [
                ""wolof"",
                ""woolf""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
62,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""siblings"", ""bislings"", ""spane"", ""aspen"", ""snape"", ""spean"", ""sceptering"", ""respecting"", ""coil"", ""coli"", ""clio"", ""loci"", ""contractu"", ""cunctator"", ""enduringly"", ""underlying"", ""spelaean"", ""seaplane"", ""electroacoustic"", ""acoustoelectric"", ""moistener"", ""neoterism"", ""gartering"", ""regrating""]
","[[""acoustoelectric"", ""electroacoustic""], [""aspen"", ""snape"", ""spane"", ""spean""], [""bislings"", ""siblings""], [""clio"", ""coil"", ""coli"", ""loci""], [""contractu"", ""cunctator""], [""enduringly"", ""underlying""], [""gartering"", ""regrating""], [""moistener"", ""neoterism""], [""respecting"", ""sceptering""], [""seaplane"", ""spelaean""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""siblings\"", \""bislings\"", \""spane\"", \""aspen\"", \""snape\"", \""spean\"", \""sceptering\"", \""respecting\"", \""coil\"", \""coli\"", \""clio\"", \""loci\"", \""contractu\"", \""cunctator\"", \""enduringly\"", \""underlying\"", \""spelaean\"", \""seaplane\"", \""electroacoustic\"", \""acoustoelectric\"", \""moistener\"", \""neoterism\"", \""gartering\"", \""regrating\""]\n"",
    ""answer"": ""[[\""acoustoelectric\"", \""electroacoustic\""], [\""aspen\"", \""snape\"", \""spane\"", \""spean\""], [\""bislings\"", \""siblings\""], [\""clio\"", \""coil\"", \""coli\"", \""loci\""], [\""contractu\"", \""cunctator\""], [\""enduringly\"", \""underlying\""], [\""gartering\"", \""regrating\""], [\""moistener\"", \""neoterism\""], [\""respecting\"", \""sceptering\""], [\""seaplane\"", \""spelaean\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 62,
        ""words"": [
            ""siblings"",
            ""bislings"",
            ""spane"",
            ""aspen"",
            ""snape"",
            ""spean"",
            ""sceptering"",
            ""respecting"",
            ""coil"",
            ""coli"",
            ""clio"",
            ""loci"",
            ""contractu"",
            ""cunctator"",
            ""enduringly"",
            ""underlying"",
            ""spelaean"",
            ""seaplane"",
            ""electroacoustic"",
            ""acoustoelectric"",
            ""moistener"",
            ""neoterism"",
            ""gartering"",
            ""regrating""
        ],
        ""solution"": [
            [
                ""acoustoelectric"",
                ""electroacoustic""
            ],
            [
                ""aspen"",
                ""snape"",
                ""spane"",
                ""spean""
            ],
            [
                ""bislings"",
                ""siblings""
            ],
            [
                ""clio"",
                ""coil"",
                ""coli"",
                ""loci""
            ],
            [
                ""contractu"",
                ""cunctator""
            ],
            [
                ""enduringly"",
                ""underlying""
            ],
            [
                ""gartering"",
                ""regrating""
            ],
            [
                ""moistener"",
                ""neoterism""
            ],
            [
                ""respecting"",
                ""sceptering""
            ],
            [
                ""seaplane"",
                ""spelaean""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
63,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""glowered"", ""reglowed"", ""overs"", ""servo"", ""verso"", ""needham"", ""headmen"", ""trollopian"", ""pollinator"", ""soir"", ""sori"", ""astatizer"", ""zaratites"", ""gallian"", ""lingala"", ""triangulated"", ""adulterating"", ""autoradiographic"", ""radioautographic"", ""requitals"", ""quartiles""]
","[[""adulterating"", ""triangulated""], [""astatizer"", ""zaratites""], [""autoradiographic"", ""radioautographic""], [""gallian"", ""lingala""], [""glowered"", ""reglowed""], [""headmen"", ""needham""], [""overs"", ""servo"", ""verso""], [""pollinator"", ""trollopian""], [""quartiles"", ""requitals""], [""soir"", ""sori""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""glowered\"", \""reglowed\"", \""overs\"", \""servo\"", \""verso\"", \""needham\"", \""headmen\"", \""trollopian\"", \""pollinator\"", \""soir\"", \""sori\"", \""astatizer\"", \""zaratites\"", \""gallian\"", \""lingala\"", \""triangulated\"", \""adulterating\"", \""autoradiographic\"", \""radioautographic\"", \""requitals\"", \""quartiles\""]\n"",
    ""answer"": ""[[\""adulterating\"", \""triangulated\""], [\""astatizer\"", \""zaratites\""], [\""autoradiographic\"", \""radioautographic\""], [\""gallian\"", \""lingala\""], [\""glowered\"", \""reglowed\""], [\""headmen\"", \""needham\""], [\""overs\"", \""servo\"", \""verso\""], [\""pollinator\"", \""trollopian\""], [\""quartiles\"", \""requitals\""], [\""soir\"", \""sori\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 63,
        ""words"": [
            ""glowered"",
            ""reglowed"",
            ""overs"",
            ""servo"",
            ""verso"",
            ""needham"",
            ""headmen"",
            ""trollopian"",
            ""pollinator"",
            ""soir"",
            ""sori"",
            ""astatizer"",
            ""zaratites"",
            ""gallian"",
            ""lingala"",
            ""triangulated"",
            ""adulterating"",
            ""autoradiographic"",
            ""radioautographic"",
            ""requitals"",
            ""quartiles""
        ],
        ""solution"": [
            [
                ""adulterating"",
                ""triangulated""
            ],
            [
                ""astatizer"",
                ""zaratites""
            ],
            [
                ""autoradiographic"",
                ""radioautographic""
            ],
            [
                ""gallian"",
                ""lingala""
            ],
            [
                ""glowered"",
                ""reglowed""
            ],
            [
                ""headmen"",
                ""needham""
            ],
            [
                ""overs"",
                ""servo"",
                ""verso""
            ],
            [
                ""pollinator"",
                ""trollopian""
            ],
            [
                ""quartiles"",
                ""requitals""
            ],
            [
                ""soir"",
                ""sori""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
64,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""coverall"", ""vocaller"", ""overcall"", ""unsensitive"", ""unitiveness"", ""osperm"", ""mopers"", ""proems"", ""merops"", ""toed"", ""tode"", ""rebuy"", ""buyer"", ""entozoan"", ""antozone"", ""relaundered"", ""underdealer""]
","[[""antozone"", ""entozoan""], [""buyer"", ""rebuy""], [""coverall"", ""overcall"", ""vocaller""], [""merops"", ""mopers"", ""osperm"", ""proems""], [""relaundered"", ""underdealer""], [""tode"", ""toed""], [""unitiveness"", ""unsensitive""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""coverall\"", \""vocaller\"", \""overcall\"", \""unsensitive\"", \""unitiveness\"", \""osperm\"", \""mopers\"", \""proems\"", \""merops\"", \""toed\"", \""tode\"", \""rebuy\"", \""buyer\"", \""entozoan\"", \""antozone\"", \""relaundered\"", \""underdealer\""]\n"",
    ""answer"": ""[[\""antozone\"", \""entozoan\""], [\""buyer\"", \""rebuy\""], [\""coverall\"", \""overcall\"", \""vocaller\""], [\""merops\"", \""mopers\"", \""osperm\"", \""proems\""], [\""relaundered\"", \""underdealer\""], [\""tode\"", \""toed\""], [\""unitiveness\"", \""unsensitive\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 64,
        ""words"": [
            ""coverall"",
            ""vocaller"",
            ""overcall"",
            ""unsensitive"",
            ""unitiveness"",
            ""osperm"",
            ""mopers"",
            ""proems"",
            ""merops"",
            ""toed"",
            ""tode"",
            ""rebuy"",
            ""buyer"",
            ""entozoan"",
            ""antozone"",
            ""relaundered"",
            ""underdealer""
        ],
        ""solution"": [
            [
                ""antozone"",
                ""entozoan""
            ],
            [
                ""buyer"",
                ""rebuy""
            ],
            [
                ""coverall"",
                ""overcall"",
                ""vocaller""
            ],
            [
                ""merops"",
                ""mopers"",
                ""osperm"",
                ""proems""
            ],
            [
                ""relaundered"",
                ""underdealer""
            ],
            [
                ""tode"",
                ""toed""
            ],
            [
                ""unitiveness"",
                ""unsensitive""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
65,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""encrinital"", ""tricennial"", ""sequan"", ""queans"", ""diasters"", ""disaster"", ""warranties"", ""warrantise"", ""siak"", ""saki"", ""sika""]
","[[""diasters"", ""disaster""], [""encrinital"", ""tricennial""], [""queans"", ""sequan""], [""saki"", ""siak"", ""sika""], [""warranties"", ""warrantise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""encrinital\"", \""tricennial\"", \""sequan\"", \""queans\"", \""diasters\"", \""disaster\"", \""warranties\"", \""warrantise\"", \""siak\"", \""saki\"", \""sika\""]\n"",
    ""answer"": ""[[\""diasters\"", \""disaster\""], [\""encrinital\"", \""tricennial\""], [\""queans\"", \""sequan\""], [\""saki\"", \""siak\"", \""sika\""], [\""warranties\"", \""warrantise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 65,
        ""words"": [
            ""encrinital"",
            ""tricennial"",
            ""sequan"",
            ""queans"",
            ""diasters"",
            ""disaster"",
            ""warranties"",
            ""warrantise"",
            ""siak"",
            ""saki"",
            ""sika""
        ],
        ""solution"": [
            [
                ""diasters"",
                ""disaster""
            ],
            [
                ""encrinital"",
                ""tricennial""
            ],
            [
                ""queans"",
                ""sequan""
            ],
            [
                ""saki"",
                ""siak"",
                ""sika""
            ],
            [
                ""warranties"",
                ""warrantise""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
66,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""incomputably"", ""uncompatibly"", ""wakeners"", ""rewakens"", ""airplot"", ""toprail"", ""portail"", ""seedman"", ""demeans"", ""electromagnetic"", ""magnetoelectric"", ""monial"", ""nomial"", ""almoin"", ""oilman"", ""fetichry"", ""fitchery""]
","[[""airplot"", ""portail"", ""toprail""], [""almoin"", ""monial"", ""nomial"", ""oilman""], [""demeans"", ""seedman""], [""electromagnetic"", ""magnetoelectric""], [""fetichry"", ""fitchery""], [""incomputably"", ""uncompatibly""], [""rewakens"", ""wakeners""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""incomputably\"", \""uncompatibly\"", \""wakeners\"", \""rewakens\"", \""airplot\"", \""toprail\"", \""portail\"", \""seedman\"", \""demeans\"", \""electromagnetic\"", \""magnetoelectric\"", \""monial\"", \""nomial\"", \""almoin\"", \""oilman\"", \""fetichry\"", \""fitchery\""]\n"",
    ""answer"": ""[[\""airplot\"", \""portail\"", \""toprail\""], [\""almoin\"", \""monial\"", \""nomial\"", \""oilman\""], [\""demeans\"", \""seedman\""], [\""electromagnetic\"", \""magnetoelectric\""], [\""fetichry\"", \""fitchery\""], [\""incomputably\"", \""uncompatibly\""], [\""rewakens\"", \""wakeners\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 66,
        ""words"": [
            ""incomputably"",
            ""uncompatibly"",
            ""wakeners"",
            ""rewakens"",
            ""airplot"",
            ""toprail"",
            ""portail"",
            ""seedman"",
            ""demeans"",
            ""electromagnetic"",
            ""magnetoelectric"",
            ""monial"",
            ""nomial"",
            ""almoin"",
            ""oilman"",
            ""fetichry"",
            ""fitchery""
        ],
        ""solution"": [
            [
                ""airplot"",
                ""portail"",
                ""toprail""
            ],
            [
                ""almoin"",
                ""monial"",
                ""nomial"",
                ""oilman""
            ],
            [
                ""demeans"",
                ""seedman""
            ],
            [
                ""electromagnetic"",
                ""magnetoelectric""
            ],
            [
                ""fetichry"",
                ""fitchery""
            ],
            [
                ""incomputably"",
                ""uncompatibly""
            ],
            [
                ""rewakens"",
                ""wakeners""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
67,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""drisk"", ""dirks"", ""weatherbreak"", ""breakweather"", ""torsion"", ""isotron"", ""nitroso"", ""bikram"", ""imbark"", ""carisa"", ""sciara"", ""certifying"", ""rectifying"", ""tapir"", ""atrip"", ""pairt"", ""parti"", ""perchloric"", ""prechloric""]
","[[""atrip"", ""pairt"", ""parti"", ""tapir""], [""bikram"", ""imbark""], [""breakweather"", ""weatherbreak""], [""carisa"", ""sciara""], [""certifying"", ""rectifying""], [""dirks"", ""drisk""], [""isotron"", ""nitroso"", ""torsion""], [""perchloric"", ""prechloric""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""drisk\"", \""dirks\"", \""weatherbreak\"", \""breakweather\"", \""torsion\"", \""isotron\"", \""nitroso\"", \""bikram\"", \""imbark\"", \""carisa\"", \""sciara\"", \""certifying\"", \""rectifying\"", \""tapir\"", \""atrip\"", \""pairt\"", \""parti\"", \""perchloric\"", \""prechloric\""]\n"",
    ""answer"": ""[[\""atrip\"", \""pairt\"", \""parti\"", \""tapir\""], [\""bikram\"", \""imbark\""], [\""breakweather\"", \""weatherbreak\""], [\""carisa\"", \""sciara\""], [\""certifying\"", \""rectifying\""], [\""dirks\"", \""drisk\""], [\""isotron\"", \""nitroso\"", \""torsion\""], [\""perchloric\"", \""prechloric\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 67,
        ""words"": [
            ""drisk"",
            ""dirks"",
            ""weatherbreak"",
            ""breakweather"",
            ""torsion"",
            ""isotron"",
            ""nitroso"",
            ""bikram"",
            ""imbark"",
            ""carisa"",
            ""sciara"",
            ""certifying"",
            ""rectifying"",
            ""tapir"",
            ""atrip"",
            ""pairt"",
            ""parti"",
            ""perchloric"",
            ""prechloric""
        ],
        ""solution"": [
            [
                ""atrip"",
                ""pairt"",
                ""parti"",
                ""tapir""
            ],
            [
                ""bikram"",
                ""imbark""
            ],
            [
                ""breakweather"",
                ""weatherbreak""
            ],
            [
                ""carisa"",
                ""sciara""
            ],
            [
                ""certifying"",
                ""rectifying""
            ],
            [
                ""dirks"",
                ""drisk""
            ],
            [
                ""isotron"",
                ""nitroso"",
                ""torsion""
            ],
            [
                ""perchloric"",
                ""prechloric""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
68,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""leveraged"", ""everglade"", ""rifest"", ""estrif"", ""telephotograph"", ""phototelegraph"", ""besot"", ""betso""]
","[[""besot"", ""betso""], [""estrif"", ""rifest""], [""everglade"", ""leveraged""], [""phototelegraph"", ""telephotograph""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""leveraged\"", \""everglade\"", \""rifest\"", \""estrif\"", \""telephotograph\"", \""phototelegraph\"", \""besot\"", \""betso\""]\n"",
    ""answer"": ""[[\""besot\"", \""betso\""], [\""estrif\"", \""rifest\""], [\""everglade\"", \""leveraged\""], [\""phototelegraph\"", \""telephotograph\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 68,
        ""words"": [
            ""leveraged"",
            ""everglade"",
            ""rifest"",
            ""estrif"",
            ""telephotograph"",
            ""phototelegraph"",
            ""besot"",
            ""betso""
        ],
        ""solution"": [
            [
                ""besot"",
                ""betso""
            ],
            [
                ""estrif"",
                ""rifest""
            ],
            [
                ""everglade"",
                ""leveraged""
            ],
            [
                ""phototelegraph"",
                ""telephotograph""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
69,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unmantle"", ""unmental"", ""headmen"", ""needham"", ""depit"", ""tepid"", ""farcilite"", ""telfairic"", ""laticifer"", ""alchitran"", ""clathrina""]
","[[""alchitran"", ""clathrina""], [""depit"", ""tepid""], [""farcilite"", ""laticifer"", ""telfairic""], [""headmen"", ""needham""], [""unmantle"", ""unmental""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unmantle\"", \""unmental\"", \""headmen\"", \""needham\"", \""depit\"", \""tepid\"", \""farcilite\"", \""telfairic\"", \""laticifer\"", \""alchitran\"", \""clathrina\""]\n"",
    ""answer"": ""[[\""alchitran\"", \""clathrina\""], [\""depit\"", \""tepid\""], [\""farcilite\"", \""laticifer\"", \""telfairic\""], [\""headmen\"", \""needham\""], [\""unmantle\"", \""unmental\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 69,
        ""words"": [
            ""unmantle"",
            ""unmental"",
            ""headmen"",
            ""needham"",
            ""depit"",
            ""tepid"",
            ""farcilite"",
            ""telfairic"",
            ""laticifer"",
            ""alchitran"",
            ""clathrina""
        ],
        ""solution"": [
            [
                ""alchitran"",
                ""clathrina""
            ],
            [
                ""depit"",
                ""tepid""
            ],
            [
                ""farcilite"",
                ""laticifer"",
                ""telfairic""
            ],
            [
                ""headmen"",
                ""needham""
            ],
            [
                ""unmantle"",
                ""unmental""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
70,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mume"", ""meum"", ""kosha"", ""shako"", ""pendanted"", ""dependant"", ""belluine"", ""blueline""]
","[[""belluine"", ""blueline""], [""dependant"", ""pendanted""], [""kosha"", ""shako""], [""meum"", ""mume""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mume\"", \""meum\"", \""kosha\"", \""shako\"", \""pendanted\"", \""dependant\"", \""belluine\"", \""blueline\""]\n"",
    ""answer"": ""[[\""belluine\"", \""blueline\""], [\""dependant\"", \""pendanted\""], [\""kosha\"", \""shako\""], [\""meum\"", \""mume\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 70,
        ""words"": [
            ""mume"",
            ""meum"",
            ""kosha"",
            ""shako"",
            ""pendanted"",
            ""dependant"",
            ""belluine"",
            ""blueline""
        ],
        ""solution"": [
            [
                ""belluine"",
                ""blueline""
            ],
            [
                ""dependant"",
                ""pendanted""
            ],
            [
                ""kosha"",
                ""shako""
            ],
            [
                ""meum"",
                ""mume""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
71,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""socotri"", ""octrois"", ""mus"", ""sum"", ""overglint"", ""revolting"", ""reluctant"", ""tralucent"", ""calceus"", ""saccule"", ""moronities"", ""monitories"", ""rance"", ""nacre"", ""crena"", ""upwork"", ""workup"", ""jarde"", ""jared""]
","[[""calceus"", ""saccule""], [""crena"", ""nacre"", ""rance""], [""jarde"", ""jared""], [""monitories"", ""moronities""], [""mus"", ""sum""], [""octrois"", ""socotri""], [""overglint"", ""revolting""], [""reluctant"", ""tralucent""], [""upwork"", ""workup""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""socotri\"", \""octrois\"", \""mus\"", \""sum\"", \""overglint\"", \""revolting\"", \""reluctant\"", \""tralucent\"", \""calceus\"", \""saccule\"", \""moronities\"", \""monitories\"", \""rance\"", \""nacre\"", \""crena\"", \""upwork\"", \""workup\"", \""jarde\"", \""jared\""]\n"",
    ""answer"": ""[[\""calceus\"", \""saccule\""], [\""crena\"", \""nacre\"", \""rance\""], [\""jarde\"", \""jared\""], [\""monitories\"", \""moronities\""], [\""mus\"", \""sum\""], [\""octrois\"", \""socotri\""], [\""overglint\"", \""revolting\""], [\""reluctant\"", \""tralucent\""], [\""upwork\"", \""workup\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 71,
        ""words"": [
            ""socotri"",
            ""octrois"",
            ""mus"",
            ""sum"",
            ""overglint"",
            ""revolting"",
            ""reluctant"",
            ""tralucent"",
            ""calceus"",
            ""saccule"",
            ""moronities"",
            ""monitories"",
            ""rance"",
            ""nacre"",
            ""crena"",
            ""upwork"",
            ""workup"",
            ""jarde"",
            ""jared""
        ],
        ""solution"": [
            [
                ""calceus"",
                ""saccule""
            ],
            [
                ""crena"",
                ""nacre"",
                ""rance""
            ],
            [
                ""jarde"",
                ""jared""
            ],
            [
                ""monitories"",
                ""moronities""
            ],
            [
                ""mus"",
                ""sum""
            ],
            [
                ""octrois"",
                ""socotri""
            ],
            [
                ""overglint"",
                ""revolting""
            ],
            [
                ""reluctant"",
                ""tralucent""
            ],
            [
                ""upwork"",
                ""workup""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
72,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tautest"", ""statute"", ""scrabe"", ""braces""]
","[[""braces"", ""scrabe""], [""statute"", ""tautest""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tautest\"", \""statute\"", \""scrabe\"", \""braces\""]\n"",
    ""answer"": ""[[\""braces\"", \""scrabe\""], [\""statute\"", \""tautest\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 72,
        ""words"": [
            ""tautest"",
            ""statute"",
            ""scrabe"",
            ""braces""
        ],
        ""solution"": [
            [
                ""braces"",
                ""scrabe""
            ],
            [
                ""statute"",
                ""tautest""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
73,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""merino"", ""inmore"", ""monier"", ""preacher"", ""repreach"", ""caurale"", ""arcuale"", ""diable"", ""deblai"", ""bailed"", ""baldie"", ""abdiel"", ""licorous"", ""couloirs"", ""sorgos"", ""grosso"", ""pharm"", ""prahm""]
","[[""abdiel"", ""bailed"", ""baldie"", ""deblai"", ""diable""], [""arcuale"", ""caurale""], [""couloirs"", ""licorous""], [""grosso"", ""sorgos""], [""inmore"", ""merino"", ""monier""], [""pharm"", ""prahm""], [""preacher"", ""repreach""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""merino\"", \""inmore\"", \""monier\"", \""preacher\"", \""repreach\"", \""caurale\"", \""arcuale\"", \""diable\"", \""deblai\"", \""bailed\"", \""baldie\"", \""abdiel\"", \""licorous\"", \""couloirs\"", \""sorgos\"", \""grosso\"", \""pharm\"", \""prahm\""]\n"",
    ""answer"": ""[[\""abdiel\"", \""bailed\"", \""baldie\"", \""deblai\"", \""diable\""], [\""arcuale\"", \""caurale\""], [\""couloirs\"", \""licorous\""], [\""grosso\"", \""sorgos\""], [\""inmore\"", \""merino\"", \""monier\""], [\""pharm\"", \""prahm\""], [\""preacher\"", \""repreach\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 73,
        ""words"": [
            ""merino"",
            ""inmore"",
            ""monier"",
            ""preacher"",
            ""repreach"",
            ""caurale"",
            ""arcuale"",
            ""diable"",
            ""deblai"",
            ""bailed"",
            ""baldie"",
            ""abdiel"",
            ""licorous"",
            ""couloirs"",
            ""sorgos"",
            ""grosso"",
            ""pharm"",
            ""prahm""
        ],
        ""solution"": [
            [
                ""abdiel"",
                ""bailed"",
                ""baldie"",
                ""deblai"",
                ""diable""
            ],
            [
                ""arcuale"",
                ""caurale""
            ],
            [
                ""couloirs"",
                ""licorous""
            ],
            [
                ""grosso"",
                ""sorgos""
            ],
            [
                ""inmore"",
                ""merino"",
                ""monier""
            ],
            [
                ""pharm"",
                ""prahm""
            ],
            [
                ""preacher"",
                ""repreach""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
74,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""catso"", ""tacos"", ""houston"", ""nothous"", ""hontous"", ""kyung"", ""gunky"", ""reseaus"", ""ureases"", ""finials"", ""sailfin"", ""finalis"", ""scillain"", ""allicins"", ""queriers"", ""requires"", ""chesoun"", ""cohunes"", ""upsring"", ""pursing""]
","[[""allicins"", ""scillain""], [""catso"", ""tacos""], [""chesoun"", ""cohunes""], [""finalis"", ""finials"", ""sailfin""], [""gunky"", ""kyung""], [""hontous"", ""houston"", ""nothous""], [""pursing"", ""upsring""], [""queriers"", ""requires""], [""reseaus"", ""ureases""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""catso\"", \""tacos\"", \""houston\"", \""nothous\"", \""hontous\"", \""kyung\"", \""gunky\"", \""reseaus\"", \""ureases\"", \""finials\"", \""sailfin\"", \""finalis\"", \""scillain\"", \""allicins\"", \""queriers\"", \""requires\"", \""chesoun\"", \""cohunes\"", \""upsring\"", \""pursing\""]\n"",
    ""answer"": ""[[\""allicins\"", \""scillain\""], [\""catso\"", \""tacos\""], [\""chesoun\"", \""cohunes\""], [\""finalis\"", \""finials\"", \""sailfin\""], [\""gunky\"", \""kyung\""], [\""hontous\"", \""houston\"", \""nothous\""], [\""pursing\"", \""upsring\""], [\""queriers\"", \""requires\""], [\""reseaus\"", \""ureases\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 74,
        ""words"": [
            ""catso"",
            ""tacos"",
            ""houston"",
            ""nothous"",
            ""hontous"",
            ""kyung"",
            ""gunky"",
            ""reseaus"",
            ""ureases"",
            ""finials"",
            ""sailfin"",
            ""finalis"",
            ""scillain"",
            ""allicins"",
            ""queriers"",
            ""requires"",
            ""chesoun"",
            ""cohunes"",
            ""upsring"",
            ""pursing""
        ],
        ""solution"": [
            [
                ""allicins"",
                ""scillain""
            ],
            [
                ""catso"",
                ""tacos""
            ],
            [
                ""chesoun"",
                ""cohunes""
            ],
            [
                ""finalis"",
                ""finials"",
                ""sailfin""
            ],
            [
                ""gunky"",
                ""kyung""
            ],
            [
                ""hontous"",
                ""houston"",
                ""nothous""
            ],
            [
                ""pursing"",
                ""upsring""
            ],
            [
                ""queriers"",
                ""requires""
            ],
            [
                ""reseaus"",
                ""ureases""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
75,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mal"", ""lam"", ""nonvisitation"", ""innovationist"", ""sept"", ""pest"", ""step"", ""pets"", ""osmophore"", ""sophomore"", ""malleted"", ""metalled""]
","[[""innovationist"", ""nonvisitation""], [""lam"", ""mal""], [""malleted"", ""metalled""], [""osmophore"", ""sophomore""], [""pest"", ""pets"", ""sept"", ""step""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mal\"", \""lam\"", \""nonvisitation\"", \""innovationist\"", \""sept\"", \""pest\"", \""step\"", \""pets\"", \""osmophore\"", \""sophomore\"", \""malleted\"", \""metalled\""]\n"",
    ""answer"": ""[[\""innovationist\"", \""nonvisitation\""], [\""lam\"", \""mal\""], [\""malleted\"", \""metalled\""], [\""osmophore\"", \""sophomore\""], [\""pest\"", \""pets\"", \""sept\"", \""step\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 75,
        ""words"": [
            ""mal"",
            ""lam"",
            ""nonvisitation"",
            ""innovationist"",
            ""sept"",
            ""pest"",
            ""step"",
            ""pets"",
            ""osmophore"",
            ""sophomore"",
            ""malleted"",
            ""metalled""
        ],
        ""solution"": [
            [
                ""innovationist"",
                ""nonvisitation""
            ],
            [
                ""lam"",
                ""mal""
            ],
            [
                ""malleted"",
                ""metalled""
            ],
            [
                ""osmophore"",
                ""sophomore""
            ],
            [
                ""pest"",
                ""pets"",
                ""sept"",
                ""step""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
76,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""oliveness"", ""novelises"", ""reeler"", ""rereel"", ""anjan"", ""jnana"", ""suitings"", ""tissuing""]
","[[""anjan"", ""jnana""], [""novelises"", ""oliveness""], [""reeler"", ""rereel""], [""suitings"", ""tissuing""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""oliveness\"", \""novelises\"", \""reeler\"", \""rereel\"", \""anjan\"", \""jnana\"", \""suitings\"", \""tissuing\""]\n"",
    ""answer"": ""[[\""anjan\"", \""jnana\""], [\""novelises\"", \""oliveness\""], [\""reeler\"", \""rereel\""], [\""suitings\"", \""tissuing\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 76,
        ""words"": [
            ""oliveness"",
            ""novelises"",
            ""reeler"",
            ""rereel"",
            ""anjan"",
            ""jnana"",
            ""suitings"",
            ""tissuing""
        ],
        ""solution"": [
            [
                ""anjan"",
                ""jnana""
            ],
            [
                ""novelises"",
                ""oliveness""
            ],
            [
                ""reeler"",
                ""rereel""
            ],
            [
                ""suitings"",
                ""tissuing""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
77,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""radical"", ""cardial"", ""evened"", ""vendee"", ""reduit"", ""erudit"", ""when"", ""hewn"", ""allower"", ""reallow"", ""apostle"", ""pelotas"", ""aseptol""]
","[[""allower"", ""reallow""], [""apostle"", ""aseptol"", ""pelotas""], [""cardial"", ""radical""], [""erudit"", ""reduit""], [""evened"", ""vendee""], [""hewn"", ""when""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""radical\"", \""cardial\"", \""evened\"", \""vendee\"", \""reduit\"", \""erudit\"", \""when\"", \""hewn\"", \""allower\"", \""reallow\"", \""apostle\"", \""pelotas\"", \""aseptol\""]\n"",
    ""answer"": ""[[\""allower\"", \""reallow\""], [\""apostle\"", \""aseptol\"", \""pelotas\""], [\""cardial\"", \""radical\""], [\""erudit\"", \""reduit\""], [\""evened\"", \""vendee\""], [\""hewn\"", \""when\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 77,
        ""words"": [
            ""radical"",
            ""cardial"",
            ""evened"",
            ""vendee"",
            ""reduit"",
            ""erudit"",
            ""when"",
            ""hewn"",
            ""allower"",
            ""reallow"",
            ""apostle"",
            ""pelotas"",
            ""aseptol""
        ],
        ""solution"": [
            [
                ""allower"",
                ""reallow""
            ],
            [
                ""apostle"",
                ""aseptol"",
                ""pelotas""
            ],
            [
                ""cardial"",
                ""radical""
            ],
            [
                ""erudit"",
                ""reduit""
            ],
            [
                ""evened"",
                ""vendee""
            ],
            [
                ""hewn"",
                ""when""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
78,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""preversing"", ""preserving"", ""reservist"", ""reversist"", ""sative"", ""itaves"", ""stevia"", ""crinose"", ""sericon"", ""recoins"", ""unrebated"", ""eburnated"", ""underbeat"", ""reflowers"", ""flowerers"", ""sermonical"", ""normalcies"", ""cisted"", ""edicts""]
","[[""cisted"", ""edicts""], [""crinose"", ""recoins"", ""sericon""], [""eburnated"", ""underbeat"", ""unrebated""], [""flowerers"", ""reflowers""], [""itaves"", ""sative"", ""stevia""], [""normalcies"", ""sermonical""], [""preserving"", ""preversing""], [""reservist"", ""reversist""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""preversing\"", \""preserving\"", \""reservist\"", \""reversist\"", \""sative\"", \""itaves\"", \""stevia\"", \""crinose\"", \""sericon\"", \""recoins\"", \""unrebated\"", \""eburnated\"", \""underbeat\"", \""reflowers\"", \""flowerers\"", \""sermonical\"", \""normalcies\"", \""cisted\"", \""edicts\""]\n"",
    ""answer"": ""[[\""cisted\"", \""edicts\""], [\""crinose\"", \""recoins\"", \""sericon\""], [\""eburnated\"", \""underbeat\"", \""unrebated\""], [\""flowerers\"", \""reflowers\""], [\""itaves\"", \""sative\"", \""stevia\""], [\""normalcies\"", \""sermonical\""], [\""preserving\"", \""preversing\""], [\""reservist\"", \""reversist\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 78,
        ""words"": [
            ""preversing"",
            ""preserving"",
            ""reservist"",
            ""reversist"",
            ""sative"",
            ""itaves"",
            ""stevia"",
            ""crinose"",
            ""sericon"",
            ""recoins"",
            ""unrebated"",
            ""eburnated"",
            ""underbeat"",
            ""reflowers"",
            ""flowerers"",
            ""sermonical"",
            ""normalcies"",
            ""cisted"",
            ""edicts""
        ],
        ""solution"": [
            [
                ""cisted"",
                ""edicts""
            ],
            [
                ""crinose"",
                ""recoins"",
                ""sericon""
            ],
            [
                ""eburnated"",
                ""underbeat"",
                ""unrebated""
            ],
            [
                ""flowerers"",
                ""reflowers""
            ],
            [
                ""itaves"",
                ""sative"",
                ""stevia""
            ],
            [
                ""normalcies"",
                ""sermonical""
            ],
            [
                ""preserving"",
                ""preversing""
            ],
            [
                ""reservist"",
                ""reversist""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
79,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""crags"", ""scrag"", ""galli"", ""glali"", ""glial"", ""bourder"", ""bordure"", ""townside"", ""downiest"", ""enlace"", ""elance""]
","[[""bordure"", ""bourder""], [""crags"", ""scrag""], [""downiest"", ""townside""], [""elance"", ""enlace""], [""galli"", ""glali"", ""glial""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""crags\"", \""scrag\"", \""galli\"", \""glali\"", \""glial\"", \""bourder\"", \""bordure\"", \""townside\"", \""downiest\"", \""enlace\"", \""elance\""]\n"",
    ""answer"": ""[[\""bordure\"", \""bourder\""], [\""crags\"", \""scrag\""], [\""downiest\"", \""townside\""], [\""elance\"", \""enlace\""], [\""galli\"", \""glali\"", \""glial\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 79,
        ""words"": [
            ""crags"",
            ""scrag"",
            ""galli"",
            ""glali"",
            ""glial"",
            ""bourder"",
            ""bordure"",
            ""townside"",
            ""downiest"",
            ""enlace"",
            ""elance""
        ],
        ""solution"": [
            [
                ""bordure"",
                ""bourder""
            ],
            [
                ""crags"",
                ""scrag""
            ],
            [
                ""downiest"",
                ""townside""
            ],
            [
                ""elance"",
                ""enlace""
            ],
            [
                ""galli"",
                ""glali"",
                ""glial""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
80,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""snicher"", ""richens"", ""mathetic"", ""thematic"", ""leanish"", ""inhales"", ""miasmal"", ""lamaism"", ""sencion"", ""conines"", ""connies"", ""romancist"", ""romantics"", ""narcotism"", ""faired"", ""frieda"", ""unlighted"", ""undelight"", ""elong"", ""longe""]
","[[""conines"", ""connies"", ""sencion""], [""elong"", ""longe""], [""faired"", ""frieda""], [""inhales"", ""leanish""], [""lamaism"", ""miasmal""], [""mathetic"", ""thematic""], [""narcotism"", ""romancist"", ""romantics""], [""richens"", ""snicher""], [""undelight"", ""unlighted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""snicher\"", \""richens\"", \""mathetic\"", \""thematic\"", \""leanish\"", \""inhales\"", \""miasmal\"", \""lamaism\"", \""sencion\"", \""conines\"", \""connies\"", \""romancist\"", \""romantics\"", \""narcotism\"", \""faired\"", \""frieda\"", \""unlighted\"", \""undelight\"", \""elong\"", \""longe\""]\n"",
    ""answer"": ""[[\""conines\"", \""connies\"", \""sencion\""], [\""elong\"", \""longe\""], [\""faired\"", \""frieda\""], [\""inhales\"", \""leanish\""], [\""lamaism\"", \""miasmal\""], [\""mathetic\"", \""thematic\""], [\""narcotism\"", \""romancist\"", \""romantics\""], [\""richens\"", \""snicher\""], [\""undelight\"", \""unlighted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 80,
        ""words"": [
            ""snicher"",
            ""richens"",
            ""mathetic"",
            ""thematic"",
            ""leanish"",
            ""inhales"",
            ""miasmal"",
            ""lamaism"",
            ""sencion"",
            ""conines"",
            ""connies"",
            ""romancist"",
            ""romantics"",
            ""narcotism"",
            ""faired"",
            ""frieda"",
            ""unlighted"",
            ""undelight"",
            ""elong"",
            ""longe""
        ],
        ""solution"": [
            [
                ""conines"",
                ""connies"",
                ""sencion""
            ],
            [
                ""elong"",
                ""longe""
            ],
            [
                ""faired"",
                ""frieda""
            ],
            [
                ""inhales"",
                ""leanish""
            ],
            [
                ""lamaism"",
                ""miasmal""
            ],
            [
                ""mathetic"",
                ""thematic""
            ],
            [
                ""narcotism"",
                ""romancist"",
                ""romantics""
            ],
            [
                ""richens"",
                ""snicher""
            ],
            [
                ""undelight"",
                ""unlighted""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
81,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lute"", ""tule"", ""spirant"", ""spraint""]
","[[""lute"", ""tule""], [""spirant"", ""spraint""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lute\"", \""tule\"", \""spirant\"", \""spraint\""]\n"",
    ""answer"": ""[[\""lute\"", \""tule\""], [\""spirant\"", \""spraint\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 81,
        ""words"": [
            ""lute"",
            ""tule"",
            ""spirant"",
            ""spraint""
        ],
        ""solution"": [
            [
                ""lute"",
                ""tule""
            ],
            [
                ""spirant"",
                ""spraint""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
82,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""yardland"", ""landyard"", ""peorian"", ""apeiron"", ""darns"", ""nards"", ""maternities"", ""semitertian"", ""seicento"", ""cenosite""]
","[[""apeiron"", ""peorian""], [""cenosite"", ""seicento""], [""darns"", ""nards""], [""landyard"", ""yardland""], [""maternities"", ""semitertian""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""yardland\"", \""landyard\"", \""peorian\"", \""apeiron\"", \""darns\"", \""nards\"", \""maternities\"", \""semitertian\"", \""seicento\"", \""cenosite\""]\n"",
    ""answer"": ""[[\""apeiron\"", \""peorian\""], [\""cenosite\"", \""seicento\""], [\""darns\"", \""nards\""], [\""landyard\"", \""yardland\""], [\""maternities\"", \""semitertian\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 82,
        ""words"": [
            ""yardland"",
            ""landyard"",
            ""peorian"",
            ""apeiron"",
            ""darns"",
            ""nards"",
            ""maternities"",
            ""semitertian"",
            ""seicento"",
            ""cenosite""
        ],
        ""solution"": [
            [
                ""apeiron"",
                ""peorian""
            ],
            [
                ""cenosite"",
                ""seicento""
            ],
            [
                ""darns"",
                ""nards""
            ],
            [
                ""landyard"",
                ""yardland""
            ],
            [
                ""maternities"",
                ""semitertian""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
83,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unsober"", ""unrobes"", ""bournes"", ""pitsaw"", ""sawpit"", ""aristotle"", ""literatos"", ""striolate"", ""thaness"", ""hastens"", ""snathes"", ""arid"", ""raid"", ""dari"", ""dangering"", ""gandering"", ""gardening"", ""deranging""]
","[[""arid"", ""dari"", ""raid""], [""aristotle"", ""literatos"", ""striolate""], [""bournes"", ""unrobes"", ""unsober""], [""dangering"", ""deranging"", ""gandering"", ""gardening""], [""hastens"", ""snathes"", ""thaness""], [""pitsaw"", ""sawpit""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unsober\"", \""unrobes\"", \""bournes\"", \""pitsaw\"", \""sawpit\"", \""aristotle\"", \""literatos\"", \""striolate\"", \""thaness\"", \""hastens\"", \""snathes\"", \""arid\"", \""raid\"", \""dari\"", \""dangering\"", \""gandering\"", \""gardening\"", \""deranging\""]\n"",
    ""answer"": ""[[\""arid\"", \""dari\"", \""raid\""], [\""aristotle\"", \""literatos\"", \""striolate\""], [\""bournes\"", \""unrobes\"", \""unsober\""], [\""dangering\"", \""deranging\"", \""gandering\"", \""gardening\""], [\""hastens\"", \""snathes\"", \""thaness\""], [\""pitsaw\"", \""sawpit\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 83,
        ""words"": [
            ""unsober"",
            ""unrobes"",
            ""bournes"",
            ""pitsaw"",
            ""sawpit"",
            ""aristotle"",
            ""literatos"",
            ""striolate"",
            ""thaness"",
            ""hastens"",
            ""snathes"",
            ""arid"",
            ""raid"",
            ""dari"",
            ""dangering"",
            ""gandering"",
            ""gardening"",
            ""deranging""
        ],
        ""solution"": [
            [
                ""arid"",
                ""dari"",
                ""raid""
            ],
            [
                ""aristotle"",
                ""literatos"",
                ""striolate""
            ],
            [
                ""bournes"",
                ""unrobes"",
                ""unsober""
            ],
            [
                ""dangering"",
                ""deranging"",
                ""gandering"",
                ""gardening""
            ],
            [
                ""hastens"",
                ""snathes"",
                ""thaness""
            ],
            [
                ""pitsaw"",
                ""sawpit""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
84,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""peacoat"", ""opacate"", ""congaed"", ""decagon"", ""acephalan"", ""acalephan"", ""patte"", ""tapet"", ""longimanous"", ""longanimous"", ""haars"", ""raash"", ""haras"", ""asarh"", ""overturn"", ""turnover"", ""geomantic"", ""atmogenic"", ""fole"", ""floe"", ""fonder"", ""fronde""]
","[[""acalephan"", ""acephalan""], [""asarh"", ""haars"", ""haras"", ""raash""], [""atmogenic"", ""geomantic""], [""congaed"", ""decagon""], [""floe"", ""fole""], [""fonder"", ""fronde""], [""longanimous"", ""longimanous""], [""opacate"", ""peacoat""], [""overturn"", ""turnover""], [""patte"", ""tapet""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""peacoat\"", \""opacate\"", \""congaed\"", \""decagon\"", \""acephalan\"", \""acalephan\"", \""patte\"", \""tapet\"", \""longimanous\"", \""longanimous\"", \""haars\"", \""raash\"", \""haras\"", \""asarh\"", \""overturn\"", \""turnover\"", \""geomantic\"", \""atmogenic\"", \""fole\"", \""floe\"", \""fonder\"", \""fronde\""]\n"",
    ""answer"": ""[[\""acalephan\"", \""acephalan\""], [\""asarh\"", \""haars\"", \""haras\"", \""raash\""], [\""atmogenic\"", \""geomantic\""], [\""congaed\"", \""decagon\""], [\""floe\"", \""fole\""], [\""fonder\"", \""fronde\""], [\""longanimous\"", \""longimanous\""], [\""opacate\"", \""peacoat\""], [\""overturn\"", \""turnover\""], [\""patte\"", \""tapet\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 84,
        ""words"": [
            ""peacoat"",
            ""opacate"",
            ""congaed"",
            ""decagon"",
            ""acephalan"",
            ""acalephan"",
            ""patte"",
            ""tapet"",
            ""longimanous"",
            ""longanimous"",
            ""haars"",
            ""raash"",
            ""haras"",
            ""asarh"",
            ""overturn"",
            ""turnover"",
            ""geomantic"",
            ""atmogenic"",
            ""fole"",
            ""floe"",
            ""fonder"",
            ""fronde""
        ],
        ""solution"": [
            [
                ""acalephan"",
                ""acephalan""
            ],
            [
                ""asarh"",
                ""haars"",
                ""haras"",
                ""raash""
            ],
            [
                ""atmogenic"",
                ""geomantic""
            ],
            [
                ""congaed"",
                ""decagon""
            ],
            [
                ""floe"",
                ""fole""
            ],
            [
                ""fonder"",
                ""fronde""
            ],
            [
                ""longanimous"",
                ""longimanous""
            ],
            [
                ""opacate"",
                ""peacoat""
            ],
            [
                ""overturn"",
                ""turnover""
            ],
            [
                ""patte"",
                ""tapet""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
85,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""drib"", ""brid"", ""bird"", ""debe"", ""bede"", ""bushfires"", ""furbishes"", ""drapable"", ""parabled"", ""servals"", ""slavers"", ""salvers""]
","[[""bede"", ""debe""], [""bird"", ""brid"", ""drib""], [""bushfires"", ""furbishes""], [""drapable"", ""parabled""], [""salvers"", ""servals"", ""slavers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""drib\"", \""brid\"", \""bird\"", \""debe\"", \""bede\"", \""bushfires\"", \""furbishes\"", \""drapable\"", \""parabled\"", \""servals\"", \""slavers\"", \""salvers\""]\n"",
    ""answer"": ""[[\""bede\"", \""debe\""], [\""bird\"", \""brid\"", \""drib\""], [\""bushfires\"", \""furbishes\""], [\""drapable\"", \""parabled\""], [\""salvers\"", \""servals\"", \""slavers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 85,
        ""words"": [
            ""drib"",
            ""brid"",
            ""bird"",
            ""debe"",
            ""bede"",
            ""bushfires"",
            ""furbishes"",
            ""drapable"",
            ""parabled"",
            ""servals"",
            ""slavers"",
            ""salvers""
        ],
        ""solution"": [
            [
                ""bede"",
                ""debe""
            ],
            [
                ""bird"",
                ""brid"",
                ""drib""
            ],
            [
                ""bushfires"",
                ""furbishes""
            ],
            [
                ""drapable"",
                ""parabled""
            ],
            [
                ""salvers"",
                ""servals"",
                ""slavers""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
86,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""coulisse"", ""leucosis"", ""ossicule"", ""phasianid"", ""aphidians"", ""neglecter"", ""reneglect"", ""marled"", ""medlar"", ""dermal""]
","[[""aphidians"", ""phasianid""], [""coulisse"", ""leucosis"", ""ossicule""], [""dermal"", ""marled"", ""medlar""], [""neglecter"", ""reneglect""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""coulisse\"", \""leucosis\"", \""ossicule\"", \""phasianid\"", \""aphidians\"", \""neglecter\"", \""reneglect\"", \""marled\"", \""medlar\"", \""dermal\""]\n"",
    ""answer"": ""[[\""aphidians\"", \""phasianid\""], [\""coulisse\"", \""leucosis\"", \""ossicule\""], [\""dermal\"", \""marled\"", \""medlar\""], [\""neglecter\"", \""reneglect\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 86,
        ""words"": [
            ""coulisse"",
            ""leucosis"",
            ""ossicule"",
            ""phasianid"",
            ""aphidians"",
            ""neglecter"",
            ""reneglect"",
            ""marled"",
            ""medlar"",
            ""dermal""
        ],
        ""solution"": [
            [
                ""aphidians"",
                ""phasianid""
            ],
            [
                ""coulisse"",
                ""leucosis"",
                ""ossicule""
            ],
            [
                ""dermal"",
                ""marled"",
                ""medlar""
            ],
            [
                ""neglecter"",
                ""reneglect""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
87,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""binder"", ""rebind"", ""brined"", ""inbred"", ""saxonize"", ""oxazines"", ""snop"", ""pons"", ""wham"", ""hawm"", ""misacts"", ""mastics"", ""reparel"", ""pearler""]
","[[""binder"", ""brined"", ""inbred"", ""rebind""], [""hawm"", ""wham""], [""mastics"", ""misacts""], [""oxazines"", ""saxonize""], [""pearler"", ""reparel""], [""pons"", ""snop""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""binder\"", \""rebind\"", \""brined\"", \""inbred\"", \""saxonize\"", \""oxazines\"", \""snop\"", \""pons\"", \""wham\"", \""hawm\"", \""misacts\"", \""mastics\"", \""reparel\"", \""pearler\""]\n"",
    ""answer"": ""[[\""binder\"", \""brined\"", \""inbred\"", \""rebind\""], [\""hawm\"", \""wham\""], [\""mastics\"", \""misacts\""], [\""oxazines\"", \""saxonize\""], [\""pearler\"", \""reparel\""], [\""pons\"", \""snop\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 87,
        ""words"": [
            ""binder"",
            ""rebind"",
            ""brined"",
            ""inbred"",
            ""saxonize"",
            ""oxazines"",
            ""snop"",
            ""pons"",
            ""wham"",
            ""hawm"",
            ""misacts"",
            ""mastics"",
            ""reparel"",
            ""pearler""
        ],
        ""solution"": [
            [
                ""binder"",
                ""brined"",
                ""inbred"",
                ""rebind""
            ],
            [
                ""hawm"",
                ""wham""
            ],
            [
                ""mastics"",
                ""misacts""
            ],
            [
                ""oxazines"",
                ""saxonize""
            ],
            [
                ""pearler"",
                ""reparel""
            ],
            [
                ""pons"",
                ""snop""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
88,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cerris"", ""criers"", ""ricers"", ""boarders"", ""reboards"", ""viatores"", ""travoise"", ""votaries"", ""liberally"", ""libellary"", ""ovensman"", ""snemovna"", ""intertwin"", ""inwritten"", ""melonist"", ""telonism"", ""xeronate"", ""exornate"", ""contadino"", ""anticodon"", ""cowardy"", ""cowyard""]
","[[""anticodon"", ""contadino""], [""boarders"", ""reboards""], [""cerris"", ""criers"", ""ricers""], [""cowardy"", ""cowyard""], [""exornate"", ""xeronate""], [""intertwin"", ""inwritten""], [""libellary"", ""liberally""], [""melonist"", ""telonism""], [""ovensman"", ""snemovna""], [""travoise"", ""viatores"", ""votaries""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cerris\"", \""criers\"", \""ricers\"", \""boarders\"", \""reboards\"", \""viatores\"", \""travoise\"", \""votaries\"", \""liberally\"", \""libellary\"", \""ovensman\"", \""snemovna\"", \""intertwin\"", \""inwritten\"", \""melonist\"", \""telonism\"", \""xeronate\"", \""exornate\"", \""contadino\"", \""anticodon\"", \""cowardy\"", \""cowyard\""]\n"",
    ""answer"": ""[[\""anticodon\"", \""contadino\""], [\""boarders\"", \""reboards\""], [\""cerris\"", \""criers\"", \""ricers\""], [\""cowardy\"", \""cowyard\""], [\""exornate\"", \""xeronate\""], [\""intertwin\"", \""inwritten\""], [\""libellary\"", \""liberally\""], [\""melonist\"", \""telonism\""], [\""ovensman\"", \""snemovna\""], [\""travoise\"", \""viatores\"", \""votaries\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 88,
        ""words"": [
            ""cerris"",
            ""criers"",
            ""ricers"",
            ""boarders"",
            ""reboards"",
            ""viatores"",
            ""travoise"",
            ""votaries"",
            ""liberally"",
            ""libellary"",
            ""ovensman"",
            ""snemovna"",
            ""intertwin"",
            ""inwritten"",
            ""melonist"",
            ""telonism"",
            ""xeronate"",
            ""exornate"",
            ""contadino"",
            ""anticodon"",
            ""cowardy"",
            ""cowyard""
        ],
        ""solution"": [
            [
                ""anticodon"",
                ""contadino""
            ],
            [
                ""boarders"",
                ""reboards""
            ],
            [
                ""cerris"",
                ""criers"",
                ""ricers""
            ],
            [
                ""cowardy"",
                ""cowyard""
            ],
            [
                ""exornate"",
                ""xeronate""
            ],
            [
                ""intertwin"",
                ""inwritten""
            ],
            [
                ""libellary"",
                ""liberally""
            ],
            [
                ""melonist"",
                ""telonism""
            ],
            [
                ""ovensman"",
                ""snemovna""
            ],
            [
                ""travoise"",
                ""viatores"",
                ""votaries""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
89,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""calorist"", ""coralist"", ""unsoiling"", ""insouling"", ""sticklers"", ""strickles"", ""trickless""]
","[[""calorist"", ""coralist""], [""insouling"", ""unsoiling""], [""sticklers"", ""strickles"", ""trickless""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""calorist\"", \""coralist\"", \""unsoiling\"", \""insouling\"", \""sticklers\"", \""strickles\"", \""trickless\""]\n"",
    ""answer"": ""[[\""calorist\"", \""coralist\""], [\""insouling\"", \""unsoiling\""], [\""sticklers\"", \""strickles\"", \""trickless\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 89,
        ""words"": [
            ""calorist"",
            ""coralist"",
            ""unsoiling"",
            ""insouling"",
            ""sticklers"",
            ""strickles"",
            ""trickless""
        ],
        ""solution"": [
            [
                ""calorist"",
                ""coralist""
            ],
            [
                ""insouling"",
                ""unsoiling""
            ],
            [
                ""sticklers"",
                ""strickles"",
                ""trickless""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
90,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""caesuric"", ""curacies"", ""sailable"", ""isabella"", ""touristical"", ""staurolitic"", ""cooniest"", ""coonties"", ""contoise"", ""unpursuing"", ""unusurping"", ""somniate"", ""masonite"", ""outerness"", ""outreness"", ""salited"", ""details"", ""dilates"", ""distale"", ""praefects"", ""perfectas"", ""camoodie"", ""comoedia""]
","[[""caesuric"", ""curacies""], [""camoodie"", ""comoedia""], [""contoise"", ""cooniest"", ""coonties""], [""details"", ""dilates"", ""distale"", ""salited""], [""isabella"", ""sailable""], [""masonite"", ""somniate""], [""outerness"", ""outreness""], [""perfectas"", ""praefects""], [""staurolitic"", ""touristical""], [""unpursuing"", ""unusurping""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""caesuric\"", \""curacies\"", \""sailable\"", \""isabella\"", \""touristical\"", \""staurolitic\"", \""cooniest\"", \""coonties\"", \""contoise\"", \""unpursuing\"", \""unusurping\"", \""somniate\"", \""masonite\"", \""outerness\"", \""outreness\"", \""salited\"", \""details\"", \""dilates\"", \""distale\"", \""praefects\"", \""perfectas\"", \""camoodie\"", \""comoedia\""]\n"",
    ""answer"": ""[[\""caesuric\"", \""curacies\""], [\""camoodie\"", \""comoedia\""], [\""contoise\"", \""cooniest\"", \""coonties\""], [\""details\"", \""dilates\"", \""distale\"", \""salited\""], [\""isabella\"", \""sailable\""], [\""masonite\"", \""somniate\""], [\""outerness\"", \""outreness\""], [\""perfectas\"", \""praefects\""], [\""staurolitic\"", \""touristical\""], [\""unpursuing\"", \""unusurping\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 90,
        ""words"": [
            ""caesuric"",
            ""curacies"",
            ""sailable"",
            ""isabella"",
            ""touristical"",
            ""staurolitic"",
            ""cooniest"",
            ""coonties"",
            ""contoise"",
            ""unpursuing"",
            ""unusurping"",
            ""somniate"",
            ""masonite"",
            ""outerness"",
            ""outreness"",
            ""salited"",
            ""details"",
            ""dilates"",
            ""distale"",
            ""praefects"",
            ""perfectas"",
            ""camoodie"",
            ""comoedia""
        ],
        ""solution"": [
            [
                ""caesuric"",
                ""curacies""
            ],
            [
                ""camoodie"",
                ""comoedia""
            ],
            [
                ""contoise"",
                ""cooniest"",
                ""coonties""
            ],
            [
                ""details"",
                ""dilates"",
                ""distale"",
                ""salited""
            ],
            [
                ""isabella"",
                ""sailable""
            ],
            [
                ""masonite"",
                ""somniate""
            ],
            [
                ""outerness"",
                ""outreness""
            ],
            [
                ""perfectas"",
                ""praefects""
            ],
            [
                ""staurolitic"",
                ""touristical""
            ],
            [
                ""unpursuing"",
                ""unusurping""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
91,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dichromat"", ""chromatid"", ""lanose"", ""anoles""]
","[[""anoles"", ""lanose""], [""chromatid"", ""dichromat""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dichromat\"", \""chromatid\"", \""lanose\"", \""anoles\""]\n"",
    ""answer"": ""[[\""anoles\"", \""lanose\""], [\""chromatid\"", \""dichromat\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 91,
        ""words"": [
            ""dichromat"",
            ""chromatid"",
            ""lanose"",
            ""anoles""
        ],
        ""solution"": [
            [
                ""anoles"",
                ""lanose""
            ],
            [
                ""chromatid"",
                ""dichromat""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
92,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hydronephrosis"", ""nephrohydrosis"", ""boarts"", ""tabors"", ""aborts"", ""bonaci"", ""bianco"", ""alnico"", ""oilcan"", ""nonskier"", ""einkorns"", ""cliftonia"", ""fictional""]
","[[""aborts"", ""boarts"", ""tabors""], [""alnico"", ""oilcan""], [""bianco"", ""bonaci""], [""cliftonia"", ""fictional""], [""einkorns"", ""nonskier""], [""hydronephrosis"", ""nephrohydrosis""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hydronephrosis\"", \""nephrohydrosis\"", \""boarts\"", \""tabors\"", \""aborts\"", \""bonaci\"", \""bianco\"", \""alnico\"", \""oilcan\"", \""nonskier\"", \""einkorns\"", \""cliftonia\"", \""fictional\""]\n"",
    ""answer"": ""[[\""aborts\"", \""boarts\"", \""tabors\""], [\""alnico\"", \""oilcan\""], [\""bianco\"", \""bonaci\""], [\""cliftonia\"", \""fictional\""], [\""einkorns\"", \""nonskier\""], [\""hydronephrosis\"", \""nephrohydrosis\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 92,
        ""words"": [
            ""hydronephrosis"",
            ""nephrohydrosis"",
            ""boarts"",
            ""tabors"",
            ""aborts"",
            ""bonaci"",
            ""bianco"",
            ""alnico"",
            ""oilcan"",
            ""nonskier"",
            ""einkorns"",
            ""cliftonia"",
            ""fictional""
        ],
        ""solution"": [
            [
                ""aborts"",
                ""boarts"",
                ""tabors""
            ],
            [
                ""alnico"",
                ""oilcan""
            ],
            [
                ""bianco"",
                ""bonaci""
            ],
            [
                ""cliftonia"",
                ""fictional""
            ],
            [
                ""einkorns"",
                ""nonskier""
            ],
            [
                ""hydronephrosis"",
                ""nephrohydrosis""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
93,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cansful"", ""canfuls"", ""retracts"", ""scratter"", ""teleradiophone"", ""radiotelephone"", ""ostiolar"", ""isolator"", ""pounces"", ""conspue""]
","[[""canfuls"", ""cansful""], [""conspue"", ""pounces""], [""isolator"", ""ostiolar""], [""radiotelephone"", ""teleradiophone""], [""retracts"", ""scratter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cansful\"", \""canfuls\"", \""retracts\"", \""scratter\"", \""teleradiophone\"", \""radiotelephone\"", \""ostiolar\"", \""isolator\"", \""pounces\"", \""conspue\""]\n"",
    ""answer"": ""[[\""canfuls\"", \""cansful\""], [\""conspue\"", \""pounces\""], [\""isolator\"", \""ostiolar\""], [\""radiotelephone\"", \""teleradiophone\""], [\""retracts\"", \""scratter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 93,
        ""words"": [
            ""cansful"",
            ""canfuls"",
            ""retracts"",
            ""scratter"",
            ""teleradiophone"",
            ""radiotelephone"",
            ""ostiolar"",
            ""isolator"",
            ""pounces"",
            ""conspue""
        ],
        ""solution"": [
            [
                ""canfuls"",
                ""cansful""
            ],
            [
                ""conspue"",
                ""pounces""
            ],
            [
                ""isolator"",
                ""ostiolar""
            ],
            [
                ""radiotelephone"",
                ""teleradiophone""
            ],
            [
                ""retracts"",
                ""scratter""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
94,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""inferable"", ""refinable"", ""lindera"", ""ireland""]
","[[""inferable"", ""refinable""], [""ireland"", ""lindera""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""inferable\"", \""refinable\"", \""lindera\"", \""ireland\""]\n"",
    ""answer"": ""[[\""inferable\"", \""refinable\""], [\""ireland\"", \""lindera\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 94,
        ""words"": [
            ""inferable"",
            ""refinable"",
            ""lindera"",
            ""ireland""
        ],
        ""solution"": [
            [
                ""inferable"",
                ""refinable""
            ],
            [
                ""ireland"",
                ""lindera""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
95,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""upwork"", ""workup"", ""laron"", ""loran""]
","[[""laron"", ""loran""], [""upwork"", ""workup""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""upwork\"", \""workup\"", \""laron\"", \""loran\""]\n"",
    ""answer"": ""[[\""laron\"", \""loran\""], [\""upwork\"", \""workup\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 95,
        ""words"": [
            ""upwork"",
            ""workup"",
            ""laron"",
            ""loran""
        ],
        ""solution"": [
            [
                ""laron"",
                ""loran""
            ],
            [
                ""upwork"",
                ""workup""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
96,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dunces"", ""secund"", ""signals"", ""glassin"", ""desertrice"", ""discreeter"", ""attainor"", ""nattoria"", ""fucoses"", ""focuses""]
","[[""attainor"", ""nattoria""], [""desertrice"", ""discreeter""], [""dunces"", ""secund""], [""focuses"", ""fucoses""], [""glassin"", ""signals""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dunces\"", \""secund\"", \""signals\"", \""glassin\"", \""desertrice\"", \""discreeter\"", \""attainor\"", \""nattoria\"", \""fucoses\"", \""focuses\""]\n"",
    ""answer"": ""[[\""attainor\"", \""nattoria\""], [\""desertrice\"", \""discreeter\""], [\""dunces\"", \""secund\""], [\""focuses\"", \""fucoses\""], [\""glassin\"", \""signals\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 96,
        ""words"": [
            ""dunces"",
            ""secund"",
            ""signals"",
            ""glassin"",
            ""desertrice"",
            ""discreeter"",
            ""attainor"",
            ""nattoria"",
            ""fucoses"",
            ""focuses""
        ],
        ""solution"": [
            [
                ""attainor"",
                ""nattoria""
            ],
            [
                ""desertrice"",
                ""discreeter""
            ],
            [
                ""dunces"",
                ""secund""
            ],
            [
                ""focuses"",
                ""fucoses""
            ],
            [
                ""glassin"",
                ""signals""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
97,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cynosural"", ""consulary"", ""maral"", ""malar"", ""alarm"", ""windless"", ""wildness"", ""swindles"", ""urocele"", ""urceole"", ""tawsing"", ""wasting"", ""mucoids"", ""muscoid"", ""drafters"", ""redrafts"", ""lense"", ""lenes"", ""cantonal"", ""connatal"", ""curvidentate"", ""undetractive""]
","[[""alarm"", ""malar"", ""maral""], [""cantonal"", ""connatal""], [""consulary"", ""cynosural""], [""curvidentate"", ""undetractive""], [""drafters"", ""redrafts""], [""lenes"", ""lense""], [""mucoids"", ""muscoid""], [""swindles"", ""wildness"", ""windless""], [""tawsing"", ""wasting""], [""urceole"", ""urocele""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cynosural\"", \""consulary\"", \""maral\"", \""malar\"", \""alarm\"", \""windless\"", \""wildness\"", \""swindles\"", \""urocele\"", \""urceole\"", \""tawsing\"", \""wasting\"", \""mucoids\"", \""muscoid\"", \""drafters\"", \""redrafts\"", \""lense\"", \""lenes\"", \""cantonal\"", \""connatal\"", \""curvidentate\"", \""undetractive\""]\n"",
    ""answer"": ""[[\""alarm\"", \""malar\"", \""maral\""], [\""cantonal\"", \""connatal\""], [\""consulary\"", \""cynosural\""], [\""curvidentate\"", \""undetractive\""], [\""drafters\"", \""redrafts\""], [\""lenes\"", \""lense\""], [\""mucoids\"", \""muscoid\""], [\""swindles\"", \""wildness\"", \""windless\""], [\""tawsing\"", \""wasting\""], [\""urceole\"", \""urocele\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 97,
        ""words"": [
            ""cynosural"",
            ""consulary"",
            ""maral"",
            ""malar"",
            ""alarm"",
            ""windless"",
            ""wildness"",
            ""swindles"",
            ""urocele"",
            ""urceole"",
            ""tawsing"",
            ""wasting"",
            ""mucoids"",
            ""muscoid"",
            ""drafters"",
            ""redrafts"",
            ""lense"",
            ""lenes"",
            ""cantonal"",
            ""connatal"",
            ""curvidentate"",
            ""undetractive""
        ],
        ""solution"": [
            [
                ""alarm"",
                ""malar"",
                ""maral""
            ],
            [
                ""cantonal"",
                ""connatal""
            ],
            [
                ""consulary"",
                ""cynosural""
            ],
            [
                ""curvidentate"",
                ""undetractive""
            ],
            [
                ""drafters"",
                ""redrafts""
            ],
            [
                ""lenes"",
                ""lense""
            ],
            [
                ""mucoids"",
                ""muscoid""
            ],
            [
                ""swindles"",
                ""wildness"",
                ""windless""
            ],
            [
                ""tawsing"",
                ""wasting""
            ],
            [
                ""urceole"",
                ""urocele""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
98,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""employers"", ""reemploys"", ""ciselure"", ""ciseleur"", ""crusilee"", ""poppel"", ""popple"", ""sepia"", ""paise"", ""ropeman"", ""manrope"", ""proceeds"", ""procedes"", ""entrep"", ""repent"", ""terpen"", ""perten"", ""toodle"", ""looted"", ""tooled"", ""evanid"", ""invade"", ""viande"", ""dread"", ""dared""]
","[[""ciseleur"", ""ciselure"", ""crusilee""], [""dared"", ""dread""], [""employers"", ""reemploys""], [""entrep"", ""perten"", ""repent"", ""terpen""], [""evanid"", ""invade"", ""viande""], [""looted"", ""toodle"", ""tooled""], [""manrope"", ""ropeman""], [""paise"", ""sepia""], [""poppel"", ""popple""], [""procedes"", ""proceeds""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""employers\"", \""reemploys\"", \""ciselure\"", \""ciseleur\"", \""crusilee\"", \""poppel\"", \""popple\"", \""sepia\"", \""paise\"", \""ropeman\"", \""manrope\"", \""proceeds\"", \""procedes\"", \""entrep\"", \""repent\"", \""terpen\"", \""perten\"", \""toodle\"", \""looted\"", \""tooled\"", \""evanid\"", \""invade\"", \""viande\"", \""dread\"", \""dared\""]\n"",
    ""answer"": ""[[\""ciseleur\"", \""ciselure\"", \""crusilee\""], [\""dared\"", \""dread\""], [\""employers\"", \""reemploys\""], [\""entrep\"", \""perten\"", \""repent\"", \""terpen\""], [\""evanid\"", \""invade\"", \""viande\""], [\""looted\"", \""toodle\"", \""tooled\""], [\""manrope\"", \""ropeman\""], [\""paise\"", \""sepia\""], [\""poppel\"", \""popple\""], [\""procedes\"", \""proceeds\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 98,
        ""words"": [
            ""employers"",
            ""reemploys"",
            ""ciselure"",
            ""ciseleur"",
            ""crusilee"",
            ""poppel"",
            ""popple"",
            ""sepia"",
            ""paise"",
            ""ropeman"",
            ""manrope"",
            ""proceeds"",
            ""procedes"",
            ""entrep"",
            ""repent"",
            ""terpen"",
            ""perten"",
            ""toodle"",
            ""looted"",
            ""tooled"",
            ""evanid"",
            ""invade"",
            ""viande"",
            ""dread"",
            ""dared""
        ],
        ""solution"": [
            [
                ""ciseleur"",
                ""ciselure"",
                ""crusilee""
            ],
            [
                ""dared"",
                ""dread""
            ],
            [
                ""employers"",
                ""reemploys""
            ],
            [
                ""entrep"",
                ""perten"",
                ""repent"",
                ""terpen""
            ],
            [
                ""evanid"",
                ""invade"",
                ""viande""
            ],
            [
                ""looted"",
                ""toodle"",
                ""tooled""
            ],
            [
                ""manrope"",
                ""ropeman""
            ],
            [
                ""paise"",
                ""sepia""
            ],
            [
                ""poppel"",
                ""popple""
            ],
            [
                ""procedes"",
                ""proceeds""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
99,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""diatropism"", ""prismatoid"", ""phytometric"", ""thermotypic"", ""snigger"", ""serging"", ""gingers"", ""niggers"", ""anopsy"", ""yapons"", ""neoneds"", ""donnees"", ""compte"", ""coempt"", ""acquist"", ""acquits""]
","[[""acquist"", ""acquits""], [""anopsy"", ""yapons""], [""coempt"", ""compte""], [""diatropism"", ""prismatoid""], [""donnees"", ""neoneds""], [""gingers"", ""niggers"", ""serging"", ""snigger""], [""phytometric"", ""thermotypic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""diatropism\"", \""prismatoid\"", \""phytometric\"", \""thermotypic\"", \""snigger\"", \""serging\"", \""gingers\"", \""niggers\"", \""anopsy\"", \""yapons\"", \""neoneds\"", \""donnees\"", \""compte\"", \""coempt\"", \""acquist\"", \""acquits\""]\n"",
    ""answer"": ""[[\""acquist\"", \""acquits\""], [\""anopsy\"", \""yapons\""], [\""coempt\"", \""compte\""], [\""diatropism\"", \""prismatoid\""], [\""donnees\"", \""neoneds\""], [\""gingers\"", \""niggers\"", \""serging\"", \""snigger\""], [\""phytometric\"", \""thermotypic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 99,
        ""words"": [
            ""diatropism"",
            ""prismatoid"",
            ""phytometric"",
            ""thermotypic"",
            ""snigger"",
            ""serging"",
            ""gingers"",
            ""niggers"",
            ""anopsy"",
            ""yapons"",
            ""neoneds"",
            ""donnees"",
            ""compte"",
            ""coempt"",
            ""acquist"",
            ""acquits""
        ],
        ""solution"": [
            [
                ""acquist"",
                ""acquits""
            ],
            [
                ""anopsy"",
                ""yapons""
            ],
            [
                ""coempt"",
                ""compte""
            ],
            [
                ""diatropism"",
                ""prismatoid""
            ],
            [
                ""donnees"",
                ""neoneds""
            ],
            [
                ""gingers"",
                ""niggers"",
                ""serging"",
                ""snigger""
            ],
            [
                ""phytometric"",
                ""thermotypic""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
100,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""barycenter"", ""barycentre"", ""mustards"", ""durmasts"", ""altruists"", ""ultraists"", ""wegotism"", ""twigsome"", ""embain"", ""bimane"", ""benami"", ""twist"", ""twits"", ""nilgai"", ""ailing"", ""corindon"", ""nodicorn""]
","[[""ailing"", ""nilgai""], [""altruists"", ""ultraists""], [""barycenter"", ""barycentre""], [""benami"", ""bimane"", ""embain""], [""corindon"", ""nodicorn""], [""durmasts"", ""mustards""], [""twigsome"", ""wegotism""], [""twist"", ""twits""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""barycenter\"", \""barycentre\"", \""mustards\"", \""durmasts\"", \""altruists\"", \""ultraists\"", \""wegotism\"", \""twigsome\"", \""embain\"", \""bimane\"", \""benami\"", \""twist\"", \""twits\"", \""nilgai\"", \""ailing\"", \""corindon\"", \""nodicorn\""]\n"",
    ""answer"": ""[[\""ailing\"", \""nilgai\""], [\""altruists\"", \""ultraists\""], [\""barycenter\"", \""barycentre\""], [\""benami\"", \""bimane\"", \""embain\""], [\""corindon\"", \""nodicorn\""], [\""durmasts\"", \""mustards\""], [\""twigsome\"", \""wegotism\""], [\""twist\"", \""twits\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 100,
        ""words"": [
            ""barycenter"",
            ""barycentre"",
            ""mustards"",
            ""durmasts"",
            ""altruists"",
            ""ultraists"",
            ""wegotism"",
            ""twigsome"",
            ""embain"",
            ""bimane"",
            ""benami"",
            ""twist"",
            ""twits"",
            ""nilgai"",
            ""ailing"",
            ""corindon"",
            ""nodicorn""
        ],
        ""solution"": [
            [
                ""ailing"",
                ""nilgai""
            ],
            [
                ""altruists"",
                ""ultraists""
            ],
            [
                ""barycenter"",
                ""barycentre""
            ],
            [
                ""benami"",
                ""bimane"",
                ""embain""
            ],
            [
                ""corindon"",
                ""nodicorn""
            ],
            [
                ""durmasts"",
                ""mustards""
            ],
            [
                ""twigsome"",
                ""wegotism""
            ],
            [
                ""twist"",
                ""twits""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
101,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""demurrers"", ""murderers"", ""unflame"", ""flueman"", ""prospice"", ""croppies"", ""pheon"", ""phone"", ""kome"", ""moke"", ""ragtag"", ""tagrag"", ""picloram"", ""proclaim"", ""dawing"", ""wading"", ""uppers"", ""supper""]
","[[""croppies"", ""prospice""], [""dawing"", ""wading""], [""demurrers"", ""murderers""], [""flueman"", ""unflame""], [""kome"", ""moke""], [""pheon"", ""phone""], [""picloram"", ""proclaim""], [""ragtag"", ""tagrag""], [""supper"", ""uppers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""demurrers\"", \""murderers\"", \""unflame\"", \""flueman\"", \""prospice\"", \""croppies\"", \""pheon\"", \""phone\"", \""kome\"", \""moke\"", \""ragtag\"", \""tagrag\"", \""picloram\"", \""proclaim\"", \""dawing\"", \""wading\"", \""uppers\"", \""supper\""]\n"",
    ""answer"": ""[[\""croppies\"", \""prospice\""], [\""dawing\"", \""wading\""], [\""demurrers\"", \""murderers\""], [\""flueman\"", \""unflame\""], [\""kome\"", \""moke\""], [\""pheon\"", \""phone\""], [\""picloram\"", \""proclaim\""], [\""ragtag\"", \""tagrag\""], [\""supper\"", \""uppers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 101,
        ""words"": [
            ""demurrers"",
            ""murderers"",
            ""unflame"",
            ""flueman"",
            ""prospice"",
            ""croppies"",
            ""pheon"",
            ""phone"",
            ""kome"",
            ""moke"",
            ""ragtag"",
            ""tagrag"",
            ""picloram"",
            ""proclaim"",
            ""dawing"",
            ""wading"",
            ""uppers"",
            ""supper""
        ],
        ""solution"": [
            [
                ""croppies"",
                ""prospice""
            ],
            [
                ""dawing"",
                ""wading""
            ],
            [
                ""demurrers"",
                ""murderers""
            ],
            [
                ""flueman"",
                ""unflame""
            ],
            [
                ""kome"",
                ""moke""
            ],
            [
                ""pheon"",
                ""phone""
            ],
            [
                ""picloram"",
                ""proclaim""
            ],
            [
                ""ragtag"",
                ""tagrag""
            ],
            [
                ""supper"",
                ""uppers""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
102,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""griots"", ""trigos"", ""breakages"", ""brakeages"", ""origenist"", ""sortieing"", ""horstes"", ""resshot"", ""unspectrelike"", ""unspecterlike"", ""tectona"", ""oncetta"", ""reaped"", ""pardee"", ""relimit"", ""miltier"", ""limiter"", ""roisterer"", ""terrorise""]
","[[""brakeages"", ""breakages""], [""griots"", ""trigos""], [""horstes"", ""resshot""], [""limiter"", ""miltier"", ""relimit""], [""oncetta"", ""tectona""], [""origenist"", ""sortieing""], [""pardee"", ""reaped""], [""roisterer"", ""terrorise""], [""unspecterlike"", ""unspectrelike""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""griots\"", \""trigos\"", \""breakages\"", \""brakeages\"", \""origenist\"", \""sortieing\"", \""horstes\"", \""resshot\"", \""unspectrelike\"", \""unspecterlike\"", \""tectona\"", \""oncetta\"", \""reaped\"", \""pardee\"", \""relimit\"", \""miltier\"", \""limiter\"", \""roisterer\"", \""terrorise\""]\n"",
    ""answer"": ""[[\""brakeages\"", \""breakages\""], [\""griots\"", \""trigos\""], [\""horstes\"", \""resshot\""], [\""limiter\"", \""miltier\"", \""relimit\""], [\""oncetta\"", \""tectona\""], [\""origenist\"", \""sortieing\""], [\""pardee\"", \""reaped\""], [\""roisterer\"", \""terrorise\""], [\""unspecterlike\"", \""unspectrelike\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 102,
        ""words"": [
            ""griots"",
            ""trigos"",
            ""breakages"",
            ""brakeages"",
            ""origenist"",
            ""sortieing"",
            ""horstes"",
            ""resshot"",
            ""unspectrelike"",
            ""unspecterlike"",
            ""tectona"",
            ""oncetta"",
            ""reaped"",
            ""pardee"",
            ""relimit"",
            ""miltier"",
            ""limiter"",
            ""roisterer"",
            ""terrorise""
        ],
        ""solution"": [
            [
                ""brakeages"",
                ""breakages""
            ],
            [
                ""griots"",
                ""trigos""
            ],
            [
                ""horstes"",
                ""resshot""
            ],
            [
                ""limiter"",
                ""miltier"",
                ""relimit""
            ],
            [
                ""oncetta"",
                ""tectona""
            ],
            [
                ""origenist"",
                ""sortieing""
            ],
            [
                ""pardee"",
                ""reaped""
            ],
            [
                ""roisterer"",
                ""terrorise""
            ],
            [
                ""unspecterlike"",
                ""unspectrelike""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
103,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sequential"", ""latinesque"", ""livelong"", ""loveling"", ""scientologist"", ""insectologist"", ""lyance"", ""clayen"", ""unfolding"", ""foundling"", ""microclimates"", ""commercialist"", ""rescuable"", ""securable""]
","[[""clayen"", ""lyance""], [""commercialist"", ""microclimates""], [""foundling"", ""unfolding""], [""insectologist"", ""scientologist""], [""latinesque"", ""sequential""], [""livelong"", ""loveling""], [""rescuable"", ""securable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sequential\"", \""latinesque\"", \""livelong\"", \""loveling\"", \""scientologist\"", \""insectologist\"", \""lyance\"", \""clayen\"", \""unfolding\"", \""foundling\"", \""microclimates\"", \""commercialist\"", \""rescuable\"", \""securable\""]\n"",
    ""answer"": ""[[\""clayen\"", \""lyance\""], [\""commercialist\"", \""microclimates\""], [\""foundling\"", \""unfolding\""], [\""insectologist\"", \""scientologist\""], [\""latinesque\"", \""sequential\""], [\""livelong\"", \""loveling\""], [\""rescuable\"", \""securable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 103,
        ""words"": [
            ""sequential"",
            ""latinesque"",
            ""livelong"",
            ""loveling"",
            ""scientologist"",
            ""insectologist"",
            ""lyance"",
            ""clayen"",
            ""unfolding"",
            ""foundling"",
            ""microclimates"",
            ""commercialist"",
            ""rescuable"",
            ""securable""
        ],
        ""solution"": [
            [
                ""clayen"",
                ""lyance""
            ],
            [
                ""commercialist"",
                ""microclimates""
            ],
            [
                ""foundling"",
                ""unfolding""
            ],
            [
                ""insectologist"",
                ""scientologist""
            ],
            [
                ""latinesque"",
                ""sequential""
            ],
            [
                ""livelong"",
                ""loveling""
            ],
            [
                ""rescuable"",
                ""securable""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
104,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""husting"", ""tushing"", ""gutnish"", ""alpinists"", ""tailspins"", ""engulfed"", ""unfledge"", ""metages"", ""gametes"", ""perotic"", ""proteic"", ""briskest"", ""briskets"", ""mbeuer"", ""embrue"", ""volunteerism"", ""multinervose""]
","[[""alpinists"", ""tailspins""], [""briskest"", ""briskets""], [""embrue"", ""mbeuer""], [""engulfed"", ""unfledge""], [""gametes"", ""metages""], [""gutnish"", ""husting"", ""tushing""], [""multinervose"", ""volunteerism""], [""perotic"", ""proteic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""husting\"", \""tushing\"", \""gutnish\"", \""alpinists\"", \""tailspins\"", \""engulfed\"", \""unfledge\"", \""metages\"", \""gametes\"", \""perotic\"", \""proteic\"", \""briskest\"", \""briskets\"", \""mbeuer\"", \""embrue\"", \""volunteerism\"", \""multinervose\""]\n"",
    ""answer"": ""[[\""alpinists\"", \""tailspins\""], [\""briskest\"", \""briskets\""], [\""embrue\"", \""mbeuer\""], [\""engulfed\"", \""unfledge\""], [\""gametes\"", \""metages\""], [\""gutnish\"", \""husting\"", \""tushing\""], [\""multinervose\"", \""volunteerism\""], [\""perotic\"", \""proteic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 104,
        ""words"": [
            ""husting"",
            ""tushing"",
            ""gutnish"",
            ""alpinists"",
            ""tailspins"",
            ""engulfed"",
            ""unfledge"",
            ""metages"",
            ""gametes"",
            ""perotic"",
            ""proteic"",
            ""briskest"",
            ""briskets"",
            ""mbeuer"",
            ""embrue"",
            ""volunteerism"",
            ""multinervose""
        ],
        ""solution"": [
            [
                ""alpinists"",
                ""tailspins""
            ],
            [
                ""briskest"",
                ""briskets""
            ],
            [
                ""embrue"",
                ""mbeuer""
            ],
            [
                ""engulfed"",
                ""unfledge""
            ],
            [
                ""gametes"",
                ""metages""
            ],
            [
                ""gutnish"",
                ""husting"",
                ""tushing""
            ],
            [
                ""multinervose"",
                ""volunteerism""
            ],
            [
                ""perotic"",
                ""proteic""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
105,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""birdman"", ""manbird"", ""earthpea"", ""heartpea"", ""duce"", ""educ"", ""cued""]
","[[""birdman"", ""manbird""], [""cued"", ""duce"", ""educ""], [""earthpea"", ""heartpea""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""birdman\"", \""manbird\"", \""earthpea\"", \""heartpea\"", \""duce\"", \""educ\"", \""cued\""]\n"",
    ""answer"": ""[[\""birdman\"", \""manbird\""], [\""cued\"", \""duce\"", \""educ\""], [\""earthpea\"", \""heartpea\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 105,
        ""words"": [
            ""birdman"",
            ""manbird"",
            ""earthpea"",
            ""heartpea"",
            ""duce"",
            ""educ"",
            ""cued""
        ],
        ""solution"": [
            [
                ""birdman"",
                ""manbird""
            ],
            [
                ""cued"",
                ""duce"",
                ""educ""
            ],
            [
                ""earthpea"",
                ""heartpea""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
106,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""discontinuer"", ""undiscretion"", ""rouge"", ""erugo"", ""orgue"", ""naiant"", ""tainan"", ""consume"", ""muscone"", ""guebre"", ""burgee""]
","[[""burgee"", ""guebre""], [""consume"", ""muscone""], [""discontinuer"", ""undiscretion""], [""erugo"", ""orgue"", ""rouge""], [""naiant"", ""tainan""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""discontinuer\"", \""undiscretion\"", \""rouge\"", \""erugo\"", \""orgue\"", \""naiant\"", \""tainan\"", \""consume\"", \""muscone\"", \""guebre\"", \""burgee\""]\n"",
    ""answer"": ""[[\""burgee\"", \""guebre\""], [\""consume\"", \""muscone\""], [\""discontinuer\"", \""undiscretion\""], [\""erugo\"", \""orgue\"", \""rouge\""], [\""naiant\"", \""tainan\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 106,
        ""words"": [
            ""discontinuer"",
            ""undiscretion"",
            ""rouge"",
            ""erugo"",
            ""orgue"",
            ""naiant"",
            ""tainan"",
            ""consume"",
            ""muscone"",
            ""guebre"",
            ""burgee""
        ],
        ""solution"": [
            [
                ""burgee"",
                ""guebre""
            ],
            [
                ""consume"",
                ""muscone""
            ],
            [
                ""discontinuer"",
                ""undiscretion""
            ],
            [
                ""erugo"",
                ""orgue"",
                ""rouge""
            ],
            [
                ""naiant"",
                ""tainan""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
107,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mudras"", ""musard"", ""sarkit"", ""straik"", ""rastik"", ""traiks""]
","[[""mudras"", ""musard""], [""rastik"", ""sarkit"", ""straik"", ""traiks""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mudras\"", \""musard\"", \""sarkit\"", \""straik\"", \""rastik\"", \""traiks\""]\n"",
    ""answer"": ""[[\""mudras\"", \""musard\""], [\""rastik\"", \""sarkit\"", \""straik\"", \""traiks\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 107,
        ""words"": [
            ""mudras"",
            ""musard"",
            ""sarkit"",
            ""straik"",
            ""rastik"",
            ""traiks""
        ],
        ""solution"": [
            [
                ""mudras"",
                ""musard""
            ],
            [
                ""rastik"",
                ""sarkit"",
                ""straik"",
                ""traiks""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
108,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""aegis"", ""geisa"", ""hocus"", ""chous"", ""acroliths"", ""choralist""]
","[[""acroliths"", ""choralist""], [""aegis"", ""geisa""], [""chous"", ""hocus""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""aegis\"", \""geisa\"", \""hocus\"", \""chous\"", \""acroliths\"", \""choralist\""]\n"",
    ""answer"": ""[[\""acroliths\"", \""choralist\""], [\""aegis\"", \""geisa\""], [\""chous\"", \""hocus\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 108,
        ""words"": [
            ""aegis"",
            ""geisa"",
            ""hocus"",
            ""chous"",
            ""acroliths"",
            ""choralist""
        ],
        ""solution"": [
            [
                ""acroliths"",
                ""choralist""
            ],
            [
                ""aegis"",
                ""geisa""
            ],
            [
                ""chous"",
                ""hocus""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
109,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""plasticise"", ""specialist"", ""aegis"", ""geisa"", ""skin"", ""sink"", ""inks"", ""kins"", ""snop"", ""pons"", ""freights"", ""refights"", ""fighters"", ""biblioklept"", ""bibliokelpt"", ""inactivating"", ""vaticinating"", ""tutmen"", ""mutten"", ""exocarp"", ""praecox"", ""abbe"", ""babe""]
","[[""abbe"", ""babe""], [""aegis"", ""geisa""], [""bibliokelpt"", ""biblioklept""], [""exocarp"", ""praecox""], [""fighters"", ""freights"", ""refights""], [""inactivating"", ""vaticinating""], [""inks"", ""kins"", ""sink"", ""skin""], [""mutten"", ""tutmen""], [""plasticise"", ""specialist""], [""pons"", ""snop""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""plasticise\"", \""specialist\"", \""aegis\"", \""geisa\"", \""skin\"", \""sink\"", \""inks\"", \""kins\"", \""snop\"", \""pons\"", \""freights\"", \""refights\"", \""fighters\"", \""biblioklept\"", \""bibliokelpt\"", \""inactivating\"", \""vaticinating\"", \""tutmen\"", \""mutten\"", \""exocarp\"", \""praecox\"", \""abbe\"", \""babe\""]\n"",
    ""answer"": ""[[\""abbe\"", \""babe\""], [\""aegis\"", \""geisa\""], [\""bibliokelpt\"", \""biblioklept\""], [\""exocarp\"", \""praecox\""], [\""fighters\"", \""freights\"", \""refights\""], [\""inactivating\"", \""vaticinating\""], [\""inks\"", \""kins\"", \""sink\"", \""skin\""], [\""mutten\"", \""tutmen\""], [\""plasticise\"", \""specialist\""], [\""pons\"", \""snop\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 109,
        ""words"": [
            ""plasticise"",
            ""specialist"",
            ""aegis"",
            ""geisa"",
            ""skin"",
            ""sink"",
            ""inks"",
            ""kins"",
            ""snop"",
            ""pons"",
            ""freights"",
            ""refights"",
            ""fighters"",
            ""biblioklept"",
            ""bibliokelpt"",
            ""inactivating"",
            ""vaticinating"",
            ""tutmen"",
            ""mutten"",
            ""exocarp"",
            ""praecox"",
            ""abbe"",
            ""babe""
        ],
        ""solution"": [
            [
                ""abbe"",
                ""babe""
            ],
            [
                ""aegis"",
                ""geisa""
            ],
            [
                ""bibliokelpt"",
                ""biblioklept""
            ],
            [
                ""exocarp"",
                ""praecox""
            ],
            [
                ""fighters"",
                ""freights"",
                ""refights""
            ],
            [
                ""inactivating"",
                ""vaticinating""
            ],
            [
                ""inks"",
                ""kins"",
                ""sink"",
                ""skin""
            ],
            [
                ""mutten"",
                ""tutmen""
            ],
            [
                ""plasticise"",
                ""specialist""
            ],
            [
                ""pons"",
                ""snop""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
110,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bidder"", ""bedrid"", ""forge"", ""gofer"", ""cocreditor"", ""codirector"", ""defilades"", ""disleafed"", ""depart"", ""parted"", ""prated"", ""petard"", ""drapet"", ""ringtails"", ""trailings"", ""prelusion"", ""repulsion"", ""tithonic"", ""chinotti"", ""naggier"", ""agreing""]
","[[""agreing"", ""naggier""], [""bedrid"", ""bidder""], [""chinotti"", ""tithonic""], [""cocreditor"", ""codirector""], [""defilades"", ""disleafed""], [""depart"", ""drapet"", ""parted"", ""petard"", ""prated""], [""forge"", ""gofer""], [""prelusion"", ""repulsion""], [""ringtails"", ""trailings""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bidder\"", \""bedrid\"", \""forge\"", \""gofer\"", \""cocreditor\"", \""codirector\"", \""defilades\"", \""disleafed\"", \""depart\"", \""parted\"", \""prated\"", \""petard\"", \""drapet\"", \""ringtails\"", \""trailings\"", \""prelusion\"", \""repulsion\"", \""tithonic\"", \""chinotti\"", \""naggier\"", \""agreing\""]\n"",
    ""answer"": ""[[\""agreing\"", \""naggier\""], [\""bedrid\"", \""bidder\""], [\""chinotti\"", \""tithonic\""], [\""cocreditor\"", \""codirector\""], [\""defilades\"", \""disleafed\""], [\""depart\"", \""drapet\"", \""parted\"", \""petard\"", \""prated\""], [\""forge\"", \""gofer\""], [\""prelusion\"", \""repulsion\""], [\""ringtails\"", \""trailings\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 110,
        ""words"": [
            ""bidder"",
            ""bedrid"",
            ""forge"",
            ""gofer"",
            ""cocreditor"",
            ""codirector"",
            ""defilades"",
            ""disleafed"",
            ""depart"",
            ""parted"",
            ""prated"",
            ""petard"",
            ""drapet"",
            ""ringtails"",
            ""trailings"",
            ""prelusion"",
            ""repulsion"",
            ""tithonic"",
            ""chinotti"",
            ""naggier"",
            ""agreing""
        ],
        ""solution"": [
            [
                ""agreing"",
                ""naggier""
            ],
            [
                ""bedrid"",
                ""bidder""
            ],
            [
                ""chinotti"",
                ""tithonic""
            ],
            [
                ""cocreditor"",
                ""codirector""
            ],
            [
                ""defilades"",
                ""disleafed""
            ],
            [
                ""depart"",
                ""drapet"",
                ""parted"",
                ""petard"",
                ""prated""
            ],
            [
                ""forge"",
                ""gofer""
            ],
            [
                ""prelusion"",
                ""repulsion""
            ],
            [
                ""ringtails"",
                ""trailings""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
111,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""serment"", ""tremens"", ""linnaea"", ""alanine"", ""acnida"", ""anacid"", ""dacian"", ""pacing"", ""caping""]
","[[""acnida"", ""anacid"", ""dacian""], [""alanine"", ""linnaea""], [""caping"", ""pacing""], [""serment"", ""tremens""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""serment\"", \""tremens\"", \""linnaea\"", \""alanine\"", \""acnida\"", \""anacid\"", \""dacian\"", \""pacing\"", \""caping\""]\n"",
    ""answer"": ""[[\""acnida\"", \""anacid\"", \""dacian\""], [\""alanine\"", \""linnaea\""], [\""caping\"", \""pacing\""], [\""serment\"", \""tremens\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 111,
        ""words"": [
            ""serment"",
            ""tremens"",
            ""linnaea"",
            ""alanine"",
            ""acnida"",
            ""anacid"",
            ""dacian"",
            ""pacing"",
            ""caping""
        ],
        ""solution"": [
            [
                ""acnida"",
                ""anacid"",
                ""dacian""
            ],
            [
                ""alanine"",
                ""linnaea""
            ],
            [
                ""caping"",
                ""pacing""
            ],
            [
                ""serment"",
                ""tremens""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
112,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sagiest"", ""ageists"", ""estoil"", ""toiles"", ""angiomas"", ""isangoma"", ""savines"", ""vinasse"", ""too"", ""oto"", ""oot"", ""bellum"", ""embull"", ""santar"", ""rasant"", ""ratans"", ""resounds"", ""sounders"", ""nasat"", ""santa"", ""satan""]
","[[""ageists"", ""sagiest""], [""angiomas"", ""isangoma""], [""bellum"", ""embull""], [""estoil"", ""toiles""], [""nasat"", ""santa"", ""satan""], [""oot"", ""oto"", ""too""], [""rasant"", ""ratans"", ""santar""], [""resounds"", ""sounders""], [""savines"", ""vinasse""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sagiest\"", \""ageists\"", \""estoil\"", \""toiles\"", \""angiomas\"", \""isangoma\"", \""savines\"", \""vinasse\"", \""too\"", \""oto\"", \""oot\"", \""bellum\"", \""embull\"", \""santar\"", \""rasant\"", \""ratans\"", \""resounds\"", \""sounders\"", \""nasat\"", \""santa\"", \""satan\""]\n"",
    ""answer"": ""[[\""ageists\"", \""sagiest\""], [\""angiomas\"", \""isangoma\""], [\""bellum\"", \""embull\""], [\""estoil\"", \""toiles\""], [\""nasat\"", \""santa\"", \""satan\""], [\""oot\"", \""oto\"", \""too\""], [\""rasant\"", \""ratans\"", \""santar\""], [\""resounds\"", \""sounders\""], [\""savines\"", \""vinasse\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 112,
        ""words"": [
            ""sagiest"",
            ""ageists"",
            ""estoil"",
            ""toiles"",
            ""angiomas"",
            ""isangoma"",
            ""savines"",
            ""vinasse"",
            ""too"",
            ""oto"",
            ""oot"",
            ""bellum"",
            ""embull"",
            ""santar"",
            ""rasant"",
            ""ratans"",
            ""resounds"",
            ""sounders"",
            ""nasat"",
            ""santa"",
            ""satan""
        ],
        ""solution"": [
            [
                ""ageists"",
                ""sagiest""
            ],
            [
                ""angiomas"",
                ""isangoma""
            ],
            [
                ""bellum"",
                ""embull""
            ],
            [
                ""estoil"",
                ""toiles""
            ],
            [
                ""nasat"",
                ""santa"",
                ""satan""
            ],
            [
                ""oot"",
                ""oto"",
                ""too""
            ],
            [
                ""rasant"",
                ""ratans"",
                ""santar""
            ],
            [
                ""resounds"",
                ""sounders""
            ],
            [
                ""savines"",
                ""vinasse""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
113,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""untreadable"", ""untradeable"", ""grindery"", ""redrying"", ""babes"", ""abbes"", ""retwine"", ""enwrite"", ""adib"", ""ibad"", ""mortician"", ""martinico"", ""crimeless"", ""merciless"", ""turnout"", ""outturn""]
","[[""abbes"", ""babes""], [""adib"", ""ibad""], [""crimeless"", ""merciless""], [""enwrite"", ""retwine""], [""grindery"", ""redrying""], [""martinico"", ""mortician""], [""outturn"", ""turnout""], [""untradeable"", ""untreadable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""untreadable\"", \""untradeable\"", \""grindery\"", \""redrying\"", \""babes\"", \""abbes\"", \""retwine\"", \""enwrite\"", \""adib\"", \""ibad\"", \""mortician\"", \""martinico\"", \""crimeless\"", \""merciless\"", \""turnout\"", \""outturn\""]\n"",
    ""answer"": ""[[\""abbes\"", \""babes\""], [\""adib\"", \""ibad\""], [\""crimeless\"", \""merciless\""], [\""enwrite\"", \""retwine\""], [\""grindery\"", \""redrying\""], [\""martinico\"", \""mortician\""], [\""outturn\"", \""turnout\""], [\""untradeable\"", \""untreadable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 113,
        ""words"": [
            ""untreadable"",
            ""untradeable"",
            ""grindery"",
            ""redrying"",
            ""babes"",
            ""abbes"",
            ""retwine"",
            ""enwrite"",
            ""adib"",
            ""ibad"",
            ""mortician"",
            ""martinico"",
            ""crimeless"",
            ""merciless"",
            ""turnout"",
            ""outturn""
        ],
        ""solution"": [
            [
                ""abbes"",
                ""babes""
            ],
            [
                ""adib"",
                ""ibad""
            ],
            [
                ""crimeless"",
                ""merciless""
            ],
            [
                ""enwrite"",
                ""retwine""
            ],
            [
                ""grindery"",
                ""redrying""
            ],
            [
                ""martinico"",
                ""mortician""
            ],
            [
                ""outturn"",
                ""turnout""
            ],
            [
                ""untradeable"",
                ""untreadable""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
114,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""aval"", ""lava"", ""pedals"", ""lapsed"", ""recluses"", ""cureless"", ""pierlike"", ""ripelike""]
","[[""aval"", ""lava""], [""cureless"", ""recluses""], [""lapsed"", ""pedals""], [""pierlike"", ""ripelike""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""aval\"", \""lava\"", \""pedals\"", \""lapsed\"", \""recluses\"", \""cureless\"", \""pierlike\"", \""ripelike\""]\n"",
    ""answer"": ""[[\""aval\"", \""lava\""], [\""cureless\"", \""recluses\""], [\""lapsed\"", \""pedals\""], [\""pierlike\"", \""ripelike\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 114,
        ""words"": [
            ""aval"",
            ""lava"",
            ""pedals"",
            ""lapsed"",
            ""recluses"",
            ""cureless"",
            ""pierlike"",
            ""ripelike""
        ],
        ""solution"": [
            [
                ""aval"",
                ""lava""
            ],
            [
                ""cureless"",
                ""recluses""
            ],
            [
                ""lapsed"",
                ""pedals""
            ],
            [
                ""pierlike"",
                ""ripelike""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
115,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ordalium"", ""doralium"", ""entoplastic"", ""spinotectal"", ""tectospinal"", ""tenoplastic"", ""tarkashi"", ""kitharas"", ""erythrin"", ""tyrrheni""]
","[[""doralium"", ""ordalium""], [""entoplastic"", ""spinotectal"", ""tectospinal"", ""tenoplastic""], [""erythrin"", ""tyrrheni""], [""kitharas"", ""tarkashi""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ordalium\"", \""doralium\"", \""entoplastic\"", \""spinotectal\"", \""tectospinal\"", \""tenoplastic\"", \""tarkashi\"", \""kitharas\"", \""erythrin\"", \""tyrrheni\""]\n"",
    ""answer"": ""[[\""doralium\"", \""ordalium\""], [\""entoplastic\"", \""spinotectal\"", \""tectospinal\"", \""tenoplastic\""], [\""erythrin\"", \""tyrrheni\""], [\""kitharas\"", \""tarkashi\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 115,
        ""words"": [
            ""ordalium"",
            ""doralium"",
            ""entoplastic"",
            ""spinotectal"",
            ""tectospinal"",
            ""tenoplastic"",
            ""tarkashi"",
            ""kitharas"",
            ""erythrin"",
            ""tyrrheni""
        ],
        ""solution"": [
            [
                ""doralium"",
                ""ordalium""
            ],
            [
                ""entoplastic"",
                ""spinotectal"",
                ""tectospinal"",
                ""tenoplastic""
            ],
            [
                ""erythrin"",
                ""tyrrheni""
            ],
            [
                ""kitharas"",
                ""tarkashi""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
116,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tenontophyma"", ""nematophyton"", ""line"", ""nile"", ""temperas"", ""presteam"", ""surinam"", ""uranism"", ""suramin"", ""algoristic"", ""agricolist"", ""skenes"", ""skeens"", ""milters"", ""smirtle"", ""dungarees"", ""underages"", ""ungreased""]
","[[""agricolist"", ""algoristic""], [""dungarees"", ""underages"", ""ungreased""], [""line"", ""nile""], [""milters"", ""smirtle""], [""nematophyton"", ""tenontophyma""], [""presteam"", ""temperas""], [""skeens"", ""skenes""], [""suramin"", ""surinam"", ""uranism""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tenontophyma\"", \""nematophyton\"", \""line\"", \""nile\"", \""temperas\"", \""presteam\"", \""surinam\"", \""uranism\"", \""suramin\"", \""algoristic\"", \""agricolist\"", \""skenes\"", \""skeens\"", \""milters\"", \""smirtle\"", \""dungarees\"", \""underages\"", \""ungreased\""]\n"",
    ""answer"": ""[[\""agricolist\"", \""algoristic\""], [\""dungarees\"", \""underages\"", \""ungreased\""], [\""line\"", \""nile\""], [\""milters\"", \""smirtle\""], [\""nematophyton\"", \""tenontophyma\""], [\""presteam\"", \""temperas\""], [\""skeens\"", \""skenes\""], [\""suramin\"", \""surinam\"", \""uranism\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 116,
        ""words"": [
            ""tenontophyma"",
            ""nematophyton"",
            ""line"",
            ""nile"",
            ""temperas"",
            ""presteam"",
            ""surinam"",
            ""uranism"",
            ""suramin"",
            ""algoristic"",
            ""agricolist"",
            ""skenes"",
            ""skeens"",
            ""milters"",
            ""smirtle"",
            ""dungarees"",
            ""underages"",
            ""ungreased""
        ],
        ""solution"": [
            [
                ""agricolist"",
                ""algoristic""
            ],
            [
                ""dungarees"",
                ""underages"",
                ""ungreased""
            ],
            [
                ""line"",
                ""nile""
            ],
            [
                ""milters"",
                ""smirtle""
            ],
            [
                ""nematophyton"",
                ""tenontophyma""
            ],
            [
                ""presteam"",
                ""temperas""
            ],
            [
                ""skeens"",
                ""skenes""
            ],
            [
                ""suramin"",
                ""surinam"",
                ""uranism""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
117,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""apercus"", ""scauper"", ""chalcon"", ""conchal"", ""dinghee"", ""neighed"", ""heeding""]
","[[""apercus"", ""scauper""], [""chalcon"", ""conchal""], [""dinghee"", ""heeding"", ""neighed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""apercus\"", \""scauper\"", \""chalcon\"", \""conchal\"", \""dinghee\"", \""neighed\"", \""heeding\""]\n"",
    ""answer"": ""[[\""apercus\"", \""scauper\""], [\""chalcon\"", \""conchal\""], [\""dinghee\"", \""heeding\"", \""neighed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 117,
        ""words"": [
            ""apercus"",
            ""scauper"",
            ""chalcon"",
            ""conchal"",
            ""dinghee"",
            ""neighed"",
            ""heeding""
        ],
        ""solution"": [
            [
                ""apercus"",
                ""scauper""
            ],
            [
                ""chalcon"",
                ""conchal""
            ],
            [
                ""dinghee"",
                ""heeding"",
                ""neighed""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
118,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""trawlers"", ""warstler"", ""wrastler"", ""gargled"", ""raggled"", ""draggle"", ""blunderer"", ""reblunder"", ""pascual"", ""scapula"", ""capsula"", ""opcode"", ""cooped"", ""realtor"", ""relator"", ""fitout"", ""outfit""]
","[[""blunderer"", ""reblunder""], [""capsula"", ""pascual"", ""scapula""], [""cooped"", ""opcode""], [""draggle"", ""gargled"", ""raggled""], [""fitout"", ""outfit""], [""realtor"", ""relator""], [""trawlers"", ""warstler"", ""wrastler""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""trawlers\"", \""warstler\"", \""wrastler\"", \""gargled\"", \""raggled\"", \""draggle\"", \""blunderer\"", \""reblunder\"", \""pascual\"", \""scapula\"", \""capsula\"", \""opcode\"", \""cooped\"", \""realtor\"", \""relator\"", \""fitout\"", \""outfit\""]\n"",
    ""answer"": ""[[\""blunderer\"", \""reblunder\""], [\""capsula\"", \""pascual\"", \""scapula\""], [\""cooped\"", \""opcode\""], [\""draggle\"", \""gargled\"", \""raggled\""], [\""fitout\"", \""outfit\""], [\""realtor\"", \""relator\""], [\""trawlers\"", \""warstler\"", \""wrastler\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 118,
        ""words"": [
            ""trawlers"",
            ""warstler"",
            ""wrastler"",
            ""gargled"",
            ""raggled"",
            ""draggle"",
            ""blunderer"",
            ""reblunder"",
            ""pascual"",
            ""scapula"",
            ""capsula"",
            ""opcode"",
            ""cooped"",
            ""realtor"",
            ""relator"",
            ""fitout"",
            ""outfit""
        ],
        ""solution"": [
            [
                ""blunderer"",
                ""reblunder""
            ],
            [
                ""capsula"",
                ""pascual"",
                ""scapula""
            ],
            [
                ""cooped"",
                ""opcode""
            ],
            [
                ""draggle"",
                ""gargled"",
                ""raggled""
            ],
            [
                ""fitout"",
                ""outfit""
            ],
            [
                ""realtor"",
                ""relator""
            ],
            [
                ""trawlers"",
                ""warstler"",
                ""wrastler""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
119,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sawed"", ""wades"", ""statement"", ""testament"", ""nonpaternal"", ""nonparental"", ""waler"", ""lerwa"", ""optableness"", ""potableness"", ""burt"", ""brut"", ""turb"", ""demandingly"", ""maddeningly"", ""clothilda"", ""thallodic""]
","[[""brut"", ""burt"", ""turb""], [""clothilda"", ""thallodic""], [""demandingly"", ""maddeningly""], [""lerwa"", ""waler""], [""nonparental"", ""nonpaternal""], [""optableness"", ""potableness""], [""sawed"", ""wades""], [""statement"", ""testament""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sawed\"", \""wades\"", \""statement\"", \""testament\"", \""nonpaternal\"", \""nonparental\"", \""waler\"", \""lerwa\"", \""optableness\"", \""potableness\"", \""burt\"", \""brut\"", \""turb\"", \""demandingly\"", \""maddeningly\"", \""clothilda\"", \""thallodic\""]\n"",
    ""answer"": ""[[\""brut\"", \""burt\"", \""turb\""], [\""clothilda\"", \""thallodic\""], [\""demandingly\"", \""maddeningly\""], [\""lerwa\"", \""waler\""], [\""nonparental\"", \""nonpaternal\""], [\""optableness\"", \""potableness\""], [\""sawed\"", \""wades\""], [\""statement\"", \""testament\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 119,
        ""words"": [
            ""sawed"",
            ""wades"",
            ""statement"",
            ""testament"",
            ""nonpaternal"",
            ""nonparental"",
            ""waler"",
            ""lerwa"",
            ""optableness"",
            ""potableness"",
            ""burt"",
            ""brut"",
            ""turb"",
            ""demandingly"",
            ""maddeningly"",
            ""clothilda"",
            ""thallodic""
        ],
        ""solution"": [
            [
                ""brut"",
                ""burt"",
                ""turb""
            ],
            [
                ""clothilda"",
                ""thallodic""
            ],
            [
                ""demandingly"",
                ""maddeningly""
            ],
            [
                ""lerwa"",
                ""waler""
            ],
            [
                ""nonparental"",
                ""nonpaternal""
            ],
            [
                ""optableness"",
                ""potableness""
            ],
            [
                ""sawed"",
                ""wades""
            ],
            [
                ""statement"",
                ""testament""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
120,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lawny"", ""wanly"", ""stopback"", ""backstop"", ""discontinuer"", ""undiscretion"", ""debaters"", ""breasted"", ""underproof"", ""profounder"", ""tenonian"", ""annotine"", ""lata"", ""tala"", ""taal"", ""acremen"", ""menacer""]
","[[""acremen"", ""menacer""], [""annotine"", ""tenonian""], [""backstop"", ""stopback""], [""breasted"", ""debaters""], [""discontinuer"", ""undiscretion""], [""lata"", ""taal"", ""tala""], [""lawny"", ""wanly""], [""profounder"", ""underproof""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lawny\"", \""wanly\"", \""stopback\"", \""backstop\"", \""discontinuer\"", \""undiscretion\"", \""debaters\"", \""breasted\"", \""underproof\"", \""profounder\"", \""tenonian\"", \""annotine\"", \""lata\"", \""tala\"", \""taal\"", \""acremen\"", \""menacer\""]\n"",
    ""answer"": ""[[\""acremen\"", \""menacer\""], [\""annotine\"", \""tenonian\""], [\""backstop\"", \""stopback\""], [\""breasted\"", \""debaters\""], [\""discontinuer\"", \""undiscretion\""], [\""lata\"", \""taal\"", \""tala\""], [\""lawny\"", \""wanly\""], [\""profounder\"", \""underproof\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 120,
        ""words"": [
            ""lawny"",
            ""wanly"",
            ""stopback"",
            ""backstop"",
            ""discontinuer"",
            ""undiscretion"",
            ""debaters"",
            ""breasted"",
            ""underproof"",
            ""profounder"",
            ""tenonian"",
            ""annotine"",
            ""lata"",
            ""tala"",
            ""taal"",
            ""acremen"",
            ""menacer""
        ],
        ""solution"": [
            [
                ""acremen"",
                ""menacer""
            ],
            [
                ""annotine"",
                ""tenonian""
            ],
            [
                ""backstop"",
                ""stopback""
            ],
            [
                ""breasted"",
                ""debaters""
            ],
            [
                ""discontinuer"",
                ""undiscretion""
            ],
            [
                ""lata"",
                ""taal"",
                ""tala""
            ],
            [
                ""lawny"",
                ""wanly""
            ],
            [
                ""profounder"",
                ""underproof""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
121,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""panaceist"", ""anapestic"", ""antapices"", ""antispace"", ""agnates"", ""seatang"", ""heliostatic"", ""chiastolite"", ""repen"", ""preen"", ""neper"", ""sournesses"", ""serousness"", ""egal"", ""gale"", ""geal"", ""triorchism"", ""trichroism"", ""insectology"", ""scientology"", ""yeuks"", ""sukey""]
","[[""agnates"", ""seatang""], [""anapestic"", ""antapices"", ""antispace"", ""panaceist""], [""chiastolite"", ""heliostatic""], [""egal"", ""gale"", ""geal""], [""insectology"", ""scientology""], [""neper"", ""preen"", ""repen""], [""serousness"", ""sournesses""], [""sukey"", ""yeuks""], [""trichroism"", ""triorchism""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""panaceist\"", \""anapestic\"", \""antapices\"", \""antispace\"", \""agnates\"", \""seatang\"", \""heliostatic\"", \""chiastolite\"", \""repen\"", \""preen\"", \""neper\"", \""sournesses\"", \""serousness\"", \""egal\"", \""gale\"", \""geal\"", \""triorchism\"", \""trichroism\"", \""insectology\"", \""scientology\"", \""yeuks\"", \""sukey\""]\n"",
    ""answer"": ""[[\""agnates\"", \""seatang\""], [\""anapestic\"", \""antapices\"", \""antispace\"", \""panaceist\""], [\""chiastolite\"", \""heliostatic\""], [\""egal\"", \""gale\"", \""geal\""], [\""insectology\"", \""scientology\""], [\""neper\"", \""preen\"", \""repen\""], [\""serousness\"", \""sournesses\""], [\""sukey\"", \""yeuks\""], [\""trichroism\"", \""triorchism\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 121,
        ""words"": [
            ""panaceist"",
            ""anapestic"",
            ""antapices"",
            ""antispace"",
            ""agnates"",
            ""seatang"",
            ""heliostatic"",
            ""chiastolite"",
            ""repen"",
            ""preen"",
            ""neper"",
            ""sournesses"",
            ""serousness"",
            ""egal"",
            ""gale"",
            ""geal"",
            ""triorchism"",
            ""trichroism"",
            ""insectology"",
            ""scientology"",
            ""yeuks"",
            ""sukey""
        ],
        ""solution"": [
            [
                ""agnates"",
                ""seatang""
            ],
            [
                ""anapestic"",
                ""antapices"",
                ""antispace"",
                ""panaceist""
            ],
            [
                ""chiastolite"",
                ""heliostatic""
            ],
            [
                ""egal"",
                ""gale"",
                ""geal""
            ],
            [
                ""insectology"",
                ""scientology""
            ],
            [
                ""neper"",
                ""preen"",
                ""repen""
            ],
            [
                ""serousness"",
                ""sournesses""
            ],
            [
                ""sukey"",
                ""yeuks""
            ],
            [
                ""trichroism"",
                ""triorchism""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
122,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sigher"", ""resigh"", ""spary"", ""raspy"", ""spray"", ""prays"", ""dilly"", ""idyll"", ""reform"", ""former"", ""stuiver"", ""virtues""]
","[[""dilly"", ""idyll""], [""former"", ""reform""], [""prays"", ""raspy"", ""spary"", ""spray""], [""resigh"", ""sigher""], [""stuiver"", ""virtues""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sigher\"", \""resigh\"", \""spary\"", \""raspy\"", \""spray\"", \""prays\"", \""dilly\"", \""idyll\"", \""reform\"", \""former\"", \""stuiver\"", \""virtues\""]\n"",
    ""answer"": ""[[\""dilly\"", \""idyll\""], [\""former\"", \""reform\""], [\""prays\"", \""raspy\"", \""spary\"", \""spray\""], [\""resigh\"", \""sigher\""], [\""stuiver\"", \""virtues\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 122,
        ""words"": [
            ""sigher"",
            ""resigh"",
            ""spary"",
            ""raspy"",
            ""spray"",
            ""prays"",
            ""dilly"",
            ""idyll"",
            ""reform"",
            ""former"",
            ""stuiver"",
            ""virtues""
        ],
        ""solution"": [
            [
                ""dilly"",
                ""idyll""
            ],
            [
                ""former"",
                ""reform""
            ],
            [
                ""prays"",
                ""raspy"",
                ""spary"",
                ""spray""
            ],
            [
                ""resigh"",
                ""sigher""
            ],
            [
                ""stuiver"",
                ""virtues""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
123,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""headraces"", ""scarehead"", ""tonous"", ""unsoot"", ""cocker"", ""recock"", ""moderatist"", ""stromateid"", ""piqu"", ""quip"", ""eire"", ""erie"", ""healder"", ""hederal"", ""hardtops"", ""potshard"", ""geocentrically"", ""egocentrically"", ""starling"", ""rastling""]
","[[""cocker"", ""recock""], [""egocentrically"", ""geocentrically""], [""eire"", ""erie""], [""hardtops"", ""potshard""], [""headraces"", ""scarehead""], [""healder"", ""hederal""], [""moderatist"", ""stromateid""], [""piqu"", ""quip""], [""rastling"", ""starling""], [""tonous"", ""unsoot""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""headraces\"", \""scarehead\"", \""tonous\"", \""unsoot\"", \""cocker\"", \""recock\"", \""moderatist\"", \""stromateid\"", \""piqu\"", \""quip\"", \""eire\"", \""erie\"", \""healder\"", \""hederal\"", \""hardtops\"", \""potshard\"", \""geocentrically\"", \""egocentrically\"", \""starling\"", \""rastling\""]\n"",
    ""answer"": ""[[\""cocker\"", \""recock\""], [\""egocentrically\"", \""geocentrically\""], [\""eire\"", \""erie\""], [\""hardtops\"", \""potshard\""], [\""headraces\"", \""scarehead\""], [\""healder\"", \""hederal\""], [\""moderatist\"", \""stromateid\""], [\""piqu\"", \""quip\""], [\""rastling\"", \""starling\""], [\""tonous\"", \""unsoot\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 123,
        ""words"": [
            ""headraces"",
            ""scarehead"",
            ""tonous"",
            ""unsoot"",
            ""cocker"",
            ""recock"",
            ""moderatist"",
            ""stromateid"",
            ""piqu"",
            ""quip"",
            ""eire"",
            ""erie"",
            ""healder"",
            ""hederal"",
            ""hardtops"",
            ""potshard"",
            ""geocentrically"",
            ""egocentrically"",
            ""starling"",
            ""rastling""
        ],
        ""solution"": [
            [
                ""cocker"",
                ""recock""
            ],
            [
                ""egocentrically"",
                ""geocentrically""
            ],
            [
                ""eire"",
                ""erie""
            ],
            [
                ""hardtops"",
                ""potshard""
            ],
            [
                ""headraces"",
                ""scarehead""
            ],
            [
                ""healder"",
                ""hederal""
            ],
            [
                ""moderatist"",
                ""stromateid""
            ],
            [
                ""piqu"",
                ""quip""
            ],
            [
                ""rastling"",
                ""starling""
            ],
            [
                ""tonous"",
                ""unsoot""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
124,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""vealiest"", ""leaviest"", ""elatives"", ""teetering"", ""tengerite"", ""painches"", ""sphecina"", ""cernuous"", ""coenurus"", ""petrographically"", ""pterylographical"", ""reoxidised"", ""deoxidiser"", ""balolo"", ""lobola"", ""nascan"", ""cannas"", ""barrette"", ""berretta""]
","[[""balolo"", ""lobola""], [""barrette"", ""berretta""], [""cannas"", ""nascan""], [""cernuous"", ""coenurus""], [""deoxidiser"", ""reoxidised""], [""elatives"", ""leaviest"", ""vealiest""], [""painches"", ""sphecina""], [""petrographically"", ""pterylographical""], [""teetering"", ""tengerite""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""vealiest\"", \""leaviest\"", \""elatives\"", \""teetering\"", \""tengerite\"", \""painches\"", \""sphecina\"", \""cernuous\"", \""coenurus\"", \""petrographically\"", \""pterylographical\"", \""reoxidised\"", \""deoxidiser\"", \""balolo\"", \""lobola\"", \""nascan\"", \""cannas\"", \""barrette\"", \""berretta\""]\n"",
    ""answer"": ""[[\""balolo\"", \""lobola\""], [\""barrette\"", \""berretta\""], [\""cannas\"", \""nascan\""], [\""cernuous\"", \""coenurus\""], [\""deoxidiser\"", \""reoxidised\""], [\""elatives\"", \""leaviest\"", \""vealiest\""], [\""painches\"", \""sphecina\""], [\""petrographically\"", \""pterylographical\""], [\""teetering\"", \""tengerite\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 124,
        ""words"": [
            ""vealiest"",
            ""leaviest"",
            ""elatives"",
            ""teetering"",
            ""tengerite"",
            ""painches"",
            ""sphecina"",
            ""cernuous"",
            ""coenurus"",
            ""petrographically"",
            ""pterylographical"",
            ""reoxidised"",
            ""deoxidiser"",
            ""balolo"",
            ""lobola"",
            ""nascan"",
            ""cannas"",
            ""barrette"",
            ""berretta""
        ],
        ""solution"": [
            [
                ""balolo"",
                ""lobola""
            ],
            [
                ""barrette"",
                ""berretta""
            ],
            [
                ""cannas"",
                ""nascan""
            ],
            [
                ""cernuous"",
                ""coenurus""
            ],
            [
                ""deoxidiser"",
                ""reoxidised""
            ],
            [
                ""elatives"",
                ""leaviest"",
                ""vealiest""
            ],
            [
                ""painches"",
                ""sphecina""
            ],
            [
                ""petrographically"",
                ""pterylographical""
            ],
            [
                ""teetering"",
                ""tengerite""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
125,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cantoris"", ""corsaint"", ""castorin"", ""battlers"", ""brattles"", ""unsomatic"", ""aconitums"", ""aeacus"", ""causae"", ""layered"", ""delayer"", ""redelay"", ""relayed"", ""fouled"", ""defoul"", ""nacreous"", ""carneous"", ""uncoarse"", ""creatable"", ""traceable"", ""regimental"", ""tergeminal""]
","[[""aconitums"", ""unsomatic""], [""aeacus"", ""causae""], [""battlers"", ""brattles""], [""cantoris"", ""castorin"", ""corsaint""], [""carneous"", ""nacreous"", ""uncoarse""], [""creatable"", ""traceable""], [""defoul"", ""fouled""], [""delayer"", ""layered"", ""redelay"", ""relayed""], [""regimental"", ""tergeminal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cantoris\"", \""corsaint\"", \""castorin\"", \""battlers\"", \""brattles\"", \""unsomatic\"", \""aconitums\"", \""aeacus\"", \""causae\"", \""layered\"", \""delayer\"", \""redelay\"", \""relayed\"", \""fouled\"", \""defoul\"", \""nacreous\"", \""carneous\"", \""uncoarse\"", \""creatable\"", \""traceable\"", \""regimental\"", \""tergeminal\""]\n"",
    ""answer"": ""[[\""aconitums\"", \""unsomatic\""], [\""aeacus\"", \""causae\""], [\""battlers\"", \""brattles\""], [\""cantoris\"", \""castorin\"", \""corsaint\""], [\""carneous\"", \""nacreous\"", \""uncoarse\""], [\""creatable\"", \""traceable\""], [\""defoul\"", \""fouled\""], [\""delayer\"", \""layered\"", \""redelay\"", \""relayed\""], [\""regimental\"", \""tergeminal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 125,
        ""words"": [
            ""cantoris"",
            ""corsaint"",
            ""castorin"",
            ""battlers"",
            ""brattles"",
            ""unsomatic"",
            ""aconitums"",
            ""aeacus"",
            ""causae"",
            ""layered"",
            ""delayer"",
            ""redelay"",
            ""relayed"",
            ""fouled"",
            ""defoul"",
            ""nacreous"",
            ""carneous"",
            ""uncoarse"",
            ""creatable"",
            ""traceable"",
            ""regimental"",
            ""tergeminal""
        ],
        ""solution"": [
            [
                ""aconitums"",
                ""unsomatic""
            ],
            [
                ""aeacus"",
                ""causae""
            ],
            [
                ""battlers"",
                ""brattles""
            ],
            [
                ""cantoris"",
                ""castorin"",
                ""corsaint""
            ],
            [
                ""carneous"",
                ""nacreous"",
                ""uncoarse""
            ],
            [
                ""creatable"",
                ""traceable""
            ],
            [
                ""defoul"",
                ""fouled""
            ],
            [
                ""delayer"",
                ""layered"",
                ""redelay"",
                ""relayed""
            ],
            [
                ""regimental"",
                ""tergeminal""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
126,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""solary"", ""royals"", ""appius"", ""sipapu"", ""alpestrian"", ""psalterian"", ""palestrian"", ""elegising"", ""gingelies"", ""incises"", ""iciness""]
","[[""alpestrian"", ""palestrian"", ""psalterian""], [""appius"", ""sipapu""], [""elegising"", ""gingelies""], [""iciness"", ""incises""], [""royals"", ""solary""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""solary\"", \""royals\"", \""appius\"", \""sipapu\"", \""alpestrian\"", \""psalterian\"", \""palestrian\"", \""elegising\"", \""gingelies\"", \""incises\"", \""iciness\""]\n"",
    ""answer"": ""[[\""alpestrian\"", \""palestrian\"", \""psalterian\""], [\""appius\"", \""sipapu\""], [\""elegising\"", \""gingelies\""], [\""iciness\"", \""incises\""], [\""royals\"", \""solary\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 126,
        ""words"": [
            ""solary"",
            ""royals"",
            ""appius"",
            ""sipapu"",
            ""alpestrian"",
            ""psalterian"",
            ""palestrian"",
            ""elegising"",
            ""gingelies"",
            ""incises"",
            ""iciness""
        ],
        ""solution"": [
            [
                ""alpestrian"",
                ""palestrian"",
                ""psalterian""
            ],
            [
                ""appius"",
                ""sipapu""
            ],
            [
                ""elegising"",
                ""gingelies""
            ],
            [
                ""iciness"",
                ""incises""
            ],
            [
                ""royals"",
                ""solary""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
127,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bemired"", ""berimed"", ""meows"", ""mowse"", ""ermines"", ""inermes"", ""decentre"", ""decenter"", ""recedent"", ""centered"", ""goniums"", ""mousing"", ""skance"", ""sacken"", ""bovarist"", ""vibratos"", ""parles"", ""lapser"", ""pearls""]
","[[""bemired"", ""berimed""], [""bovarist"", ""vibratos""], [""centered"", ""decenter"", ""decentre"", ""recedent""], [""ermines"", ""inermes""], [""goniums"", ""mousing""], [""lapser"", ""parles"", ""pearls""], [""meows"", ""mowse""], [""sacken"", ""skance""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bemired\"", \""berimed\"", \""meows\"", \""mowse\"", \""ermines\"", \""inermes\"", \""decentre\"", \""decenter\"", \""recedent\"", \""centered\"", \""goniums\"", \""mousing\"", \""skance\"", \""sacken\"", \""bovarist\"", \""vibratos\"", \""parles\"", \""lapser\"", \""pearls\""]\n"",
    ""answer"": ""[[\""bemired\"", \""berimed\""], [\""bovarist\"", \""vibratos\""], [\""centered\"", \""decenter\"", \""decentre\"", \""recedent\""], [\""ermines\"", \""inermes\""], [\""goniums\"", \""mousing\""], [\""lapser\"", \""parles\"", \""pearls\""], [\""meows\"", \""mowse\""], [\""sacken\"", \""skance\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 127,
        ""words"": [
            ""bemired"",
            ""berimed"",
            ""meows"",
            ""mowse"",
            ""ermines"",
            ""inermes"",
            ""decentre"",
            ""decenter"",
            ""recedent"",
            ""centered"",
            ""goniums"",
            ""mousing"",
            ""skance"",
            ""sacken"",
            ""bovarist"",
            ""vibratos"",
            ""parles"",
            ""lapser"",
            ""pearls""
        ],
        ""solution"": [
            [
                ""bemired"",
                ""berimed""
            ],
            [
                ""bovarist"",
                ""vibratos""
            ],
            [
                ""centered"",
                ""decenter"",
                ""decentre"",
                ""recedent""
            ],
            [
                ""ermines"",
                ""inermes""
            ],
            [
                ""goniums"",
                ""mousing""
            ],
            [
                ""lapser"",
                ""parles"",
                ""pearls""
            ],
            [
                ""meows"",
                ""mowse""
            ],
            [
                ""sacken"",
                ""skance""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
128,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rebeg"", ""grebe"", ""gerbe"", ""discuses"", ""decussis"", ""yarded"", ""drayed""]
","[[""decussis"", ""discuses""], [""drayed"", ""yarded""], [""gerbe"", ""grebe"", ""rebeg""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rebeg\"", \""grebe\"", \""gerbe\"", \""discuses\"", \""decussis\"", \""yarded\"", \""drayed\""]\n"",
    ""answer"": ""[[\""decussis\"", \""discuses\""], [\""drayed\"", \""yarded\""], [\""gerbe\"", \""grebe\"", \""rebeg\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 128,
        ""words"": [
            ""rebeg"",
            ""grebe"",
            ""gerbe"",
            ""discuses"",
            ""decussis"",
            ""yarded"",
            ""drayed""
        ],
        ""solution"": [
            [
                ""decussis"",
                ""discuses""
            ],
            [
                ""drayed"",
                ""yarded""
            ],
            [
                ""gerbe"",
                ""grebe"",
                ""rebeg""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
129,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""burnt"", ""brunt"", ""hypobole"", ""lyophobe"", ""henbit"", ""behint"", ""scarey"", ""scraye"", ""unveritably"", ""unavertibly"", ""lining"", ""lignin"", ""struthin"", ""inthrust"", ""flew"", ""welf"", ""aftersong"", ""frontages"", ""taperer"", ""pearter""]
","[[""aftersong"", ""frontages""], [""behint"", ""henbit""], [""brunt"", ""burnt""], [""flew"", ""welf""], [""hypobole"", ""lyophobe""], [""inthrust"", ""struthin""], [""lignin"", ""lining""], [""pearter"", ""taperer""], [""scarey"", ""scraye""], [""unavertibly"", ""unveritably""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""burnt\"", \""brunt\"", \""hypobole\"", \""lyophobe\"", \""henbit\"", \""behint\"", \""scarey\"", \""scraye\"", \""unveritably\"", \""unavertibly\"", \""lining\"", \""lignin\"", \""struthin\"", \""inthrust\"", \""flew\"", \""welf\"", \""aftersong\"", \""frontages\"", \""taperer\"", \""pearter\""]\n"",
    ""answer"": ""[[\""aftersong\"", \""frontages\""], [\""behint\"", \""henbit\""], [\""brunt\"", \""burnt\""], [\""flew\"", \""welf\""], [\""hypobole\"", \""lyophobe\""], [\""inthrust\"", \""struthin\""], [\""lignin\"", \""lining\""], [\""pearter\"", \""taperer\""], [\""scarey\"", \""scraye\""], [\""unavertibly\"", \""unveritably\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 129,
        ""words"": [
            ""burnt"",
            ""brunt"",
            ""hypobole"",
            ""lyophobe"",
            ""henbit"",
            ""behint"",
            ""scarey"",
            ""scraye"",
            ""unveritably"",
            ""unavertibly"",
            ""lining"",
            ""lignin"",
            ""struthin"",
            ""inthrust"",
            ""flew"",
            ""welf"",
            ""aftersong"",
            ""frontages"",
            ""taperer"",
            ""pearter""
        ],
        ""solution"": [
            [
                ""aftersong"",
                ""frontages""
            ],
            [
                ""behint"",
                ""henbit""
            ],
            [
                ""brunt"",
                ""burnt""
            ],
            [
                ""flew"",
                ""welf""
            ],
            [
                ""hypobole"",
                ""lyophobe""
            ],
            [
                ""inthrust"",
                ""struthin""
            ],
            [
                ""lignin"",
                ""lining""
            ],
            [
                ""pearter"",
                ""taperer""
            ],
            [
                ""scarey"",
                ""scraye""
            ],
            [
                ""unavertibly"",
                ""unveritably""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
130,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nomos"", ""monos"", ""moons"", ""unferried"", ""underfire""]
","[[""monos"", ""moons"", ""nomos""], [""underfire"", ""unferried""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nomos\"", \""monos\"", \""moons\"", \""unferried\"", \""underfire\""]\n"",
    ""answer"": ""[[\""monos\"", \""moons\"", \""nomos\""], [\""underfire\"", \""unferried\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 130,
        ""words"": [
            ""nomos"",
            ""monos"",
            ""moons"",
            ""unferried"",
            ""underfire""
        ],
        ""solution"": [
            [
                ""monos"",
                ""moons"",
                ""nomos""
            ],
            [
                ""underfire"",
                ""unferried""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
131,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""palmful"", ""lampful"", ""ethologist"", ""theologist"", ""unlapped"", ""unpalped"", ""installer"", ""reinstall"", ""rumbaed"", ""bermuda"", ""garhwali"", ""gahrwali"", ""snorter"", ""torrens"", ""upturn"", ""turnup"", ""swop"", ""pows"", ""wops"", ""outreached"", ""coauthered""]
","[[""bermuda"", ""rumbaed""], [""coauthered"", ""outreached""], [""ethologist"", ""theologist""], [""gahrwali"", ""garhwali""], [""installer"", ""reinstall""], [""lampful"", ""palmful""], [""pows"", ""swop"", ""wops""], [""snorter"", ""torrens""], [""turnup"", ""upturn""], [""unlapped"", ""unpalped""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""palmful\"", \""lampful\"", \""ethologist\"", \""theologist\"", \""unlapped\"", \""unpalped\"", \""installer\"", \""reinstall\"", \""rumbaed\"", \""bermuda\"", \""garhwali\"", \""gahrwali\"", \""snorter\"", \""torrens\"", \""upturn\"", \""turnup\"", \""swop\"", \""pows\"", \""wops\"", \""outreached\"", \""coauthered\""]\n"",
    ""answer"": ""[[\""bermuda\"", \""rumbaed\""], [\""coauthered\"", \""outreached\""], [\""ethologist\"", \""theologist\""], [\""gahrwali\"", \""garhwali\""], [\""installer\"", \""reinstall\""], [\""lampful\"", \""palmful\""], [\""pows\"", \""swop\"", \""wops\""], [\""snorter\"", \""torrens\""], [\""turnup\"", \""upturn\""], [\""unlapped\"", \""unpalped\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 131,
        ""words"": [
            ""palmful"",
            ""lampful"",
            ""ethologist"",
            ""theologist"",
            ""unlapped"",
            ""unpalped"",
            ""installer"",
            ""reinstall"",
            ""rumbaed"",
            ""bermuda"",
            ""garhwali"",
            ""gahrwali"",
            ""snorter"",
            ""torrens"",
            ""upturn"",
            ""turnup"",
            ""swop"",
            ""pows"",
            ""wops"",
            ""outreached"",
            ""coauthered""
        ],
        ""solution"": [
            [
                ""bermuda"",
                ""rumbaed""
            ],
            [
                ""coauthered"",
                ""outreached""
            ],
            [
                ""ethologist"",
                ""theologist""
            ],
            [
                ""gahrwali"",
                ""garhwali""
            ],
            [
                ""installer"",
                ""reinstall""
            ],
            [
                ""lampful"",
                ""palmful""
            ],
            [
                ""pows"",
                ""swop"",
                ""wops""
            ],
            [
                ""snorter"",
                ""torrens""
            ],
            [
                ""turnup"",
                ""upturn""
            ],
            [
                ""unlapped"",
                ""unpalped""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
132,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""penalties"", ""tapelines"", ""palestine"", ""misconstitutional"", ""constitutionalism"", ""chastely"", ""laschety""]
","[[""chastely"", ""laschety""], [""constitutionalism"", ""misconstitutional""], [""palestine"", ""penalties"", ""tapelines""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""penalties\"", \""tapelines\"", \""palestine\"", \""misconstitutional\"", \""constitutionalism\"", \""chastely\"", \""laschety\""]\n"",
    ""answer"": ""[[\""chastely\"", \""laschety\""], [\""constitutionalism\"", \""misconstitutional\""], [\""palestine\"", \""penalties\"", \""tapelines\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 132,
        ""words"": [
            ""penalties"",
            ""tapelines"",
            ""palestine"",
            ""misconstitutional"",
            ""constitutionalism"",
            ""chastely"",
            ""laschety""
        ],
        ""solution"": [
            [
                ""chastely"",
                ""laschety""
            ],
            [
                ""constitutionalism"",
                ""misconstitutional""
            ],
            [
                ""palestine"",
                ""penalties"",
                ""tapelines""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
133,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""althorn"", ""anthrol"", ""thronal"", ""trutine"", ""untrite"", ""nuttier""]
","[[""althorn"", ""anthrol"", ""thronal""], [""nuttier"", ""trutine"", ""untrite""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""althorn\"", \""anthrol\"", \""thronal\"", \""trutine\"", \""untrite\"", \""nuttier\""]\n"",
    ""answer"": ""[[\""althorn\"", \""anthrol\"", \""thronal\""], [\""nuttier\"", \""trutine\"", \""untrite\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 133,
        ""words"": [
            ""althorn"",
            ""anthrol"",
            ""thronal"",
            ""trutine"",
            ""untrite"",
            ""nuttier""
        ],
        ""solution"": [
            [
                ""althorn"",
                ""anthrol"",
                ""thronal""
            ],
            [
                ""nuttier"",
                ""trutine"",
                ""untrite""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
134,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pleater"", ""leptera"", ""jereed"", ""jeered"", ""dups"", ""spud"", ""puds"", ""enchisel"", ""lichenes""]
","[[""dups"", ""puds"", ""spud""], [""enchisel"", ""lichenes""], [""jeered"", ""jereed""], [""leptera"", ""pleater""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pleater\"", \""leptera\"", \""jereed\"", \""jeered\"", \""dups\"", \""spud\"", \""puds\"", \""enchisel\"", \""lichenes\""]\n"",
    ""answer"": ""[[\""dups\"", \""puds\"", \""spud\""], [\""enchisel\"", \""lichenes\""], [\""jeered\"", \""jereed\""], [\""leptera\"", \""pleater\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 134,
        ""words"": [
            ""pleater"",
            ""leptera"",
            ""jereed"",
            ""jeered"",
            ""dups"",
            ""spud"",
            ""puds"",
            ""enchisel"",
            ""lichenes""
        ],
        ""solution"": [
            [
                ""dups"",
                ""puds"",
                ""spud""
            ],
            [
                ""enchisel"",
                ""lichenes""
            ],
            [
                ""jeered"",
                ""jereed""
            ],
            [
                ""leptera"",
                ""pleater""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
135,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""wrasse"", ""resaws"", ""masonic"", ""anosmic"", ""maniocs"", ""camions"", ""curfs"", ""scruf"", ""emotion"", ""moonite"", ""crudites"", ""curtsied"", ""curdiest""]
","[[""anosmic"", ""camions"", ""maniocs"", ""masonic""], [""crudites"", ""curdiest"", ""curtsied""], [""curfs"", ""scruf""], [""emotion"", ""moonite""], [""resaws"", ""wrasse""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""wrasse\"", \""resaws\"", \""masonic\"", \""anosmic\"", \""maniocs\"", \""camions\"", \""curfs\"", \""scruf\"", \""emotion\"", \""moonite\"", \""crudites\"", \""curtsied\"", \""curdiest\""]\n"",
    ""answer"": ""[[\""anosmic\"", \""camions\"", \""maniocs\"", \""masonic\""], [\""crudites\"", \""curdiest\"", \""curtsied\""], [\""curfs\"", \""scruf\""], [\""emotion\"", \""moonite\""], [\""resaws\"", \""wrasse\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 135,
        ""words"": [
            ""wrasse"",
            ""resaws"",
            ""masonic"",
            ""anosmic"",
            ""maniocs"",
            ""camions"",
            ""curfs"",
            ""scruf"",
            ""emotion"",
            ""moonite"",
            ""crudites"",
            ""curtsied"",
            ""curdiest""
        ],
        ""solution"": [
            [
                ""anosmic"",
                ""camions"",
                ""maniocs"",
                ""masonic""
            ],
            [
                ""crudites"",
                ""curdiest"",
                ""curtsied""
            ],
            [
                ""curfs"",
                ""scruf""
            ],
            [
                ""emotion"",
                ""moonite""
            ],
            [
                ""resaws"",
                ""wrasse""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
136,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gonk"", ""kong"", ""vowed"", ""dowve"", ""devow"", ""diplostemony"", ""polydemonist""]
","[[""devow"", ""dowve"", ""vowed""], [""diplostemony"", ""polydemonist""], [""gonk"", ""kong""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gonk\"", \""kong\"", \""vowed\"", \""dowve\"", \""devow\"", \""diplostemony\"", \""polydemonist\""]\n"",
    ""answer"": ""[[\""devow\"", \""dowve\"", \""vowed\""], [\""diplostemony\"", \""polydemonist\""], [\""gonk\"", \""kong\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 136,
        ""words"": [
            ""gonk"",
            ""kong"",
            ""vowed"",
            ""dowve"",
            ""devow"",
            ""diplostemony"",
            ""polydemonist""
        ],
        ""solution"": [
            [
                ""devow"",
                ""dowve"",
                ""vowed""
            ],
            [
                ""diplostemony"",
                ""polydemonist""
            ],
            [
                ""gonk"",
                ""kong""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
137,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""landgrave"", ""grandeval"", ""latah"", ""thala"", ""debates"", ""bestead"", ""nahoor"", ""honora"", ""gite"", ""tige"", ""asiderite"", ""dietaries""]
","[[""asiderite"", ""dietaries""], [""bestead"", ""debates""], [""gite"", ""tige""], [""grandeval"", ""landgrave""], [""honora"", ""nahoor""], [""latah"", ""thala""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""landgrave\"", \""grandeval\"", \""latah\"", \""thala\"", \""debates\"", \""bestead\"", \""nahoor\"", \""honora\"", \""gite\"", \""tige\"", \""asiderite\"", \""dietaries\""]\n"",
    ""answer"": ""[[\""asiderite\"", \""dietaries\""], [\""bestead\"", \""debates\""], [\""gite\"", \""tige\""], [\""grandeval\"", \""landgrave\""], [\""honora\"", \""nahoor\""], [\""latah\"", \""thala\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 137,
        ""words"": [
            ""landgrave"",
            ""grandeval"",
            ""latah"",
            ""thala"",
            ""debates"",
            ""bestead"",
            ""nahoor"",
            ""honora"",
            ""gite"",
            ""tige"",
            ""asiderite"",
            ""dietaries""
        ],
        ""solution"": [
            [
                ""asiderite"",
                ""dietaries""
            ],
            [
                ""bestead"",
                ""debates""
            ],
            [
                ""gite"",
                ""tige""
            ],
            [
                ""grandeval"",
                ""landgrave""
            ],
            [
                ""honora"",
                ""nahoor""
            ],
            [
                ""latah"",
                ""thala""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
138,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unsistered"", ""unresisted"", ""reinstruction"", ""unrestriction"", ""sincerest"", ""secretins"", ""intercess"", ""cressida"", ""sidecars"", ""voce"", ""cove"", ""negation"", ""antigone"", ""sicle"", ""ceils"", ""sicel""]
","[[""antigone"", ""negation""], [""ceils"", ""sicel"", ""sicle""], [""cove"", ""voce""], [""cressida"", ""sidecars""], [""intercess"", ""secretins"", ""sincerest""], [""reinstruction"", ""unrestriction""], [""unresisted"", ""unsistered""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unsistered\"", \""unresisted\"", \""reinstruction\"", \""unrestriction\"", \""sincerest\"", \""secretins\"", \""intercess\"", \""cressida\"", \""sidecars\"", \""voce\"", \""cove\"", \""negation\"", \""antigone\"", \""sicle\"", \""ceils\"", \""sicel\""]\n"",
    ""answer"": ""[[\""antigone\"", \""negation\""], [\""ceils\"", \""sicel\"", \""sicle\""], [\""cove\"", \""voce\""], [\""cressida\"", \""sidecars\""], [\""intercess\"", \""secretins\"", \""sincerest\""], [\""reinstruction\"", \""unrestriction\""], [\""unresisted\"", \""unsistered\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 138,
        ""words"": [
            ""unsistered"",
            ""unresisted"",
            ""reinstruction"",
            ""unrestriction"",
            ""sincerest"",
            ""secretins"",
            ""intercess"",
            ""cressida"",
            ""sidecars"",
            ""voce"",
            ""cove"",
            ""negation"",
            ""antigone"",
            ""sicle"",
            ""ceils"",
            ""sicel""
        ],
        ""solution"": [
            [
                ""antigone"",
                ""negation""
            ],
            [
                ""ceils"",
                ""sicel"",
                ""sicle""
            ],
            [
                ""cove"",
                ""voce""
            ],
            [
                ""cressida"",
                ""sidecars""
            ],
            [
                ""intercess"",
                ""secretins"",
                ""sincerest""
            ],
            [
                ""reinstruction"",
                ""unrestriction""
            ],
            [
                ""unresisted"",
                ""unsistered""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
139,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""redistrain"", ""distrainer"", ""eerock"", ""recoke"", ""hernias"", ""sherani"", ""arshine"", ""interviewer"", ""reinterview"", ""resuspect"", ""suspecter"", ""volatic"", ""voltaic"", ""sixte"", ""exist"", ""exits"", ""metroptosia"", ""prostomiate"", ""berthing"", ""bringeth"", ""brighten"", ""tind"", ""dint""]
","[[""arshine"", ""hernias"", ""sherani""], [""berthing"", ""brighten"", ""bringeth""], [""dint"", ""tind""], [""distrainer"", ""redistrain""], [""eerock"", ""recoke""], [""exist"", ""exits"", ""sixte""], [""interviewer"", ""reinterview""], [""metroptosia"", ""prostomiate""], [""resuspect"", ""suspecter""], [""volatic"", ""voltaic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""redistrain\"", \""distrainer\"", \""eerock\"", \""recoke\"", \""hernias\"", \""sherani\"", \""arshine\"", \""interviewer\"", \""reinterview\"", \""resuspect\"", \""suspecter\"", \""volatic\"", \""voltaic\"", \""sixte\"", \""exist\"", \""exits\"", \""metroptosia\"", \""prostomiate\"", \""berthing\"", \""bringeth\"", \""brighten\"", \""tind\"", \""dint\""]\n"",
    ""answer"": ""[[\""arshine\"", \""hernias\"", \""sherani\""], [\""berthing\"", \""brighten\"", \""bringeth\""], [\""dint\"", \""tind\""], [\""distrainer\"", \""redistrain\""], [\""eerock\"", \""recoke\""], [\""exist\"", \""exits\"", \""sixte\""], [\""interviewer\"", \""reinterview\""], [\""metroptosia\"", \""prostomiate\""], [\""resuspect\"", \""suspecter\""], [\""volatic\"", \""voltaic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 139,
        ""words"": [
            ""redistrain"",
            ""distrainer"",
            ""eerock"",
            ""recoke"",
            ""hernias"",
            ""sherani"",
            ""arshine"",
            ""interviewer"",
            ""reinterview"",
            ""resuspect"",
            ""suspecter"",
            ""volatic"",
            ""voltaic"",
            ""sixte"",
            ""exist"",
            ""exits"",
            ""metroptosia"",
            ""prostomiate"",
            ""berthing"",
            ""bringeth"",
            ""brighten"",
            ""tind"",
            ""dint""
        ],
        ""solution"": [
            [
                ""arshine"",
                ""hernias"",
                ""sherani""
            ],
            [
                ""berthing"",
                ""brighten"",
                ""bringeth""
            ],
            [
                ""dint"",
                ""tind""
            ],
            [
                ""distrainer"",
                ""redistrain""
            ],
            [
                ""eerock"",
                ""recoke""
            ],
            [
                ""exist"",
                ""exits"",
                ""sixte""
            ],
            [
                ""interviewer"",
                ""reinterview""
            ],
            [
                ""metroptosia"",
                ""prostomiate""
            ],
            [
                ""resuspect"",
                ""suspecter""
            ],
            [
                ""volatic"",
                ""voltaic""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
140,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""oboes"", ""boose"", ""oaric"", ""cairo"", ""coria"", ""conringia"", ""inorganic"", ""sculker"", ""suckler"", ""masted"", ""demast"", ""pairle"", ""pareil"", ""palier"", ""coral"", ""carol""]
","[[""boose"", ""oboes""], [""cairo"", ""coria"", ""oaric""], [""carol"", ""coral""], [""conringia"", ""inorganic""], [""demast"", ""masted""], [""pairle"", ""palier"", ""pareil""], [""sculker"", ""suckler""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""oboes\"", \""boose\"", \""oaric\"", \""cairo\"", \""coria\"", \""conringia\"", \""inorganic\"", \""sculker\"", \""suckler\"", \""masted\"", \""demast\"", \""pairle\"", \""pareil\"", \""palier\"", \""coral\"", \""carol\""]\n"",
    ""answer"": ""[[\""boose\"", \""oboes\""], [\""cairo\"", \""coria\"", \""oaric\""], [\""carol\"", \""coral\""], [\""conringia\"", \""inorganic\""], [\""demast\"", \""masted\""], [\""pairle\"", \""palier\"", \""pareil\""], [\""sculker\"", \""suckler\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 140,
        ""words"": [
            ""oboes"",
            ""boose"",
            ""oaric"",
            ""cairo"",
            ""coria"",
            ""conringia"",
            ""inorganic"",
            ""sculker"",
            ""suckler"",
            ""masted"",
            ""demast"",
            ""pairle"",
            ""pareil"",
            ""palier"",
            ""coral"",
            ""carol""
        ],
        ""solution"": [
            [
                ""boose"",
                ""oboes""
            ],
            [
                ""cairo"",
                ""coria"",
                ""oaric""
            ],
            [
                ""carol"",
                ""coral""
            ],
            [
                ""conringia"",
                ""inorganic""
            ],
            [
                ""demast"",
                ""masted""
            ],
            [
                ""pairle"",
                ""palier"",
                ""pareil""
            ],
            [
                ""sculker"",
                ""suckler""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
141,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""forthcome"", ""homecroft"", ""monoeidic"", ""meconioid"", ""tenner"", ""rennet"", ""playing"", ""plygain"", ""putters"", ""sputter"", ""ostreidae"", ""sorediate"", ""oestridae"", ""stoker"", ""stroke"", ""trokes""]
","[[""forthcome"", ""homecroft""], [""meconioid"", ""monoeidic""], [""oestridae"", ""ostreidae"", ""sorediate""], [""playing"", ""plygain""], [""putters"", ""sputter""], [""rennet"", ""tenner""], [""stoker"", ""stroke"", ""trokes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""forthcome\"", \""homecroft\"", \""monoeidic\"", \""meconioid\"", \""tenner\"", \""rennet\"", \""playing\"", \""plygain\"", \""putters\"", \""sputter\"", \""ostreidae\"", \""sorediate\"", \""oestridae\"", \""stoker\"", \""stroke\"", \""trokes\""]\n"",
    ""answer"": ""[[\""forthcome\"", \""homecroft\""], [\""meconioid\"", \""monoeidic\""], [\""oestridae\"", \""ostreidae\"", \""sorediate\""], [\""playing\"", \""plygain\""], [\""putters\"", \""sputter\""], [\""rennet\"", \""tenner\""], [\""stoker\"", \""stroke\"", \""trokes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 141,
        ""words"": [
            ""forthcome"",
            ""homecroft"",
            ""monoeidic"",
            ""meconioid"",
            ""tenner"",
            ""rennet"",
            ""playing"",
            ""plygain"",
            ""putters"",
            ""sputter"",
            ""ostreidae"",
            ""sorediate"",
            ""oestridae"",
            ""stoker"",
            ""stroke"",
            ""trokes""
        ],
        ""solution"": [
            [
                ""forthcome"",
                ""homecroft""
            ],
            [
                ""meconioid"",
                ""monoeidic""
            ],
            [
                ""oestridae"",
                ""ostreidae"",
                ""sorediate""
            ],
            [
                ""playing"",
                ""plygain""
            ],
            [
                ""putters"",
                ""sputter""
            ],
            [
                ""rennet"",
                ""tenner""
            ],
            [
                ""stoker"",
                ""stroke"",
                ""trokes""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
142,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""heap"", ""epha"", ""adhibits"", ""dishabit""]
","[[""adhibits"", ""dishabit""], [""epha"", ""heap""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""heap\"", \""epha\"", \""adhibits\"", \""dishabit\""]\n"",
    ""answer"": ""[[\""adhibits\"", \""dishabit\""], [\""epha\"", \""heap\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 142,
        ""words"": [
            ""heap"",
            ""epha"",
            ""adhibits"",
            ""dishabit""
        ],
        ""solution"": [
            [
                ""adhibits"",
                ""dishabit""
            ],
            [
                ""epha"",
                ""heap""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
143,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""carvers"", ""cravers"", ""galas"", ""algas"", ""optotype"", ""topotype"", ""pretium"", ""trumpie"", ""imputer"", ""monitories"", ""moronities"", ""uptrend"", ""prunted"", ""prudent"", ""monogram"", ""nomogram"", ""genoms"", ""gnomes"", ""bortsch"", ""borscht""]
","[[""algas"", ""galas""], [""borscht"", ""bortsch""], [""carvers"", ""cravers""], [""genoms"", ""gnomes""], [""imputer"", ""pretium"", ""trumpie""], [""monitories"", ""moronities""], [""monogram"", ""nomogram""], [""optotype"", ""topotype""], [""prudent"", ""prunted"", ""uptrend""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""carvers\"", \""cravers\"", \""galas\"", \""algas\"", \""optotype\"", \""topotype\"", \""pretium\"", \""trumpie\"", \""imputer\"", \""monitories\"", \""moronities\"", \""uptrend\"", \""prunted\"", \""prudent\"", \""monogram\"", \""nomogram\"", \""genoms\"", \""gnomes\"", \""bortsch\"", \""borscht\""]\n"",
    ""answer"": ""[[\""algas\"", \""galas\""], [\""borscht\"", \""bortsch\""], [\""carvers\"", \""cravers\""], [\""genoms\"", \""gnomes\""], [\""imputer\"", \""pretium\"", \""trumpie\""], [\""monitories\"", \""moronities\""], [\""monogram\"", \""nomogram\""], [\""optotype\"", \""topotype\""], [\""prudent\"", \""prunted\"", \""uptrend\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 143,
        ""words"": [
            ""carvers"",
            ""cravers"",
            ""galas"",
            ""algas"",
            ""optotype"",
            ""topotype"",
            ""pretium"",
            ""trumpie"",
            ""imputer"",
            ""monitories"",
            ""moronities"",
            ""uptrend"",
            ""prunted"",
            ""prudent"",
            ""monogram"",
            ""nomogram"",
            ""genoms"",
            ""gnomes"",
            ""bortsch"",
            ""borscht""
        ],
        ""solution"": [
            [
                ""algas"",
                ""galas""
            ],
            [
                ""borscht"",
                ""bortsch""
            ],
            [
                ""carvers"",
                ""cravers""
            ],
            [
                ""genoms"",
                ""gnomes""
            ],
            [
                ""imputer"",
                ""pretium"",
                ""trumpie""
            ],
            [
                ""monitories"",
                ""moronities""
            ],
            [
                ""monogram"",
                ""nomogram""
            ],
            [
                ""optotype"",
                ""topotype""
            ],
            [
                ""prudent"",
                ""prunted"",
                ""uptrend""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
144,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""alkylic"", ""lilacky"", ""typographer"", ""pterography"", ""petrography""]
","[[""alkylic"", ""lilacky""], [""petrography"", ""pterography"", ""typographer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""alkylic\"", \""lilacky\"", \""typographer\"", \""pterography\"", \""petrography\""]\n"",
    ""answer"": ""[[\""alkylic\"", \""lilacky\""], [\""petrography\"", \""pterography\"", \""typographer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 144,
        ""words"": [
            ""alkylic"",
            ""lilacky"",
            ""typographer"",
            ""pterography"",
            ""petrography""
        ],
        ""solution"": [
            [
                ""alkylic"",
                ""lilacky""
            ],
            [
                ""petrography"",
                ""pterography"",
                ""typographer""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
145,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gasolinic"", ""logicians"", ""oillet"", ""elliot"", ""insectile"", ""selenitic"", ""boon"", ""bono"", ""teinder"", ""nitered"", ""redient""]
","[[""bono"", ""boon""], [""elliot"", ""oillet""], [""gasolinic"", ""logicians""], [""insectile"", ""selenitic""], [""nitered"", ""redient"", ""teinder""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gasolinic\"", \""logicians\"", \""oillet\"", \""elliot\"", \""insectile\"", \""selenitic\"", \""boon\"", \""bono\"", \""teinder\"", \""nitered\"", \""redient\""]\n"",
    ""answer"": ""[[\""bono\"", \""boon\""], [\""elliot\"", \""oillet\""], [\""gasolinic\"", \""logicians\""], [\""insectile\"", \""selenitic\""], [\""nitered\"", \""redient\"", \""teinder\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 145,
        ""words"": [
            ""gasolinic"",
            ""logicians"",
            ""oillet"",
            ""elliot"",
            ""insectile"",
            ""selenitic"",
            ""boon"",
            ""bono"",
            ""teinder"",
            ""nitered"",
            ""redient""
        ],
        ""solution"": [
            [
                ""bono"",
                ""boon""
            ],
            [
                ""elliot"",
                ""oillet""
            ],
            [
                ""gasolinic"",
                ""logicians""
            ],
            [
                ""insectile"",
                ""selenitic""
            ],
            [
                ""nitered"",
                ""redient"",
                ""teinder""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
146,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rheotropic"", ""trichopore"", ""horopteric"", ""tipful"", ""uplift"", ""fath"", ""haft""]
","[[""fath"", ""haft""], [""horopteric"", ""rheotropic"", ""trichopore""], [""tipful"", ""uplift""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rheotropic\"", \""trichopore\"", \""horopteric\"", \""tipful\"", \""uplift\"", \""fath\"", \""haft\""]\n"",
    ""answer"": ""[[\""fath\"", \""haft\""], [\""horopteric\"", \""rheotropic\"", \""trichopore\""], [\""tipful\"", \""uplift\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 146,
        ""words"": [
            ""rheotropic"",
            ""trichopore"",
            ""horopteric"",
            ""tipful"",
            ""uplift"",
            ""fath"",
            ""haft""
        ],
        ""solution"": [
            [
                ""fath"",
                ""haft""
            ],
            [
                ""horopteric"",
                ""rheotropic"",
                ""trichopore""
            ],
            [
                ""tipful"",
                ""uplift""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
147,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""repassed"", ""aspersed"", ""restyle"", ""tersely"", ""manba"", ""amban"", ""measlier"", ""almeries"", ""windel"", ""windle""]
","[[""almeries"", ""measlier""], [""amban"", ""manba""], [""aspersed"", ""repassed""], [""restyle"", ""tersely""], [""windel"", ""windle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""repassed\"", \""aspersed\"", \""restyle\"", \""tersely\"", \""manba\"", \""amban\"", \""measlier\"", \""almeries\"", \""windel\"", \""windle\""]\n"",
    ""answer"": ""[[\""almeries\"", \""measlier\""], [\""amban\"", \""manba\""], [\""aspersed\"", \""repassed\""], [\""restyle\"", \""tersely\""], [\""windel\"", \""windle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 147,
        ""words"": [
            ""repassed"",
            ""aspersed"",
            ""restyle"",
            ""tersely"",
            ""manba"",
            ""amban"",
            ""measlier"",
            ""almeries"",
            ""windel"",
            ""windle""
        ],
        ""solution"": [
            [
                ""almeries"",
                ""measlier""
            ],
            [
                ""amban"",
                ""manba""
            ],
            [
                ""aspersed"",
                ""repassed""
            ],
            [
                ""restyle"",
                ""tersely""
            ],
            [
                ""windel"",
                ""windle""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
148,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""anes"", ""sean"", ""sane"", ""sena"", ""messe"", ""semes"", ""acephali"", ""phacelia"", ""ladder"", ""raddle"", ""larded""]
","[[""acephali"", ""phacelia""], [""anes"", ""sane"", ""sean"", ""sena""], [""ladder"", ""larded"", ""raddle""], [""messe"", ""semes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""anes\"", \""sean\"", \""sane\"", \""sena\"", \""messe\"", \""semes\"", \""acephali\"", \""phacelia\"", \""ladder\"", \""raddle\"", \""larded\""]\n"",
    ""answer"": ""[[\""acephali\"", \""phacelia\""], [\""anes\"", \""sane\"", \""sean\"", \""sena\""], [\""ladder\"", \""larded\"", \""raddle\""], [\""messe\"", \""semes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 148,
        ""words"": [
            ""anes"",
            ""sean"",
            ""sane"",
            ""sena"",
            ""messe"",
            ""semes"",
            ""acephali"",
            ""phacelia"",
            ""ladder"",
            ""raddle"",
            ""larded""
        ],
        ""solution"": [
            [
                ""acephali"",
                ""phacelia""
            ],
            [
                ""anes"",
                ""sane"",
                ""sean"",
                ""sena""
            ],
            [
                ""ladder"",
                ""larded"",
                ""raddle""
            ],
            [
                ""messe"",
                ""semes""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
149,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""totaller"", ""allotter"", ""leadline"", ""danielle"", ""deadlier"", ""derailed""]
","[[""allotter"", ""totaller""], [""danielle"", ""leadline""], [""deadlier"", ""derailed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""totaller\"", \""allotter\"", \""leadline\"", \""danielle\"", \""deadlier\"", \""derailed\""]\n"",
    ""answer"": ""[[\""allotter\"", \""totaller\""], [\""danielle\"", \""leadline\""], [\""deadlier\"", \""derailed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 149,
        ""words"": [
            ""totaller"",
            ""allotter"",
            ""leadline"",
            ""danielle"",
            ""deadlier"",
            ""derailed""
        ],
        ""solution"": [
            [
                ""allotter"",
                ""totaller""
            ],
            [
                ""danielle"",
                ""leadline""
            ],
            [
                ""deadlier"",
                ""derailed""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
150,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""demo"", ""mode"", ""dome"", ""moed"", ""carriers"", ""scarrier"", ""crepier"", ""reprice"", ""piercer"", ""tyned"", ""deynt"", ""denty"", ""troutier"", ""treitour"", ""coactor"", ""tarocco"", ""antechoirs"", ""anchorites"", ""orchestian"", ""populaton"", ""pulpatoon"", ""nonpenal"", ""nonplane""]
","[[""anchorites"", ""antechoirs"", ""orchestian""], [""carriers"", ""scarrier""], [""coactor"", ""tarocco""], [""crepier"", ""piercer"", ""reprice""], [""demo"", ""dome"", ""mode"", ""moed""], [""denty"", ""deynt"", ""tyned""], [""nonpenal"", ""nonplane""], [""populaton"", ""pulpatoon""], [""treitour"", ""troutier""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""demo\"", \""mode\"", \""dome\"", \""moed\"", \""carriers\"", \""scarrier\"", \""crepier\"", \""reprice\"", \""piercer\"", \""tyned\"", \""deynt\"", \""denty\"", \""troutier\"", \""treitour\"", \""coactor\"", \""tarocco\"", \""antechoirs\"", \""anchorites\"", \""orchestian\"", \""populaton\"", \""pulpatoon\"", \""nonpenal\"", \""nonplane\""]\n"",
    ""answer"": ""[[\""anchorites\"", \""antechoirs\"", \""orchestian\""], [\""carriers\"", \""scarrier\""], [\""coactor\"", \""tarocco\""], [\""crepier\"", \""piercer\"", \""reprice\""], [\""demo\"", \""dome\"", \""mode\"", \""moed\""], [\""denty\"", \""deynt\"", \""tyned\""], [\""nonpenal\"", \""nonplane\""], [\""populaton\"", \""pulpatoon\""], [\""treitour\"", \""troutier\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 150,
        ""words"": [
            ""demo"",
            ""mode"",
            ""dome"",
            ""moed"",
            ""carriers"",
            ""scarrier"",
            ""crepier"",
            ""reprice"",
            ""piercer"",
            ""tyned"",
            ""deynt"",
            ""denty"",
            ""troutier"",
            ""treitour"",
            ""coactor"",
            ""tarocco"",
            ""antechoirs"",
            ""anchorites"",
            ""orchestian"",
            ""populaton"",
            ""pulpatoon"",
            ""nonpenal"",
            ""nonplane""
        ],
        ""solution"": [
            [
                ""anchorites"",
                ""antechoirs"",
                ""orchestian""
            ],
            [
                ""carriers"",
                ""scarrier""
            ],
            [
                ""coactor"",
                ""tarocco""
            ],
            [
                ""crepier"",
                ""piercer"",
                ""reprice""
            ],
            [
                ""demo"",
                ""dome"",
                ""mode"",
                ""moed""
            ],
            [
                ""denty"",
                ""deynt"",
                ""tyned""
            ],
            [
                ""nonpenal"",
                ""nonplane""
            ],
            [
                ""populaton"",
                ""pulpatoon""
            ],
            [
                ""treitour"",
                ""troutier""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
151,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""contadino"", ""anticodon"", ""parlors"", ""prorsal"", ""test"", ""sett""]
","[[""anticodon"", ""contadino""], [""parlors"", ""prorsal""], [""sett"", ""test""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""contadino\"", \""anticodon\"", \""parlors\"", \""prorsal\"", \""test\"", \""sett\""]\n"",
    ""answer"": ""[[\""anticodon\"", \""contadino\""], [\""parlors\"", \""prorsal\""], [\""sett\"", \""test\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 151,
        ""words"": [
            ""contadino"",
            ""anticodon"",
            ""parlors"",
            ""prorsal"",
            ""test"",
            ""sett""
        ],
        ""solution"": [
            [
                ""anticodon"",
                ""contadino""
            ],
            [
                ""parlors"",
                ""prorsal""
            ],
            [
                ""sett"",
                ""test""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
152,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""brats"", ""abstr"", ""brast"", ""caval"", ""clava"", ""mudders"", ""smudder"", ""nasus"", ""susan"", ""crusty"", ""curtsy"", ""damianist"", ""stamindia""]
","[[""abstr"", ""brast"", ""brats""], [""caval"", ""clava""], [""crusty"", ""curtsy""], [""damianist"", ""stamindia""], [""mudders"", ""smudder""], [""nasus"", ""susan""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""brats\"", \""abstr\"", \""brast\"", \""caval\"", \""clava\"", \""mudders\"", \""smudder\"", \""nasus\"", \""susan\"", \""crusty\"", \""curtsy\"", \""damianist\"", \""stamindia\""]\n"",
    ""answer"": ""[[\""abstr\"", \""brast\"", \""brats\""], [\""caval\"", \""clava\""], [\""crusty\"", \""curtsy\""], [\""damianist\"", \""stamindia\""], [\""mudders\"", \""smudder\""], [\""nasus\"", \""susan\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 152,
        ""words"": [
            ""brats"",
            ""abstr"",
            ""brast"",
            ""caval"",
            ""clava"",
            ""mudders"",
            ""smudder"",
            ""nasus"",
            ""susan"",
            ""crusty"",
            ""curtsy"",
            ""damianist"",
            ""stamindia""
        ],
        ""solution"": [
            [
                ""abstr"",
                ""brast"",
                ""brats""
            ],
            [
                ""caval"",
                ""clava""
            ],
            [
                ""crusty"",
                ""curtsy""
            ],
            [
                ""damianist"",
                ""stamindia""
            ],
            [
                ""mudders"",
                ""smudder""
            ],
            [
                ""nasus"",
                ""susan""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
153,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""blastule"", ""ballutes"", ""barbette"", ""bebatter"", ""incienso"", ""coniines"", ""oscinine""]
","[[""ballutes"", ""blastule""], [""barbette"", ""bebatter""], [""coniines"", ""incienso"", ""oscinine""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""blastule\"", \""ballutes\"", \""barbette\"", \""bebatter\"", \""incienso\"", \""coniines\"", \""oscinine\""]\n"",
    ""answer"": ""[[\""ballutes\"", \""blastule\""], [\""barbette\"", \""bebatter\""], [\""coniines\"", \""incienso\"", \""oscinine\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 153,
        ""words"": [
            ""blastule"",
            ""ballutes"",
            ""barbette"",
            ""bebatter"",
            ""incienso"",
            ""coniines"",
            ""oscinine""
        ],
        ""solution"": [
            [
                ""ballutes"",
                ""blastule""
            ],
            [
                ""barbette"",
                ""bebatter""
            ],
            [
                ""coniines"",
                ""incienso"",
                ""oscinine""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
154,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""manuring"", ""unarming"", ""yegg"", ""eggy"", ""spoons"", ""snoops"", ""shick"", ""hicks"", ""pilikai"", ""pilikia"", ""erodium"", ""mordieu"", ""arculite"", ""treculia""]
","[[""arculite"", ""treculia""], [""eggy"", ""yegg""], [""erodium"", ""mordieu""], [""hicks"", ""shick""], [""manuring"", ""unarming""], [""pilikai"", ""pilikia""], [""snoops"", ""spoons""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""manuring\"", \""unarming\"", \""yegg\"", \""eggy\"", \""spoons\"", \""snoops\"", \""shick\"", \""hicks\"", \""pilikai\"", \""pilikia\"", \""erodium\"", \""mordieu\"", \""arculite\"", \""treculia\""]\n"",
    ""answer"": ""[[\""arculite\"", \""treculia\""], [\""eggy\"", \""yegg\""], [\""erodium\"", \""mordieu\""], [\""hicks\"", \""shick\""], [\""manuring\"", \""unarming\""], [\""pilikai\"", \""pilikia\""], [\""snoops\"", \""spoons\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 154,
        ""words"": [
            ""manuring"",
            ""unarming"",
            ""yegg"",
            ""eggy"",
            ""spoons"",
            ""snoops"",
            ""shick"",
            ""hicks"",
            ""pilikai"",
            ""pilikia"",
            ""erodium"",
            ""mordieu"",
            ""arculite"",
            ""treculia""
        ],
        ""solution"": [
            [
                ""arculite"",
                ""treculia""
            ],
            [
                ""eggy"",
                ""yegg""
            ],
            [
                ""erodium"",
                ""mordieu""
            ],
            [
                ""hicks"",
                ""shick""
            ],
            [
                ""manuring"",
                ""unarming""
            ],
            [
                ""pilikai"",
                ""pilikia""
            ],
            [
                ""snoops"",
                ""spoons""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
155,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""resicken"", ""sickener"", ""filet"", ""flite"", ""purflings"", ""springful"", ""ooid"", ""iodo"", ""bangles"", ""bengals"", ""nori"", ""iron"", ""inro"", ""roin"", ""noir"", ""unshipment"", ""punishment""]
","[[""bangles"", ""bengals""], [""filet"", ""flite""], [""inro"", ""iron"", ""noir"", ""nori"", ""roin""], [""iodo"", ""ooid""], [""punishment"", ""unshipment""], [""purflings"", ""springful""], [""resicken"", ""sickener""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""resicken\"", \""sickener\"", \""filet\"", \""flite\"", \""purflings\"", \""springful\"", \""ooid\"", \""iodo\"", \""bangles\"", \""bengals\"", \""nori\"", \""iron\"", \""inro\"", \""roin\"", \""noir\"", \""unshipment\"", \""punishment\""]\n"",
    ""answer"": ""[[\""bangles\"", \""bengals\""], [\""filet\"", \""flite\""], [\""inro\"", \""iron\"", \""noir\"", \""nori\"", \""roin\""], [\""iodo\"", \""ooid\""], [\""punishment\"", \""unshipment\""], [\""purflings\"", \""springful\""], [\""resicken\"", \""sickener\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 155,
        ""words"": [
            ""resicken"",
            ""sickener"",
            ""filet"",
            ""flite"",
            ""purflings"",
            ""springful"",
            ""ooid"",
            ""iodo"",
            ""bangles"",
            ""bengals"",
            ""nori"",
            ""iron"",
            ""inro"",
            ""roin"",
            ""noir"",
            ""unshipment"",
            ""punishment""
        ],
        ""solution"": [
            [
                ""bangles"",
                ""bengals""
            ],
            [
                ""filet"",
                ""flite""
            ],
            [
                ""inro"",
                ""iron"",
                ""noir"",
                ""nori"",
                ""roin""
            ],
            [
                ""iodo"",
                ""ooid""
            ],
            [
                ""punishment"",
                ""unshipment""
            ],
            [
                ""purflings"",
                ""springful""
            ],
            [
                ""resicken"",
                ""sickener""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
156,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""scholar"", ""chorals"", ""vise"", ""vies"", ""abysmal"", ""balsamy"", ""oecanthus"", ""ceanothus"", ""ammino"", ""maimon""]
","[[""abysmal"", ""balsamy""], [""ammino"", ""maimon""], [""ceanothus"", ""oecanthus""], [""chorals"", ""scholar""], [""vies"", ""vise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""scholar\"", \""chorals\"", \""vise\"", \""vies\"", \""abysmal\"", \""balsamy\"", \""oecanthus\"", \""ceanothus\"", \""ammino\"", \""maimon\""]\n"",
    ""answer"": ""[[\""abysmal\"", \""balsamy\""], [\""ammino\"", \""maimon\""], [\""ceanothus\"", \""oecanthus\""], [\""chorals\"", \""scholar\""], [\""vies\"", \""vise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 156,
        ""words"": [
            ""scholar"",
            ""chorals"",
            ""vise"",
            ""vies"",
            ""abysmal"",
            ""balsamy"",
            ""oecanthus"",
            ""ceanothus"",
            ""ammino"",
            ""maimon""
        ],
        ""solution"": [
            [
                ""abysmal"",
                ""balsamy""
            ],
            [
                ""ammino"",
                ""maimon""
            ],
            [
                ""ceanothus"",
                ""oecanthus""
            ],
            [
                ""chorals"",
                ""scholar""
            ],
            [
                ""vies"",
                ""vise""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
157,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""requoted"", ""roqueted"", ""pannicle"", ""pinnacle"", ""citoyen"", ""inocyte"", ""awk"", ""kaw"", ""indentured"", ""underntide"", ""untindered"", ""hyothyreoid"", ""thyreohyoid"", ""seora"", ""oreas"", ""arose"", ""grudging"", ""drugging"", ""overdrip"", ""provider""]
","[[""arose"", ""oreas"", ""seora""], [""awk"", ""kaw""], [""citoyen"", ""inocyte""], [""drugging"", ""grudging""], [""hyothyreoid"", ""thyreohyoid""], [""indentured"", ""underntide"", ""untindered""], [""overdrip"", ""provider""], [""pannicle"", ""pinnacle""], [""requoted"", ""roqueted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""requoted\"", \""roqueted\"", \""pannicle\"", \""pinnacle\"", \""citoyen\"", \""inocyte\"", \""awk\"", \""kaw\"", \""indentured\"", \""underntide\"", \""untindered\"", \""hyothyreoid\"", \""thyreohyoid\"", \""seora\"", \""oreas\"", \""arose\"", \""grudging\"", \""drugging\"", \""overdrip\"", \""provider\""]\n"",
    ""answer"": ""[[\""arose\"", \""oreas\"", \""seora\""], [\""awk\"", \""kaw\""], [\""citoyen\"", \""inocyte\""], [\""drugging\"", \""grudging\""], [\""hyothyreoid\"", \""thyreohyoid\""], [\""indentured\"", \""underntide\"", \""untindered\""], [\""overdrip\"", \""provider\""], [\""pannicle\"", \""pinnacle\""], [\""requoted\"", \""roqueted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 157,
        ""words"": [
            ""requoted"",
            ""roqueted"",
            ""pannicle"",
            ""pinnacle"",
            ""citoyen"",
            ""inocyte"",
            ""awk"",
            ""kaw"",
            ""indentured"",
            ""underntide"",
            ""untindered"",
            ""hyothyreoid"",
            ""thyreohyoid"",
            ""seora"",
            ""oreas"",
            ""arose"",
            ""grudging"",
            ""drugging"",
            ""overdrip"",
            ""provider""
        ],
        ""solution"": [
            [
                ""arose"",
                ""oreas"",
                ""seora""
            ],
            [
                ""awk"",
                ""kaw""
            ],
            [
                ""citoyen"",
                ""inocyte""
            ],
            [
                ""drugging"",
                ""grudging""
            ],
            [
                ""hyothyreoid"",
                ""thyreohyoid""
            ],
            [
                ""indentured"",
                ""underntide"",
                ""untindered""
            ],
            [
                ""overdrip"",
                ""provider""
            ],
            [
                ""pannicle"",
                ""pinnacle""
            ],
            [
                ""requoted"",
                ""roqueted""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
158,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""belabours"", ""subboreal"", ""patise"", ""patesi"", ""pietas"", ""dapicho"", ""phacoid""]
","[[""belabours"", ""subboreal""], [""dapicho"", ""phacoid""], [""patesi"", ""patise"", ""pietas""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""belabours\"", \""subboreal\"", \""patise\"", \""patesi\"", \""pietas\"", \""dapicho\"", \""phacoid\""]\n"",
    ""answer"": ""[[\""belabours\"", \""subboreal\""], [\""dapicho\"", \""phacoid\""], [\""patesi\"", \""patise\"", \""pietas\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 158,
        ""words"": [
            ""belabours"",
            ""subboreal"",
            ""patise"",
            ""patesi"",
            ""pietas"",
            ""dapicho"",
            ""phacoid""
        ],
        ""solution"": [
            [
                ""belabours"",
                ""subboreal""
            ],
            [
                ""dapicho"",
                ""phacoid""
            ],
            [
                ""patesi"",
                ""patise"",
                ""pietas""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
159,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""posterior"", ""repositor"", ""mobbish"", ""hobbism"", ""tasted"", ""stated"", ""gloriette"", ""rigolette"", ""generating"", ""greatening"", ""renegating"", ""bubal"", ""babul"", ""pierrette"", ""preterite"", ""tipteerer"", ""sords"", ""dross"", ""respire"", ""prisere"", ""reprise"", ""unagile"", ""linguae""]
","[[""babul"", ""bubal""], [""dross"", ""sords""], [""generating"", ""greatening"", ""renegating""], [""gloriette"", ""rigolette""], [""hobbism"", ""mobbish""], [""linguae"", ""unagile""], [""pierrette"", ""preterite"", ""tipteerer""], [""posterior"", ""repositor""], [""prisere"", ""reprise"", ""respire""], [""stated"", ""tasted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""posterior\"", \""repositor\"", \""mobbish\"", \""hobbism\"", \""tasted\"", \""stated\"", \""gloriette\"", \""rigolette\"", \""generating\"", \""greatening\"", \""renegating\"", \""bubal\"", \""babul\"", \""pierrette\"", \""preterite\"", \""tipteerer\"", \""sords\"", \""dross\"", \""respire\"", \""prisere\"", \""reprise\"", \""unagile\"", \""linguae\""]\n"",
    ""answer"": ""[[\""babul\"", \""bubal\""], [\""dross\"", \""sords\""], [\""generating\"", \""greatening\"", \""renegating\""], [\""gloriette\"", \""rigolette\""], [\""hobbism\"", \""mobbish\""], [\""linguae\"", \""unagile\""], [\""pierrette\"", \""preterite\"", \""tipteerer\""], [\""posterior\"", \""repositor\""], [\""prisere\"", \""reprise\"", \""respire\""], [\""stated\"", \""tasted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 159,
        ""words"": [
            ""posterior"",
            ""repositor"",
            ""mobbish"",
            ""hobbism"",
            ""tasted"",
            ""stated"",
            ""gloriette"",
            ""rigolette"",
            ""generating"",
            ""greatening"",
            ""renegating"",
            ""bubal"",
            ""babul"",
            ""pierrette"",
            ""preterite"",
            ""tipteerer"",
            ""sords"",
            ""dross"",
            ""respire"",
            ""prisere"",
            ""reprise"",
            ""unagile"",
            ""linguae""
        ],
        ""solution"": [
            [
                ""babul"",
                ""bubal""
            ],
            [
                ""dross"",
                ""sords""
            ],
            [
                ""generating"",
                ""greatening"",
                ""renegating""
            ],
            [
                ""gloriette"",
                ""rigolette""
            ],
            [
                ""hobbism"",
                ""mobbish""
            ],
            [
                ""linguae"",
                ""unagile""
            ],
            [
                ""pierrette"",
                ""preterite"",
                ""tipteerer""
            ],
            [
                ""posterior"",
                ""repositor""
            ],
            [
                ""prisere"",
                ""reprise"",
                ""respire""
            ],
            [
                ""stated"",
                ""tasted""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
160,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""shorter"", ""rhetors"", ""connoissance"", ""nonaccession"", ""inornate"", ""nonirate"", ""anointer"", ""reanoint"", ""fango"", ""ganof"", ""cornily"", ""corylin"", ""empair"", ""premia"", ""sandia"", ""danais"", ""naiads""]
","[[""anointer"", ""inornate"", ""nonirate"", ""reanoint""], [""connoissance"", ""nonaccession""], [""cornily"", ""corylin""], [""danais"", ""naiads"", ""sandia""], [""empair"", ""premia""], [""fango"", ""ganof""], [""rhetors"", ""shorter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""shorter\"", \""rhetors\"", \""connoissance\"", \""nonaccession\"", \""inornate\"", \""nonirate\"", \""anointer\"", \""reanoint\"", \""fango\"", \""ganof\"", \""cornily\"", \""corylin\"", \""empair\"", \""premia\"", \""sandia\"", \""danais\"", \""naiads\""]\n"",
    ""answer"": ""[[\""anointer\"", \""inornate\"", \""nonirate\"", \""reanoint\""], [\""connoissance\"", \""nonaccession\""], [\""cornily\"", \""corylin\""], [\""danais\"", \""naiads\"", \""sandia\""], [\""empair\"", \""premia\""], [\""fango\"", \""ganof\""], [\""rhetors\"", \""shorter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 160,
        ""words"": [
            ""shorter"",
            ""rhetors"",
            ""connoissance"",
            ""nonaccession"",
            ""inornate"",
            ""nonirate"",
            ""anointer"",
            ""reanoint"",
            ""fango"",
            ""ganof"",
            ""cornily"",
            ""corylin"",
            ""empair"",
            ""premia"",
            ""sandia"",
            ""danais"",
            ""naiads""
        ],
        ""solution"": [
            [
                ""anointer"",
                ""inornate"",
                ""nonirate"",
                ""reanoint""
            ],
            [
                ""connoissance"",
                ""nonaccession""
            ],
            [
                ""cornily"",
                ""corylin""
            ],
            [
                ""danais"",
                ""naiads"",
                ""sandia""
            ],
            [
                ""empair"",
                ""premia""
            ],
            [
                ""fango"",
                ""ganof""
            ],
            [
                ""rhetors"",
                ""shorter""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
161,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reexecution"", ""executioner"", ""taistril"", ""trialist"", ""pringle"", ""pingler"", ""perling"", ""beroida"", ""boreiad"", ""concretor"", ""conrector"", ""tother"", ""hotter"", ""cylix"", ""xylic"", ""ligurite"", ""guiltier"", ""unfallible"", ""unfillable"", ""capitle"", ""plicate""]
","[[""beroida"", ""boreiad""], [""capitle"", ""plicate""], [""concretor"", ""conrector""], [""cylix"", ""xylic""], [""executioner"", ""reexecution""], [""guiltier"", ""ligurite""], [""hotter"", ""tother""], [""perling"", ""pingler"", ""pringle""], [""taistril"", ""trialist""], [""unfallible"", ""unfillable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reexecution\"", \""executioner\"", \""taistril\"", \""trialist\"", \""pringle\"", \""pingler\"", \""perling\"", \""beroida\"", \""boreiad\"", \""concretor\"", \""conrector\"", \""tother\"", \""hotter\"", \""cylix\"", \""xylic\"", \""ligurite\"", \""guiltier\"", \""unfallible\"", \""unfillable\"", \""capitle\"", \""plicate\""]\n"",
    ""answer"": ""[[\""beroida\"", \""boreiad\""], [\""capitle\"", \""plicate\""], [\""concretor\"", \""conrector\""], [\""cylix\"", \""xylic\""], [\""executioner\"", \""reexecution\""], [\""guiltier\"", \""ligurite\""], [\""hotter\"", \""tother\""], [\""perling\"", \""pingler\"", \""pringle\""], [\""taistril\"", \""trialist\""], [\""unfallible\"", \""unfillable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 161,
        ""words"": [
            ""reexecution"",
            ""executioner"",
            ""taistril"",
            ""trialist"",
            ""pringle"",
            ""pingler"",
            ""perling"",
            ""beroida"",
            ""boreiad"",
            ""concretor"",
            ""conrector"",
            ""tother"",
            ""hotter"",
            ""cylix"",
            ""xylic"",
            ""ligurite"",
            ""guiltier"",
            ""unfallible"",
            ""unfillable"",
            ""capitle"",
            ""plicate""
        ],
        ""solution"": [
            [
                ""beroida"",
                ""boreiad""
            ],
            [
                ""capitle"",
                ""plicate""
            ],
            [
                ""concretor"",
                ""conrector""
            ],
            [
                ""cylix"",
                ""xylic""
            ],
            [
                ""executioner"",
                ""reexecution""
            ],
            [
                ""guiltier"",
                ""ligurite""
            ],
            [
                ""hotter"",
                ""tother""
            ],
            [
                ""perling"",
                ""pingler"",
                ""pringle""
            ],
            [
                ""taistril"",
                ""trialist""
            ],
            [
                ""unfallible"",
                ""unfillable""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
162,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unprosaic"", ""inocarpus"", ""caban"", ""banca"", ""demeanour"", ""enamoured""]
","[[""banca"", ""caban""], [""demeanour"", ""enamoured""], [""inocarpus"", ""unprosaic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unprosaic\"", \""inocarpus\"", \""caban\"", \""banca\"", \""demeanour\"", \""enamoured\""]\n"",
    ""answer"": ""[[\""banca\"", \""caban\""], [\""demeanour\"", \""enamoured\""], [\""inocarpus\"", \""unprosaic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 162,
        ""words"": [
            ""unprosaic"",
            ""inocarpus"",
            ""caban"",
            ""banca"",
            ""demeanour"",
            ""enamoured""
        ],
        ""solution"": [
            [
                ""banca"",
                ""caban""
            ],
            [
                ""demeanour"",
                ""enamoured""
            ],
            [
                ""inocarpus"",
                ""unprosaic""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
163,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""aion"", ""naio"", ""naoi"", ""pools"", ""polos"", ""loops"", ""sloop"", ""brasseries"", ""brassieres"", ""undermoated"", ""unmoderated"", ""mesotherm"", ""ohmmeters"", ""semeed"", ""seemed"", ""strangles"", ""slangster"", ""buriels"", ""burlies""]
","[[""aion"", ""naio"", ""naoi""], [""brasseries"", ""brassieres""], [""buriels"", ""burlies""], [""loops"", ""polos"", ""pools"", ""sloop""], [""mesotherm"", ""ohmmeters""], [""seemed"", ""semeed""], [""slangster"", ""strangles""], [""undermoated"", ""unmoderated""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""aion\"", \""naio\"", \""naoi\"", \""pools\"", \""polos\"", \""loops\"", \""sloop\"", \""brasseries\"", \""brassieres\"", \""undermoated\"", \""unmoderated\"", \""mesotherm\"", \""ohmmeters\"", \""semeed\"", \""seemed\"", \""strangles\"", \""slangster\"", \""buriels\"", \""burlies\""]\n"",
    ""answer"": ""[[\""aion\"", \""naio\"", \""naoi\""], [\""brasseries\"", \""brassieres\""], [\""buriels\"", \""burlies\""], [\""loops\"", \""polos\"", \""pools\"", \""sloop\""], [\""mesotherm\"", \""ohmmeters\""], [\""seemed\"", \""semeed\""], [\""slangster\"", \""strangles\""], [\""undermoated\"", \""unmoderated\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 163,
        ""words"": [
            ""aion"",
            ""naio"",
            ""naoi"",
            ""pools"",
            ""polos"",
            ""loops"",
            ""sloop"",
            ""brasseries"",
            ""brassieres"",
            ""undermoated"",
            ""unmoderated"",
            ""mesotherm"",
            ""ohmmeters"",
            ""semeed"",
            ""seemed"",
            ""strangles"",
            ""slangster"",
            ""buriels"",
            ""burlies""
        ],
        ""solution"": [
            [
                ""aion"",
                ""naio"",
                ""naoi""
            ],
            [
                ""brasseries"",
                ""brassieres""
            ],
            [
                ""buriels"",
                ""burlies""
            ],
            [
                ""loops"",
                ""polos"",
                ""pools"",
                ""sloop""
            ],
            [
                ""mesotherm"",
                ""ohmmeters""
            ],
            [
                ""seemed"",
                ""semeed""
            ],
            [
                ""slangster"",
                ""strangles""
            ],
            [
                ""undermoated"",
                ""unmoderated""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
164,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""noncertified"", ""nonrectified"", ""tolus"", ""louts"", ""lotus"", ""ono"", ""noo"", ""devant"", ""advent"", ""spinnerette"", ""presentient"", ""sideburn"", ""burnside"", ""uppiles"", ""pileups"", ""meuse"", ""emeus"", ""vimana"", ""maniva"", ""older"", ""lored""]
","[[""advent"", ""devant""], [""burnside"", ""sideburn""], [""emeus"", ""meuse""], [""lored"", ""older""], [""lotus"", ""louts"", ""tolus""], [""maniva"", ""vimana""], [""noncertified"", ""nonrectified""], [""noo"", ""ono""], [""pileups"", ""uppiles""], [""presentient"", ""spinnerette""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""noncertified\"", \""nonrectified\"", \""tolus\"", \""louts\"", \""lotus\"", \""ono\"", \""noo\"", \""devant\"", \""advent\"", \""spinnerette\"", \""presentient\"", \""sideburn\"", \""burnside\"", \""uppiles\"", \""pileups\"", \""meuse\"", \""emeus\"", \""vimana\"", \""maniva\"", \""older\"", \""lored\""]\n"",
    ""answer"": ""[[\""advent\"", \""devant\""], [\""burnside\"", \""sideburn\""], [\""emeus\"", \""meuse\""], [\""lored\"", \""older\""], [\""lotus\"", \""louts\"", \""tolus\""], [\""maniva\"", \""vimana\""], [\""noncertified\"", \""nonrectified\""], [\""noo\"", \""ono\""], [\""pileups\"", \""uppiles\""], [\""presentient\"", \""spinnerette\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 164,
        ""words"": [
            ""noncertified"",
            ""nonrectified"",
            ""tolus"",
            ""louts"",
            ""lotus"",
            ""ono"",
            ""noo"",
            ""devant"",
            ""advent"",
            ""spinnerette"",
            ""presentient"",
            ""sideburn"",
            ""burnside"",
            ""uppiles"",
            ""pileups"",
            ""meuse"",
            ""emeus"",
            ""vimana"",
            ""maniva"",
            ""older"",
            ""lored""
        ],
        ""solution"": [
            [
                ""advent"",
                ""devant""
            ],
            [
                ""burnside"",
                ""sideburn""
            ],
            [
                ""emeus"",
                ""meuse""
            ],
            [
                ""lored"",
                ""older""
            ],
            [
                ""lotus"",
                ""louts"",
                ""tolus""
            ],
            [
                ""maniva"",
                ""vimana""
            ],
            [
                ""noncertified"",
                ""nonrectified""
            ],
            [
                ""noo"",
                ""ono""
            ],
            [
                ""pileups"",
                ""uppiles""
            ],
            [
                ""presentient"",
                ""spinnerette""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
165,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""asci"", ""acis"", ""saic"", ""atomists"", ""somatist"", ""ecb"", ""bec"", ""dada"", ""adda"", ""adad"", ""room"", ""moor"", ""moro"", ""bluet"", ""butle"", ""rosinesses"", ""insessores"", ""sarrow"", ""arrows"", ""sagier"", ""agrise"", ""inosculation"", ""inoculations""]
","[[""acis"", ""asci"", ""saic""], [""adad"", ""adda"", ""dada""], [""agrise"", ""sagier""], [""arrows"", ""sarrow""], [""atomists"", ""somatist""], [""bec"", ""ecb""], [""bluet"", ""butle""], [""inoculations"", ""inosculation""], [""insessores"", ""rosinesses""], [""moor"", ""moro"", ""room""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""asci\"", \""acis\"", \""saic\"", \""atomists\"", \""somatist\"", \""ecb\"", \""bec\"", \""dada\"", \""adda\"", \""adad\"", \""room\"", \""moor\"", \""moro\"", \""bluet\"", \""butle\"", \""rosinesses\"", \""insessores\"", \""sarrow\"", \""arrows\"", \""sagier\"", \""agrise\"", \""inosculation\"", \""inoculations\""]\n"",
    ""answer"": ""[[\""acis\"", \""asci\"", \""saic\""], [\""adad\"", \""adda\"", \""dada\""], [\""agrise\"", \""sagier\""], [\""arrows\"", \""sarrow\""], [\""atomists\"", \""somatist\""], [\""bec\"", \""ecb\""], [\""bluet\"", \""butle\""], [\""inoculations\"", \""inosculation\""], [\""insessores\"", \""rosinesses\""], [\""moor\"", \""moro\"", \""room\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 165,
        ""words"": [
            ""asci"",
            ""acis"",
            ""saic"",
            ""atomists"",
            ""somatist"",
            ""ecb"",
            ""bec"",
            ""dada"",
            ""adda"",
            ""adad"",
            ""room"",
            ""moor"",
            ""moro"",
            ""bluet"",
            ""butle"",
            ""rosinesses"",
            ""insessores"",
            ""sarrow"",
            ""arrows"",
            ""sagier"",
            ""agrise"",
            ""inosculation"",
            ""inoculations""
        ],
        ""solution"": [
            [
                ""acis"",
                ""asci"",
                ""saic""
            ],
            [
                ""adad"",
                ""adda"",
                ""dada""
            ],
            [
                ""agrise"",
                ""sagier""
            ],
            [
                ""arrows"",
                ""sarrow""
            ],
            [
                ""atomists"",
                ""somatist""
            ],
            [
                ""bec"",
                ""ecb""
            ],
            [
                ""bluet"",
                ""butle""
            ],
            [
                ""inoculations"",
                ""inosculation""
            ],
            [
                ""insessores"",
                ""rosinesses""
            ],
            [
                ""moor"",
                ""moro"",
                ""room""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
166,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""impressible"", ""permissible"", ""nonempathic"", ""nonemphatic""]
","[[""impressible"", ""permissible""], [""nonempathic"", ""nonemphatic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""impressible\"", \""permissible\"", \""nonempathic\"", \""nonemphatic\""]\n"",
    ""answer"": ""[[\""impressible\"", \""permissible\""], [\""nonempathic\"", \""nonemphatic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 166,
        ""words"": [
            ""impressible"",
            ""permissible"",
            ""nonempathic"",
            ""nonemphatic""
        ],
        ""solution"": [
            [
                ""impressible"",
                ""permissible""
            ],
            [
                ""nonempathic"",
                ""nonemphatic""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
167,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pantalone"", ""pantaleon"", ""doodler"", ""drooled"", ""scarting"", ""tracings"", ""clanged"", ""glanced"", ""murage"", ""maugre"", ""rumage"", ""unintoned"", ""nonunited"", ""corradiate"", ""cortaderia"", ""eradicator""]
","[[""clanged"", ""glanced""], [""corradiate"", ""cortaderia"", ""eradicator""], [""doodler"", ""drooled""], [""maugre"", ""murage"", ""rumage""], [""nonunited"", ""unintoned""], [""pantaleon"", ""pantalone""], [""scarting"", ""tracings""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pantalone\"", \""pantaleon\"", \""doodler\"", \""drooled\"", \""scarting\"", \""tracings\"", \""clanged\"", \""glanced\"", \""murage\"", \""maugre\"", \""rumage\"", \""unintoned\"", \""nonunited\"", \""corradiate\"", \""cortaderia\"", \""eradicator\""]\n"",
    ""answer"": ""[[\""clanged\"", \""glanced\""], [\""corradiate\"", \""cortaderia\"", \""eradicator\""], [\""doodler\"", \""drooled\""], [\""maugre\"", \""murage\"", \""rumage\""], [\""nonunited\"", \""unintoned\""], [\""pantaleon\"", \""pantalone\""], [\""scarting\"", \""tracings\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 167,
        ""words"": [
            ""pantalone"",
            ""pantaleon"",
            ""doodler"",
            ""drooled"",
            ""scarting"",
            ""tracings"",
            ""clanged"",
            ""glanced"",
            ""murage"",
            ""maugre"",
            ""rumage"",
            ""unintoned"",
            ""nonunited"",
            ""corradiate"",
            ""cortaderia"",
            ""eradicator""
        ],
        ""solution"": [
            [
                ""clanged"",
                ""glanced""
            ],
            [
                ""corradiate"",
                ""cortaderia"",
                ""eradicator""
            ],
            [
                ""doodler"",
                ""drooled""
            ],
            [
                ""maugre"",
                ""murage"",
                ""rumage""
            ],
            [
                ""nonunited"",
                ""unintoned""
            ],
            [
                ""pantaleon"",
                ""pantalone""
            ],
            [
                ""scarting"",
                ""tracings""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
168,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""uncostumed"", ""uncustomed"", ""subcellar"", ""brucellas""]
","[[""brucellas"", ""subcellar""], [""uncostumed"", ""uncustomed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""uncostumed\"", \""uncustomed\"", \""subcellar\"", \""brucellas\""]\n"",
    ""answer"": ""[[\""brucellas\"", \""subcellar\""], [\""uncostumed\"", \""uncustomed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 168,
        ""words"": [
            ""uncostumed"",
            ""uncustomed"",
            ""subcellar"",
            ""brucellas""
        ],
        ""solution"": [
            [
                ""brucellas"",
                ""subcellar""
            ],
            [
                ""uncostumed"",
                ""uncustomed""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
169,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ont"", ""ton"", ""ecu"", ""cue"", ""merle"", ""merel"", ""elmer""]
","[[""cue"", ""ecu""], [""elmer"", ""merel"", ""merle""], [""ont"", ""ton""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ont\"", \""ton\"", \""ecu\"", \""cue\"", \""merle\"", \""merel\"", \""elmer\""]\n"",
    ""answer"": ""[[\""cue\"", \""ecu\""], [\""elmer\"", \""merel\"", \""merle\""], [\""ont\"", \""ton\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 169,
        ""words"": [
            ""ont"",
            ""ton"",
            ""ecu"",
            ""cue"",
            ""merle"",
            ""merel"",
            ""elmer""
        ],
        ""solution"": [
            [
                ""cue"",
                ""ecu""
            ],
            [
                ""elmer"",
                ""merel"",
                ""merle""
            ],
            [
                ""ont"",
                ""ton""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
170,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ocellus"", ""locules"", ""faucet"", ""fucate"", ""earshots"", ""hoarsest"", ""strawed"", ""steward"", ""bradytelic"", ""creditably"", ""bother"", ""brothe"", ""micheal"", ""michael"", ""drawdown"", ""downward""]
","[[""bother"", ""brothe""], [""bradytelic"", ""creditably""], [""downward"", ""drawdown""], [""earshots"", ""hoarsest""], [""faucet"", ""fucate""], [""locules"", ""ocellus""], [""michael"", ""micheal""], [""steward"", ""strawed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ocellus\"", \""locules\"", \""faucet\"", \""fucate\"", \""earshots\"", \""hoarsest\"", \""strawed\"", \""steward\"", \""bradytelic\"", \""creditably\"", \""bother\"", \""brothe\"", \""micheal\"", \""michael\"", \""drawdown\"", \""downward\""]\n"",
    ""answer"": ""[[\""bother\"", \""brothe\""], [\""bradytelic\"", \""creditably\""], [\""downward\"", \""drawdown\""], [\""earshots\"", \""hoarsest\""], [\""faucet\"", \""fucate\""], [\""locules\"", \""ocellus\""], [\""michael\"", \""micheal\""], [\""steward\"", \""strawed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 170,
        ""words"": [
            ""ocellus"",
            ""locules"",
            ""faucet"",
            ""fucate"",
            ""earshots"",
            ""hoarsest"",
            ""strawed"",
            ""steward"",
            ""bradytelic"",
            ""creditably"",
            ""bother"",
            ""brothe"",
            ""micheal"",
            ""michael"",
            ""drawdown"",
            ""downward""
        ],
        ""solution"": [
            [
                ""bother"",
                ""brothe""
            ],
            [
                ""bradytelic"",
                ""creditably""
            ],
            [
                ""downward"",
                ""drawdown""
            ],
            [
                ""earshots"",
                ""hoarsest""
            ],
            [
                ""faucet"",
                ""fucate""
            ],
            [
                ""locules"",
                ""ocellus""
            ],
            [
                ""michael"",
                ""micheal""
            ],
            [
                ""steward"",
                ""strawed""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
171,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""airdate"", ""radiate"", ""tiaraed"", ""salamandarin"", ""salamandrian"", ""fw"", ""wf""]
","[[""airdate"", ""radiate"", ""tiaraed""], [""fw"", ""wf""], [""salamandarin"", ""salamandrian""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""airdate\"", \""radiate\"", \""tiaraed\"", \""salamandarin\"", \""salamandrian\"", \""fw\"", \""wf\""]\n"",
    ""answer"": ""[[\""airdate\"", \""radiate\"", \""tiaraed\""], [\""fw\"", \""wf\""], [\""salamandarin\"", \""salamandrian\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 171,
        ""words"": [
            ""airdate"",
            ""radiate"",
            ""tiaraed"",
            ""salamandarin"",
            ""salamandrian"",
            ""fw"",
            ""wf""
        ],
        ""solution"": [
            [
                ""airdate"",
                ""radiate"",
                ""tiaraed""
            ],
            [
                ""fw"",
                ""wf""
            ],
            [
                ""salamandarin"",
                ""salamandrian""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
172,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""skatoles"", ""stalkoes"", ""linnaean"", ""annaline"", ""inspan"", ""pinnas"", ""bursera"", ""sabreur"", ""orante"", ""atoner"", ""ornate"", ""encoder"", ""encored"", ""ecderon"", ""reflowers"", ""flowerers"", ""striplings"", ""slipstring""]
","[[""annaline"", ""linnaean""], [""atoner"", ""orante"", ""ornate""], [""bursera"", ""sabreur""], [""ecderon"", ""encoder"", ""encored""], [""flowerers"", ""reflowers""], [""inspan"", ""pinnas""], [""skatoles"", ""stalkoes""], [""slipstring"", ""striplings""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""skatoles\"", \""stalkoes\"", \""linnaean\"", \""annaline\"", \""inspan\"", \""pinnas\"", \""bursera\"", \""sabreur\"", \""orante\"", \""atoner\"", \""ornate\"", \""encoder\"", \""encored\"", \""ecderon\"", \""reflowers\"", \""flowerers\"", \""striplings\"", \""slipstring\""]\n"",
    ""answer"": ""[[\""annaline\"", \""linnaean\""], [\""atoner\"", \""orante\"", \""ornate\""], [\""bursera\"", \""sabreur\""], [\""ecderon\"", \""encoder\"", \""encored\""], [\""flowerers\"", \""reflowers\""], [\""inspan\"", \""pinnas\""], [\""skatoles\"", \""stalkoes\""], [\""slipstring\"", \""striplings\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 172,
        ""words"": [
            ""skatoles"",
            ""stalkoes"",
            ""linnaean"",
            ""annaline"",
            ""inspan"",
            ""pinnas"",
            ""bursera"",
            ""sabreur"",
            ""orante"",
            ""atoner"",
            ""ornate"",
            ""encoder"",
            ""encored"",
            ""ecderon"",
            ""reflowers"",
            ""flowerers"",
            ""striplings"",
            ""slipstring""
        ],
        ""solution"": [
            [
                ""annaline"",
                ""linnaean""
            ],
            [
                ""atoner"",
                ""orante"",
                ""ornate""
            ],
            [
                ""bursera"",
                ""sabreur""
            ],
            [
                ""ecderon"",
                ""encoder"",
                ""encored""
            ],
            [
                ""flowerers"",
                ""reflowers""
            ],
            [
                ""inspan"",
                ""pinnas""
            ],
            [
                ""skatoles"",
                ""stalkoes""
            ],
            [
                ""slipstring"",
                ""striplings""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
173,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""flourescent"", ""fluorescent"", ""opuntia"", ""utopian"", ""pesa"", ""pase"", ""apes"", ""sharpers"", ""harpress"", ""savior"", ""varios"", ""gappier"", ""gapperi"", ""fastens"", ""fatness"", ""treaters"", ""retreats""]
","[[""apes"", ""pase"", ""pesa""], [""fastens"", ""fatness""], [""flourescent"", ""fluorescent""], [""gapperi"", ""gappier""], [""harpress"", ""sharpers""], [""opuntia"", ""utopian""], [""retreats"", ""treaters""], [""savior"", ""varios""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""flourescent\"", \""fluorescent\"", \""opuntia\"", \""utopian\"", \""pesa\"", \""pase\"", \""apes\"", \""sharpers\"", \""harpress\"", \""savior\"", \""varios\"", \""gappier\"", \""gapperi\"", \""fastens\"", \""fatness\"", \""treaters\"", \""retreats\""]\n"",
    ""answer"": ""[[\""apes\"", \""pase\"", \""pesa\""], [\""fastens\"", \""fatness\""], [\""flourescent\"", \""fluorescent\""], [\""gapperi\"", \""gappier\""], [\""harpress\"", \""sharpers\""], [\""opuntia\"", \""utopian\""], [\""retreats\"", \""treaters\""], [\""savior\"", \""varios\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 173,
        ""words"": [
            ""flourescent"",
            ""fluorescent"",
            ""opuntia"",
            ""utopian"",
            ""pesa"",
            ""pase"",
            ""apes"",
            ""sharpers"",
            ""harpress"",
            ""savior"",
            ""varios"",
            ""gappier"",
            ""gapperi"",
            ""fastens"",
            ""fatness"",
            ""treaters"",
            ""retreats""
        ],
        ""solution"": [
            [
                ""apes"",
                ""pase"",
                ""pesa""
            ],
            [
                ""fastens"",
                ""fatness""
            ],
            [
                ""flourescent"",
                ""fluorescent""
            ],
            [
                ""gapperi"",
                ""gappier""
            ],
            [
                ""harpress"",
                ""sharpers""
            ],
            [
                ""opuntia"",
                ""utopian""
            ],
            [
                ""retreats"",
                ""treaters""
            ],
            [
                ""savior"",
                ""varios""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
174,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""androgynus"", ""gynandrous"", ""copremias"", ""paroecism"", ""premosaic""]
","[[""androgynus"", ""gynandrous""], [""copremias"", ""paroecism"", ""premosaic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""androgynus\"", \""gynandrous\"", \""copremias\"", \""paroecism\"", \""premosaic\""]\n"",
    ""answer"": ""[[\""androgynus\"", \""gynandrous\""], [\""copremias\"", \""paroecism\"", \""premosaic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 174,
        ""words"": [
            ""androgynus"",
            ""gynandrous"",
            ""copremias"",
            ""paroecism"",
            ""premosaic""
        ],
        ""solution"": [
            [
                ""androgynus"",
                ""gynandrous""
            ],
            [
                ""copremias"",
                ""paroecism"",
                ""premosaic""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
175,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""manueverable"", ""maneuverable"", ""nimmed"", ""medimn"", ""kora"", ""karo"", ""roka"", ""shado"", ""shoad"", ""cancion"", ""canonic"", ""prelatism"", ""palmister"", ""batlet"", ""battel"", ""battle"", ""adherers"", ""reshared"", ""mesic"", ""misce"", ""semic"", ""frayed"", ""defray""]
","[[""adherers"", ""reshared""], [""batlet"", ""battel"", ""battle""], [""cancion"", ""canonic""], [""defray"", ""frayed""], [""karo"", ""kora"", ""roka""], [""maneuverable"", ""manueverable""], [""medimn"", ""nimmed""], [""mesic"", ""misce"", ""semic""], [""palmister"", ""prelatism""], [""shado"", ""shoad""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""manueverable\"", \""maneuverable\"", \""nimmed\"", \""medimn\"", \""kora\"", \""karo\"", \""roka\"", \""shado\"", \""shoad\"", \""cancion\"", \""canonic\"", \""prelatism\"", \""palmister\"", \""batlet\"", \""battel\"", \""battle\"", \""adherers\"", \""reshared\"", \""mesic\"", \""misce\"", \""semic\"", \""frayed\"", \""defray\""]\n"",
    ""answer"": ""[[\""adherers\"", \""reshared\""], [\""batlet\"", \""battel\"", \""battle\""], [\""cancion\"", \""canonic\""], [\""defray\"", \""frayed\""], [\""karo\"", \""kora\"", \""roka\""], [\""maneuverable\"", \""manueverable\""], [\""medimn\"", \""nimmed\""], [\""mesic\"", \""misce\"", \""semic\""], [\""palmister\"", \""prelatism\""], [\""shado\"", \""shoad\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 175,
        ""words"": [
            ""manueverable"",
            ""maneuverable"",
            ""nimmed"",
            ""medimn"",
            ""kora"",
            ""karo"",
            ""roka"",
            ""shado"",
            ""shoad"",
            ""cancion"",
            ""canonic"",
            ""prelatism"",
            ""palmister"",
            ""batlet"",
            ""battel"",
            ""battle"",
            ""adherers"",
            ""reshared"",
            ""mesic"",
            ""misce"",
            ""semic"",
            ""frayed"",
            ""defray""
        ],
        ""solution"": [
            [
                ""adherers"",
                ""reshared""
            ],
            [
                ""batlet"",
                ""battel"",
                ""battle""
            ],
            [
                ""cancion"",
                ""canonic""
            ],
            [
                ""defray"",
                ""frayed""
            ],
            [
                ""karo"",
                ""kora"",
                ""roka""
            ],
            [
                ""maneuverable"",
                ""manueverable""
            ],
            [
                ""medimn"",
                ""nimmed""
            ],
            [
                ""mesic"",
                ""misce"",
                ""semic""
            ],
            [
                ""palmister"",
                ""prelatism""
            ],
            [
                ""shado"",
                ""shoad""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
176,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ungone"", ""guenon"", ""puckrel"", ""plucker"", ""boud"", ""doub"", ""balloen"", ""bellona"", ""ballone"", ""allbone"", ""impresses"", ""premisses"", ""privileged"", ""priviledge""]
","[[""allbone"", ""balloen"", ""ballone"", ""bellona""], [""boud"", ""doub""], [""guenon"", ""ungone""], [""impresses"", ""premisses""], [""plucker"", ""puckrel""], [""priviledge"", ""privileged""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ungone\"", \""guenon\"", \""puckrel\"", \""plucker\"", \""boud\"", \""doub\"", \""balloen\"", \""bellona\"", \""ballone\"", \""allbone\"", \""impresses\"", \""premisses\"", \""privileged\"", \""priviledge\""]\n"",
    ""answer"": ""[[\""allbone\"", \""balloen\"", \""ballone\"", \""bellona\""], [\""boud\"", \""doub\""], [\""guenon\"", \""ungone\""], [\""impresses\"", \""premisses\""], [\""plucker\"", \""puckrel\""], [\""priviledge\"", \""privileged\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 176,
        ""words"": [
            ""ungone"",
            ""guenon"",
            ""puckrel"",
            ""plucker"",
            ""boud"",
            ""doub"",
            ""balloen"",
            ""bellona"",
            ""ballone"",
            ""allbone"",
            ""impresses"",
            ""premisses"",
            ""privileged"",
            ""priviledge""
        ],
        ""solution"": [
            [
                ""allbone"",
                ""balloen"",
                ""ballone"",
                ""bellona""
            ],
            [
                ""boud"",
                ""doub""
            ],
            [
                ""guenon"",
                ""ungone""
            ],
            [
                ""impresses"",
                ""premisses""
            ],
            [
                ""plucker"",
                ""puckrel""
            ],
            [
                ""priviledge"",
                ""privileged""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
177,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""malarkies"", ""sailmaker"", ""lymphoadenoma"", ""adenolymphoma"", ""delible"", ""bellied"", ""libeled"", ""orpinc"", ""incorp"", ""pronic"", ""cored"", ""credo"", ""decor"", ""narcotin"", ""anticorn"", ""cotarnin"", ""lithias"", ""talishi"", ""mesological"", ""semological"", ""subaxile"", ""bisexual"", ""ancone"", ""noance""]
","[[""adenolymphoma"", ""lymphoadenoma""], [""ancone"", ""noance""], [""anticorn"", ""cotarnin"", ""narcotin""], [""bellied"", ""delible"", ""libeled""], [""bisexual"", ""subaxile""], [""cored"", ""credo"", ""decor""], [""incorp"", ""orpinc"", ""pronic""], [""lithias"", ""talishi""], [""malarkies"", ""sailmaker""], [""mesological"", ""semological""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""malarkies\"", \""sailmaker\"", \""lymphoadenoma\"", \""adenolymphoma\"", \""delible\"", \""bellied\"", \""libeled\"", \""orpinc\"", \""incorp\"", \""pronic\"", \""cored\"", \""credo\"", \""decor\"", \""narcotin\"", \""anticorn\"", \""cotarnin\"", \""lithias\"", \""talishi\"", \""mesological\"", \""semological\"", \""subaxile\"", \""bisexual\"", \""ancone\"", \""noance\""]\n"",
    ""answer"": ""[[\""adenolymphoma\"", \""lymphoadenoma\""], [\""ancone\"", \""noance\""], [\""anticorn\"", \""cotarnin\"", \""narcotin\""], [\""bellied\"", \""delible\"", \""libeled\""], [\""bisexual\"", \""subaxile\""], [\""cored\"", \""credo\"", \""decor\""], [\""incorp\"", \""orpinc\"", \""pronic\""], [\""lithias\"", \""talishi\""], [\""malarkies\"", \""sailmaker\""], [\""mesological\"", \""semological\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 177,
        ""words"": [
            ""malarkies"",
            ""sailmaker"",
            ""lymphoadenoma"",
            ""adenolymphoma"",
            ""delible"",
            ""bellied"",
            ""libeled"",
            ""orpinc"",
            ""incorp"",
            ""pronic"",
            ""cored"",
            ""credo"",
            ""decor"",
            ""narcotin"",
            ""anticorn"",
            ""cotarnin"",
            ""lithias"",
            ""talishi"",
            ""mesological"",
            ""semological"",
            ""subaxile"",
            ""bisexual"",
            ""ancone"",
            ""noance""
        ],
        ""solution"": [
            [
                ""adenolymphoma"",
                ""lymphoadenoma""
            ],
            [
                ""ancone"",
                ""noance""
            ],
            [
                ""anticorn"",
                ""cotarnin"",
                ""narcotin""
            ],
            [
                ""bellied"",
                ""delible"",
                ""libeled""
            ],
            [
                ""bisexual"",
                ""subaxile""
            ],
            [
                ""cored"",
                ""credo"",
                ""decor""
            ],
            [
                ""incorp"",
                ""orpinc"",
                ""pronic""
            ],
            [
                ""lithias"",
                ""talishi""
            ],
            [
                ""malarkies"",
                ""sailmaker""
            ],
            [
                ""mesological"",
                ""semological""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
178,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""asb"", ""abs"", ""bas"", ""sab"", ""myographist"", ""pythagorism"", ""os"", ""so"", ""topworks"", ""stopwork"", ""stadium"", ""dumaist"", ""beignet"", ""betinge"", ""nomologist"", ""monologist"", ""activating"", ""cavitating""]
","[[""abs"", ""asb"", ""bas"", ""sab""], [""activating"", ""cavitating""], [""beignet"", ""betinge""], [""dumaist"", ""stadium""], [""monologist"", ""nomologist""], [""myographist"", ""pythagorism""], [""os"", ""so""], [""stopwork"", ""topworks""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""asb\"", \""abs\"", \""bas\"", \""sab\"", \""myographist\"", \""pythagorism\"", \""os\"", \""so\"", \""topworks\"", \""stopwork\"", \""stadium\"", \""dumaist\"", \""beignet\"", \""betinge\"", \""nomologist\"", \""monologist\"", \""activating\"", \""cavitating\""]\n"",
    ""answer"": ""[[\""abs\"", \""asb\"", \""bas\"", \""sab\""], [\""activating\"", \""cavitating\""], [\""beignet\"", \""betinge\""], [\""dumaist\"", \""stadium\""], [\""monologist\"", \""nomologist\""], [\""myographist\"", \""pythagorism\""], [\""os\"", \""so\""], [\""stopwork\"", \""topworks\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 178,
        ""words"": [
            ""asb"",
            ""abs"",
            ""bas"",
            ""sab"",
            ""myographist"",
            ""pythagorism"",
            ""os"",
            ""so"",
            ""topworks"",
            ""stopwork"",
            ""stadium"",
            ""dumaist"",
            ""beignet"",
            ""betinge"",
            ""nomologist"",
            ""monologist"",
            ""activating"",
            ""cavitating""
        ],
        ""solution"": [
            [
                ""abs"",
                ""asb"",
                ""bas"",
                ""sab""
            ],
            [
                ""activating"",
                ""cavitating""
            ],
            [
                ""beignet"",
                ""betinge""
            ],
            [
                ""dumaist"",
                ""stadium""
            ],
            [
                ""monologist"",
                ""nomologist""
            ],
            [
                ""myographist"",
                ""pythagorism""
            ],
            [
                ""os"",
                ""so""
            ],
            [
                ""stopwork"",
                ""topworks""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
179,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""spair"", ""spira"", ""paris"", ""sarip"", ""ceil"", ""lice"", ""acutes"", ""cuesta"", ""scoury"", ""coursy"", ""swashing"", ""washings"", ""reply"", ""plyer"", ""hydroiodic"", ""iodohydric""]
","[[""acutes"", ""cuesta""], [""ceil"", ""lice""], [""coursy"", ""scoury""], [""hydroiodic"", ""iodohydric""], [""paris"", ""sarip"", ""spair"", ""spira""], [""plyer"", ""reply""], [""swashing"", ""washings""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""spair\"", \""spira\"", \""paris\"", \""sarip\"", \""ceil\"", \""lice\"", \""acutes\"", \""cuesta\"", \""scoury\"", \""coursy\"", \""swashing\"", \""washings\"", \""reply\"", \""plyer\"", \""hydroiodic\"", \""iodohydric\""]\n"",
    ""answer"": ""[[\""acutes\"", \""cuesta\""], [\""ceil\"", \""lice\""], [\""coursy\"", \""scoury\""], [\""hydroiodic\"", \""iodohydric\""], [\""paris\"", \""sarip\"", \""spair\"", \""spira\""], [\""plyer\"", \""reply\""], [\""swashing\"", \""washings\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 179,
        ""words"": [
            ""spair"",
            ""spira"",
            ""paris"",
            ""sarip"",
            ""ceil"",
            ""lice"",
            ""acutes"",
            ""cuesta"",
            ""scoury"",
            ""coursy"",
            ""swashing"",
            ""washings"",
            ""reply"",
            ""plyer"",
            ""hydroiodic"",
            ""iodohydric""
        ],
        ""solution"": [
            [
                ""acutes"",
                ""cuesta""
            ],
            [
                ""ceil"",
                ""lice""
            ],
            [
                ""coursy"",
                ""scoury""
            ],
            [
                ""hydroiodic"",
                ""iodohydric""
            ],
            [
                ""paris"",
                ""sarip"",
                ""spair"",
                ""spira""
            ],
            [
                ""plyer"",
                ""reply""
            ],
            [
                ""swashing"",
                ""washings""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
180,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""kent"", ""knet"", ""kai"", ""aik"", ""skeletin"", ""nestlike"", ""insessores"", ""rosinesses"", ""alodies"", ""isolead"", ""sycon"", ""consy"", ""soncy"", ""shoyu"", ""housy"", ""chitosan"", ""atchison""]
","[[""aik"", ""kai""], [""alodies"", ""isolead""], [""atchison"", ""chitosan""], [""consy"", ""soncy"", ""sycon""], [""housy"", ""shoyu""], [""insessores"", ""rosinesses""], [""kent"", ""knet""], [""nestlike"", ""skeletin""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""kent\"", \""knet\"", \""kai\"", \""aik\"", \""skeletin\"", \""nestlike\"", \""insessores\"", \""rosinesses\"", \""alodies\"", \""isolead\"", \""sycon\"", \""consy\"", \""soncy\"", \""shoyu\"", \""housy\"", \""chitosan\"", \""atchison\""]\n"",
    ""answer"": ""[[\""aik\"", \""kai\""], [\""alodies\"", \""isolead\""], [\""atchison\"", \""chitosan\""], [\""consy\"", \""soncy\"", \""sycon\""], [\""housy\"", \""shoyu\""], [\""insessores\"", \""rosinesses\""], [\""kent\"", \""knet\""], [\""nestlike\"", \""skeletin\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 180,
        ""words"": [
            ""kent"",
            ""knet"",
            ""kai"",
            ""aik"",
            ""skeletin"",
            ""nestlike"",
            ""insessores"",
            ""rosinesses"",
            ""alodies"",
            ""isolead"",
            ""sycon"",
            ""consy"",
            ""soncy"",
            ""shoyu"",
            ""housy"",
            ""chitosan"",
            ""atchison""
        ],
        ""solution"": [
            [
                ""aik"",
                ""kai""
            ],
            [
                ""alodies"",
                ""isolead""
            ],
            [
                ""atchison"",
                ""chitosan""
            ],
            [
                ""consy"",
                ""soncy"",
                ""sycon""
            ],
            [
                ""housy"",
                ""shoyu""
            ],
            [
                ""insessores"",
                ""rosinesses""
            ],
            [
                ""kent"",
                ""knet""
            ],
            [
                ""nestlike"",
                ""skeletin""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
181,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pseud"", ""spued"", ""dupes"", ""hemicarp"", ""camphire"", ""cognates"", ""coagents"", ""cavitate"", ""activate""]
","[[""activate"", ""cavitate""], [""camphire"", ""hemicarp""], [""coagents"", ""cognates""], [""dupes"", ""pseud"", ""spued""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pseud\"", \""spued\"", \""dupes\"", \""hemicarp\"", \""camphire\"", \""cognates\"", \""coagents\"", \""cavitate\"", \""activate\""]\n"",
    ""answer"": ""[[\""activate\"", \""cavitate\""], [\""camphire\"", \""hemicarp\""], [\""coagents\"", \""cognates\""], [\""dupes\"", \""pseud\"", \""spued\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 181,
        ""words"": [
            ""pseud"",
            ""spued"",
            ""dupes"",
            ""hemicarp"",
            ""camphire"",
            ""cognates"",
            ""coagents"",
            ""cavitate"",
            ""activate""
        ],
        ""solution"": [
            [
                ""activate"",
                ""cavitate""
            ],
            [
                ""camphire"",
                ""hemicarp""
            ],
            [
                ""coagents"",
                ""cognates""
            ],
            [
                ""dupes"",
                ""pseud"",
                ""spued""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
182,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ought"", ""tough"", ""denim"", ""mined"", ""mendi"", ""niggle"", ""egling"", ""neglig"", ""leggin"", ""snock"", ""nocks"", ""conks"", ""lipomyxoma"", ""myxolipoma"", ""kenareh"", ""hearken"", ""pilikai"", ""pilikia"", ""enwood"", ""wooden"", ""unteamed"", ""unmeated"", ""comoedia"", ""camoodie""]
","[[""camoodie"", ""comoedia""], [""conks"", ""nocks"", ""snock""], [""denim"", ""mendi"", ""mined""], [""egling"", ""leggin"", ""neglig"", ""niggle""], [""enwood"", ""wooden""], [""hearken"", ""kenareh""], [""lipomyxoma"", ""myxolipoma""], [""ought"", ""tough""], [""pilikai"", ""pilikia""], [""unmeated"", ""unteamed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ought\"", \""tough\"", \""denim\"", \""mined\"", \""mendi\"", \""niggle\"", \""egling\"", \""neglig\"", \""leggin\"", \""snock\"", \""nocks\"", \""conks\"", \""lipomyxoma\"", \""myxolipoma\"", \""kenareh\"", \""hearken\"", \""pilikai\"", \""pilikia\"", \""enwood\"", \""wooden\"", \""unteamed\"", \""unmeated\"", \""comoedia\"", \""camoodie\""]\n"",
    ""answer"": ""[[\""camoodie\"", \""comoedia\""], [\""conks\"", \""nocks\"", \""snock\""], [\""denim\"", \""mendi\"", \""mined\""], [\""egling\"", \""leggin\"", \""neglig\"", \""niggle\""], [\""enwood\"", \""wooden\""], [\""hearken\"", \""kenareh\""], [\""lipomyxoma\"", \""myxolipoma\""], [\""ought\"", \""tough\""], [\""pilikai\"", \""pilikia\""], [\""unmeated\"", \""unteamed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 182,
        ""words"": [
            ""ought"",
            ""tough"",
            ""denim"",
            ""mined"",
            ""mendi"",
            ""niggle"",
            ""egling"",
            ""neglig"",
            ""leggin"",
            ""snock"",
            ""nocks"",
            ""conks"",
            ""lipomyxoma"",
            ""myxolipoma"",
            ""kenareh"",
            ""hearken"",
            ""pilikai"",
            ""pilikia"",
            ""enwood"",
            ""wooden"",
            ""unteamed"",
            ""unmeated"",
            ""comoedia"",
            ""camoodie""
        ],
        ""solution"": [
            [
                ""camoodie"",
                ""comoedia""
            ],
            [
                ""conks"",
                ""nocks"",
                ""snock""
            ],
            [
                ""denim"",
                ""mendi"",
                ""mined""
            ],
            [
                ""egling"",
                ""leggin"",
                ""neglig"",
                ""niggle""
            ],
            [
                ""enwood"",
                ""wooden""
            ],
            [
                ""hearken"",
                ""kenareh""
            ],
            [
                ""lipomyxoma"",
                ""myxolipoma""
            ],
            [
                ""ought"",
                ""tough""
            ],
            [
                ""pilikai"",
                ""pilikia""
            ],
            [
                ""unmeated"",
                ""unteamed""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
183,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lenvoy"", ""ovenly"", ""wides"", ""wised""]
","[[""lenvoy"", ""ovenly""], [""wides"", ""wised""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lenvoy\"", \""ovenly\"", \""wides\"", \""wised\""]\n"",
    ""answer"": ""[[\""lenvoy\"", \""ovenly\""], [\""wides\"", \""wised\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 183,
        ""words"": [
            ""lenvoy"",
            ""ovenly"",
            ""wides"",
            ""wised""
        ],
        ""solution"": [
            [
                ""lenvoy"",
                ""ovenly""
            ],
            [
                ""wides"",
                ""wised""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
184,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""silts"", ""lists"", ""meroblastic"", ""blastomeric"", ""nies"", ""sine"", ""foldy"", ""floyd"", ""finders"", ""refinds"", ""friends""]
","[[""blastomeric"", ""meroblastic""], [""finders"", ""friends"", ""refinds""], [""floyd"", ""foldy""], [""lists"", ""silts""], [""nies"", ""sine""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""silts\"", \""lists\"", \""meroblastic\"", \""blastomeric\"", \""nies\"", \""sine\"", \""foldy\"", \""floyd\"", \""finders\"", \""refinds\"", \""friends\""]\n"",
    ""answer"": ""[[\""blastomeric\"", \""meroblastic\""], [\""finders\"", \""friends\"", \""refinds\""], [\""floyd\"", \""foldy\""], [\""lists\"", \""silts\""], [\""nies\"", \""sine\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 184,
        ""words"": [
            ""silts"",
            ""lists"",
            ""meroblastic"",
            ""blastomeric"",
            ""nies"",
            ""sine"",
            ""foldy"",
            ""floyd"",
            ""finders"",
            ""refinds"",
            ""friends""
        ],
        ""solution"": [
            [
                ""blastomeric"",
                ""meroblastic""
            ],
            [
                ""finders"",
                ""friends"",
                ""refinds""
            ],
            [
                ""floyd"",
                ""foldy""
            ],
            [
                ""lists"",
                ""silts""
            ],
            [
                ""nies"",
                ""sine""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
185,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cashment"", ""manchets"", ""meschant"", ""blastogenic"", ""genoblastic"", ""chakra"", ""chakar"", ""sertulum"", ""multures"", ""cosseted"", ""cestodes"", ""ascolichen"", ""chalcosine""]
","[[""ascolichen"", ""chalcosine""], [""blastogenic"", ""genoblastic""], [""cashment"", ""manchets"", ""meschant""], [""cestodes"", ""cosseted""], [""chakar"", ""chakra""], [""multures"", ""sertulum""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cashment\"", \""manchets\"", \""meschant\"", \""blastogenic\"", \""genoblastic\"", \""chakra\"", \""chakar\"", \""sertulum\"", \""multures\"", \""cosseted\"", \""cestodes\"", \""ascolichen\"", \""chalcosine\""]\n"",
    ""answer"": ""[[\""ascolichen\"", \""chalcosine\""], [\""blastogenic\"", \""genoblastic\""], [\""cashment\"", \""manchets\"", \""meschant\""], [\""cestodes\"", \""cosseted\""], [\""chakar\"", \""chakra\""], [\""multures\"", \""sertulum\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 185,
        ""words"": [
            ""cashment"",
            ""manchets"",
            ""meschant"",
            ""blastogenic"",
            ""genoblastic"",
            ""chakra"",
            ""chakar"",
            ""sertulum"",
            ""multures"",
            ""cosseted"",
            ""cestodes"",
            ""ascolichen"",
            ""chalcosine""
        ],
        ""solution"": [
            [
                ""ascolichen"",
                ""chalcosine""
            ],
            [
                ""blastogenic"",
                ""genoblastic""
            ],
            [
                ""cashment"",
                ""manchets"",
                ""meschant""
            ],
            [
                ""cestodes"",
                ""cosseted""
            ],
            [
                ""chakar"",
                ""chakra""
            ],
            [
                ""multures"",
                ""sertulum""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
186,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""blotters"", ""bottlers"", ""ardency"", ""dancery"", ""reimpose"", ""perisome"", ""promisee"", ""nitratine"", ""itinerant"", ""diphysite"", ""deityship"", ""curiara"", ""rauraci""]
","[[""ardency"", ""dancery""], [""blotters"", ""bottlers""], [""curiara"", ""rauraci""], [""deityship"", ""diphysite""], [""itinerant"", ""nitratine""], [""perisome"", ""promisee"", ""reimpose""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""blotters\"", \""bottlers\"", \""ardency\"", \""dancery\"", \""reimpose\"", \""perisome\"", \""promisee\"", \""nitratine\"", \""itinerant\"", \""diphysite\"", \""deityship\"", \""curiara\"", \""rauraci\""]\n"",
    ""answer"": ""[[\""ardency\"", \""dancery\""], [\""blotters\"", \""bottlers\""], [\""curiara\"", \""rauraci\""], [\""deityship\"", \""diphysite\""], [\""itinerant\"", \""nitratine\""], [\""perisome\"", \""promisee\"", \""reimpose\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 186,
        ""words"": [
            ""blotters"",
            ""bottlers"",
            ""ardency"",
            ""dancery"",
            ""reimpose"",
            ""perisome"",
            ""promisee"",
            ""nitratine"",
            ""itinerant"",
            ""diphysite"",
            ""deityship"",
            ""curiara"",
            ""rauraci""
        ],
        ""solution"": [
            [
                ""ardency"",
                ""dancery""
            ],
            [
                ""blotters"",
                ""bottlers""
            ],
            [
                ""curiara"",
                ""rauraci""
            ],
            [
                ""deityship"",
                ""diphysite""
            ],
            [
                ""itinerant"",
                ""nitratine""
            ],
            [
                ""perisome"",
                ""promisee"",
                ""reimpose""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
187,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rugging"", ""gurging"", ""hogan"", ""ahong"", ""curlings"", ""scurling"", ""nordicity"", ""tyrocidin"", ""outstrove"", ""overstout"", ""liparis"", ""aprilis"", ""pocketfuls"", ""pocketsful""]
","[[""ahong"", ""hogan""], [""aprilis"", ""liparis""], [""curlings"", ""scurling""], [""gurging"", ""rugging""], [""nordicity"", ""tyrocidin""], [""outstrove"", ""overstout""], [""pocketfuls"", ""pocketsful""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rugging\"", \""gurging\"", \""hogan\"", \""ahong\"", \""curlings\"", \""scurling\"", \""nordicity\"", \""tyrocidin\"", \""outstrove\"", \""overstout\"", \""liparis\"", \""aprilis\"", \""pocketfuls\"", \""pocketsful\""]\n"",
    ""answer"": ""[[\""ahong\"", \""hogan\""], [\""aprilis\"", \""liparis\""], [\""curlings\"", \""scurling\""], [\""gurging\"", \""rugging\""], [\""nordicity\"", \""tyrocidin\""], [\""outstrove\"", \""overstout\""], [\""pocketfuls\"", \""pocketsful\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 187,
        ""words"": [
            ""rugging"",
            ""gurging"",
            ""hogan"",
            ""ahong"",
            ""curlings"",
            ""scurling"",
            ""nordicity"",
            ""tyrocidin"",
            ""outstrove"",
            ""overstout"",
            ""liparis"",
            ""aprilis"",
            ""pocketfuls"",
            ""pocketsful""
        ],
        ""solution"": [
            [
                ""ahong"",
                ""hogan""
            ],
            [
                ""aprilis"",
                ""liparis""
            ],
            [
                ""curlings"",
                ""scurling""
            ],
            [
                ""gurging"",
                ""rugging""
            ],
            [
                ""nordicity"",
                ""tyrocidin""
            ],
            [
                ""outstrove"",
                ""overstout""
            ],
            [
                ""pocketfuls"",
                ""pocketsful""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
188,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sloted"", ""stoled"", ""oldest"", ""cestoid"", ""coedits"", ""cotised"", ""rosetangle"", ""estrangelo"", ""clayen"", ""lyance"", ""oleander"", ""reloaned""]
","[[""cestoid"", ""coedits"", ""cotised""], [""clayen"", ""lyance""], [""estrangelo"", ""rosetangle""], [""oldest"", ""sloted"", ""stoled""], [""oleander"", ""reloaned""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sloted\"", \""stoled\"", \""oldest\"", \""cestoid\"", \""coedits\"", \""cotised\"", \""rosetangle\"", \""estrangelo\"", \""clayen\"", \""lyance\"", \""oleander\"", \""reloaned\""]\n"",
    ""answer"": ""[[\""cestoid\"", \""coedits\"", \""cotised\""], [\""clayen\"", \""lyance\""], [\""estrangelo\"", \""rosetangle\""], [\""oldest\"", \""sloted\"", \""stoled\""], [\""oleander\"", \""reloaned\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 188,
        ""words"": [
            ""sloted"",
            ""stoled"",
            ""oldest"",
            ""cestoid"",
            ""coedits"",
            ""cotised"",
            ""rosetangle"",
            ""estrangelo"",
            ""clayen"",
            ""lyance"",
            ""oleander"",
            ""reloaned""
        ],
        ""solution"": [
            [
                ""cestoid"",
                ""coedits"",
                ""cotised""
            ],
            [
                ""clayen"",
                ""lyance""
            ],
            [
                ""estrangelo"",
                ""rosetangle""
            ],
            [
                ""oldest"",
                ""sloted"",
                ""stoled""
            ],
            [
                ""oleander"",
                ""reloaned""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
189,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""malaperts"", ""emplastra"", ""antipass"", ""pastinas"", ""wf"", ""fw"", ""lacoca"", ""cloaca"", ""thiotepas"", ""hospitate""]
","[[""antipass"", ""pastinas""], [""cloaca"", ""lacoca""], [""emplastra"", ""malaperts""], [""fw"", ""wf""], [""hospitate"", ""thiotepas""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""malaperts\"", \""emplastra\"", \""antipass\"", \""pastinas\"", \""wf\"", \""fw\"", \""lacoca\"", \""cloaca\"", \""thiotepas\"", \""hospitate\""]\n"",
    ""answer"": ""[[\""antipass\"", \""pastinas\""], [\""cloaca\"", \""lacoca\""], [\""emplastra\"", \""malaperts\""], [\""fw\"", \""wf\""], [\""hospitate\"", \""thiotepas\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 189,
        ""words"": [
            ""malaperts"",
            ""emplastra"",
            ""antipass"",
            ""pastinas"",
            ""wf"",
            ""fw"",
            ""lacoca"",
            ""cloaca"",
            ""thiotepas"",
            ""hospitate""
        ],
        ""solution"": [
            [
                ""antipass"",
                ""pastinas""
            ],
            [
                ""cloaca"",
                ""lacoca""
            ],
            [
                ""emplastra"",
                ""malaperts""
            ],
            [
                ""fw"",
                ""wf""
            ],
            [
                ""hospitate"",
                ""thiotepas""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
190,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""caserio"", ""coraise"", ""oc"", ""co"", ""cordate"", ""redcoat"", ""decator""]
","[[""caserio"", ""coraise""], [""co"", ""oc""], [""cordate"", ""decator"", ""redcoat""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""caserio\"", \""coraise\"", \""oc\"", \""co\"", \""cordate\"", \""redcoat\"", \""decator\""]\n"",
    ""answer"": ""[[\""caserio\"", \""coraise\""], [\""co\"", \""oc\""], [\""cordate\"", \""decator\"", \""redcoat\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 190,
        ""words"": [
            ""caserio"",
            ""coraise"",
            ""oc"",
            ""co"",
            ""cordate"",
            ""redcoat"",
            ""decator""
        ],
        ""solution"": [
            [
                ""caserio"",
                ""coraise""
            ],
            [
                ""co"",
                ""oc""
            ],
            [
                ""cordate"",
                ""decator"",
                ""redcoat""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
191,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""departed"", ""predated"", ""entrails"", ""trenails"", ""ob"", ""bo"", ""mod"", ""dom"", ""silesian"", ""sensilia"", ""phrasem"", ""hampers"", ""ledum"", ""muled""]
","[[""bo"", ""ob""], [""departed"", ""predated""], [""dom"", ""mod""], [""entrails"", ""trenails""], [""hampers"", ""phrasem""], [""ledum"", ""muled""], [""sensilia"", ""silesian""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""departed\"", \""predated\"", \""entrails\"", \""trenails\"", \""ob\"", \""bo\"", \""mod\"", \""dom\"", \""silesian\"", \""sensilia\"", \""phrasem\"", \""hampers\"", \""ledum\"", \""muled\""]\n"",
    ""answer"": ""[[\""bo\"", \""ob\""], [\""departed\"", \""predated\""], [\""dom\"", \""mod\""], [\""entrails\"", \""trenails\""], [\""hampers\"", \""phrasem\""], [\""ledum\"", \""muled\""], [\""sensilia\"", \""silesian\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 191,
        ""words"": [
            ""departed"",
            ""predated"",
            ""entrails"",
            ""trenails"",
            ""ob"",
            ""bo"",
            ""mod"",
            ""dom"",
            ""silesian"",
            ""sensilia"",
            ""phrasem"",
            ""hampers"",
            ""ledum"",
            ""muled""
        ],
        ""solution"": [
            [
                ""bo"",
                ""ob""
            ],
            [
                ""departed"",
                ""predated""
            ],
            [
                ""dom"",
                ""mod""
            ],
            [
                ""entrails"",
                ""trenails""
            ],
            [
                ""hampers"",
                ""phrasem""
            ],
            [
                ""ledum"",
                ""muled""
            ],
            [
                ""sensilia"",
                ""silesian""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
192,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sanitizer"", ""triazines"", ""boe"", ""obe"", ""naifly"", ""fainly""]
","[[""boe"", ""obe""], [""fainly"", ""naifly""], [""sanitizer"", ""triazines""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sanitizer\"", \""triazines\"", \""boe\"", \""obe\"", \""naifly\"", \""fainly\""]\n"",
    ""answer"": ""[[\""boe\"", \""obe\""], [\""fainly\"", \""naifly\""], [\""sanitizer\"", \""triazines\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 192,
        ""words"": [
            ""sanitizer"",
            ""triazines"",
            ""boe"",
            ""obe"",
            ""naifly"",
            ""fainly""
        ],
        ""solution"": [
            [
                ""boe"",
                ""obe""
            ],
            [
                ""fainly"",
                ""naifly""
            ],
            [
                ""sanitizer"",
                ""triazines""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
193,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""brides"", ""rebids"", ""biders"", ""otarine"", ""torenia"", ""pome"", ""mope"", ""poem"", ""whangee"", ""wanghee"", ""tickles"", ""stickle"", ""keltics"", ""stickel""]
","[[""biders"", ""brides"", ""rebids""], [""keltics"", ""stickel"", ""stickle"", ""tickles""], [""mope"", ""poem"", ""pome""], [""otarine"", ""torenia""], [""wanghee"", ""whangee""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""brides\"", \""rebids\"", \""biders\"", \""otarine\"", \""torenia\"", \""pome\"", \""mope\"", \""poem\"", \""whangee\"", \""wanghee\"", \""tickles\"", \""stickle\"", \""keltics\"", \""stickel\""]\n"",
    ""answer"": ""[[\""biders\"", \""brides\"", \""rebids\""], [\""keltics\"", \""stickel\"", \""stickle\"", \""tickles\""], [\""mope\"", \""poem\"", \""pome\""], [\""otarine\"", \""torenia\""], [\""wanghee\"", \""whangee\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 193,
        ""words"": [
            ""brides"",
            ""rebids"",
            ""biders"",
            ""otarine"",
            ""torenia"",
            ""pome"",
            ""mope"",
            ""poem"",
            ""whangee"",
            ""wanghee"",
            ""tickles"",
            ""stickle"",
            ""keltics"",
            ""stickel""
        ],
        ""solution"": [
            [
                ""biders"",
                ""brides"",
                ""rebids""
            ],
            [
                ""keltics"",
                ""stickel"",
                ""stickle"",
                ""tickles""
            ],
            [
                ""mope"",
                ""poem"",
                ""pome""
            ],
            [
                ""otarine"",
                ""torenia""
            ],
            [
                ""wanghee"",
                ""whangee""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
194,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lunacies"", ""aesculin"", ""trackside"", ""sidetrack"", ""slips"", ""lisps"", ""pliss"", ""pythonism"", ""hypnotism"", ""triantelope"", ""interpolate"", ""thyroiodin"", ""iodothyrin"", ""tweets"", ""tweest"", ""already"", ""aleyard"", ""berreaves"", ""bereavers""]
","[[""aesculin"", ""lunacies""], [""aleyard"", ""already""], [""bereavers"", ""berreaves""], [""hypnotism"", ""pythonism""], [""interpolate"", ""triantelope""], [""iodothyrin"", ""thyroiodin""], [""lisps"", ""pliss"", ""slips""], [""sidetrack"", ""trackside""], [""tweest"", ""tweets""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lunacies\"", \""aesculin\"", \""trackside\"", \""sidetrack\"", \""slips\"", \""lisps\"", \""pliss\"", \""pythonism\"", \""hypnotism\"", \""triantelope\"", \""interpolate\"", \""thyroiodin\"", \""iodothyrin\"", \""tweets\"", \""tweest\"", \""already\"", \""aleyard\"", \""berreaves\"", \""bereavers\""]\n"",
    ""answer"": ""[[\""aesculin\"", \""lunacies\""], [\""aleyard\"", \""already\""], [\""bereavers\"", \""berreaves\""], [\""hypnotism\"", \""pythonism\""], [\""interpolate\"", \""triantelope\""], [\""iodothyrin\"", \""thyroiodin\""], [\""lisps\"", \""pliss\"", \""slips\""], [\""sidetrack\"", \""trackside\""], [\""tweest\"", \""tweets\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 194,
        ""words"": [
            ""lunacies"",
            ""aesculin"",
            ""trackside"",
            ""sidetrack"",
            ""slips"",
            ""lisps"",
            ""pliss"",
            ""pythonism"",
            ""hypnotism"",
            ""triantelope"",
            ""interpolate"",
            ""thyroiodin"",
            ""iodothyrin"",
            ""tweets"",
            ""tweest"",
            ""already"",
            ""aleyard"",
            ""berreaves"",
            ""bereavers""
        ],
        ""solution"": [
            [
                ""aesculin"",
                ""lunacies""
            ],
            [
                ""aleyard"",
                ""already""
            ],
            [
                ""bereavers"",
                ""berreaves""
            ],
            [
                ""hypnotism"",
                ""pythonism""
            ],
            [
                ""interpolate"",
                ""triantelope""
            ],
            [
                ""iodothyrin"",
                ""thyroiodin""
            ],
            [
                ""lisps"",
                ""pliss"",
                ""slips""
            ],
            [
                ""sidetrack"",
                ""trackside""
            ],
            [
                ""tweest"",
                ""tweets""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
195,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unpreceptive"", ""unperceptive"", ""relegating"", ""regelating"", ""moiest"", ""somite"", ""osmite"", ""dewar"", ""wader"", ""lading"", ""angild"", ""ligand"", ""quesal"", ""equals"", ""lasque"", ""rectorates"", ""stercorate"", ""cedrin"", ""cinder""]
","[[""angild"", ""lading"", ""ligand""], [""cedrin"", ""cinder""], [""dewar"", ""wader""], [""equals"", ""lasque"", ""quesal""], [""moiest"", ""osmite"", ""somite""], [""rectorates"", ""stercorate""], [""regelating"", ""relegating""], [""unperceptive"", ""unpreceptive""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unpreceptive\"", \""unperceptive\"", \""relegating\"", \""regelating\"", \""moiest\"", \""somite\"", \""osmite\"", \""dewar\"", \""wader\"", \""lading\"", \""angild\"", \""ligand\"", \""quesal\"", \""equals\"", \""lasque\"", \""rectorates\"", \""stercorate\"", \""cedrin\"", \""cinder\""]\n"",
    ""answer"": ""[[\""angild\"", \""lading\"", \""ligand\""], [\""cedrin\"", \""cinder\""], [\""dewar\"", \""wader\""], [\""equals\"", \""lasque\"", \""quesal\""], [\""moiest\"", \""osmite\"", \""somite\""], [\""rectorates\"", \""stercorate\""], [\""regelating\"", \""relegating\""], [\""unperceptive\"", \""unpreceptive\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 195,
        ""words"": [
            ""unpreceptive"",
            ""unperceptive"",
            ""relegating"",
            ""regelating"",
            ""moiest"",
            ""somite"",
            ""osmite"",
            ""dewar"",
            ""wader"",
            ""lading"",
            ""angild"",
            ""ligand"",
            ""quesal"",
            ""equals"",
            ""lasque"",
            ""rectorates"",
            ""stercorate"",
            ""cedrin"",
            ""cinder""
        ],
        ""solution"": [
            [
                ""angild"",
                ""lading"",
                ""ligand""
            ],
            [
                ""cedrin"",
                ""cinder""
            ],
            [
                ""dewar"",
                ""wader""
            ],
            [
                ""equals"",
                ""lasque"",
                ""quesal""
            ],
            [
                ""moiest"",
                ""osmite"",
                ""somite""
            ],
            [
                ""rectorates"",
                ""stercorate""
            ],
            [
                ""regelating"",
                ""relegating""
            ],
            [
                ""unperceptive"",
                ""unpreceptive""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
196,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""paint"", ""inapt"", ""patin"", ""pinta"", ""implacental"", ""capillament"", ""cavalries"", ""calvaries"", ""cavaliers"", ""fianna"", ""fannia"", ""stingier"", ""strigine"", ""igniters""]
","[[""calvaries"", ""cavaliers"", ""cavalries""], [""capillament"", ""implacental""], [""fannia"", ""fianna""], [""igniters"", ""stingier"", ""strigine""], [""inapt"", ""paint"", ""patin"", ""pinta""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""paint\"", \""inapt\"", \""patin\"", \""pinta\"", \""implacental\"", \""capillament\"", \""cavalries\"", \""calvaries\"", \""cavaliers\"", \""fianna\"", \""fannia\"", \""stingier\"", \""strigine\"", \""igniters\""]\n"",
    ""answer"": ""[[\""calvaries\"", \""cavaliers\"", \""cavalries\""], [\""capillament\"", \""implacental\""], [\""fannia\"", \""fianna\""], [\""igniters\"", \""stingier\"", \""strigine\""], [\""inapt\"", \""paint\"", \""patin\"", \""pinta\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 196,
        ""words"": [
            ""paint"",
            ""inapt"",
            ""patin"",
            ""pinta"",
            ""implacental"",
            ""capillament"",
            ""cavalries"",
            ""calvaries"",
            ""cavaliers"",
            ""fianna"",
            ""fannia"",
            ""stingier"",
            ""strigine"",
            ""igniters""
        ],
        ""solution"": [
            [
                ""calvaries"",
                ""cavaliers"",
                ""cavalries""
            ],
            [
                ""capillament"",
                ""implacental""
            ],
            [
                ""fannia"",
                ""fianna""
            ],
            [
                ""igniters"",
                ""stingier"",
                ""strigine""
            ],
            [
                ""inapt"",
                ""paint"",
                ""patin"",
                ""pinta""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
197,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""autometric"", ""tautomeric"", ""canvaser"", ""recanvas"", ""unmate"", ""unteam"", ""untame"", ""ham"", ""mah"", ""modernised"", ""endodermis"", ""temperas"", ""presteam"", ""lorcha"", ""choral"", ""reuse"", ""resue"", ""learn"", ""neral"", ""rubify"", ""urbify""]
","[[""autometric"", ""tautomeric""], [""canvaser"", ""recanvas""], [""choral"", ""lorcha""], [""endodermis"", ""modernised""], [""ham"", ""mah""], [""learn"", ""neral""], [""presteam"", ""temperas""], [""resue"", ""reuse""], [""rubify"", ""urbify""], [""unmate"", ""untame"", ""unteam""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""autometric\"", \""tautomeric\"", \""canvaser\"", \""recanvas\"", \""unmate\"", \""unteam\"", \""untame\"", \""ham\"", \""mah\"", \""modernised\"", \""endodermis\"", \""temperas\"", \""presteam\"", \""lorcha\"", \""choral\"", \""reuse\"", \""resue\"", \""learn\"", \""neral\"", \""rubify\"", \""urbify\""]\n"",
    ""answer"": ""[[\""autometric\"", \""tautomeric\""], [\""canvaser\"", \""recanvas\""], [\""choral\"", \""lorcha\""], [\""endodermis\"", \""modernised\""], [\""ham\"", \""mah\""], [\""learn\"", \""neral\""], [\""presteam\"", \""temperas\""], [\""resue\"", \""reuse\""], [\""rubify\"", \""urbify\""], [\""unmate\"", \""untame\"", \""unteam\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 197,
        ""words"": [
            ""autometric"",
            ""tautomeric"",
            ""canvaser"",
            ""recanvas"",
            ""unmate"",
            ""unteam"",
            ""untame"",
            ""ham"",
            ""mah"",
            ""modernised"",
            ""endodermis"",
            ""temperas"",
            ""presteam"",
            ""lorcha"",
            ""choral"",
            ""reuse"",
            ""resue"",
            ""learn"",
            ""neral"",
            ""rubify"",
            ""urbify""
        ],
        ""solution"": [
            [
                ""autometric"",
                ""tautomeric""
            ],
            [
                ""canvaser"",
                ""recanvas""
            ],
            [
                ""choral"",
                ""lorcha""
            ],
            [
                ""endodermis"",
                ""modernised""
            ],
            [
                ""ham"",
                ""mah""
            ],
            [
                ""learn"",
                ""neral""
            ],
            [
                ""presteam"",
                ""temperas""
            ],
            [
                ""resue"",
                ""reuse""
            ],
            [
                ""rubify"",
                ""urbify""
            ],
            [
                ""unmate"",
                ""untame"",
                ""unteam""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
198,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""recontests"", ""contesters"", ""striper"", ""restrip"", ""tragions"", ""orangist"", ""organist"", ""signator"", ""wordsmanship"", ""swordmanship""]
","[[""contesters"", ""recontests""], [""orangist"", ""organist"", ""signator"", ""tragions""], [""restrip"", ""striper""], [""swordmanship"", ""wordsmanship""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""recontests\"", \""contesters\"", \""striper\"", \""restrip\"", \""tragions\"", \""orangist\"", \""organist\"", \""signator\"", \""wordsmanship\"", \""swordmanship\""]\n"",
    ""answer"": ""[[\""contesters\"", \""recontests\""], [\""orangist\"", \""organist\"", \""signator\"", \""tragions\""], [\""restrip\"", \""striper\""], [\""swordmanship\"", \""wordsmanship\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 198,
        ""words"": [
            ""recontests"",
            ""contesters"",
            ""striper"",
            ""restrip"",
            ""tragions"",
            ""orangist"",
            ""organist"",
            ""signator"",
            ""wordsmanship"",
            ""swordmanship""
        ],
        ""solution"": [
            [
                ""contesters"",
                ""recontests""
            ],
            [
                ""orangist"",
                ""organist"",
                ""signator"",
                ""tragions""
            ],
            [
                ""restrip"",
                ""striper""
            ],
            [
                ""swordmanship"",
                ""wordsmanship""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
199,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""serpari"", ""praiser"", ""raspier"", ""parries"", ""aspirer"", ""sirening"", ""resining""]
","[[""aspirer"", ""parries"", ""praiser"", ""raspier"", ""serpari""], [""resining"", ""sirening""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""serpari\"", \""praiser\"", \""raspier\"", \""parries\"", \""aspirer\"", \""sirening\"", \""resining\""]\n"",
    ""answer"": ""[[\""aspirer\"", \""parries\"", \""praiser\"", \""raspier\"", \""serpari\""], [\""resining\"", \""sirening\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 199,
        ""words"": [
            ""serpari"",
            ""praiser"",
            ""raspier"",
            ""parries"",
            ""aspirer"",
            ""sirening"",
            ""resining""
        ],
        ""solution"": [
            [
                ""aspirer"",
                ""parries"",
                ""praiser"",
                ""raspier"",
                ""serpari""
            ],
            [
                ""resining"",
                ""sirening""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
200,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""basically"", ""asyllabic"", ""carpool"", ""copolar"", ""stromed"", ""stormed"", ""nagara"", ""angara"", ""aranga"", ""nuagism"", ""amusing"", ""toeshoe"", ""shootee""]
","[[""amusing"", ""nuagism""], [""angara"", ""aranga"", ""nagara""], [""asyllabic"", ""basically""], [""carpool"", ""copolar""], [""shootee"", ""toeshoe""], [""stormed"", ""stromed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""basically\"", \""asyllabic\"", \""carpool\"", \""copolar\"", \""stromed\"", \""stormed\"", \""nagara\"", \""angara\"", \""aranga\"", \""nuagism\"", \""amusing\"", \""toeshoe\"", \""shootee\""]\n"",
    ""answer"": ""[[\""amusing\"", \""nuagism\""], [\""angara\"", \""aranga\"", \""nagara\""], [\""asyllabic\"", \""basically\""], [\""carpool\"", \""copolar\""], [\""shootee\"", \""toeshoe\""], [\""stormed\"", \""stromed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 200,
        ""words"": [
            ""basically"",
            ""asyllabic"",
            ""carpool"",
            ""copolar"",
            ""stromed"",
            ""stormed"",
            ""nagara"",
            ""angara"",
            ""aranga"",
            ""nuagism"",
            ""amusing"",
            ""toeshoe"",
            ""shootee""
        ],
        ""solution"": [
            [
                ""amusing"",
                ""nuagism""
            ],
            [
                ""angara"",
                ""aranga"",
                ""nagara""
            ],
            [
                ""asyllabic"",
                ""basically""
            ],
            [
                ""carpool"",
                ""copolar""
            ],
            [
                ""shootee"",
                ""toeshoe""
            ],
            [
                ""stormed"",
                ""stromed""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
201,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gtt"", ""tgt"", ""cleamer"", ""carmele"", ""prosperation"", ""reapportions"", ""semiovoidal"", ""semiovaloid""]
","[[""carmele"", ""cleamer""], [""gtt"", ""tgt""], [""prosperation"", ""reapportions""], [""semiovaloid"", ""semiovoidal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gtt\"", \""tgt\"", \""cleamer\"", \""carmele\"", \""prosperation\"", \""reapportions\"", \""semiovoidal\"", \""semiovaloid\""]\n"",
    ""answer"": ""[[\""carmele\"", \""cleamer\""], [\""gtt\"", \""tgt\""], [\""prosperation\"", \""reapportions\""], [\""semiovaloid\"", \""semiovoidal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 201,
        ""words"": [
            ""gtt"",
            ""tgt"",
            ""cleamer"",
            ""carmele"",
            ""prosperation"",
            ""reapportions"",
            ""semiovoidal"",
            ""semiovaloid""
        ],
        ""solution"": [
            [
                ""carmele"",
                ""cleamer""
            ],
            [
                ""gtt"",
                ""tgt""
            ],
            [
                ""prosperation"",
                ""reapportions""
            ],
            [
                ""semiovaloid"",
                ""semiovoidal""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
202,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cholesteremia"", ""heteroecismal"", ""torments"", ""sortment"", ""totalled"", ""allotted"", ""vileyns"", ""sylvine"", ""snively"", ""nailery"", ""lineary"", ""inlayer"", ""ebonise"", ""ebonies"", ""ges"", ""seg""]
","[[""allotted"", ""totalled""], [""cholesteremia"", ""heteroecismal""], [""ebonies"", ""ebonise""], [""ges"", ""seg""], [""inlayer"", ""lineary"", ""nailery""], [""snively"", ""sylvine"", ""vileyns""], [""sortment"", ""torments""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cholesteremia\"", \""heteroecismal\"", \""torments\"", \""sortment\"", \""totalled\"", \""allotted\"", \""vileyns\"", \""sylvine\"", \""snively\"", \""nailery\"", \""lineary\"", \""inlayer\"", \""ebonise\"", \""ebonies\"", \""ges\"", \""seg\""]\n"",
    ""answer"": ""[[\""allotted\"", \""totalled\""], [\""cholesteremia\"", \""heteroecismal\""], [\""ebonies\"", \""ebonise\""], [\""ges\"", \""seg\""], [\""inlayer\"", \""lineary\"", \""nailery\""], [\""snively\"", \""sylvine\"", \""vileyns\""], [\""sortment\"", \""torments\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 202,
        ""words"": [
            ""cholesteremia"",
            ""heteroecismal"",
            ""torments"",
            ""sortment"",
            ""totalled"",
            ""allotted"",
            ""vileyns"",
            ""sylvine"",
            ""snively"",
            ""nailery"",
            ""lineary"",
            ""inlayer"",
            ""ebonise"",
            ""ebonies"",
            ""ges"",
            ""seg""
        ],
        ""solution"": [
            [
                ""allotted"",
                ""totalled""
            ],
            [
                ""cholesteremia"",
                ""heteroecismal""
            ],
            [
                ""ebonies"",
                ""ebonise""
            ],
            [
                ""ges"",
                ""seg""
            ],
            [
                ""inlayer"",
                ""lineary"",
                ""nailery""
            ],
            [
                ""snively"",
                ""sylvine"",
                ""vileyns""
            ],
            [
                ""sortment"",
                ""torments""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
203,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tetarcone"", ""orcanette"", ""gnarred"", ""grander"", ""phytogenic"", ""typhogenic"", ""pythogenic"", ""diamagnet"", ""agminated"", ""cervicofacial"", ""faciocervical"", ""craniate"", ""carinate"", ""arcanite"", ""anaretic"", ""nautics"", ""anticus""]
","[[""agminated"", ""diamagnet""], [""anaretic"", ""arcanite"", ""carinate"", ""craniate""], [""anticus"", ""nautics""], [""cervicofacial"", ""faciocervical""], [""gnarred"", ""grander""], [""orcanette"", ""tetarcone""], [""phytogenic"", ""pythogenic"", ""typhogenic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tetarcone\"", \""orcanette\"", \""gnarred\"", \""grander\"", \""phytogenic\"", \""typhogenic\"", \""pythogenic\"", \""diamagnet\"", \""agminated\"", \""cervicofacial\"", \""faciocervical\"", \""craniate\"", \""carinate\"", \""arcanite\"", \""anaretic\"", \""nautics\"", \""anticus\""]\n"",
    ""answer"": ""[[\""agminated\"", \""diamagnet\""], [\""anaretic\"", \""arcanite\"", \""carinate\"", \""craniate\""], [\""anticus\"", \""nautics\""], [\""cervicofacial\"", \""faciocervical\""], [\""gnarred\"", \""grander\""], [\""orcanette\"", \""tetarcone\""], [\""phytogenic\"", \""pythogenic\"", \""typhogenic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 203,
        ""words"": [
            ""tetarcone"",
            ""orcanette"",
            ""gnarred"",
            ""grander"",
            ""phytogenic"",
            ""typhogenic"",
            ""pythogenic"",
            ""diamagnet"",
            ""agminated"",
            ""cervicofacial"",
            ""faciocervical"",
            ""craniate"",
            ""carinate"",
            ""arcanite"",
            ""anaretic"",
            ""nautics"",
            ""anticus""
        ],
        ""solution"": [
            [
                ""agminated"",
                ""diamagnet""
            ],
            [
                ""anaretic"",
                ""arcanite"",
                ""carinate"",
                ""craniate""
            ],
            [
                ""anticus"",
                ""nautics""
            ],
            [
                ""cervicofacial"",
                ""faciocervical""
            ],
            [
                ""gnarred"",
                ""grander""
            ],
            [
                ""orcanette"",
                ""tetarcone""
            ],
            [
                ""phytogenic"",
                ""pythogenic"",
                ""typhogenic""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
204,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gamin"", ""mangi"", ""unroosting"", ""outsnoring"", ""demies"", ""diseme"", ""demise"", ""annet"", ""anent"", ""disanimate"", ""mediastina"", ""nightman"", ""thingman"", ""graben"", ""engarb"", ""banger""]
","[[""anent"", ""annet""], [""banger"", ""engarb"", ""graben""], [""demies"", ""demise"", ""diseme""], [""disanimate"", ""mediastina""], [""gamin"", ""mangi""], [""nightman"", ""thingman""], [""outsnoring"", ""unroosting""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gamin\"", \""mangi\"", \""unroosting\"", \""outsnoring\"", \""demies\"", \""diseme\"", \""demise\"", \""annet\"", \""anent\"", \""disanimate\"", \""mediastina\"", \""nightman\"", \""thingman\"", \""graben\"", \""engarb\"", \""banger\""]\n"",
    ""answer"": ""[[\""anent\"", \""annet\""], [\""banger\"", \""engarb\"", \""graben\""], [\""demies\"", \""demise\"", \""diseme\""], [\""disanimate\"", \""mediastina\""], [\""gamin\"", \""mangi\""], [\""nightman\"", \""thingman\""], [\""outsnoring\"", \""unroosting\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 204,
        ""words"": [
            ""gamin"",
            ""mangi"",
            ""unroosting"",
            ""outsnoring"",
            ""demies"",
            ""diseme"",
            ""demise"",
            ""annet"",
            ""anent"",
            ""disanimate"",
            ""mediastina"",
            ""nightman"",
            ""thingman"",
            ""graben"",
            ""engarb"",
            ""banger""
        ],
        ""solution"": [
            [
                ""anent"",
                ""annet""
            ],
            [
                ""banger"",
                ""engarb"",
                ""graben""
            ],
            [
                ""demies"",
                ""demise"",
                ""diseme""
            ],
            [
                ""disanimate"",
                ""mediastina""
            ],
            [
                ""gamin"",
                ""mangi""
            ],
            [
                ""nightman"",
                ""thingman""
            ],
            [
                ""outsnoring"",
                ""unroosting""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
205,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""undoes"", ""undose"", ""subboreal"", ""belabours"", ""technical"", ""catchline"", ""respelling"", ""preselling"", ""eyrar"", ""yarer"", ""alstonidine"", ""nonidealist"", ""seculum"", ""muscule"", ""biberon"", ""nobbier"", ""pigmy"", ""gimpy""]
","[[""alstonidine"", ""nonidealist""], [""belabours"", ""subboreal""], [""biberon"", ""nobbier""], [""catchline"", ""technical""], [""eyrar"", ""yarer""], [""gimpy"", ""pigmy""], [""muscule"", ""seculum""], [""preselling"", ""respelling""], [""undoes"", ""undose""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""undoes\"", \""undose\"", \""subboreal\"", \""belabours\"", \""technical\"", \""catchline\"", \""respelling\"", \""preselling\"", \""eyrar\"", \""yarer\"", \""alstonidine\"", \""nonidealist\"", \""seculum\"", \""muscule\"", \""biberon\"", \""nobbier\"", \""pigmy\"", \""gimpy\""]\n"",
    ""answer"": ""[[\""alstonidine\"", \""nonidealist\""], [\""belabours\"", \""subboreal\""], [\""biberon\"", \""nobbier\""], [\""catchline\"", \""technical\""], [\""eyrar\"", \""yarer\""], [\""gimpy\"", \""pigmy\""], [\""muscule\"", \""seculum\""], [\""preselling\"", \""respelling\""], [\""undoes\"", \""undose\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 205,
        ""words"": [
            ""undoes"",
            ""undose"",
            ""subboreal"",
            ""belabours"",
            ""technical"",
            ""catchline"",
            ""respelling"",
            ""preselling"",
            ""eyrar"",
            ""yarer"",
            ""alstonidine"",
            ""nonidealist"",
            ""seculum"",
            ""muscule"",
            ""biberon"",
            ""nobbier"",
            ""pigmy"",
            ""gimpy""
        ],
        ""solution"": [
            [
                ""alstonidine"",
                ""nonidealist""
            ],
            [
                ""belabours"",
                ""subboreal""
            ],
            [
                ""biberon"",
                ""nobbier""
            ],
            [
                ""catchline"",
                ""technical""
            ],
            [
                ""eyrar"",
                ""yarer""
            ],
            [
                ""gimpy"",
                ""pigmy""
            ],
            [
                ""muscule"",
                ""seculum""
            ],
            [
                ""preselling"",
                ""respelling""
            ],
            [
                ""undoes"",
                ""undose""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
206,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""anthemis"", ""hematins"", ""enorm"", ""moner"", ""strumose"", ""oestrums"", ""millnia"", ""liminal"", ""ambrosia"", ""saboraim"", ""ans"", ""san"", ""backlashed"", ""blackheads""]
","[[""ambrosia"", ""saboraim""], [""ans"", ""san""], [""anthemis"", ""hematins""], [""backlashed"", ""blackheads""], [""enorm"", ""moner""], [""liminal"", ""millnia""], [""oestrums"", ""strumose""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""anthemis\"", \""hematins\"", \""enorm\"", \""moner\"", \""strumose\"", \""oestrums\"", \""millnia\"", \""liminal\"", \""ambrosia\"", \""saboraim\"", \""ans\"", \""san\"", \""backlashed\"", \""blackheads\""]\n"",
    ""answer"": ""[[\""ambrosia\"", \""saboraim\""], [\""ans\"", \""san\""], [\""anthemis\"", \""hematins\""], [\""backlashed\"", \""blackheads\""], [\""enorm\"", \""moner\""], [\""liminal\"", \""millnia\""], [\""oestrums\"", \""strumose\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 206,
        ""words"": [
            ""anthemis"",
            ""hematins"",
            ""enorm"",
            ""moner"",
            ""strumose"",
            ""oestrums"",
            ""millnia"",
            ""liminal"",
            ""ambrosia"",
            ""saboraim"",
            ""ans"",
            ""san"",
            ""backlashed"",
            ""blackheads""
        ],
        ""solution"": [
            [
                ""ambrosia"",
                ""saboraim""
            ],
            [
                ""ans"",
                ""san""
            ],
            [
                ""anthemis"",
                ""hematins""
            ],
            [
                ""backlashed"",
                ""blackheads""
            ],
            [
                ""enorm"",
                ""moner""
            ],
            [
                ""liminal"",
                ""millnia""
            ],
            [
                ""oestrums"",
                ""strumose""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
207,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""theobald"", ""bolthead"", ""retinalite"", ""trilineate"", ""noisette"", ""stoneite"", ""teosinte""]
","[[""bolthead"", ""theobald""], [""noisette"", ""stoneite"", ""teosinte""], [""retinalite"", ""trilineate""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""theobald\"", \""bolthead\"", \""retinalite\"", \""trilineate\"", \""noisette\"", \""stoneite\"", \""teosinte\""]\n"",
    ""answer"": ""[[\""bolthead\"", \""theobald\""], [\""noisette\"", \""stoneite\"", \""teosinte\""], [\""retinalite\"", \""trilineate\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 207,
        ""words"": [
            ""theobald"",
            ""bolthead"",
            ""retinalite"",
            ""trilineate"",
            ""noisette"",
            ""stoneite"",
            ""teosinte""
        ],
        ""solution"": [
            [
                ""bolthead"",
                ""theobald""
            ],
            [
                ""noisette"",
                ""stoneite"",
                ""teosinte""
            ],
            [
                ""retinalite"",
                ""trilineate""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
208,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""genitals"", ""stealing"", ""galenist"", ""fracted"", ""crafted""]
","[[""crafted"", ""fracted""], [""galenist"", ""genitals"", ""stealing""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""genitals\"", \""stealing\"", \""galenist\"", \""fracted\"", \""crafted\""]\n"",
    ""answer"": ""[[\""crafted\"", \""fracted\""], [\""galenist\"", \""genitals\"", \""stealing\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 208,
        ""words"": [
            ""genitals"",
            ""stealing"",
            ""galenist"",
            ""fracted"",
            ""crafted""
        ],
        ""solution"": [
            [
                ""crafted"",
                ""fracted""
            ],
            [
                ""galenist"",
                ""genitals"",
                ""stealing""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
209,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""topato"", ""potato"", ""pattoo"", ""apteran"", ""arpanet"", ""demote"", ""emoted"", ""nazi"", ""zain"", ""respeak"", ""speaker"", ""nonhepatic"", ""nonaphetic"", ""pantheonic"", ""amassette"", ""seatmates"", ""cassandra"", ""sandaracs"", ""serotonin"", ""ironstone"", ""volage"", ""lovage""]
","[[""amassette"", ""seatmates""], [""apteran"", ""arpanet""], [""cassandra"", ""sandaracs""], [""demote"", ""emoted""], [""ironstone"", ""serotonin""], [""lovage"", ""volage""], [""nazi"", ""zain""], [""nonaphetic"", ""nonhepatic"", ""pantheonic""], [""pattoo"", ""potato"", ""topato""], [""respeak"", ""speaker""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""topato\"", \""potato\"", \""pattoo\"", \""apteran\"", \""arpanet\"", \""demote\"", \""emoted\"", \""nazi\"", \""zain\"", \""respeak\"", \""speaker\"", \""nonhepatic\"", \""nonaphetic\"", \""pantheonic\"", \""amassette\"", \""seatmates\"", \""cassandra\"", \""sandaracs\"", \""serotonin\"", \""ironstone\"", \""volage\"", \""lovage\""]\n"",
    ""answer"": ""[[\""amassette\"", \""seatmates\""], [\""apteran\"", \""arpanet\""], [\""cassandra\"", \""sandaracs\""], [\""demote\"", \""emoted\""], [\""ironstone\"", \""serotonin\""], [\""lovage\"", \""volage\""], [\""nazi\"", \""zain\""], [\""nonaphetic\"", \""nonhepatic\"", \""pantheonic\""], [\""pattoo\"", \""potato\"", \""topato\""], [\""respeak\"", \""speaker\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 209,
        ""words"": [
            ""topato"",
            ""potato"",
            ""pattoo"",
            ""apteran"",
            ""arpanet"",
            ""demote"",
            ""emoted"",
            ""nazi"",
            ""zain"",
            ""respeak"",
            ""speaker"",
            ""nonhepatic"",
            ""nonaphetic"",
            ""pantheonic"",
            ""amassette"",
            ""seatmates"",
            ""cassandra"",
            ""sandaracs"",
            ""serotonin"",
            ""ironstone"",
            ""volage"",
            ""lovage""
        ],
        ""solution"": [
            [
                ""amassette"",
                ""seatmates""
            ],
            [
                ""apteran"",
                ""arpanet""
            ],
            [
                ""cassandra"",
                ""sandaracs""
            ],
            [
                ""demote"",
                ""emoted""
            ],
            [
                ""ironstone"",
                ""serotonin""
            ],
            [
                ""lovage"",
                ""volage""
            ],
            [
                ""nazi"",
                ""zain""
            ],
            [
                ""nonaphetic"",
                ""nonhepatic"",
                ""pantheonic""
            ],
            [
                ""pattoo"",
                ""potato"",
                ""topato""
            ],
            [
                ""respeak"",
                ""speaker""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
210,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""adpress"", ""spreads"", ""spaders"", ""gangwa"", ""wagang"", ""marrowish"", ""hairworms"", ""lasso"", ""ossal"", ""foretaste"", ""forestate"", ""labioglossopharyngeal"", ""glossolabiopharyngeal"", ""noshing"", ""shingon""]
","[[""adpress"", ""spaders"", ""spreads""], [""forestate"", ""foretaste""], [""gangwa"", ""wagang""], [""glossolabiopharyngeal"", ""labioglossopharyngeal""], [""hairworms"", ""marrowish""], [""lasso"", ""ossal""], [""noshing"", ""shingon""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""adpress\"", \""spreads\"", \""spaders\"", \""gangwa\"", \""wagang\"", \""marrowish\"", \""hairworms\"", \""lasso\"", \""ossal\"", \""foretaste\"", \""forestate\"", \""labioglossopharyngeal\"", \""glossolabiopharyngeal\"", \""noshing\"", \""shingon\""]\n"",
    ""answer"": ""[[\""adpress\"", \""spaders\"", \""spreads\""], [\""forestate\"", \""foretaste\""], [\""gangwa\"", \""wagang\""], [\""glossolabiopharyngeal\"", \""labioglossopharyngeal\""], [\""hairworms\"", \""marrowish\""], [\""lasso\"", \""ossal\""], [\""noshing\"", \""shingon\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 210,
        ""words"": [
            ""adpress"",
            ""spreads"",
            ""spaders"",
            ""gangwa"",
            ""wagang"",
            ""marrowish"",
            ""hairworms"",
            ""lasso"",
            ""ossal"",
            ""foretaste"",
            ""forestate"",
            ""labioglossopharyngeal"",
            ""glossolabiopharyngeal"",
            ""noshing"",
            ""shingon""
        ],
        ""solution"": [
            [
                ""adpress"",
                ""spaders"",
                ""spreads""
            ],
            [
                ""forestate"",
                ""foretaste""
            ],
            [
                ""gangwa"",
                ""wagang""
            ],
            [
                ""glossolabiopharyngeal"",
                ""labioglossopharyngeal""
            ],
            [
                ""hairworms"",
                ""marrowish""
            ],
            [
                ""lasso"",
                ""ossal""
            ],
            [
                ""noshing"",
                ""shingon""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
211,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""turcoman"", ""courtman"", ""genom"", ""emong"", ""gnome"", ""goliad"", ""dialog"", ""algoid"", ""escarping"", ""respacing"", ""yat"", ""tay"", ""crocodile"", ""cordicole"", ""beele"", ""belee"", ""chiromantic"", ""chromatinic"", ""sheat"", ""hates"", ""heats"", ""haste"", ""haets"", ""bari"", ""abir""]
","[[""abir"", ""bari""], [""algoid"", ""dialog"", ""goliad""], [""beele"", ""belee""], [""chiromantic"", ""chromatinic""], [""cordicole"", ""crocodile""], [""courtman"", ""turcoman""], [""emong"", ""genom"", ""gnome""], [""escarping"", ""respacing""], [""haets"", ""haste"", ""hates"", ""heats"", ""sheat""], [""tay"", ""yat""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""turcoman\"", \""courtman\"", \""genom\"", \""emong\"", \""gnome\"", \""goliad\"", \""dialog\"", \""algoid\"", \""escarping\"", \""respacing\"", \""yat\"", \""tay\"", \""crocodile\"", \""cordicole\"", \""beele\"", \""belee\"", \""chiromantic\"", \""chromatinic\"", \""sheat\"", \""hates\"", \""heats\"", \""haste\"", \""haets\"", \""bari\"", \""abir\""]\n"",
    ""answer"": ""[[\""abir\"", \""bari\""], [\""algoid\"", \""dialog\"", \""goliad\""], [\""beele\"", \""belee\""], [\""chiromantic\"", \""chromatinic\""], [\""cordicole\"", \""crocodile\""], [\""courtman\"", \""turcoman\""], [\""emong\"", \""genom\"", \""gnome\""], [\""escarping\"", \""respacing\""], [\""haets\"", \""haste\"", \""hates\"", \""heats\"", \""sheat\""], [\""tay\"", \""yat\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 211,
        ""words"": [
            ""turcoman"",
            ""courtman"",
            ""genom"",
            ""emong"",
            ""gnome"",
            ""goliad"",
            ""dialog"",
            ""algoid"",
            ""escarping"",
            ""respacing"",
            ""yat"",
            ""tay"",
            ""crocodile"",
            ""cordicole"",
            ""beele"",
            ""belee"",
            ""chiromantic"",
            ""chromatinic"",
            ""sheat"",
            ""hates"",
            ""heats"",
            ""haste"",
            ""haets"",
            ""bari"",
            ""abir""
        ],
        ""solution"": [
            [
                ""abir"",
                ""bari""
            ],
            [
                ""algoid"",
                ""dialog"",
                ""goliad""
            ],
            [
                ""beele"",
                ""belee""
            ],
            [
                ""chiromantic"",
                ""chromatinic""
            ],
            [
                ""cordicole"",
                ""crocodile""
            ],
            [
                ""courtman"",
                ""turcoman""
            ],
            [
                ""emong"",
                ""genom"",
                ""gnome""
            ],
            [
                ""escarping"",
                ""respacing""
            ],
            [
                ""haets"",
                ""haste"",
                ""hates"",
                ""heats"",
                ""sheat""
            ],
            [
                ""tay"",
                ""yat""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
212,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""uridines"", ""disinure"", ""prereceiving"", ""reperceiving"", ""ingnue"", ""ingenu"", ""inguen"", ""fanakalo"", ""fanaloka"", ""sambo"", ""ambos"", ""demonial"", ""melanoid"", ""apolune"", ""panuelo"", ""outre"", ""route""]
","[[""ambos"", ""sambo""], [""apolune"", ""panuelo""], [""demonial"", ""melanoid""], [""disinure"", ""uridines""], [""fanakalo"", ""fanaloka""], [""ingenu"", ""ingnue"", ""inguen""], [""outre"", ""route""], [""prereceiving"", ""reperceiving""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""uridines\"", \""disinure\"", \""prereceiving\"", \""reperceiving\"", \""ingnue\"", \""ingenu\"", \""inguen\"", \""fanakalo\"", \""fanaloka\"", \""sambo\"", \""ambos\"", \""demonial\"", \""melanoid\"", \""apolune\"", \""panuelo\"", \""outre\"", \""route\""]\n"",
    ""answer"": ""[[\""ambos\"", \""sambo\""], [\""apolune\"", \""panuelo\""], [\""demonial\"", \""melanoid\""], [\""disinure\"", \""uridines\""], [\""fanakalo\"", \""fanaloka\""], [\""ingenu\"", \""ingnue\"", \""inguen\""], [\""outre\"", \""route\""], [\""prereceiving\"", \""reperceiving\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 212,
        ""words"": [
            ""uridines"",
            ""disinure"",
            ""prereceiving"",
            ""reperceiving"",
            ""ingnue"",
            ""ingenu"",
            ""inguen"",
            ""fanakalo"",
            ""fanaloka"",
            ""sambo"",
            ""ambos"",
            ""demonial"",
            ""melanoid"",
            ""apolune"",
            ""panuelo"",
            ""outre"",
            ""route""
        ],
        ""solution"": [
            [
                ""ambos"",
                ""sambo""
            ],
            [
                ""apolune"",
                ""panuelo""
            ],
            [
                ""demonial"",
                ""melanoid""
            ],
            [
                ""disinure"",
                ""uridines""
            ],
            [
                ""fanakalo"",
                ""fanaloka""
            ],
            [
                ""ingenu"",
                ""ingnue"",
                ""inguen""
            ],
            [
                ""outre"",
                ""route""
            ],
            [
                ""prereceiving"",
                ""reperceiving""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
213,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""exotics"", ""coxiest"", ""coexist"", ""files"", ""felis"", ""flies"", ""calamar"", ""amlacra"", ""eskimos"", ""smokies""]
","[[""amlacra"", ""calamar""], [""coexist"", ""coxiest"", ""exotics""], [""eskimos"", ""smokies""], [""felis"", ""files"", ""flies""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""exotics\"", \""coxiest\"", \""coexist\"", \""files\"", \""felis\"", \""flies\"", \""calamar\"", \""amlacra\"", \""eskimos\"", \""smokies\""]\n"",
    ""answer"": ""[[\""amlacra\"", \""calamar\""], [\""coexist\"", \""coxiest\"", \""exotics\""], [\""eskimos\"", \""smokies\""], [\""felis\"", \""files\"", \""flies\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 213,
        ""words"": [
            ""exotics"",
            ""coxiest"",
            ""coexist"",
            ""files"",
            ""felis"",
            ""flies"",
            ""calamar"",
            ""amlacra"",
            ""eskimos"",
            ""smokies""
        ],
        ""solution"": [
            [
                ""amlacra"",
                ""calamar""
            ],
            [
                ""coexist"",
                ""coxiest"",
                ""exotics""
            ],
            [
                ""eskimos"",
                ""smokies""
            ],
            [
                ""felis"",
                ""files"",
                ""flies""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
214,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gonged"", ""nogged"", ""dithecous"", ""outchides""]
","[[""dithecous"", ""outchides""], [""gonged"", ""nogged""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gonged\"", \""nogged\"", \""dithecous\"", \""outchides\""]\n"",
    ""answer"": ""[[\""dithecous\"", \""outchides\""], [\""gonged\"", \""nogged\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 214,
        ""words"": [
            ""gonged"",
            ""nogged"",
            ""dithecous"",
            ""outchides""
        ],
        ""solution"": [
            [
                ""dithecous"",
                ""outchides""
            ],
            [
                ""gonged"",
                ""nogged""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
215,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""daundered"", ""underdead"", ""undreaded"", ""adad"", ""adda"", ""dada"", ""sidle"", ""slide"", ""delis"", ""isled"", ""deils"", ""sorbitan"", ""taborins"", ""frier"", ""firer"", ""tanks"", ""stank"", ""pigeontail"", ""plagionite"", ""bailage"", ""algieba"", ""samplery"", ""lampreys""]
","[[""adad"", ""adda"", ""dada""], [""algieba"", ""bailage""], [""daundered"", ""underdead"", ""undreaded""], [""deils"", ""delis"", ""isled"", ""sidle"", ""slide""], [""firer"", ""frier""], [""lampreys"", ""samplery""], [""pigeontail"", ""plagionite""], [""sorbitan"", ""taborins""], [""stank"", ""tanks""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""daundered\"", \""underdead\"", \""undreaded\"", \""adad\"", \""adda\"", \""dada\"", \""sidle\"", \""slide\"", \""delis\"", \""isled\"", \""deils\"", \""sorbitan\"", \""taborins\"", \""frier\"", \""firer\"", \""tanks\"", \""stank\"", \""pigeontail\"", \""plagionite\"", \""bailage\"", \""algieba\"", \""samplery\"", \""lampreys\""]\n"",
    ""answer"": ""[[\""adad\"", \""adda\"", \""dada\""], [\""algieba\"", \""bailage\""], [\""daundered\"", \""underdead\"", \""undreaded\""], [\""deils\"", \""delis\"", \""isled\"", \""sidle\"", \""slide\""], [\""firer\"", \""frier\""], [\""lampreys\"", \""samplery\""], [\""pigeontail\"", \""plagionite\""], [\""sorbitan\"", \""taborins\""], [\""stank\"", \""tanks\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 215,
        ""words"": [
            ""daundered"",
            ""underdead"",
            ""undreaded"",
            ""adad"",
            ""adda"",
            ""dada"",
            ""sidle"",
            ""slide"",
            ""delis"",
            ""isled"",
            ""deils"",
            ""sorbitan"",
            ""taborins"",
            ""frier"",
            ""firer"",
            ""tanks"",
            ""stank"",
            ""pigeontail"",
            ""plagionite"",
            ""bailage"",
            ""algieba"",
            ""samplery"",
            ""lampreys""
        ],
        ""solution"": [
            [
                ""adad"",
                ""adda"",
                ""dada""
            ],
            [
                ""algieba"",
                ""bailage""
            ],
            [
                ""daundered"",
                ""underdead"",
                ""undreaded""
            ],
            [
                ""deils"",
                ""delis"",
                ""isled"",
                ""sidle"",
                ""slide""
            ],
            [
                ""firer"",
                ""frier""
            ],
            [
                ""lampreys"",
                ""samplery""
            ],
            [
                ""pigeontail"",
                ""plagionite""
            ],
            [
                ""sorbitan"",
                ""taborins""
            ],
            [
                ""stank"",
                ""tanks""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
216,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""potion"", ""option"", ""reproffer"", ""profferer"", ""triflings"", ""firstling"", ""reinsures"", ""nurseries"", ""orbicle"", ""bricole"", ""corbeil"", ""pinesap"", ""nappies"", ""exter"", ""exert"", ""missteered"", ""semidesert""]
","[[""bricole"", ""corbeil"", ""orbicle""], [""exert"", ""exter""], [""firstling"", ""triflings""], [""missteered"", ""semidesert""], [""nappies"", ""pinesap""], [""nurseries"", ""reinsures""], [""option"", ""potion""], [""profferer"", ""reproffer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""potion\"", \""option\"", \""reproffer\"", \""profferer\"", \""triflings\"", \""firstling\"", \""reinsures\"", \""nurseries\"", \""orbicle\"", \""bricole\"", \""corbeil\"", \""pinesap\"", \""nappies\"", \""exter\"", \""exert\"", \""missteered\"", \""semidesert\""]\n"",
    ""answer"": ""[[\""bricole\"", \""corbeil\"", \""orbicle\""], [\""exert\"", \""exter\""], [\""firstling\"", \""triflings\""], [\""missteered\"", \""semidesert\""], [\""nappies\"", \""pinesap\""], [\""nurseries\"", \""reinsures\""], [\""option\"", \""potion\""], [\""profferer\"", \""reproffer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 216,
        ""words"": [
            ""potion"",
            ""option"",
            ""reproffer"",
            ""profferer"",
            ""triflings"",
            ""firstling"",
            ""reinsures"",
            ""nurseries"",
            ""orbicle"",
            ""bricole"",
            ""corbeil"",
            ""pinesap"",
            ""nappies"",
            ""exter"",
            ""exert"",
            ""missteered"",
            ""semidesert""
        ],
        ""solution"": [
            [
                ""bricole"",
                ""corbeil"",
                ""orbicle""
            ],
            [
                ""exert"",
                ""exter""
            ],
            [
                ""firstling"",
                ""triflings""
            ],
            [
                ""missteered"",
                ""semidesert""
            ],
            [
                ""nappies"",
                ""pinesap""
            ],
            [
                ""nurseries"",
                ""reinsures""
            ],
            [
                ""option"",
                ""potion""
            ],
            [
                ""profferer"",
                ""reproffer""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
217,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""insecure"", ""sinecure"", ""slickery"", ""sickerly"", ""joiner"", ""rejoin"", ""cleans"", ""senlac"", ""lances"", ""lis"", ""sil"", ""isl"", ""steelproof"", ""sleetproof""]
","[[""cleans"", ""lances"", ""senlac""], [""insecure"", ""sinecure""], [""isl"", ""lis"", ""sil""], [""joiner"", ""rejoin""], [""sickerly"", ""slickery""], [""sleetproof"", ""steelproof""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""insecure\"", \""sinecure\"", \""slickery\"", \""sickerly\"", \""joiner\"", \""rejoin\"", \""cleans\"", \""senlac\"", \""lances\"", \""lis\"", \""sil\"", \""isl\"", \""steelproof\"", \""sleetproof\""]\n"",
    ""answer"": ""[[\""cleans\"", \""lances\"", \""senlac\""], [\""insecure\"", \""sinecure\""], [\""isl\"", \""lis\"", \""sil\""], [\""joiner\"", \""rejoin\""], [\""sickerly\"", \""slickery\""], [\""sleetproof\"", \""steelproof\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 217,
        ""words"": [
            ""insecure"",
            ""sinecure"",
            ""slickery"",
            ""sickerly"",
            ""joiner"",
            ""rejoin"",
            ""cleans"",
            ""senlac"",
            ""lances"",
            ""lis"",
            ""sil"",
            ""isl"",
            ""steelproof"",
            ""sleetproof""
        ],
        ""solution"": [
            [
                ""cleans"",
                ""lances"",
                ""senlac""
            ],
            [
                ""insecure"",
                ""sinecure""
            ],
            [
                ""isl"",
                ""lis"",
                ""sil""
            ],
            [
                ""joiner"",
                ""rejoin""
            ],
            [
                ""sickerly"",
                ""slickery""
            ],
            [
                ""sleetproof"",
                ""steelproof""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
218,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""driller"", ""redrill"", ""borani"", ""bonair"", ""obarni"", ""baroni"", ""yaks"", ""kays"", ""remend"", ""mender"", ""domina"", ""daimon"", ""amidon"", ""nones"", ""neons"", ""agrom"", ""groma"", ""morga"", ""qh"", ""hq""]
","[[""agrom"", ""groma"", ""morga""], [""amidon"", ""daimon"", ""domina""], [""baroni"", ""bonair"", ""borani"", ""obarni""], [""driller"", ""redrill""], [""hq"", ""qh""], [""kays"", ""yaks""], [""mender"", ""remend""], [""neons"", ""nones""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""driller\"", \""redrill\"", \""borani\"", \""bonair\"", \""obarni\"", \""baroni\"", \""yaks\"", \""kays\"", \""remend\"", \""mender\"", \""domina\"", \""daimon\"", \""amidon\"", \""nones\"", \""neons\"", \""agrom\"", \""groma\"", \""morga\"", \""qh\"", \""hq\""]\n"",
    ""answer"": ""[[\""agrom\"", \""groma\"", \""morga\""], [\""amidon\"", \""daimon\"", \""domina\""], [\""baroni\"", \""bonair\"", \""borani\"", \""obarni\""], [\""driller\"", \""redrill\""], [\""hq\"", \""qh\""], [\""kays\"", \""yaks\""], [\""mender\"", \""remend\""], [\""neons\"", \""nones\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 218,
        ""words"": [
            ""driller"",
            ""redrill"",
            ""borani"",
            ""bonair"",
            ""obarni"",
            ""baroni"",
            ""yaks"",
            ""kays"",
            ""remend"",
            ""mender"",
            ""domina"",
            ""daimon"",
            ""amidon"",
            ""nones"",
            ""neons"",
            ""agrom"",
            ""groma"",
            ""morga"",
            ""qh"",
            ""hq""
        ],
        ""solution"": [
            [
                ""agrom"",
                ""groma"",
                ""morga""
            ],
            [
                ""amidon"",
                ""daimon"",
                ""domina""
            ],
            [
                ""baroni"",
                ""bonair"",
                ""borani"",
                ""obarni""
            ],
            [
                ""driller"",
                ""redrill""
            ],
            [
                ""hq"",
                ""qh""
            ],
            [
                ""kays"",
                ""yaks""
            ],
            [
                ""mender"",
                ""remend""
            ],
            [
                ""neons"",
                ""nones""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
219,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""manrent"", ""remnant"", ""inducers"", ""discuren"", ""overarches"", ""oversearch"", ""infractions"", ""infarctions"", ""intercoupled"", ""pleuronectid"", ""theological"", ""ethological"", ""lethologica"", ""raunchiest"", ""cerianthus"", ""earthworm"", ""heartworm"", ""snog"", ""nogs""]
","[[""cerianthus"", ""raunchiest""], [""discuren"", ""inducers""], [""earthworm"", ""heartworm""], [""ethological"", ""lethologica"", ""theological""], [""infarctions"", ""infractions""], [""intercoupled"", ""pleuronectid""], [""manrent"", ""remnant""], [""nogs"", ""snog""], [""overarches"", ""oversearch""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""manrent\"", \""remnant\"", \""inducers\"", \""discuren\"", \""overarches\"", \""oversearch\"", \""infractions\"", \""infarctions\"", \""intercoupled\"", \""pleuronectid\"", \""theological\"", \""ethological\"", \""lethologica\"", \""raunchiest\"", \""cerianthus\"", \""earthworm\"", \""heartworm\"", \""snog\"", \""nogs\""]\n"",
    ""answer"": ""[[\""cerianthus\"", \""raunchiest\""], [\""discuren\"", \""inducers\""], [\""earthworm\"", \""heartworm\""], [\""ethological\"", \""lethologica\"", \""theological\""], [\""infarctions\"", \""infractions\""], [\""intercoupled\"", \""pleuronectid\""], [\""manrent\"", \""remnant\""], [\""nogs\"", \""snog\""], [\""overarches\"", \""oversearch\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 219,
        ""words"": [
            ""manrent"",
            ""remnant"",
            ""inducers"",
            ""discuren"",
            ""overarches"",
            ""oversearch"",
            ""infractions"",
            ""infarctions"",
            ""intercoupled"",
            ""pleuronectid"",
            ""theological"",
            ""ethological"",
            ""lethologica"",
            ""raunchiest"",
            ""cerianthus"",
            ""earthworm"",
            ""heartworm"",
            ""snog"",
            ""nogs""
        ],
        ""solution"": [
            [
                ""cerianthus"",
                ""raunchiest""
            ],
            [
                ""discuren"",
                ""inducers""
            ],
            [
                ""earthworm"",
                ""heartworm""
            ],
            [
                ""ethological"",
                ""lethologica"",
                ""theological""
            ],
            [
                ""infarctions"",
                ""infractions""
            ],
            [
                ""intercoupled"",
                ""pleuronectid""
            ],
            [
                ""manrent"",
                ""remnant""
            ],
            [
                ""nogs"",
                ""snog""
            ],
            [
                ""overarches"",
                ""oversearch""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
220,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""modulet"", ""moulted"", ""decolour"", ""coloured""]
","[[""coloured"", ""decolour""], [""modulet"", ""moulted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""modulet\"", \""moulted\"", \""decolour\"", \""coloured\""]\n"",
    ""answer"": ""[[\""coloured\"", \""decolour\""], [\""modulet\"", \""moulted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 220,
        ""words"": [
            ""modulet"",
            ""moulted"",
            ""decolour"",
            ""coloured""
        ],
        ""solution"": [
            [
                ""coloured"",
                ""decolour""
            ],
            [
                ""modulet"",
                ""moulted""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
221,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""halver"", ""lavehr"", ""rescinds"", ""discerns"", ""expulsed"", ""duplexes"", ""soterial"", ""striolae"", ""outbacks"", ""backouts"", ""lunisolar"", ""solilunar"", ""mahat"", ""matha"", ""caspian"", ""nascapi"", ""panisca"", ""amabel"", ""mabela"", ""amable"", ""springals"", ""sparlings""]
","[[""amabel"", ""amable"", ""mabela""], [""backouts"", ""outbacks""], [""caspian"", ""nascapi"", ""panisca""], [""discerns"", ""rescinds""], [""duplexes"", ""expulsed""], [""halver"", ""lavehr""], [""lunisolar"", ""solilunar""], [""mahat"", ""matha""], [""soterial"", ""striolae""], [""sparlings"", ""springals""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""halver\"", \""lavehr\"", \""rescinds\"", \""discerns\"", \""expulsed\"", \""duplexes\"", \""soterial\"", \""striolae\"", \""outbacks\"", \""backouts\"", \""lunisolar\"", \""solilunar\"", \""mahat\"", \""matha\"", \""caspian\"", \""nascapi\"", \""panisca\"", \""amabel\"", \""mabela\"", \""amable\"", \""springals\"", \""sparlings\""]\n"",
    ""answer"": ""[[\""amabel\"", \""amable\"", \""mabela\""], [\""backouts\"", \""outbacks\""], [\""caspian\"", \""nascapi\"", \""panisca\""], [\""discerns\"", \""rescinds\""], [\""duplexes\"", \""expulsed\""], [\""halver\"", \""lavehr\""], [\""lunisolar\"", \""solilunar\""], [\""mahat\"", \""matha\""], [\""soterial\"", \""striolae\""], [\""sparlings\"", \""springals\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 221,
        ""words"": [
            ""halver"",
            ""lavehr"",
            ""rescinds"",
            ""discerns"",
            ""expulsed"",
            ""duplexes"",
            ""soterial"",
            ""striolae"",
            ""outbacks"",
            ""backouts"",
            ""lunisolar"",
            ""solilunar"",
            ""mahat"",
            ""matha"",
            ""caspian"",
            ""nascapi"",
            ""panisca"",
            ""amabel"",
            ""mabela"",
            ""amable"",
            ""springals"",
            ""sparlings""
        ],
        ""solution"": [
            [
                ""amabel"",
                ""amable"",
                ""mabela""
            ],
            [
                ""backouts"",
                ""outbacks""
            ],
            [
                ""caspian"",
                ""nascapi"",
                ""panisca""
            ],
            [
                ""discerns"",
                ""rescinds""
            ],
            [
                ""duplexes"",
                ""expulsed""
            ],
            [
                ""halver"",
                ""lavehr""
            ],
            [
                ""lunisolar"",
                ""solilunar""
            ],
            [
                ""mahat"",
                ""matha""
            ],
            [
                ""soterial"",
                ""striolae""
            ],
            [
                ""sparlings"",
                ""springals""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
222,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tangles"", ""langset"", ""gelants"", ""chaetognath"", ""gnathotheca"", ""earthpea"", ""heartpea"", ""micra"", ""marci"", ""searedness"", ""dearnesses"", ""calloo"", ""calool"", ""colola"", ""abying"", ""baying""]
","[[""abying"", ""baying""], [""calloo"", ""calool"", ""colola""], [""chaetognath"", ""gnathotheca""], [""dearnesses"", ""searedness""], [""earthpea"", ""heartpea""], [""gelants"", ""langset"", ""tangles""], [""marci"", ""micra""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tangles\"", \""langset\"", \""gelants\"", \""chaetognath\"", \""gnathotheca\"", \""earthpea\"", \""heartpea\"", \""micra\"", \""marci\"", \""searedness\"", \""dearnesses\"", \""calloo\"", \""calool\"", \""colola\"", \""abying\"", \""baying\""]\n"",
    ""answer"": ""[[\""abying\"", \""baying\""], [\""calloo\"", \""calool\"", \""colola\""], [\""chaetognath\"", \""gnathotheca\""], [\""dearnesses\"", \""searedness\""], [\""earthpea\"", \""heartpea\""], [\""gelants\"", \""langset\"", \""tangles\""], [\""marci\"", \""micra\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 222,
        ""words"": [
            ""tangles"",
            ""langset"",
            ""gelants"",
            ""chaetognath"",
            ""gnathotheca"",
            ""earthpea"",
            ""heartpea"",
            ""micra"",
            ""marci"",
            ""searedness"",
            ""dearnesses"",
            ""calloo"",
            ""calool"",
            ""colola"",
            ""abying"",
            ""baying""
        ],
        ""solution"": [
            [
                ""abying"",
                ""baying""
            ],
            [
                ""calloo"",
                ""calool"",
                ""colola""
            ],
            [
                ""chaetognath"",
                ""gnathotheca""
            ],
            [
                ""dearnesses"",
                ""searedness""
            ],
            [
                ""earthpea"",
                ""heartpea""
            ],
            [
                ""gelants"",
                ""langset"",
                ""tangles""
            ],
            [
                ""marci"",
                ""micra""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
223,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""traduces"", ""crustade"", ""purlieus"", ""lipeurus""]
","[[""crustade"", ""traduces""], [""lipeurus"", ""purlieus""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""traduces\"", \""crustade\"", \""purlieus\"", \""lipeurus\""]\n"",
    ""answer"": ""[[\""crustade\"", \""traduces\""], [\""lipeurus\"", \""purlieus\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 223,
        ""words"": [
            ""traduces"",
            ""crustade"",
            ""purlieus"",
            ""lipeurus""
        ],
        ""solution"": [
            [
                ""crustade"",
                ""traduces""
            ],
            [
                ""lipeurus"",
                ""purlieus""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
224,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""scote"", ""cotes"", ""estoc"", ""enridged"", ""engirded"", ""rousted"", ""dourest"", ""keid"", ""dike"", ""quirks"", ""squirk"", ""tahin"", ""ahint"", ""hiant"", ""ety"", ""tye"", ""yet"", ""progamic"", ""picogram"", ""shingle"", ""english""]
","[[""ahint"", ""hiant"", ""tahin""], [""cotes"", ""estoc"", ""scote""], [""dike"", ""keid""], [""dourest"", ""rousted""], [""engirded"", ""enridged""], [""english"", ""shingle""], [""ety"", ""tye"", ""yet""], [""picogram"", ""progamic""], [""quirks"", ""squirk""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""scote\"", \""cotes\"", \""estoc\"", \""enridged\"", \""engirded\"", \""rousted\"", \""dourest\"", \""keid\"", \""dike\"", \""quirks\"", \""squirk\"", \""tahin\"", \""ahint\"", \""hiant\"", \""ety\"", \""tye\"", \""yet\"", \""progamic\"", \""picogram\"", \""shingle\"", \""english\""]\n"",
    ""answer"": ""[[\""ahint\"", \""hiant\"", \""tahin\""], [\""cotes\"", \""estoc\"", \""scote\""], [\""dike\"", \""keid\""], [\""dourest\"", \""rousted\""], [\""engirded\"", \""enridged\""], [\""english\"", \""shingle\""], [\""ety\"", \""tye\"", \""yet\""], [\""picogram\"", \""progamic\""], [\""quirks\"", \""squirk\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 224,
        ""words"": [
            ""scote"",
            ""cotes"",
            ""estoc"",
            ""enridged"",
            ""engirded"",
            ""rousted"",
            ""dourest"",
            ""keid"",
            ""dike"",
            ""quirks"",
            ""squirk"",
            ""tahin"",
            ""ahint"",
            ""hiant"",
            ""ety"",
            ""tye"",
            ""yet"",
            ""progamic"",
            ""picogram"",
            ""shingle"",
            ""english""
        ],
        ""solution"": [
            [
                ""ahint"",
                ""hiant"",
                ""tahin""
            ],
            [
                ""cotes"",
                ""estoc"",
                ""scote""
            ],
            [
                ""dike"",
                ""keid""
            ],
            [
                ""dourest"",
                ""rousted""
            ],
            [
                ""engirded"",
                ""enridged""
            ],
            [
                ""english"",
                ""shingle""
            ],
            [
                ""ety"",
                ""tye"",
                ""yet""
            ],
            [
                ""picogram"",
                ""progamic""
            ],
            [
                ""quirks"",
                ""squirk""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
225,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ebonised"", ""sidebone"", ""apostume"", ""soupmeat"", ""cyano"", ""coyan"", ""hallo"", ""holla"", ""hammerer"", ""rehammer"", ""raving"", ""grivna"", ""cabrestos"", ""cabestros""]
","[[""apostume"", ""soupmeat""], [""cabestros"", ""cabrestos""], [""coyan"", ""cyano""], [""ebonised"", ""sidebone""], [""grivna"", ""raving""], [""hallo"", ""holla""], [""hammerer"", ""rehammer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ebonised\"", \""sidebone\"", \""apostume\"", \""soupmeat\"", \""cyano\"", \""coyan\"", \""hallo\"", \""holla\"", \""hammerer\"", \""rehammer\"", \""raving\"", \""grivna\"", \""cabrestos\"", \""cabestros\""]\n"",
    ""answer"": ""[[\""apostume\"", \""soupmeat\""], [\""cabestros\"", \""cabrestos\""], [\""coyan\"", \""cyano\""], [\""ebonised\"", \""sidebone\""], [\""grivna\"", \""raving\""], [\""hallo\"", \""holla\""], [\""hammerer\"", \""rehammer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 225,
        ""words"": [
            ""ebonised"",
            ""sidebone"",
            ""apostume"",
            ""soupmeat"",
            ""cyano"",
            ""coyan"",
            ""hallo"",
            ""holla"",
            ""hammerer"",
            ""rehammer"",
            ""raving"",
            ""grivna"",
            ""cabrestos"",
            ""cabestros""
        ],
        ""solution"": [
            [
                ""apostume"",
                ""soupmeat""
            ],
            [
                ""cabestros"",
                ""cabrestos""
            ],
            [
                ""coyan"",
                ""cyano""
            ],
            [
                ""ebonised"",
                ""sidebone""
            ],
            [
                ""grivna"",
                ""raving""
            ],
            [
                ""hallo"",
                ""holla""
            ],
            [
                ""hammerer"",
                ""rehammer""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
226,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""barbion"", ""rabboni"", ""haoles"", ""haloes"", ""undryable"", ""endurably""]
","[[""barbion"", ""rabboni""], [""endurably"", ""undryable""], [""haloes"", ""haoles""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""barbion\"", \""rabboni\"", \""haoles\"", \""haloes\"", \""undryable\"", \""endurably\""]\n"",
    ""answer"": ""[[\""barbion\"", \""rabboni\""], [\""endurably\"", \""undryable\""], [\""haloes\"", \""haoles\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 226,
        ""words"": [
            ""barbion"",
            ""rabboni"",
            ""haoles"",
            ""haloes"",
            ""undryable"",
            ""endurably""
        ],
        ""solution"": [
            [
                ""barbion"",
                ""rabboni""
            ],
            [
                ""endurably"",
                ""undryable""
            ],
            [
                ""haloes"",
                ""haoles""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
227,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unrips"", ""purins"", ""hinge"", ""neigh""]
","[[""hinge"", ""neigh""], [""purins"", ""unrips""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unrips\"", \""purins\"", \""hinge\"", \""neigh\""]\n"",
    ""answer"": ""[[\""hinge\"", \""neigh\""], [\""purins\"", \""unrips\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 227,
        ""words"": [
            ""unrips"",
            ""purins"",
            ""hinge"",
            ""neigh""
        ],
        ""solution"": [
            [
                ""hinge"",
                ""neigh""
            ],
            [
                ""purins"",
                ""unrips""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
228,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""amorettos"", ""stateroom"", ""durban"", ""undrab"", ""igraine"", ""nigeria"", ""termini"", ""mintier"", ""wolfing"", ""fowling"", ""flowing""]
","[[""amorettos"", ""stateroom""], [""durban"", ""undrab""], [""flowing"", ""fowling"", ""wolfing""], [""igraine"", ""nigeria""], [""mintier"", ""termini""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""amorettos\"", \""stateroom\"", \""durban\"", \""undrab\"", \""igraine\"", \""nigeria\"", \""termini\"", \""mintier\"", \""wolfing\"", \""fowling\"", \""flowing\""]\n"",
    ""answer"": ""[[\""amorettos\"", \""stateroom\""], [\""durban\"", \""undrab\""], [\""flowing\"", \""fowling\"", \""wolfing\""], [\""igraine\"", \""nigeria\""], [\""mintier\"", \""termini\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 228,
        ""words"": [
            ""amorettos"",
            ""stateroom"",
            ""durban"",
            ""undrab"",
            ""igraine"",
            ""nigeria"",
            ""termini"",
            ""mintier"",
            ""wolfing"",
            ""fowling"",
            ""flowing""
        ],
        ""solution"": [
            [
                ""amorettos"",
                ""stateroom""
            ],
            [
                ""durban"",
                ""undrab""
            ],
            [
                ""flowing"",
                ""fowling"",
                ""wolfing""
            ],
            [
                ""igraine"",
                ""nigeria""
            ],
            [
                ""mintier"",
                ""termini""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
229,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""enaena"", ""aenean"", ""websters"", ""bestrews"", ""agnatha"", ""ataghan"", ""hesperian"", ""seraphine"", ""phrenesia"", ""uckers"", ""resuck"", ""sucker"", ""molest"", ""motels"", ""inwith"", ""within"", ""whitin"", ""chiveret"", ""vetchier""]
","[[""aenean"", ""enaena""], [""agnatha"", ""ataghan""], [""bestrews"", ""websters""], [""chiveret"", ""vetchier""], [""hesperian"", ""phrenesia"", ""seraphine""], [""inwith"", ""whitin"", ""within""], [""molest"", ""motels""], [""resuck"", ""sucker"", ""uckers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""enaena\"", \""aenean\"", \""websters\"", \""bestrews\"", \""agnatha\"", \""ataghan\"", \""hesperian\"", \""seraphine\"", \""phrenesia\"", \""uckers\"", \""resuck\"", \""sucker\"", \""molest\"", \""motels\"", \""inwith\"", \""within\"", \""whitin\"", \""chiveret\"", \""vetchier\""]\n"",
    ""answer"": ""[[\""aenean\"", \""enaena\""], [\""agnatha\"", \""ataghan\""], [\""bestrews\"", \""websters\""], [\""chiveret\"", \""vetchier\""], [\""hesperian\"", \""phrenesia\"", \""seraphine\""], [\""inwith\"", \""whitin\"", \""within\""], [\""molest\"", \""motels\""], [\""resuck\"", \""sucker\"", \""uckers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 229,
        ""words"": [
            ""enaena"",
            ""aenean"",
            ""websters"",
            ""bestrews"",
            ""agnatha"",
            ""ataghan"",
            ""hesperian"",
            ""seraphine"",
            ""phrenesia"",
            ""uckers"",
            ""resuck"",
            ""sucker"",
            ""molest"",
            ""motels"",
            ""inwith"",
            ""within"",
            ""whitin"",
            ""chiveret"",
            ""vetchier""
        ],
        ""solution"": [
            [
                ""aenean"",
                ""enaena""
            ],
            [
                ""agnatha"",
                ""ataghan""
            ],
            [
                ""bestrews"",
                ""websters""
            ],
            [
                ""chiveret"",
                ""vetchier""
            ],
            [
                ""hesperian"",
                ""phrenesia"",
                ""seraphine""
            ],
            [
                ""inwith"",
                ""whitin"",
                ""within""
            ],
            [
                ""molest"",
                ""motels""
            ],
            [
                ""resuck"",
                ""sucker"",
                ""uckers""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
230,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pedum"", ""umped"", ""heptane"", ""haptene"", ""phenate"", ""eagerer"", ""reagree"", ""fanum"", ""manuf"", ""decurrency"", ""recrudency"", ""dreams"", ""madres"", ""dermas"", ""ullages"", ""seagull"", ""sullage""]
","[[""decurrency"", ""recrudency""], [""dermas"", ""dreams"", ""madres""], [""eagerer"", ""reagree""], [""fanum"", ""manuf""], [""haptene"", ""heptane"", ""phenate""], [""pedum"", ""umped""], [""seagull"", ""sullage"", ""ullages""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pedum\"", \""umped\"", \""heptane\"", \""haptene\"", \""phenate\"", \""eagerer\"", \""reagree\"", \""fanum\"", \""manuf\"", \""decurrency\"", \""recrudency\"", \""dreams\"", \""madres\"", \""dermas\"", \""ullages\"", \""seagull\"", \""sullage\""]\n"",
    ""answer"": ""[[\""decurrency\"", \""recrudency\""], [\""dermas\"", \""dreams\"", \""madres\""], [\""eagerer\"", \""reagree\""], [\""fanum\"", \""manuf\""], [\""haptene\"", \""heptane\"", \""phenate\""], [\""pedum\"", \""umped\""], [\""seagull\"", \""sullage\"", \""ullages\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 230,
        ""words"": [
            ""pedum"",
            ""umped"",
            ""heptane"",
            ""haptene"",
            ""phenate"",
            ""eagerer"",
            ""reagree"",
            ""fanum"",
            ""manuf"",
            ""decurrency"",
            ""recrudency"",
            ""dreams"",
            ""madres"",
            ""dermas"",
            ""ullages"",
            ""seagull"",
            ""sullage""
        ],
        ""solution"": [
            [
                ""decurrency"",
                ""recrudency""
            ],
            [
                ""dermas"",
                ""dreams"",
                ""madres""
            ],
            [
                ""eagerer"",
                ""reagree""
            ],
            [
                ""fanum"",
                ""manuf""
            ],
            [
                ""haptene"",
                ""heptane"",
                ""phenate""
            ],
            [
                ""pedum"",
                ""umped""
            ],
            [
                ""seagull"",
                ""sullage"",
                ""ullages""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
231,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""duka"", ""dauk"", ""kadu"", ""rejigger"", ""jiggerer"", ""venerant"", ""revenant"", ""spitting"", ""pittings"", ""elding"", ""gilden"", ""dingle"", ""orality"", ""tailory"", ""rechamber"", ""chamberer"", ""natter"", ""ratten"", ""attern"", ""tarten""]
","[[""attern"", ""natter"", ""ratten"", ""tarten""], [""chamberer"", ""rechamber""], [""dauk"", ""duka"", ""kadu""], [""dingle"", ""elding"", ""gilden""], [""jiggerer"", ""rejigger""], [""orality"", ""tailory""], [""pittings"", ""spitting""], [""revenant"", ""venerant""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""duka\"", \""dauk\"", \""kadu\"", \""rejigger\"", \""jiggerer\"", \""venerant\"", \""revenant\"", \""spitting\"", \""pittings\"", \""elding\"", \""gilden\"", \""dingle\"", \""orality\"", \""tailory\"", \""rechamber\"", \""chamberer\"", \""natter\"", \""ratten\"", \""attern\"", \""tarten\""]\n"",
    ""answer"": ""[[\""attern\"", \""natter\"", \""ratten\"", \""tarten\""], [\""chamberer\"", \""rechamber\""], [\""dauk\"", \""duka\"", \""kadu\""], [\""dingle\"", \""elding\"", \""gilden\""], [\""jiggerer\"", \""rejigger\""], [\""orality\"", \""tailory\""], [\""pittings\"", \""spitting\""], [\""revenant\"", \""venerant\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 231,
        ""words"": [
            ""duka"",
            ""dauk"",
            ""kadu"",
            ""rejigger"",
            ""jiggerer"",
            ""venerant"",
            ""revenant"",
            ""spitting"",
            ""pittings"",
            ""elding"",
            ""gilden"",
            ""dingle"",
            ""orality"",
            ""tailory"",
            ""rechamber"",
            ""chamberer"",
            ""natter"",
            ""ratten"",
            ""attern"",
            ""tarten""
        ],
        ""solution"": [
            [
                ""attern"",
                ""natter"",
                ""ratten"",
                ""tarten""
            ],
            [
                ""chamberer"",
                ""rechamber""
            ],
            [
                ""dauk"",
                ""duka"",
                ""kadu""
            ],
            [
                ""dingle"",
                ""elding"",
                ""gilden""
            ],
            [
                ""jiggerer"",
                ""rejigger""
            ],
            [
                ""orality"",
                ""tailory""
            ],
            [
                ""pittings"",
                ""spitting""
            ],
            [
                ""revenant"",
                ""venerant""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
232,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pharisee"", ""hesperia"", ""shopbook"", ""bookshop"", ""gortonian"", ""ratooning"", ""organotin"", ""beeswing"", ""beswinge"", ""criminalese"", ""misreliance"", ""campine"", ""pemican""]
","[[""beeswing"", ""beswinge""], [""bookshop"", ""shopbook""], [""campine"", ""pemican""], [""criminalese"", ""misreliance""], [""gortonian"", ""organotin"", ""ratooning""], [""hesperia"", ""pharisee""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pharisee\"", \""hesperia\"", \""shopbook\"", \""bookshop\"", \""gortonian\"", \""ratooning\"", \""organotin\"", \""beeswing\"", \""beswinge\"", \""criminalese\"", \""misreliance\"", \""campine\"", \""pemican\""]\n"",
    ""answer"": ""[[\""beeswing\"", \""beswinge\""], [\""bookshop\"", \""shopbook\""], [\""campine\"", \""pemican\""], [\""criminalese\"", \""misreliance\""], [\""gortonian\"", \""organotin\"", \""ratooning\""], [\""hesperia\"", \""pharisee\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 232,
        ""words"": [
            ""pharisee"",
            ""hesperia"",
            ""shopbook"",
            ""bookshop"",
            ""gortonian"",
            ""ratooning"",
            ""organotin"",
            ""beeswing"",
            ""beswinge"",
            ""criminalese"",
            ""misreliance"",
            ""campine"",
            ""pemican""
        ],
        ""solution"": [
            [
                ""beeswing"",
                ""beswinge""
            ],
            [
                ""bookshop"",
                ""shopbook""
            ],
            [
                ""campine"",
                ""pemican""
            ],
            [
                ""criminalese"",
                ""misreliance""
            ],
            [
                ""gortonian"",
                ""organotin"",
                ""ratooning""
            ],
            [
                ""hesperia"",
                ""pharisee""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
233,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fist"", ""fits"", ""sift"", ""rufter"", ""returf"", ""scouter"", ""couters"", ""secutor"", ""fronde"", ""fonder"", ""grinder"", ""regrind"", ""scourer"", ""courser"", ""recours"", ""bulging"", ""bugling"", ""sents"", ""nests""]
","[[""bugling"", ""bulging""], [""courser"", ""recours"", ""scourer""], [""couters"", ""scouter"", ""secutor""], [""fist"", ""fits"", ""sift""], [""fonder"", ""fronde""], [""grinder"", ""regrind""], [""nests"", ""sents""], [""returf"", ""rufter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fist\"", \""fits\"", \""sift\"", \""rufter\"", \""returf\"", \""scouter\"", \""couters\"", \""secutor\"", \""fronde\"", \""fonder\"", \""grinder\"", \""regrind\"", \""scourer\"", \""courser\"", \""recours\"", \""bulging\"", \""bugling\"", \""sents\"", \""nests\""]\n"",
    ""answer"": ""[[\""bugling\"", \""bulging\""], [\""courser\"", \""recours\"", \""scourer\""], [\""couters\"", \""scouter\"", \""secutor\""], [\""fist\"", \""fits\"", \""sift\""], [\""fonder\"", \""fronde\""], [\""grinder\"", \""regrind\""], [\""nests\"", \""sents\""], [\""returf\"", \""rufter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 233,
        ""words"": [
            ""fist"",
            ""fits"",
            ""sift"",
            ""rufter"",
            ""returf"",
            ""scouter"",
            ""couters"",
            ""secutor"",
            ""fronde"",
            ""fonder"",
            ""grinder"",
            ""regrind"",
            ""scourer"",
            ""courser"",
            ""recours"",
            ""bulging"",
            ""bugling"",
            ""sents"",
            ""nests""
        ],
        ""solution"": [
            [
                ""bugling"",
                ""bulging""
            ],
            [
                ""courser"",
                ""recours"",
                ""scourer""
            ],
            [
                ""couters"",
                ""scouter"",
                ""secutor""
            ],
            [
                ""fist"",
                ""fits"",
                ""sift""
            ],
            [
                ""fonder"",
                ""fronde""
            ],
            [
                ""grinder"",
                ""regrind""
            ],
            [
                ""nests"",
                ""sents""
            ],
            [
                ""returf"",
                ""rufter""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
234,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""holies"", ""helios"", ""misima"", ""misaim"", ""method"", ""mothed""]
","[[""helios"", ""holies""], [""method"", ""mothed""], [""misaim"", ""misima""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""holies\"", \""helios\"", \""misima\"", \""misaim\"", \""method\"", \""mothed\""]\n"",
    ""answer"": ""[[\""helios\"", \""holies\""], [\""method\"", \""mothed\""], [\""misaim\"", \""misima\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 234,
        ""words"": [
            ""holies"",
            ""helios"",
            ""misima"",
            ""misaim"",
            ""method"",
            ""mothed""
        ],
        ""solution"": [
            [
                ""helios"",
                ""holies""
            ],
            [
                ""method"",
                ""mothed""
            ],
            [
                ""misaim"",
                ""misima""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
235,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""addendum"", ""unmadded"", ""epithyme"", ""hemitype"", ""dode"", ""dedo"", ""eddo"", ""apprend"", ""parpend"", ""reaccord"", ""accorder""]
","[[""accorder"", ""reaccord""], [""addendum"", ""unmadded""], [""apprend"", ""parpend""], [""dedo"", ""dode"", ""eddo""], [""epithyme"", ""hemitype""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""addendum\"", \""unmadded\"", \""epithyme\"", \""hemitype\"", \""dode\"", \""dedo\"", \""eddo\"", \""apprend\"", \""parpend\"", \""reaccord\"", \""accorder\""]\n"",
    ""answer"": ""[[\""accorder\"", \""reaccord\""], [\""addendum\"", \""unmadded\""], [\""apprend\"", \""parpend\""], [\""dedo\"", \""dode\"", \""eddo\""], [\""epithyme\"", \""hemitype\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 235,
        ""words"": [
            ""addendum"",
            ""unmadded"",
            ""epithyme"",
            ""hemitype"",
            ""dode"",
            ""dedo"",
            ""eddo"",
            ""apprend"",
            ""parpend"",
            ""reaccord"",
            ""accorder""
        ],
        ""solution"": [
            [
                ""accorder"",
                ""reaccord""
            ],
            [
                ""addendum"",
                ""unmadded""
            ],
            [
                ""apprend"",
                ""parpend""
            ],
            [
                ""dedo"",
                ""dode"",
                ""eddo""
            ],
            [
                ""epithyme"",
                ""hemitype""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
236,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hurlies"", ""lushier"", ""direct"", ""credit"", ""triced"", ""laotian"", ""notalia"", ""ailanto"", ""pneometer"", ""treponeme"", ""elmer"", ""merle"", ""merel"", ""singally"", ""slangily"", ""sallying"", ""signally"", ""isiac"", ""ascii"", ""orgies"", ""sergio"", ""embosked"", ""besmoked"", ""transpire"", ""prestrain"", ""terrapins""]
","[[""ailanto"", ""laotian"", ""notalia""], [""ascii"", ""isiac""], [""besmoked"", ""embosked""], [""credit"", ""direct"", ""triced""], [""elmer"", ""merel"", ""merle""], [""hurlies"", ""lushier""], [""orgies"", ""sergio""], [""pneometer"", ""treponeme""], [""prestrain"", ""terrapins"", ""transpire""], [""sallying"", ""signally"", ""singally"", ""slangily""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hurlies\"", \""lushier\"", \""direct\"", \""credit\"", \""triced\"", \""laotian\"", \""notalia\"", \""ailanto\"", \""pneometer\"", \""treponeme\"", \""elmer\"", \""merle\"", \""merel\"", \""singally\"", \""slangily\"", \""sallying\"", \""signally\"", \""isiac\"", \""ascii\"", \""orgies\"", \""sergio\"", \""embosked\"", \""besmoked\"", \""transpire\"", \""prestrain\"", \""terrapins\""]\n"",
    ""answer"": ""[[\""ailanto\"", \""laotian\"", \""notalia\""], [\""ascii\"", \""isiac\""], [\""besmoked\"", \""embosked\""], [\""credit\"", \""direct\"", \""triced\""], [\""elmer\"", \""merel\"", \""merle\""], [\""hurlies\"", \""lushier\""], [\""orgies\"", \""sergio\""], [\""pneometer\"", \""treponeme\""], [\""prestrain\"", \""terrapins\"", \""transpire\""], [\""sallying\"", \""signally\"", \""singally\"", \""slangily\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 236,
        ""words"": [
            ""hurlies"",
            ""lushier"",
            ""direct"",
            ""credit"",
            ""triced"",
            ""laotian"",
            ""notalia"",
            ""ailanto"",
            ""pneometer"",
            ""treponeme"",
            ""elmer"",
            ""merle"",
            ""merel"",
            ""singally"",
            ""slangily"",
            ""sallying"",
            ""signally"",
            ""isiac"",
            ""ascii"",
            ""orgies"",
            ""sergio"",
            ""embosked"",
            ""besmoked"",
            ""transpire"",
            ""prestrain"",
            ""terrapins""
        ],
        ""solution"": [
            [
                ""ailanto"",
                ""laotian"",
                ""notalia""
            ],
            [
                ""ascii"",
                ""isiac""
            ],
            [
                ""besmoked"",
                ""embosked""
            ],
            [
                ""credit"",
                ""direct"",
                ""triced""
            ],
            [
                ""elmer"",
                ""merel"",
                ""merle""
            ],
            [
                ""hurlies"",
                ""lushier""
            ],
            [
                ""orgies"",
                ""sergio""
            ],
            [
                ""pneometer"",
                ""treponeme""
            ],
            [
                ""prestrain"",
                ""terrapins"",
                ""transpire""
            ],
            [
                ""sallying"",
                ""signally"",
                ""singally"",
                ""slangily""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
237,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pholad"", ""adolph"", ""wispy"", ""swipy""]
","[[""adolph"", ""pholad""], [""swipy"", ""wispy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pholad\"", \""adolph\"", \""wispy\"", \""swipy\""]\n"",
    ""answer"": ""[[\""adolph\"", \""pholad\""], [\""swipy\"", \""wispy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 237,
        ""words"": [
            ""pholad"",
            ""adolph"",
            ""wispy"",
            ""swipy""
        ],
        ""solution"": [
            [
                ""adolph"",
                ""pholad""
            ],
            [
                ""swipy"",
                ""wispy""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
238,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""depart"", ""drapet"", ""prated"", ""petard"", ""trencherside"", ""rechristened"", ""elean"", ""anele"", ""neela"", ""outpaces"", ""outscape""]
","[[""anele"", ""elean"", ""neela""], [""depart"", ""drapet"", ""petard"", ""prated""], [""outpaces"", ""outscape""], [""rechristened"", ""trencherside""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""depart\"", \""drapet\"", \""prated\"", \""petard\"", \""trencherside\"", \""rechristened\"", \""elean\"", \""anele\"", \""neela\"", \""outpaces\"", \""outscape\""]\n"",
    ""answer"": ""[[\""anele\"", \""elean\"", \""neela\""], [\""depart\"", \""drapet\"", \""petard\"", \""prated\""], [\""outpaces\"", \""outscape\""], [\""rechristened\"", \""trencherside\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 238,
        ""words"": [
            ""depart"",
            ""drapet"",
            ""prated"",
            ""petard"",
            ""trencherside"",
            ""rechristened"",
            ""elean"",
            ""anele"",
            ""neela"",
            ""outpaces"",
            ""outscape""
        ],
        ""solution"": [
            [
                ""anele"",
                ""elean"",
                ""neela""
            ],
            [
                ""depart"",
                ""drapet"",
                ""petard"",
                ""prated""
            ],
            [
                ""outpaces"",
                ""outscape""
            ],
            [
                ""rechristened"",
                ""trencherside""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
239,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""macromazia"", ""macrozamia"", ""dennis"", ""sinned"", ""derailed"", ""deadlier"", ""mordication"", ""microdontia"", ""obtesting"", ""besotting"", ""libbed"", ""dibble"", ""kung"", ""gunk"", ""hobbism"", ""mobbish"", ""valor"", ""volar""]
","[[""besotting"", ""obtesting""], [""deadlier"", ""derailed""], [""dennis"", ""sinned""], [""dibble"", ""libbed""], [""gunk"", ""kung""], [""hobbism"", ""mobbish""], [""macromazia"", ""macrozamia""], [""microdontia"", ""mordication""], [""valor"", ""volar""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""macromazia\"", \""macrozamia\"", \""dennis\"", \""sinned\"", \""derailed\"", \""deadlier\"", \""mordication\"", \""microdontia\"", \""obtesting\"", \""besotting\"", \""libbed\"", \""dibble\"", \""kung\"", \""gunk\"", \""hobbism\"", \""mobbish\"", \""valor\"", \""volar\""]\n"",
    ""answer"": ""[[\""besotting\"", \""obtesting\""], [\""deadlier\"", \""derailed\""], [\""dennis\"", \""sinned\""], [\""dibble\"", \""libbed\""], [\""gunk\"", \""kung\""], [\""hobbism\"", \""mobbish\""], [\""macromazia\"", \""macrozamia\""], [\""microdontia\"", \""mordication\""], [\""valor\"", \""volar\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 239,
        ""words"": [
            ""macromazia"",
            ""macrozamia"",
            ""dennis"",
            ""sinned"",
            ""derailed"",
            ""deadlier"",
            ""mordication"",
            ""microdontia"",
            ""obtesting"",
            ""besotting"",
            ""libbed"",
            ""dibble"",
            ""kung"",
            ""gunk"",
            ""hobbism"",
            ""mobbish"",
            ""valor"",
            ""volar""
        ],
        ""solution"": [
            [
                ""besotting"",
                ""obtesting""
            ],
            [
                ""deadlier"",
                ""derailed""
            ],
            [
                ""dennis"",
                ""sinned""
            ],
            [
                ""dibble"",
                ""libbed""
            ],
            [
                ""gunk"",
                ""kung""
            ],
            [
                ""hobbism"",
                ""mobbish""
            ],
            [
                ""macromazia"",
                ""macrozamia""
            ],
            [
                ""microdontia"",
                ""mordication""
            ],
            [
                ""valor"",
                ""volar""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
240,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""depletion"", ""diplotene"", ""alumniate"", ""aluminate"", ""lunettes"", ""unsettle"", ""stube"", ""tubes"", ""subet"", ""gars"", ""gras"", ""rags"", ""hardest"", ""threads"", ""trashed"", ""hardset"", ""dearths"", ""deuniting"", ""unignited"", ""monotropic"", ""monoprotic"", ""lis"", ""sil"", ""isl""]
","[[""aluminate"", ""alumniate""], [""dearths"", ""hardest"", ""hardset"", ""threads"", ""trashed""], [""depletion"", ""diplotene""], [""deuniting"", ""unignited""], [""gars"", ""gras"", ""rags""], [""isl"", ""lis"", ""sil""], [""lunettes"", ""unsettle""], [""monoprotic"", ""monotropic""], [""stube"", ""subet"", ""tubes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""depletion\"", \""diplotene\"", \""alumniate\"", \""aluminate\"", \""lunettes\"", \""unsettle\"", \""stube\"", \""tubes\"", \""subet\"", \""gars\"", \""gras\"", \""rags\"", \""hardest\"", \""threads\"", \""trashed\"", \""hardset\"", \""dearths\"", \""deuniting\"", \""unignited\"", \""monotropic\"", \""monoprotic\"", \""lis\"", \""sil\"", \""isl\""]\n"",
    ""answer"": ""[[\""aluminate\"", \""alumniate\""], [\""dearths\"", \""hardest\"", \""hardset\"", \""threads\"", \""trashed\""], [\""depletion\"", \""diplotene\""], [\""deuniting\"", \""unignited\""], [\""gars\"", \""gras\"", \""rags\""], [\""isl\"", \""lis\"", \""sil\""], [\""lunettes\"", \""unsettle\""], [\""monoprotic\"", \""monotropic\""], [\""stube\"", \""subet\"", \""tubes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 240,
        ""words"": [
            ""depletion"",
            ""diplotene"",
            ""alumniate"",
            ""aluminate"",
            ""lunettes"",
            ""unsettle"",
            ""stube"",
            ""tubes"",
            ""subet"",
            ""gars"",
            ""gras"",
            ""rags"",
            ""hardest"",
            ""threads"",
            ""trashed"",
            ""hardset"",
            ""dearths"",
            ""deuniting"",
            ""unignited"",
            ""monotropic"",
            ""monoprotic"",
            ""lis"",
            ""sil"",
            ""isl""
        ],
        ""solution"": [
            [
                ""aluminate"",
                ""alumniate""
            ],
            [
                ""dearths"",
                ""hardest"",
                ""hardset"",
                ""threads"",
                ""trashed""
            ],
            [
                ""depletion"",
                ""diplotene""
            ],
            [
                ""deuniting"",
                ""unignited""
            ],
            [
                ""gars"",
                ""gras"",
                ""rags""
            ],
            [
                ""isl"",
                ""lis"",
                ""sil""
            ],
            [
                ""lunettes"",
                ""unsettle""
            ],
            [
                ""monoprotic"",
                ""monotropic""
            ],
            [
                ""stube"",
                ""subet"",
                ""tubes""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
241,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""matchbooks"", ""smoothback"", ""letterer"", ""reletter"", ""oniscoidea"", ""iodocasein"", ""lunatical"", ""catullian"", ""coprinus"", ""poncirus""]
","[[""catullian"", ""lunatical""], [""coprinus"", ""poncirus""], [""iodocasein"", ""oniscoidea""], [""letterer"", ""reletter""], [""matchbooks"", ""smoothback""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""matchbooks\"", \""smoothback\"", \""letterer\"", \""reletter\"", \""oniscoidea\"", \""iodocasein\"", \""lunatical\"", \""catullian\"", \""coprinus\"", \""poncirus\""]\n"",
    ""answer"": ""[[\""catullian\"", \""lunatical\""], [\""coprinus\"", \""poncirus\""], [\""iodocasein\"", \""oniscoidea\""], [\""letterer\"", \""reletter\""], [\""matchbooks\"", \""smoothback\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 241,
        ""words"": [
            ""matchbooks"",
            ""smoothback"",
            ""letterer"",
            ""reletter"",
            ""oniscoidea"",
            ""iodocasein"",
            ""lunatical"",
            ""catullian"",
            ""coprinus"",
            ""poncirus""
        ],
        ""solution"": [
            [
                ""catullian"",
                ""lunatical""
            ],
            [
                ""coprinus"",
                ""poncirus""
            ],
            [
                ""iodocasein"",
                ""oniscoidea""
            ],
            [
                ""letterer"",
                ""reletter""
            ],
            [
                ""matchbooks"",
                ""smoothback""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
242,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""evanid"", ""invade"", ""viande"", ""dewani"", ""edwina"", ""meile"", ""elemi"", ""alaki"", ""akali""]
","[[""akali"", ""alaki""], [""dewani"", ""edwina""], [""elemi"", ""meile""], [""evanid"", ""invade"", ""viande""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""evanid\"", \""invade\"", \""viande\"", \""dewani\"", \""edwina\"", \""meile\"", \""elemi\"", \""alaki\"", \""akali\""]\n"",
    ""answer"": ""[[\""akali\"", \""alaki\""], [\""dewani\"", \""edwina\""], [\""elemi\"", \""meile\""], [\""evanid\"", \""invade\"", \""viande\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 242,
        ""words"": [
            ""evanid"",
            ""invade"",
            ""viande"",
            ""dewani"",
            ""edwina"",
            ""meile"",
            ""elemi"",
            ""alaki"",
            ""akali""
        ],
        ""solution"": [
            [
                ""akali"",
                ""alaki""
            ],
            [
                ""dewani"",
                ""edwina""
            ],
            [
                ""elemi"",
                ""meile""
            ],
            [
                ""evanid"",
                ""invade"",
                ""viande""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
243,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""premiate"", ""imperate"", ""outcharming"", ""outmarching"", ""diatreme"", ""diameter""]
","[[""diameter"", ""diatreme""], [""imperate"", ""premiate""], [""outcharming"", ""outmarching""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""premiate\"", \""imperate\"", \""outcharming\"", \""outmarching\"", \""diatreme\"", \""diameter\""]\n"",
    ""answer"": ""[[\""diameter\"", \""diatreme\""], [\""imperate\"", \""premiate\""], [\""outcharming\"", \""outmarching\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 243,
        ""words"": [
            ""premiate"",
            ""imperate"",
            ""outcharming"",
            ""outmarching"",
            ""diatreme"",
            ""diameter""
        ],
        ""solution"": [
            [
                ""diameter"",
                ""diatreme""
            ],
            [
                ""imperate"",
                ""premiate""
            ],
            [
                ""outcharming"",
                ""outmarching""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
244,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""amitoses"", ""atomises"", ""garbs"", ""grabs"", ""brags"", ""perron"", ""pernor"", ""pretil"", ""tripel"", ""piute"", ""uptie"", ""crenitic"", ""cretinic"", ""ricrac"", ""circar""]
","[[""amitoses"", ""atomises""], [""brags"", ""garbs"", ""grabs""], [""circar"", ""ricrac""], [""crenitic"", ""cretinic""], [""pernor"", ""perron""], [""piute"", ""uptie""], [""pretil"", ""tripel""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""amitoses\"", \""atomises\"", \""garbs\"", \""grabs\"", \""brags\"", \""perron\"", \""pernor\"", \""pretil\"", \""tripel\"", \""piute\"", \""uptie\"", \""crenitic\"", \""cretinic\"", \""ricrac\"", \""circar\""]\n"",
    ""answer"": ""[[\""amitoses\"", \""atomises\""], [\""brags\"", \""garbs\"", \""grabs\""], [\""circar\"", \""ricrac\""], [\""crenitic\"", \""cretinic\""], [\""pernor\"", \""perron\""], [\""piute\"", \""uptie\""], [\""pretil\"", \""tripel\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 244,
        ""words"": [
            ""amitoses"",
            ""atomises"",
            ""garbs"",
            ""grabs"",
            ""brags"",
            ""perron"",
            ""pernor"",
            ""pretil"",
            ""tripel"",
            ""piute"",
            ""uptie"",
            ""crenitic"",
            ""cretinic"",
            ""ricrac"",
            ""circar""
        ],
        ""solution"": [
            [
                ""amitoses"",
                ""atomises""
            ],
            [
                ""brags"",
                ""garbs"",
                ""grabs""
            ],
            [
                ""circar"",
                ""ricrac""
            ],
            [
                ""crenitic"",
                ""cretinic""
            ],
            [
                ""pernor"",
                ""perron""
            ],
            [
                ""piute"",
                ""uptie""
            ],
            [
                ""pretil"",
                ""tripel""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
245,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""wide"", ""wied"", ""bowlings"", ""blowings"", ""callate"", ""lacteal"", ""catella""]
","[[""blowings"", ""bowlings""], [""callate"", ""catella"", ""lacteal""], [""wide"", ""wied""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""wide\"", \""wied\"", \""bowlings\"", \""blowings\"", \""callate\"", \""lacteal\"", \""catella\""]\n"",
    ""answer"": ""[[\""blowings\"", \""bowlings\""], [\""callate\"", \""catella\"", \""lacteal\""], [\""wide\"", \""wied\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 245,
        ""words"": [
            ""wide"",
            ""wied"",
            ""bowlings"",
            ""blowings"",
            ""callate"",
            ""lacteal"",
            ""catella""
        ],
        ""solution"": [
            [
                ""blowings"",
                ""bowlings""
            ],
            [
                ""callate"",
                ""catella"",
                ""lacteal""
            ],
            [
                ""wide"",
                ""wied""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
246,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gratten"", ""garnett"", ""gnatter"", ""tergant"", ""covillea"", ""claviole"", ""ayne"", ""ayen"", ""footler"", ""rooflet"", ""reveler"", ""relever"", ""leverer"", ""myriametre"", ""myriameter""]
","[[""ayen"", ""ayne""], [""claviole"", ""covillea""], [""footler"", ""rooflet""], [""garnett"", ""gnatter"", ""gratten"", ""tergant""], [""leverer"", ""relever"", ""reveler""], [""myriameter"", ""myriametre""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gratten\"", \""garnett\"", \""gnatter\"", \""tergant\"", \""covillea\"", \""claviole\"", \""ayne\"", \""ayen\"", \""footler\"", \""rooflet\"", \""reveler\"", \""relever\"", \""leverer\"", \""myriametre\"", \""myriameter\""]\n"",
    ""answer"": ""[[\""ayen\"", \""ayne\""], [\""claviole\"", \""covillea\""], [\""footler\"", \""rooflet\""], [\""garnett\"", \""gnatter\"", \""gratten\"", \""tergant\""], [\""leverer\"", \""relever\"", \""reveler\""], [\""myriameter\"", \""myriametre\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 246,
        ""words"": [
            ""gratten"",
            ""garnett"",
            ""gnatter"",
            ""tergant"",
            ""covillea"",
            ""claviole"",
            ""ayne"",
            ""ayen"",
            ""footler"",
            ""rooflet"",
            ""reveler"",
            ""relever"",
            ""leverer"",
            ""myriametre"",
            ""myriameter""
        ],
        ""solution"": [
            [
                ""ayen"",
                ""ayne""
            ],
            [
                ""claviole"",
                ""covillea""
            ],
            [
                ""footler"",
                ""rooflet""
            ],
            [
                ""garnett"",
                ""gnatter"",
                ""gratten"",
                ""tergant""
            ],
            [
                ""leverer"",
                ""relever"",
                ""reveler""
            ],
            [
                ""myriameter"",
                ""myriametre""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
247,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""denied"", ""indeed"", ""posthaste"", ""tosephtas"", ""galerite"", ""algerite"", ""religate"", ""perfections"", ""frontspiece"", ""blowup"", ""upblow"", ""blisterwort"", ""bristlewort"", ""descanter"", ""decanters"", ""innodate"", ""antinode"", ""anointed""]
","[[""algerite"", ""galerite"", ""religate""], [""anointed"", ""antinode"", ""innodate""], [""blisterwort"", ""bristlewort""], [""blowup"", ""upblow""], [""decanters"", ""descanter""], [""denied"", ""indeed""], [""frontspiece"", ""perfections""], [""posthaste"", ""tosephtas""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""denied\"", \""indeed\"", \""posthaste\"", \""tosephtas\"", \""galerite\"", \""algerite\"", \""religate\"", \""perfections\"", \""frontspiece\"", \""blowup\"", \""upblow\"", \""blisterwort\"", \""bristlewort\"", \""descanter\"", \""decanters\"", \""innodate\"", \""antinode\"", \""anointed\""]\n"",
    ""answer"": ""[[\""algerite\"", \""galerite\"", \""religate\""], [\""anointed\"", \""antinode\"", \""innodate\""], [\""blisterwort\"", \""bristlewort\""], [\""blowup\"", \""upblow\""], [\""decanters\"", \""descanter\""], [\""denied\"", \""indeed\""], [\""frontspiece\"", \""perfections\""], [\""posthaste\"", \""tosephtas\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 247,
        ""words"": [
            ""denied"",
            ""indeed"",
            ""posthaste"",
            ""tosephtas"",
            ""galerite"",
            ""algerite"",
            ""religate"",
            ""perfections"",
            ""frontspiece"",
            ""blowup"",
            ""upblow"",
            ""blisterwort"",
            ""bristlewort"",
            ""descanter"",
            ""decanters"",
            ""innodate"",
            ""antinode"",
            ""anointed""
        ],
        ""solution"": [
            [
                ""algerite"",
                ""galerite"",
                ""religate""
            ],
            [
                ""anointed"",
                ""antinode"",
                ""innodate""
            ],
            [
                ""blisterwort"",
                ""bristlewort""
            ],
            [
                ""blowup"",
                ""upblow""
            ],
            [
                ""decanters"",
                ""descanter""
            ],
            [
                ""denied"",
                ""indeed""
            ],
            [
                ""frontspiece"",
                ""perfections""
            ],
            [
                ""posthaste"",
                ""tosephtas""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
248,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""esrogim"", ""ogreism"", ""ergoism"", ""maidenism"", ""medianism"", ""tarpan"", ""partan"", ""trapan"", ""watts"", ""twats"", ""lingulae"", ""linguale"", ""anguille"", ""latimeria"", ""marialite""]
","[[""anguille"", ""linguale"", ""lingulae""], [""ergoism"", ""esrogim"", ""ogreism""], [""latimeria"", ""marialite""], [""maidenism"", ""medianism""], [""partan"", ""tarpan"", ""trapan""], [""twats"", ""watts""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""esrogim\"", \""ogreism\"", \""ergoism\"", \""maidenism\"", \""medianism\"", \""tarpan\"", \""partan\"", \""trapan\"", \""watts\"", \""twats\"", \""lingulae\"", \""linguale\"", \""anguille\"", \""latimeria\"", \""marialite\""]\n"",
    ""answer"": ""[[\""anguille\"", \""linguale\"", \""lingulae\""], [\""ergoism\"", \""esrogim\"", \""ogreism\""], [\""latimeria\"", \""marialite\""], [\""maidenism\"", \""medianism\""], [\""partan\"", \""tarpan\"", \""trapan\""], [\""twats\"", \""watts\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 248,
        ""words"": [
            ""esrogim"",
            ""ogreism"",
            ""ergoism"",
            ""maidenism"",
            ""medianism"",
            ""tarpan"",
            ""partan"",
            ""trapan"",
            ""watts"",
            ""twats"",
            ""lingulae"",
            ""linguale"",
            ""anguille"",
            ""latimeria"",
            ""marialite""
        ],
        ""solution"": [
            [
                ""anguille"",
                ""linguale"",
                ""lingulae""
            ],
            [
                ""ergoism"",
                ""esrogim"",
                ""ogreism""
            ],
            [
                ""latimeria"",
                ""marialite""
            ],
            [
                ""maidenism"",
                ""medianism""
            ],
            [
                ""partan"",
                ""tarpan"",
                ""trapan""
            ],
            [
                ""twats"",
                ""watts""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
249,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lacertose"", ""relocates"", ""chamite"", ""hematic""]
","[[""chamite"", ""hematic""], [""lacertose"", ""relocates""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lacertose\"", \""relocates\"", \""chamite\"", \""hematic\""]\n"",
    ""answer"": ""[[\""chamite\"", \""hematic\""], [\""lacertose\"", \""relocates\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 249,
        ""words"": [
            ""lacertose"",
            ""relocates"",
            ""chamite"",
            ""hematic""
        ],
        ""solution"": [
            [
                ""chamite"",
                ""hematic""
            ],
            [
                ""lacertose"",
                ""relocates""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
250,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tameable"", ""matabele"", ""flexured"", ""refluxed""]
","[[""flexured"", ""refluxed""], [""matabele"", ""tameable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tameable\"", \""matabele\"", \""flexured\"", \""refluxed\""]\n"",
    ""answer"": ""[[\""flexured\"", \""refluxed\""], [\""matabele\"", \""tameable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 250,
        ""words"": [
            ""tameable"",
            ""matabele"",
            ""flexured"",
            ""refluxed""
        ],
        ""solution"": [
            [
                ""flexured"",
                ""refluxed""
            ],
            [
                ""matabele"",
                ""tameable""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
251,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""enicuridae"", ""audiencier"", ""serousness"", ""sournesses""]
","[[""audiencier"", ""enicuridae""], [""serousness"", ""sournesses""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""enicuridae\"", \""audiencier\"", \""serousness\"", \""sournesses\""]\n"",
    ""answer"": ""[[\""audiencier\"", \""enicuridae\""], [\""serousness\"", \""sournesses\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 251,
        ""words"": [
            ""enicuridae"",
            ""audiencier"",
            ""serousness"",
            ""sournesses""
        ],
        ""solution"": [
            [
                ""audiencier"",
                ""enicuridae""
            ],
            [
                ""serousness"",
                ""sournesses""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
252,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""resectional"", ""secretional"", ""cleuks"", ""suckle""]
","[[""cleuks"", ""suckle""], [""resectional"", ""secretional""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""resectional\"", \""secretional\"", \""cleuks\"", \""suckle\""]\n"",
    ""answer"": ""[[\""cleuks\"", \""suckle\""], [\""resectional\"", \""secretional\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 252,
        ""words"": [
            ""resectional"",
            ""secretional"",
            ""cleuks"",
            ""suckle""
        ],
        ""solution"": [
            [
                ""cleuks"",
                ""suckle""
            ],
            [
                ""resectional"",
                ""secretional""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
253,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sagvandite"", ""disvantage"", ""reedily"", ""reyield"", ""intemporal"", ""trampoline"", ""eustachian"", ""euthanasic"", ""nonmartialness"", ""antinormalness"", ""chamberer"", ""rechamber""]
","[[""antinormalness"", ""nonmartialness""], [""chamberer"", ""rechamber""], [""disvantage"", ""sagvandite""], [""eustachian"", ""euthanasic""], [""intemporal"", ""trampoline""], [""reedily"", ""reyield""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sagvandite\"", \""disvantage\"", \""reedily\"", \""reyield\"", \""intemporal\"", \""trampoline\"", \""eustachian\"", \""euthanasic\"", \""nonmartialness\"", \""antinormalness\"", \""chamberer\"", \""rechamber\""]\n"",
    ""answer"": ""[[\""antinormalness\"", \""nonmartialness\""], [\""chamberer\"", \""rechamber\""], [\""disvantage\"", \""sagvandite\""], [\""eustachian\"", \""euthanasic\""], [\""intemporal\"", \""trampoline\""], [\""reedily\"", \""reyield\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 253,
        ""words"": [
            ""sagvandite"",
            ""disvantage"",
            ""reedily"",
            ""reyield"",
            ""intemporal"",
            ""trampoline"",
            ""eustachian"",
            ""euthanasic"",
            ""nonmartialness"",
            ""antinormalness"",
            ""chamberer"",
            ""rechamber""
        ],
        ""solution"": [
            [
                ""antinormalness"",
                ""nonmartialness""
            ],
            [
                ""chamberer"",
                ""rechamber""
            ],
            [
                ""disvantage"",
                ""sagvandite""
            ],
            [
                ""eustachian"",
                ""euthanasic""
            ],
            [
                ""intemporal"",
                ""trampoline""
            ],
            [
                ""reedily"",
                ""reyield""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
254,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pearmain"", ""paramine"", ""amperian"", ""opuscular"", ""crapulous"", ""mosso"", ""smoos"", ""ammeline"", ""melamine"", ""disadorn"", ""androids"", ""nigrous"", ""rousing"", ""souring"", ""easing"", ""sangei"", ""sundek"", ""dusken"", ""tinseled"", ""listened"", ""lintseed"", ""enlisted""]
","[[""ammeline"", ""melamine""], [""amperian"", ""paramine"", ""pearmain""], [""androids"", ""disadorn""], [""crapulous"", ""opuscular""], [""dusken"", ""sundek""], [""easing"", ""sangei""], [""enlisted"", ""lintseed"", ""listened"", ""tinseled""], [""mosso"", ""smoos""], [""nigrous"", ""rousing"", ""souring""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pearmain\"", \""paramine\"", \""amperian\"", \""opuscular\"", \""crapulous\"", \""mosso\"", \""smoos\"", \""ammeline\"", \""melamine\"", \""disadorn\"", \""androids\"", \""nigrous\"", \""rousing\"", \""souring\"", \""easing\"", \""sangei\"", \""sundek\"", \""dusken\"", \""tinseled\"", \""listened\"", \""lintseed\"", \""enlisted\""]\n"",
    ""answer"": ""[[\""ammeline\"", \""melamine\""], [\""amperian\"", \""paramine\"", \""pearmain\""], [\""androids\"", \""disadorn\""], [\""crapulous\"", \""opuscular\""], [\""dusken\"", \""sundek\""], [\""easing\"", \""sangei\""], [\""enlisted\"", \""lintseed\"", \""listened\"", \""tinseled\""], [\""mosso\"", \""smoos\""], [\""nigrous\"", \""rousing\"", \""souring\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 254,
        ""words"": [
            ""pearmain"",
            ""paramine"",
            ""amperian"",
            ""opuscular"",
            ""crapulous"",
            ""mosso"",
            ""smoos"",
            ""ammeline"",
            ""melamine"",
            ""disadorn"",
            ""androids"",
            ""nigrous"",
            ""rousing"",
            ""souring"",
            ""easing"",
            ""sangei"",
            ""sundek"",
            ""dusken"",
            ""tinseled"",
            ""listened"",
            ""lintseed"",
            ""enlisted""
        ],
        ""solution"": [
            [
                ""ammeline"",
                ""melamine""
            ],
            [
                ""amperian"",
                ""paramine"",
                ""pearmain""
            ],
            [
                ""androids"",
                ""disadorn""
            ],
            [
                ""crapulous"",
                ""opuscular""
            ],
            [
                ""dusken"",
                ""sundek""
            ],
            [
                ""easing"",
                ""sangei""
            ],
            [
                ""enlisted"",
                ""lintseed"",
                ""listened"",
                ""tinseled""
            ],
            [
                ""mosso"",
                ""smoos""
            ],
            [
                ""nigrous"",
                ""rousing"",
                ""souring""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
255,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""adyton"", ""dayton"", ""coursers"", ""cursores"", ""scourers"", ""melanochroi"", ""chloroamine"", ""halter"", ""lather"", ""thaler"", ""brees"", ""beers"", ""elanus"", ""unseal"", ""larboard"", ""labrador"", ""idoist"", ""idiots"", ""glowers"", ""reglows"", ""cratons"", ""cartons"", ""cantors""]
","[[""adyton"", ""dayton""], [""beers"", ""brees""], [""cantors"", ""cartons"", ""cratons""], [""chloroamine"", ""melanochroi""], [""coursers"", ""cursores"", ""scourers""], [""elanus"", ""unseal""], [""glowers"", ""reglows""], [""halter"", ""lather"", ""thaler""], [""idiots"", ""idoist""], [""labrador"", ""larboard""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""adyton\"", \""dayton\"", \""coursers\"", \""cursores\"", \""scourers\"", \""melanochroi\"", \""chloroamine\"", \""halter\"", \""lather\"", \""thaler\"", \""brees\"", \""beers\"", \""elanus\"", \""unseal\"", \""larboard\"", \""labrador\"", \""idoist\"", \""idiots\"", \""glowers\"", \""reglows\"", \""cratons\"", \""cartons\"", \""cantors\""]\n"",
    ""answer"": ""[[\""adyton\"", \""dayton\""], [\""beers\"", \""brees\""], [\""cantors\"", \""cartons\"", \""cratons\""], [\""chloroamine\"", \""melanochroi\""], [\""coursers\"", \""cursores\"", \""scourers\""], [\""elanus\"", \""unseal\""], [\""glowers\"", \""reglows\""], [\""halter\"", \""lather\"", \""thaler\""], [\""idiots\"", \""idoist\""], [\""labrador\"", \""larboard\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 255,
        ""words"": [
            ""adyton"",
            ""dayton"",
            ""coursers"",
            ""cursores"",
            ""scourers"",
            ""melanochroi"",
            ""chloroamine"",
            ""halter"",
            ""lather"",
            ""thaler"",
            ""brees"",
            ""beers"",
            ""elanus"",
            ""unseal"",
            ""larboard"",
            ""labrador"",
            ""idoist"",
            ""idiots"",
            ""glowers"",
            ""reglows"",
            ""cratons"",
            ""cartons"",
            ""cantors""
        ],
        ""solution"": [
            [
                ""adyton"",
                ""dayton""
            ],
            [
                ""beers"",
                ""brees""
            ],
            [
                ""cantors"",
                ""cartons"",
                ""cratons""
            ],
            [
                ""chloroamine"",
                ""melanochroi""
            ],
            [
                ""coursers"",
                ""cursores"",
                ""scourers""
            ],
            [
                ""elanus"",
                ""unseal""
            ],
            [
                ""glowers"",
                ""reglows""
            ],
            [
                ""halter"",
                ""lather"",
                ""thaler""
            ],
            [
                ""idiots"",
                ""idoist""
            ],
            [
                ""labrador"",
                ""larboard""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
256,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gains"", ""signa"", ""president"", ""serpentid"", ""overtop"", ""overpot"", ""flowerfly"", ""flyflower"", ""testifies"", ""feistiest"", ""bluesman"", ""albumens""]
","[[""albumens"", ""bluesman""], [""feistiest"", ""testifies""], [""flowerfly"", ""flyflower""], [""gains"", ""signa""], [""overpot"", ""overtop""], [""president"", ""serpentid""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gains\"", \""signa\"", \""president\"", \""serpentid\"", \""overtop\"", \""overpot\"", \""flowerfly\"", \""flyflower\"", \""testifies\"", \""feistiest\"", \""bluesman\"", \""albumens\""]\n"",
    ""answer"": ""[[\""albumens\"", \""bluesman\""], [\""feistiest\"", \""testifies\""], [\""flowerfly\"", \""flyflower\""], [\""gains\"", \""signa\""], [\""overpot\"", \""overtop\""], [\""president\"", \""serpentid\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 256,
        ""words"": [
            ""gains"",
            ""signa"",
            ""president"",
            ""serpentid"",
            ""overtop"",
            ""overpot"",
            ""flowerfly"",
            ""flyflower"",
            ""testifies"",
            ""feistiest"",
            ""bluesman"",
            ""albumens""
        ],
        ""solution"": [
            [
                ""albumens"",
                ""bluesman""
            ],
            [
                ""feistiest"",
                ""testifies""
            ],
            [
                ""flowerfly"",
                ""flyflower""
            ],
            [
                ""gains"",
                ""signa""
            ],
            [
                ""overpot"",
                ""overtop""
            ],
            [
                ""president"",
                ""serpentid""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
257,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tussar"", ""tarsus"", ""moistened"", ""monetised"", ""blonde"", ""bolden"", ""nobled"", ""earring"", ""angrier"", ""rangier"", ""grainer"", ""rearing"", ""epicotyls"", ""lipocytes"", ""abolisher"", ""reabolish""]
","[[""abolisher"", ""reabolish""], [""angrier"", ""earring"", ""grainer"", ""rangier"", ""rearing""], [""blonde"", ""bolden"", ""nobled""], [""epicotyls"", ""lipocytes""], [""moistened"", ""monetised""], [""tarsus"", ""tussar""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tussar\"", \""tarsus\"", \""moistened\"", \""monetised\"", \""blonde\"", \""bolden\"", \""nobled\"", \""earring\"", \""angrier\"", \""rangier\"", \""grainer\"", \""rearing\"", \""epicotyls\"", \""lipocytes\"", \""abolisher\"", \""reabolish\""]\n"",
    ""answer"": ""[[\""abolisher\"", \""reabolish\""], [\""angrier\"", \""earring\"", \""grainer\"", \""rangier\"", \""rearing\""], [\""blonde\"", \""bolden\"", \""nobled\""], [\""epicotyls\"", \""lipocytes\""], [\""moistened\"", \""monetised\""], [\""tarsus\"", \""tussar\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 257,
        ""words"": [
            ""tussar"",
            ""tarsus"",
            ""moistened"",
            ""monetised"",
            ""blonde"",
            ""bolden"",
            ""nobled"",
            ""earring"",
            ""angrier"",
            ""rangier"",
            ""grainer"",
            ""rearing"",
            ""epicotyls"",
            ""lipocytes"",
            ""abolisher"",
            ""reabolish""
        ],
        ""solution"": [
            [
                ""abolisher"",
                ""reabolish""
            ],
            [
                ""angrier"",
                ""earring"",
                ""grainer"",
                ""rangier"",
                ""rearing""
            ],
            [
                ""blonde"",
                ""bolden"",
                ""nobled""
            ],
            [
                ""epicotyls"",
                ""lipocytes""
            ],
            [
                ""moistened"",
                ""monetised""
            ],
            [
                ""tarsus"",
                ""tussar""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
258,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""davy"", ""vady"", ""ufs"", ""suf"", ""turfage"", ""frutage"", ""vitrine"", ""inviter"", ""arb"", ""bar"", ""bra"", ""rab"", ""abr"", ""atonalist"", ""saltation"", ""stational"", ""cereza"", ""creaze"", ""aylet"", ""ately"", ""incuss"", ""scusin"", ""unfabled"", ""fundable""]
","[[""abr"", ""arb"", ""bar"", ""bra"", ""rab""], [""ately"", ""aylet""], [""atonalist"", ""saltation"", ""stational""], [""cereza"", ""creaze""], [""davy"", ""vady""], [""frutage"", ""turfage""], [""fundable"", ""unfabled""], [""incuss"", ""scusin""], [""inviter"", ""vitrine""], [""suf"", ""ufs""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""davy\"", \""vady\"", \""ufs\"", \""suf\"", \""turfage\"", \""frutage\"", \""vitrine\"", \""inviter\"", \""arb\"", \""bar\"", \""bra\"", \""rab\"", \""abr\"", \""atonalist\"", \""saltation\"", \""stational\"", \""cereza\"", \""creaze\"", \""aylet\"", \""ately\"", \""incuss\"", \""scusin\"", \""unfabled\"", \""fundable\""]\n"",
    ""answer"": ""[[\""abr\"", \""arb\"", \""bar\"", \""bra\"", \""rab\""], [\""ately\"", \""aylet\""], [\""atonalist\"", \""saltation\"", \""stational\""], [\""cereza\"", \""creaze\""], [\""davy\"", \""vady\""], [\""frutage\"", \""turfage\""], [\""fundable\"", \""unfabled\""], [\""incuss\"", \""scusin\""], [\""inviter\"", \""vitrine\""], [\""suf\"", \""ufs\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 258,
        ""words"": [
            ""davy"",
            ""vady"",
            ""ufs"",
            ""suf"",
            ""turfage"",
            ""frutage"",
            ""vitrine"",
            ""inviter"",
            ""arb"",
            ""bar"",
            ""bra"",
            ""rab"",
            ""abr"",
            ""atonalist"",
            ""saltation"",
            ""stational"",
            ""cereza"",
            ""creaze"",
            ""aylet"",
            ""ately"",
            ""incuss"",
            ""scusin"",
            ""unfabled"",
            ""fundable""
        ],
        ""solution"": [
            [
                ""abr"",
                ""arb"",
                ""bar"",
                ""bra"",
                ""rab""
            ],
            [
                ""ately"",
                ""aylet""
            ],
            [
                ""atonalist"",
                ""saltation"",
                ""stational""
            ],
            [
                ""cereza"",
                ""creaze""
            ],
            [
                ""davy"",
                ""vady""
            ],
            [
                ""frutage"",
                ""turfage""
            ],
            [
                ""fundable"",
                ""unfabled""
            ],
            [
                ""incuss"",
                ""scusin""
            ],
            [
                ""inviter"",
                ""vitrine""
            ],
            [
                ""suf"",
                ""ufs""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
259,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ovensman"", ""snemovna"", ""meltage"", ""letgame"", ""tentage"", ""genetta"", ""retramp"", ""tramper"", ""antireaction"", ""anticreation"", ""dogget"", ""togged"", ""lemonado"", ""neomodal"", ""mangels"", ""mangles"", ""hesper"", ""herpes"", ""sphere""]
","[[""anticreation"", ""antireaction""], [""dogget"", ""togged""], [""genetta"", ""tentage""], [""herpes"", ""hesper"", ""sphere""], [""lemonado"", ""neomodal""], [""letgame"", ""meltage""], [""mangels"", ""mangles""], [""ovensman"", ""snemovna""], [""retramp"", ""tramper""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ovensman\"", \""snemovna\"", \""meltage\"", \""letgame\"", \""tentage\"", \""genetta\"", \""retramp\"", \""tramper\"", \""antireaction\"", \""anticreation\"", \""dogget\"", \""togged\"", \""lemonado\"", \""neomodal\"", \""mangels\"", \""mangles\"", \""hesper\"", \""herpes\"", \""sphere\""]\n"",
    ""answer"": ""[[\""anticreation\"", \""antireaction\""], [\""dogget\"", \""togged\""], [\""genetta\"", \""tentage\""], [\""herpes\"", \""hesper\"", \""sphere\""], [\""lemonado\"", \""neomodal\""], [\""letgame\"", \""meltage\""], [\""mangels\"", \""mangles\""], [\""ovensman\"", \""snemovna\""], [\""retramp\"", \""tramper\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 259,
        ""words"": [
            ""ovensman"",
            ""snemovna"",
            ""meltage"",
            ""letgame"",
            ""tentage"",
            ""genetta"",
            ""retramp"",
            ""tramper"",
            ""antireaction"",
            ""anticreation"",
            ""dogget"",
            ""togged"",
            ""lemonado"",
            ""neomodal"",
            ""mangels"",
            ""mangles"",
            ""hesper"",
            ""herpes"",
            ""sphere""
        ],
        ""solution"": [
            [
                ""anticreation"",
                ""antireaction""
            ],
            [
                ""dogget"",
                ""togged""
            ],
            [
                ""genetta"",
                ""tentage""
            ],
            [
                ""herpes"",
                ""hesper"",
                ""sphere""
            ],
            [
                ""lemonado"",
                ""neomodal""
            ],
            [
                ""letgame"",
                ""meltage""
            ],
            [
                ""mangels"",
                ""mangles""
            ],
            [
                ""ovensman"",
                ""snemovna""
            ],
            [
                ""retramp"",
                ""tramper""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
260,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""perthite"", ""tephrite"", ""columbo"", ""coulomb"", ""balant"", ""batlan"", ""mastery"", ""streamy""]
","[[""balant"", ""batlan""], [""columbo"", ""coulomb""], [""mastery"", ""streamy""], [""perthite"", ""tephrite""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""perthite\"", \""tephrite\"", \""columbo\"", \""coulomb\"", \""balant\"", \""batlan\"", \""mastery\"", \""streamy\""]\n"",
    ""answer"": ""[[\""balant\"", \""batlan\""], [\""columbo\"", \""coulomb\""], [\""mastery\"", \""streamy\""], [\""perthite\"", \""tephrite\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 260,
        ""words"": [
            ""perthite"",
            ""tephrite"",
            ""columbo"",
            ""coulomb"",
            ""balant"",
            ""batlan"",
            ""mastery"",
            ""streamy""
        ],
        ""solution"": [
            [
                ""balant"",
                ""batlan""
            ],
            [
                ""columbo"",
                ""coulomb""
            ],
            [
                ""mastery"",
                ""streamy""
            ],
            [
                ""perthite"",
                ""tephrite""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
261,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""feastful"", ""sufflate"", ""armed"", ""ramed"", ""madre"", ""dream"", ""derma"", ""lactarine"", ""lacertian"", ""carnalite"", ""snaggier"", ""greasing"", ""gearings"", ""gravure"", ""verruga"", ""entea"", ""eaten"", ""enate"", ""arietta"", ""ratitae"", ""eof"", ""foe"", ""cuffless"", ""scuffles""]
","[[""arietta"", ""ratitae""], [""armed"", ""derma"", ""dream"", ""madre"", ""ramed""], [""carnalite"", ""lacertian"", ""lactarine""], [""cuffless"", ""scuffles""], [""eaten"", ""enate"", ""entea""], [""eof"", ""foe""], [""feastful"", ""sufflate""], [""gearings"", ""greasing"", ""snaggier""], [""gravure"", ""verruga""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""feastful\"", \""sufflate\"", \""armed\"", \""ramed\"", \""madre\"", \""dream\"", \""derma\"", \""lactarine\"", \""lacertian\"", \""carnalite\"", \""snaggier\"", \""greasing\"", \""gearings\"", \""gravure\"", \""verruga\"", \""entea\"", \""eaten\"", \""enate\"", \""arietta\"", \""ratitae\"", \""eof\"", \""foe\"", \""cuffless\"", \""scuffles\""]\n"",
    ""answer"": ""[[\""arietta\"", \""ratitae\""], [\""armed\"", \""derma\"", \""dream\"", \""madre\"", \""ramed\""], [\""carnalite\"", \""lacertian\"", \""lactarine\""], [\""cuffless\"", \""scuffles\""], [\""eaten\"", \""enate\"", \""entea\""], [\""eof\"", \""foe\""], [\""feastful\"", \""sufflate\""], [\""gearings\"", \""greasing\"", \""snaggier\""], [\""gravure\"", \""verruga\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 261,
        ""words"": [
            ""feastful"",
            ""sufflate"",
            ""armed"",
            ""ramed"",
            ""madre"",
            ""dream"",
            ""derma"",
            ""lactarine"",
            ""lacertian"",
            ""carnalite"",
            ""snaggier"",
            ""greasing"",
            ""gearings"",
            ""gravure"",
            ""verruga"",
            ""entea"",
            ""eaten"",
            ""enate"",
            ""arietta"",
            ""ratitae"",
            ""eof"",
            ""foe"",
            ""cuffless"",
            ""scuffles""
        ],
        ""solution"": [
            [
                ""arietta"",
                ""ratitae""
            ],
            [
                ""armed"",
                ""derma"",
                ""dream"",
                ""madre"",
                ""ramed""
            ],
            [
                ""carnalite"",
                ""lacertian"",
                ""lactarine""
            ],
            [
                ""cuffless"",
                ""scuffles""
            ],
            [
                ""eaten"",
                ""enate"",
                ""entea""
            ],
            [
                ""eof"",
                ""foe""
            ],
            [
                ""feastful"",
                ""sufflate""
            ],
            [
                ""gearings"",
                ""greasing"",
                ""snaggier""
            ],
            [
                ""gravure"",
                ""verruga""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
262,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""carafes"", ""afresca"", ""oofiest"", ""footsie"", ""brakeages"", ""breakages"", ""withiest"", ""whitiest""]
","[[""afresca"", ""carafes""], [""brakeages"", ""breakages""], [""footsie"", ""oofiest""], [""whitiest"", ""withiest""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""carafes\"", \""afresca\"", \""oofiest\"", \""footsie\"", \""brakeages\"", \""breakages\"", \""withiest\"", \""whitiest\""]\n"",
    ""answer"": ""[[\""afresca\"", \""carafes\""], [\""brakeages\"", \""breakages\""], [\""footsie\"", \""oofiest\""], [\""whitiest\"", \""withiest\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 262,
        ""words"": [
            ""carafes"",
            ""afresca"",
            ""oofiest"",
            ""footsie"",
            ""brakeages"",
            ""breakages"",
            ""withiest"",
            ""whitiest""
        ],
        ""solution"": [
            [
                ""afresca"",
                ""carafes""
            ],
            [
                ""brakeages"",
                ""breakages""
            ],
            [
                ""footsie"",
                ""oofiest""
            ],
            [
                ""whitiest"",
                ""withiest""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
263,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""quinze"", ""zequin"", ""snies"", ""nisse"", ""sines"", ""flee"", ""fele"", ""leef"", ""creativeness"", ""reactiveness"", ""potamian"", ""tapinoma"", ""intermittor"", ""intromitter""]
","[[""creativeness"", ""reactiveness""], [""fele"", ""flee"", ""leef""], [""intermittor"", ""intromitter""], [""nisse"", ""sines"", ""snies""], [""potamian"", ""tapinoma""], [""quinze"", ""zequin""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""quinze\"", \""zequin\"", \""snies\"", \""nisse\"", \""sines\"", \""flee\"", \""fele\"", \""leef\"", \""creativeness\"", \""reactiveness\"", \""potamian\"", \""tapinoma\"", \""intermittor\"", \""intromitter\""]\n"",
    ""answer"": ""[[\""creativeness\"", \""reactiveness\""], [\""fele\"", \""flee\"", \""leef\""], [\""intermittor\"", \""intromitter\""], [\""nisse\"", \""sines\"", \""snies\""], [\""potamian\"", \""tapinoma\""], [\""quinze\"", \""zequin\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 263,
        ""words"": [
            ""quinze"",
            ""zequin"",
            ""snies"",
            ""nisse"",
            ""sines"",
            ""flee"",
            ""fele"",
            ""leef"",
            ""creativeness"",
            ""reactiveness"",
            ""potamian"",
            ""tapinoma"",
            ""intermittor"",
            ""intromitter""
        ],
        ""solution"": [
            [
                ""creativeness"",
                ""reactiveness""
            ],
            [
                ""fele"",
                ""flee"",
                ""leef""
            ],
            [
                ""intermittor"",
                ""intromitter""
            ],
            [
                ""nisse"",
                ""sines"",
                ""snies""
            ],
            [
                ""potamian"",
                ""tapinoma""
            ],
            [
                ""quinze"",
                ""zequin""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
264,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""peach"", ""cheap"", ""dialogism"", ""sigmoidal"", ""gels"", ""legs""]
","[[""cheap"", ""peach""], [""dialogism"", ""sigmoidal""], [""gels"", ""legs""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""peach\"", \""cheap\"", \""dialogism\"", \""sigmoidal\"", \""gels\"", \""legs\""]\n"",
    ""answer"": ""[[\""cheap\"", \""peach\""], [\""dialogism\"", \""sigmoidal\""], [\""gels\"", \""legs\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 264,
        ""words"": [
            ""peach"",
            ""cheap"",
            ""dialogism"",
            ""sigmoidal"",
            ""gels"",
            ""legs""
        ],
        ""solution"": [
            [
                ""cheap"",
                ""peach""
            ],
            [
                ""dialogism"",
                ""sigmoidal""
            ],
            [
                ""gels"",
                ""legs""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
265,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dunter"", ""runted"", ""rapider"", ""parried"", ""rondel"", ""rondle"", ""dronel"", ""hungary"", ""ahungry"", ""setons"", ""seston"", ""stenos"", ""scrips"", ""crisps"", ""sanderling"", ""slandering"", ""figary"", ""argify"", ""conatural"", ""antocular"", ""tracaulon"", ""bree"", ""bere"", ""beer""]
","[[""ahungry"", ""hungary""], [""antocular"", ""conatural"", ""tracaulon""], [""argify"", ""figary""], [""beer"", ""bere"", ""bree""], [""crisps"", ""scrips""], [""dronel"", ""rondel"", ""rondle""], [""dunter"", ""runted""], [""parried"", ""rapider""], [""sanderling"", ""slandering""], [""seston"", ""setons"", ""stenos""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dunter\"", \""runted\"", \""rapider\"", \""parried\"", \""rondel\"", \""rondle\"", \""dronel\"", \""hungary\"", \""ahungry\"", \""setons\"", \""seston\"", \""stenos\"", \""scrips\"", \""crisps\"", \""sanderling\"", \""slandering\"", \""figary\"", \""argify\"", \""conatural\"", \""antocular\"", \""tracaulon\"", \""bree\"", \""bere\"", \""beer\""]\n"",
    ""answer"": ""[[\""ahungry\"", \""hungary\""], [\""antocular\"", \""conatural\"", \""tracaulon\""], [\""argify\"", \""figary\""], [\""beer\"", \""bere\"", \""bree\""], [\""crisps\"", \""scrips\""], [\""dronel\"", \""rondel\"", \""rondle\""], [\""dunter\"", \""runted\""], [\""parried\"", \""rapider\""], [\""sanderling\"", \""slandering\""], [\""seston\"", \""setons\"", \""stenos\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 265,
        ""words"": [
            ""dunter"",
            ""runted"",
            ""rapider"",
            ""parried"",
            ""rondel"",
            ""rondle"",
            ""dronel"",
            ""hungary"",
            ""ahungry"",
            ""setons"",
            ""seston"",
            ""stenos"",
            ""scrips"",
            ""crisps"",
            ""sanderling"",
            ""slandering"",
            ""figary"",
            ""argify"",
            ""conatural"",
            ""antocular"",
            ""tracaulon"",
            ""bree"",
            ""bere"",
            ""beer""
        ],
        ""solution"": [
            [
                ""ahungry"",
                ""hungary""
            ],
            [
                ""antocular"",
                ""conatural"",
                ""tracaulon""
            ],
            [
                ""argify"",
                ""figary""
            ],
            [
                ""beer"",
                ""bere"",
                ""bree""
            ],
            [
                ""crisps"",
                ""scrips""
            ],
            [
                ""dronel"",
                ""rondel"",
                ""rondle""
            ],
            [
                ""dunter"",
                ""runted""
            ],
            [
                ""parried"",
                ""rapider""
            ],
            [
                ""sanderling"",
                ""slandering""
            ],
            [
                ""seston"",
                ""setons"",
                ""stenos""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
266,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""homerian"", ""homarine"", ""oolite"", ""lootie"", ""jihad"", ""hadji"", ""bin"", ""nib"", ""plasmase"", ""lampases""]
","[[""bin"", ""nib""], [""hadji"", ""jihad""], [""homarine"", ""homerian""], [""lampases"", ""plasmase""], [""lootie"", ""oolite""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""homerian\"", \""homarine\"", \""oolite\"", \""lootie\"", \""jihad\"", \""hadji\"", \""bin\"", \""nib\"", \""plasmase\"", \""lampases\""]\n"",
    ""answer"": ""[[\""bin\"", \""nib\""], [\""hadji\"", \""jihad\""], [\""homarine\"", \""homerian\""], [\""lampases\"", \""plasmase\""], [\""lootie\"", \""oolite\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 266,
        ""words"": [
            ""homerian"",
            ""homarine"",
            ""oolite"",
            ""lootie"",
            ""jihad"",
            ""hadji"",
            ""bin"",
            ""nib"",
            ""plasmase"",
            ""lampases""
        ],
        ""solution"": [
            [
                ""bin"",
                ""nib""
            ],
            [
                ""hadji"",
                ""jihad""
            ],
            [
                ""homarine"",
                ""homerian""
            ],
            [
                ""lampases"",
                ""plasmase""
            ],
            [
                ""lootie"",
                ""oolite""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
267,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reinstating"", ""intrigantes"", ""straitening"", ""upcoils"", ""oilcups"", ""bulse"", ""lubes"", ""blues"", ""capernoity"", ""acetopyrin"", ""toymen"", ""etymon"", ""tutor"", ""tourt"", ""mangrate"", ""grateman"", ""mantegar""]
","[[""acetopyrin"", ""capernoity""], [""blues"", ""bulse"", ""lubes""], [""etymon"", ""toymen""], [""grateman"", ""mangrate"", ""mantegar""], [""intrigantes"", ""reinstating"", ""straitening""], [""oilcups"", ""upcoils""], [""tourt"", ""tutor""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reinstating\"", \""intrigantes\"", \""straitening\"", \""upcoils\"", \""oilcups\"", \""bulse\"", \""lubes\"", \""blues\"", \""capernoity\"", \""acetopyrin\"", \""toymen\"", \""etymon\"", \""tutor\"", \""tourt\"", \""mangrate\"", \""grateman\"", \""mantegar\""]\n"",
    ""answer"": ""[[\""acetopyrin\"", \""capernoity\""], [\""blues\"", \""bulse\"", \""lubes\""], [\""etymon\"", \""toymen\""], [\""grateman\"", \""mangrate\"", \""mantegar\""], [\""intrigantes\"", \""reinstating\"", \""straitening\""], [\""oilcups\"", \""upcoils\""], [\""tourt\"", \""tutor\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 267,
        ""words"": [
            ""reinstating"",
            ""intrigantes"",
            ""straitening"",
            ""upcoils"",
            ""oilcups"",
            ""bulse"",
            ""lubes"",
            ""blues"",
            ""capernoity"",
            ""acetopyrin"",
            ""toymen"",
            ""etymon"",
            ""tutor"",
            ""tourt"",
            ""mangrate"",
            ""grateman"",
            ""mantegar""
        ],
        ""solution"": [
            [
                ""acetopyrin"",
                ""capernoity""
            ],
            [
                ""blues"",
                ""bulse"",
                ""lubes""
            ],
            [
                ""etymon"",
                ""toymen""
            ],
            [
                ""grateman"",
                ""mangrate"",
                ""mantegar""
            ],
            [
                ""intrigantes"",
                ""reinstating"",
                ""straitening""
            ],
            [
                ""oilcups"",
                ""upcoils""
            ],
            [
                ""tourt"",
                ""tutor""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
268,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""defat"", ""fated"", ""bautta"", ""abattu"", ""frumenty"", ""furmenty"", ""deform"", ""formed"", ""homard"", ""hadrom"", ""rodham"", ""resmell"", ""smeller"", ""turnings"", ""unstring""]
","[[""abattu"", ""bautta""], [""defat"", ""fated""], [""deform"", ""formed""], [""frumenty"", ""furmenty""], [""hadrom"", ""homard"", ""rodham""], [""resmell"", ""smeller""], [""turnings"", ""unstring""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""defat\"", \""fated\"", \""bautta\"", \""abattu\"", \""frumenty\"", \""furmenty\"", \""deform\"", \""formed\"", \""homard\"", \""hadrom\"", \""rodham\"", \""resmell\"", \""smeller\"", \""turnings\"", \""unstring\""]\n"",
    ""answer"": ""[[\""abattu\"", \""bautta\""], [\""defat\"", \""fated\""], [\""deform\"", \""formed\""], [\""frumenty\"", \""furmenty\""], [\""hadrom\"", \""homard\"", \""rodham\""], [\""resmell\"", \""smeller\""], [\""turnings\"", \""unstring\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 268,
        ""words"": [
            ""defat"",
            ""fated"",
            ""bautta"",
            ""abattu"",
            ""frumenty"",
            ""furmenty"",
            ""deform"",
            ""formed"",
            ""homard"",
            ""hadrom"",
            ""rodham"",
            ""resmell"",
            ""smeller"",
            ""turnings"",
            ""unstring""
        ],
        ""solution"": [
            [
                ""abattu"",
                ""bautta""
            ],
            [
                ""defat"",
                ""fated""
            ],
            [
                ""deform"",
                ""formed""
            ],
            [
                ""frumenty"",
                ""furmenty""
            ],
            [
                ""hadrom"",
                ""homard"",
                ""rodham""
            ],
            [
                ""resmell"",
                ""smeller""
            ],
            [
                ""turnings"",
                ""unstring""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
269,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lattener"", ""talenter"", ""propraetorial"", ""protoperlaria"", ""unlooped"", ""unpooled"", ""legatine"", ""gelatine"", ""galenite"", ""photoheliography"", ""heliophotography"", ""evaporating"", ""pervagation"", ""lumpens"", ""plenums"", ""casques"", ""sacques""]
","[[""casques"", ""sacques""], [""evaporating"", ""pervagation""], [""galenite"", ""gelatine"", ""legatine""], [""heliophotography"", ""photoheliography""], [""lattener"", ""talenter""], [""lumpens"", ""plenums""], [""propraetorial"", ""protoperlaria""], [""unlooped"", ""unpooled""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lattener\"", \""talenter\"", \""propraetorial\"", \""protoperlaria\"", \""unlooped\"", \""unpooled\"", \""legatine\"", \""gelatine\"", \""galenite\"", \""photoheliography\"", \""heliophotography\"", \""evaporating\"", \""pervagation\"", \""lumpens\"", \""plenums\"", \""casques\"", \""sacques\""]\n"",
    ""answer"": ""[[\""casques\"", \""sacques\""], [\""evaporating\"", \""pervagation\""], [\""galenite\"", \""gelatine\"", \""legatine\""], [\""heliophotography\"", \""photoheliography\""], [\""lattener\"", \""talenter\""], [\""lumpens\"", \""plenums\""], [\""propraetorial\"", \""protoperlaria\""], [\""unlooped\"", \""unpooled\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 269,
        ""words"": [
            ""lattener"",
            ""talenter"",
            ""propraetorial"",
            ""protoperlaria"",
            ""unlooped"",
            ""unpooled"",
            ""legatine"",
            ""gelatine"",
            ""galenite"",
            ""photoheliography"",
            ""heliophotography"",
            ""evaporating"",
            ""pervagation"",
            ""lumpens"",
            ""plenums"",
            ""casques"",
            ""sacques""
        ],
        ""solution"": [
            [
                ""casques"",
                ""sacques""
            ],
            [
                ""evaporating"",
                ""pervagation""
            ],
            [
                ""galenite"",
                ""gelatine"",
                ""legatine""
            ],
            [
                ""heliophotography"",
                ""photoheliography""
            ],
            [
                ""lattener"",
                ""talenter""
            ],
            [
                ""lumpens"",
                ""plenums""
            ],
            [
                ""propraetorial"",
                ""protoperlaria""
            ],
            [
                ""unlooped"",
                ""unpooled""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
270,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lampshade"", ""headlamps"", ""spoliator"", ""troopials"", ""hoists"", ""sothis"", ""unpoled"", ""duplone"", ""fissate"", ""fiestas"", ""borate"", ""boater"", ""orbate"", ""rebato"", ""tarea"", ""reata"", ""ganzie"", ""agnize"", ""dint"", ""tind"", ""downmost"", ""towmonds""]
","[[""agnize"", ""ganzie""], [""boater"", ""borate"", ""orbate"", ""rebato""], [""dint"", ""tind""], [""downmost"", ""towmonds""], [""duplone"", ""unpoled""], [""fiestas"", ""fissate""], [""headlamps"", ""lampshade""], [""hoists"", ""sothis""], [""reata"", ""tarea""], [""spoliator"", ""troopials""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lampshade\"", \""headlamps\"", \""spoliator\"", \""troopials\"", \""hoists\"", \""sothis\"", \""unpoled\"", \""duplone\"", \""fissate\"", \""fiestas\"", \""borate\"", \""boater\"", \""orbate\"", \""rebato\"", \""tarea\"", \""reata\"", \""ganzie\"", \""agnize\"", \""dint\"", \""tind\"", \""downmost\"", \""towmonds\""]\n"",
    ""answer"": ""[[\""agnize\"", \""ganzie\""], [\""boater\"", \""borate\"", \""orbate\"", \""rebato\""], [\""dint\"", \""tind\""], [\""downmost\"", \""towmonds\""], [\""duplone\"", \""unpoled\""], [\""fiestas\"", \""fissate\""], [\""headlamps\"", \""lampshade\""], [\""hoists\"", \""sothis\""], [\""reata\"", \""tarea\""], [\""spoliator\"", \""troopials\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 270,
        ""words"": [
            ""lampshade"",
            ""headlamps"",
            ""spoliator"",
            ""troopials"",
            ""hoists"",
            ""sothis"",
            ""unpoled"",
            ""duplone"",
            ""fissate"",
            ""fiestas"",
            ""borate"",
            ""boater"",
            ""orbate"",
            ""rebato"",
            ""tarea"",
            ""reata"",
            ""ganzie"",
            ""agnize"",
            ""dint"",
            ""tind"",
            ""downmost"",
            ""towmonds""
        ],
        ""solution"": [
            [
                ""agnize"",
                ""ganzie""
            ],
            [
                ""boater"",
                ""borate"",
                ""orbate"",
                ""rebato""
            ],
            [
                ""dint"",
                ""tind""
            ],
            [
                ""downmost"",
                ""towmonds""
            ],
            [
                ""duplone"",
                ""unpoled""
            ],
            [
                ""fiestas"",
                ""fissate""
            ],
            [
                ""headlamps"",
                ""lampshade""
            ],
            [
                ""hoists"",
                ""sothis""
            ],
            [
                ""reata"",
                ""tarea""
            ],
            [
                ""spoliator"",
                ""troopials""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
271,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cautelous"", ""lutaceous"", ""paintless"", ""panelists""]
","[[""cautelous"", ""lutaceous""], [""paintless"", ""panelists""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cautelous\"", \""lutaceous\"", \""paintless\"", \""panelists\""]\n"",
    ""answer"": ""[[\""cautelous\"", \""lutaceous\""], [\""paintless\"", \""panelists\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 271,
        ""words"": [
            ""cautelous"",
            ""lutaceous"",
            ""paintless"",
            ""panelists""
        ],
        ""solution"": [
            [
                ""cautelous"",
                ""lutaceous""
            ],
            [
                ""paintless"",
                ""panelists""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
272,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bundu"", ""undub"", ""unbud"", ""enamours"", ""neuromas"", ""vigilante"", ""genitival"", ""versed"", ""served""]
","[[""bundu"", ""unbud"", ""undub""], [""enamours"", ""neuromas""], [""genitival"", ""vigilante""], [""served"", ""versed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bundu\"", \""undub\"", \""unbud\"", \""enamours\"", \""neuromas\"", \""vigilante\"", \""genitival\"", \""versed\"", \""served\""]\n"",
    ""answer"": ""[[\""bundu\"", \""unbud\"", \""undub\""], [\""enamours\"", \""neuromas\""], [\""genitival\"", \""vigilante\""], [\""served\"", \""versed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 272,
        ""words"": [
            ""bundu"",
            ""undub"",
            ""unbud"",
            ""enamours"",
            ""neuromas"",
            ""vigilante"",
            ""genitival"",
            ""versed"",
            ""served""
        ],
        ""solution"": [
            [
                ""bundu"",
                ""unbud"",
                ""undub""
            ],
            [
                ""enamours"",
                ""neuromas""
            ],
            [
                ""genitival"",
                ""vigilante""
            ],
            [
                ""served"",
                ""versed""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
273,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""uncoiled"", ""incloude"", ""nucleoid"", ""intrigo"", ""rioting"", ""ignitor"", ""dogwatch"", ""watchdog"", ""lentile"", ""linelet""]
","[[""dogwatch"", ""watchdog""], [""ignitor"", ""intrigo"", ""rioting""], [""incloude"", ""nucleoid"", ""uncoiled""], [""lentile"", ""linelet""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""uncoiled\"", \""incloude\"", \""nucleoid\"", \""intrigo\"", \""rioting\"", \""ignitor\"", \""dogwatch\"", \""watchdog\"", \""lentile\"", \""linelet\""]\n"",
    ""answer"": ""[[\""dogwatch\"", \""watchdog\""], [\""ignitor\"", \""intrigo\"", \""rioting\""], [\""incloude\"", \""nucleoid\"", \""uncoiled\""], [\""lentile\"", \""linelet\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 273,
        ""words"": [
            ""uncoiled"",
            ""incloude"",
            ""nucleoid"",
            ""intrigo"",
            ""rioting"",
            ""ignitor"",
            ""dogwatch"",
            ""watchdog"",
            ""lentile"",
            ""linelet""
        ],
        ""solution"": [
            [
                ""dogwatch"",
                ""watchdog""
            ],
            [
                ""ignitor"",
                ""intrigo"",
                ""rioting""
            ],
            [
                ""incloude"",
                ""nucleoid"",
                ""uncoiled""
            ],
            [
                ""lentile"",
                ""linelet""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
274,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""wrangle"", ""wangler"", ""rung"", ""grun"", ""womanpost"", ""postwoman"", ""dorbie"", ""bodier"", ""boride"", ""enlaced"", ""cleaned"", ""triplice"", ""perlitic"", ""rals"", ""lars"", ""embrues"", ""burmese""]
","[[""bodier"", ""boride"", ""dorbie""], [""burmese"", ""embrues""], [""cleaned"", ""enlaced""], [""grun"", ""rung""], [""lars"", ""rals""], [""perlitic"", ""triplice""], [""postwoman"", ""womanpost""], [""wangler"", ""wrangle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""wrangle\"", \""wangler\"", \""rung\"", \""grun\"", \""womanpost\"", \""postwoman\"", \""dorbie\"", \""bodier\"", \""boride\"", \""enlaced\"", \""cleaned\"", \""triplice\"", \""perlitic\"", \""rals\"", \""lars\"", \""embrues\"", \""burmese\""]\n"",
    ""answer"": ""[[\""bodier\"", \""boride\"", \""dorbie\""], [\""burmese\"", \""embrues\""], [\""cleaned\"", \""enlaced\""], [\""grun\"", \""rung\""], [\""lars\"", \""rals\""], [\""perlitic\"", \""triplice\""], [\""postwoman\"", \""womanpost\""], [\""wangler\"", \""wrangle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 274,
        ""words"": [
            ""wrangle"",
            ""wangler"",
            ""rung"",
            ""grun"",
            ""womanpost"",
            ""postwoman"",
            ""dorbie"",
            ""bodier"",
            ""boride"",
            ""enlaced"",
            ""cleaned"",
            ""triplice"",
            ""perlitic"",
            ""rals"",
            ""lars"",
            ""embrues"",
            ""burmese""
        ],
        ""solution"": [
            [
                ""bodier"",
                ""boride"",
                ""dorbie""
            ],
            [
                ""burmese"",
                ""embrues""
            ],
            [
                ""cleaned"",
                ""enlaced""
            ],
            [
                ""grun"",
                ""rung""
            ],
            [
                ""lars"",
                ""rals""
            ],
            [
                ""perlitic"",
                ""triplice""
            ],
            [
                ""postwoman"",
                ""womanpost""
            ],
            [
                ""wangler"",
                ""wrangle""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
275,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""consolidates"", ""disconsolate"", ""persists"", ""strepsis"", ""tommer"", ""mortem"", ""concertion"", ""concertino"", ""concretion"", ""ravelling"", ""granville"", ""flogster"", ""froglets"", ""glutamine"", ""emulating"", ""clitia"", ""italic"", ""reaction"", ""creation"", ""mirza"", ""mizar"", ""ziram""]
","[[""clitia"", ""italic""], [""concertino"", ""concertion"", ""concretion""], [""consolidates"", ""disconsolate""], [""creation"", ""reaction""], [""emulating"", ""glutamine""], [""flogster"", ""froglets""], [""granville"", ""ravelling""], [""mirza"", ""mizar"", ""ziram""], [""mortem"", ""tommer""], [""persists"", ""strepsis""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""consolidates\"", \""disconsolate\"", \""persists\"", \""strepsis\"", \""tommer\"", \""mortem\"", \""concertion\"", \""concertino\"", \""concretion\"", \""ravelling\"", \""granville\"", \""flogster\"", \""froglets\"", \""glutamine\"", \""emulating\"", \""clitia\"", \""italic\"", \""reaction\"", \""creation\"", \""mirza\"", \""mizar\"", \""ziram\""]\n"",
    ""answer"": ""[[\""clitia\"", \""italic\""], [\""concertino\"", \""concertion\"", \""concretion\""], [\""consolidates\"", \""disconsolate\""], [\""creation\"", \""reaction\""], [\""emulating\"", \""glutamine\""], [\""flogster\"", \""froglets\""], [\""granville\"", \""ravelling\""], [\""mirza\"", \""mizar\"", \""ziram\""], [\""mortem\"", \""tommer\""], [\""persists\"", \""strepsis\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 275,
        ""words"": [
            ""consolidates"",
            ""disconsolate"",
            ""persists"",
            ""strepsis"",
            ""tommer"",
            ""mortem"",
            ""concertion"",
            ""concertino"",
            ""concretion"",
            ""ravelling"",
            ""granville"",
            ""flogster"",
            ""froglets"",
            ""glutamine"",
            ""emulating"",
            ""clitia"",
            ""italic"",
            ""reaction"",
            ""creation"",
            ""mirza"",
            ""mizar"",
            ""ziram""
        ],
        ""solution"": [
            [
                ""clitia"",
                ""italic""
            ],
            [
                ""concertino"",
                ""concertion"",
                ""concretion""
            ],
            [
                ""consolidates"",
                ""disconsolate""
            ],
            [
                ""creation"",
                ""reaction""
            ],
            [
                ""emulating"",
                ""glutamine""
            ],
            [
                ""flogster"",
                ""froglets""
            ],
            [
                ""granville"",
                ""ravelling""
            ],
            [
                ""mirza"",
                ""mizar"",
                ""ziram""
            ],
            [
                ""mortem"",
                ""tommer""
            ],
            [
                ""persists"",
                ""strepsis""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
276,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""baht"", ""bath"", ""bhat"", ""organized"", ""dragonize"", ""denies"", ""seined"", ""dienes"", ""diego"", ""dogie""]
","[[""baht"", ""bath"", ""bhat""], [""denies"", ""dienes"", ""seined""], [""diego"", ""dogie""], [""dragonize"", ""organized""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""baht\"", \""bath\"", \""bhat\"", \""organized\"", \""dragonize\"", \""denies\"", \""seined\"", \""dienes\"", \""diego\"", \""dogie\""]\n"",
    ""answer"": ""[[\""baht\"", \""bath\"", \""bhat\""], [\""denies\"", \""dienes\"", \""seined\""], [\""diego\"", \""dogie\""], [\""dragonize\"", \""organized\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 276,
        ""words"": [
            ""baht"",
            ""bath"",
            ""bhat"",
            ""organized"",
            ""dragonize"",
            ""denies"",
            ""seined"",
            ""dienes"",
            ""diego"",
            ""dogie""
        ],
        ""solution"": [
            [
                ""baht"",
                ""bath"",
                ""bhat""
            ],
            [
                ""denies"",
                ""dienes"",
                ""seined""
            ],
            [
                ""diego"",
                ""dogie""
            ],
            [
                ""dragonize"",
                ""organized""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
277,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""conditioners"", ""reconditions"", ""baa"", ""aba"", ""opiates"", ""atopies""]
","[[""aba"", ""baa""], [""atopies"", ""opiates""], [""conditioners"", ""reconditions""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""conditioners\"", \""reconditions\"", \""baa\"", \""aba\"", \""opiates\"", \""atopies\""]\n"",
    ""answer"": ""[[\""aba\"", \""baa\""], [\""atopies\"", \""opiates\""], [\""conditioners\"", \""reconditions\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 277,
        ""words"": [
            ""conditioners"",
            ""reconditions"",
            ""baa"",
            ""aba"",
            ""opiates"",
            ""atopies""
        ],
        ""solution"": [
            [
                ""aba"",
                ""baa""
            ],
            [
                ""atopies"",
                ""opiates""
            ],
            [
                ""conditioners"",
                ""reconditions""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
278,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""semitae"", ""mesitae"", ""steamie"", ""amesite"", ""oblates"", ""boatels"", ""markers"", ""remarks"", ""hacky"", ""chyak"", ""ebbed"", ""bebed"", ""compte"", ""coempt"", ""interoceptor"", ""reprotection"", ""unharbored"", ""unabhorred"", ""trips"", ""stirp"", ""sprit"", ""spirt"", ""iguana"", ""guiana""]
","[[""amesite"", ""mesitae"", ""semitae"", ""steamie""], [""bebed"", ""ebbed""], [""boatels"", ""oblates""], [""chyak"", ""hacky""], [""coempt"", ""compte""], [""guiana"", ""iguana""], [""interoceptor"", ""reprotection""], [""markers"", ""remarks""], [""spirt"", ""sprit"", ""stirp"", ""trips""], [""unabhorred"", ""unharbored""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""semitae\"", \""mesitae\"", \""steamie\"", \""amesite\"", \""oblates\"", \""boatels\"", \""markers\"", \""remarks\"", \""hacky\"", \""chyak\"", \""ebbed\"", \""bebed\"", \""compte\"", \""coempt\"", \""interoceptor\"", \""reprotection\"", \""unharbored\"", \""unabhorred\"", \""trips\"", \""stirp\"", \""sprit\"", \""spirt\"", \""iguana\"", \""guiana\""]\n"",
    ""answer"": ""[[\""amesite\"", \""mesitae\"", \""semitae\"", \""steamie\""], [\""bebed\"", \""ebbed\""], [\""boatels\"", \""oblates\""], [\""chyak\"", \""hacky\""], [\""coempt\"", \""compte\""], [\""guiana\"", \""iguana\""], [\""interoceptor\"", \""reprotection\""], [\""markers\"", \""remarks\""], [\""spirt\"", \""sprit\"", \""stirp\"", \""trips\""], [\""unabhorred\"", \""unharbored\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 278,
        ""words"": [
            ""semitae"",
            ""mesitae"",
            ""steamie"",
            ""amesite"",
            ""oblates"",
            ""boatels"",
            ""markers"",
            ""remarks"",
            ""hacky"",
            ""chyak"",
            ""ebbed"",
            ""bebed"",
            ""compte"",
            ""coempt"",
            ""interoceptor"",
            ""reprotection"",
            ""unharbored"",
            ""unabhorred"",
            ""trips"",
            ""stirp"",
            ""sprit"",
            ""spirt"",
            ""iguana"",
            ""guiana""
        ],
        ""solution"": [
            [
                ""amesite"",
                ""mesitae"",
                ""semitae"",
                ""steamie""
            ],
            [
                ""bebed"",
                ""ebbed""
            ],
            [
                ""boatels"",
                ""oblates""
            ],
            [
                ""chyak"",
                ""hacky""
            ],
            [
                ""coempt"",
                ""compte""
            ],
            [
                ""guiana"",
                ""iguana""
            ],
            [
                ""interoceptor"",
                ""reprotection""
            ],
            [
                ""markers"",
                ""remarks""
            ],
            [
                ""spirt"",
                ""sprit"",
                ""stirp"",
                ""trips""
            ],
            [
                ""unabhorred"",
                ""unharbored""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
279,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rechecking"", ""checkering"", ""orcanette"", ""tetarcone"", ""amniote"", ""ominate"", ""anomite"", ""enriching"", ""richening"", ""isodef"", ""fideos"", ""withins"", ""swithin""]
","[[""amniote"", ""anomite"", ""ominate""], [""checkering"", ""rechecking""], [""enriching"", ""richening""], [""fideos"", ""isodef""], [""orcanette"", ""tetarcone""], [""swithin"", ""withins""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rechecking\"", \""checkering\"", \""orcanette\"", \""tetarcone\"", \""amniote\"", \""ominate\"", \""anomite\"", \""enriching\"", \""richening\"", \""isodef\"", \""fideos\"", \""withins\"", \""swithin\""]\n"",
    ""answer"": ""[[\""amniote\"", \""anomite\"", \""ominate\""], [\""checkering\"", \""rechecking\""], [\""enriching\"", \""richening\""], [\""fideos\"", \""isodef\""], [\""orcanette\"", \""tetarcone\""], [\""swithin\"", \""withins\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 279,
        ""words"": [
            ""rechecking"",
            ""checkering"",
            ""orcanette"",
            ""tetarcone"",
            ""amniote"",
            ""ominate"",
            ""anomite"",
            ""enriching"",
            ""richening"",
            ""isodef"",
            ""fideos"",
            ""withins"",
            ""swithin""
        ],
        ""solution"": [
            [
                ""amniote"",
                ""anomite"",
                ""ominate""
            ],
            [
                ""checkering"",
                ""rechecking""
            ],
            [
                ""enriching"",
                ""richening""
            ],
            [
                ""fideos"",
                ""isodef""
            ],
            [
                ""orcanette"",
                ""tetarcone""
            ],
            [
                ""swithin"",
                ""withins""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
280,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""morays"", ""mayors"", ""samory"", ""nondualistic"", ""discontinual"", ""fa"", ""af"", ""owrecome"", ""owercome""]
","[[""af"", ""fa""], [""discontinual"", ""nondualistic""], [""mayors"", ""morays"", ""samory""], [""owercome"", ""owrecome""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""morays\"", \""mayors\"", \""samory\"", \""nondualistic\"", \""discontinual\"", \""fa\"", \""af\"", \""owrecome\"", \""owercome\""]\n"",
    ""answer"": ""[[\""af\"", \""fa\""], [\""discontinual\"", \""nondualistic\""], [\""mayors\"", \""morays\"", \""samory\""], [\""owercome\"", \""owrecome\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 280,
        ""words"": [
            ""morays"",
            ""mayors"",
            ""samory"",
            ""nondualistic"",
            ""discontinual"",
            ""fa"",
            ""af"",
            ""owrecome"",
            ""owercome""
        ],
        ""solution"": [
            [
                ""af"",
                ""fa""
            ],
            [
                ""discontinual"",
                ""nondualistic""
            ],
            [
                ""mayors"",
                ""morays"",
                ""samory""
            ],
            [
                ""owercome"",
                ""owrecome""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
281,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mature"", ""tamure"", ""malengine"", ""meningeal"", ""firm"", ""frim"", ""typees"", ""steepy""]
","[[""firm"", ""frim""], [""malengine"", ""meningeal""], [""mature"", ""tamure""], [""steepy"", ""typees""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mature\"", \""tamure\"", \""malengine\"", \""meningeal\"", \""firm\"", \""frim\"", \""typees\"", \""steepy\""]\n"",
    ""answer"": ""[[\""firm\"", \""frim\""], [\""malengine\"", \""meningeal\""], [\""mature\"", \""tamure\""], [\""steepy\"", \""typees\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 281,
        ""words"": [
            ""mature"",
            ""tamure"",
            ""malengine"",
            ""meningeal"",
            ""firm"",
            ""frim"",
            ""typees"",
            ""steepy""
        ],
        ""solution"": [
            [
                ""firm"",
                ""frim""
            ],
            [
                ""malengine"",
                ""meningeal""
            ],
            [
                ""mature"",
                ""tamure""
            ],
            [
                ""steepy"",
                ""typees""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
282,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ethernets"", ""thestreen"", ""groat"", ""gotra"", ""gator"", ""beth"", ""theb"", ""bate"", ""abet"", ""neomodal"", ""lemonado""]
","[[""abet"", ""bate""], [""beth"", ""theb""], [""ethernets"", ""thestreen""], [""gator"", ""gotra"", ""groat""], [""lemonado"", ""neomodal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ethernets\"", \""thestreen\"", \""groat\"", \""gotra\"", \""gator\"", \""beth\"", \""theb\"", \""bate\"", \""abet\"", \""neomodal\"", \""lemonado\""]\n"",
    ""answer"": ""[[\""abet\"", \""bate\""], [\""beth\"", \""theb\""], [\""ethernets\"", \""thestreen\""], [\""gator\"", \""gotra\"", \""groat\""], [\""lemonado\"", \""neomodal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 282,
        ""words"": [
            ""ethernets"",
            ""thestreen"",
            ""groat"",
            ""gotra"",
            ""gator"",
            ""beth"",
            ""theb"",
            ""bate"",
            ""abet"",
            ""neomodal"",
            ""lemonado""
        ],
        ""solution"": [
            [
                ""abet"",
                ""bate""
            ],
            [
                ""beth"",
                ""theb""
            ],
            [
                ""ethernets"",
                ""thestreen""
            ],
            [
                ""gator"",
                ""gotra"",
                ""groat""
            ],
            [
                ""lemonado"",
                ""neomodal""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
283,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mopan"", ""nomap"", ""fe"", ""ef"", ""darius"", ""radius"", ""aciniform"", ""formicina"", ""dyer"", ""drey"", ""yerd"", ""reinspirit"", ""inspiriter"", ""tillet"", ""little"", ""alef"", ""leaf""]
","[[""aciniform"", ""formicina""], [""alef"", ""leaf""], [""darius"", ""radius""], [""drey"", ""dyer"", ""yerd""], [""ef"", ""fe""], [""inspiriter"", ""reinspirit""], [""little"", ""tillet""], [""mopan"", ""nomap""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mopan\"", \""nomap\"", \""fe\"", \""ef\"", \""darius\"", \""radius\"", \""aciniform\"", \""formicina\"", \""dyer\"", \""drey\"", \""yerd\"", \""reinspirit\"", \""inspiriter\"", \""tillet\"", \""little\"", \""alef\"", \""leaf\""]\n"",
    ""answer"": ""[[\""aciniform\"", \""formicina\""], [\""alef\"", \""leaf\""], [\""darius\"", \""radius\""], [\""drey\"", \""dyer\"", \""yerd\""], [\""ef\"", \""fe\""], [\""inspiriter\"", \""reinspirit\""], [\""little\"", \""tillet\""], [\""mopan\"", \""nomap\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 283,
        ""words"": [
            ""mopan"",
            ""nomap"",
            ""fe"",
            ""ef"",
            ""darius"",
            ""radius"",
            ""aciniform"",
            ""formicina"",
            ""dyer"",
            ""drey"",
            ""yerd"",
            ""reinspirit"",
            ""inspiriter"",
            ""tillet"",
            ""little"",
            ""alef"",
            ""leaf""
        ],
        ""solution"": [
            [
                ""aciniform"",
                ""formicina""
            ],
            [
                ""alef"",
                ""leaf""
            ],
            [
                ""darius"",
                ""radius""
            ],
            [
                ""drey"",
                ""dyer"",
                ""yerd""
            ],
            [
                ""ef"",
                ""fe""
            ],
            [
                ""inspiriter"",
                ""reinspirit""
            ],
            [
                ""little"",
                ""tillet""
            ],
            [
                ""mopan"",
                ""nomap""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
284,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""squatter"", ""quartets"", ""skirrets"", ""skirters"", ""strikers""]
","[[""quartets"", ""squatter""], [""skirrets"", ""skirters"", ""strikers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""squatter\"", \""quartets\"", \""skirrets\"", \""skirters\"", \""strikers\""]\n"",
    ""answer"": ""[[\""quartets\"", \""squatter\""], [\""skirrets\"", \""skirters\"", \""strikers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 284,
        ""words"": [
            ""squatter"",
            ""quartets"",
            ""skirrets"",
            ""skirters"",
            ""strikers""
        ],
        ""solution"": [
            [
                ""quartets"",
                ""squatter""
            ],
            [
                ""skirrets"",
                ""skirters"",
                ""strikers""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
285,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cavitated"", ""activated"", ""servient"", ""reinvest"", ""sirvente"", ""nerviest"", ""patola"", ""tapalo"", ""synapsed"", ""dyspneas"", ""actinoid"", ""naticoid"", ""diatonic"", ""heritably"", ""breathily"", ""ceroplastic"", ""coreplastic"", ""cleistocarp"", ""shorefish"", ""horsefish"", ""eremital"", ""materiel""]
","[[""actinoid"", ""diatonic"", ""naticoid""], [""activated"", ""cavitated""], [""breathily"", ""heritably""], [""ceroplastic"", ""cleistocarp"", ""coreplastic""], [""dyspneas"", ""synapsed""], [""eremital"", ""materiel""], [""horsefish"", ""shorefish""], [""nerviest"", ""reinvest"", ""servient"", ""sirvente""], [""patola"", ""tapalo""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cavitated\"", \""activated\"", \""servient\"", \""reinvest\"", \""sirvente\"", \""nerviest\"", \""patola\"", \""tapalo\"", \""synapsed\"", \""dyspneas\"", \""actinoid\"", \""naticoid\"", \""diatonic\"", \""heritably\"", \""breathily\"", \""ceroplastic\"", \""coreplastic\"", \""cleistocarp\"", \""shorefish\"", \""horsefish\"", \""eremital\"", \""materiel\""]\n"",
    ""answer"": ""[[\""actinoid\"", \""diatonic\"", \""naticoid\""], [\""activated\"", \""cavitated\""], [\""breathily\"", \""heritably\""], [\""ceroplastic\"", \""cleistocarp\"", \""coreplastic\""], [\""dyspneas\"", \""synapsed\""], [\""eremital\"", \""materiel\""], [\""horsefish\"", \""shorefish\""], [\""nerviest\"", \""reinvest\"", \""servient\"", \""sirvente\""], [\""patola\"", \""tapalo\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 285,
        ""words"": [
            ""cavitated"",
            ""activated"",
            ""servient"",
            ""reinvest"",
            ""sirvente"",
            ""nerviest"",
            ""patola"",
            ""tapalo"",
            ""synapsed"",
            ""dyspneas"",
            ""actinoid"",
            ""naticoid"",
            ""diatonic"",
            ""heritably"",
            ""breathily"",
            ""ceroplastic"",
            ""coreplastic"",
            ""cleistocarp"",
            ""shorefish"",
            ""horsefish"",
            ""eremital"",
            ""materiel""
        ],
        ""solution"": [
            [
                ""actinoid"",
                ""diatonic"",
                ""naticoid""
            ],
            [
                ""activated"",
                ""cavitated""
            ],
            [
                ""breathily"",
                ""heritably""
            ],
            [
                ""ceroplastic"",
                ""cleistocarp"",
                ""coreplastic""
            ],
            [
                ""dyspneas"",
                ""synapsed""
            ],
            [
                ""eremital"",
                ""materiel""
            ],
            [
                ""horsefish"",
                ""shorefish""
            ],
            [
                ""nerviest"",
                ""reinvest"",
                ""servient"",
                ""sirvente""
            ],
            [
                ""patola"",
                ""tapalo""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
286,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""eths"", ""hest"", ""seth"", ""esth"", ""offward"", ""drawoff""]
","[[""drawoff"", ""offward""], [""esth"", ""eths"", ""hest"", ""seth""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""eths\"", \""hest\"", \""seth\"", \""esth\"", \""offward\"", \""drawoff\""]\n"",
    ""answer"": ""[[\""drawoff\"", \""offward\""], [\""esth\"", \""eths\"", \""hest\"", \""seth\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 286,
        ""words"": [
            ""eths"",
            ""hest"",
            ""seth"",
            ""esth"",
            ""offward"",
            ""drawoff""
        ],
        ""solution"": [
            [
                ""drawoff"",
                ""offward""
            ],
            [
                ""esth"",
                ""eths"",
                ""hest"",
                ""seth""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
287,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""underdoer"", ""unordered"", ""whisting"", ""whitings"", ""asia"", ""aias"", ""prutot"", ""pottur""]
","[[""aias"", ""asia""], [""pottur"", ""prutot""], [""underdoer"", ""unordered""], [""whisting"", ""whitings""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""underdoer\"", \""unordered\"", \""whisting\"", \""whitings\"", \""asia\"", \""aias\"", \""prutot\"", \""pottur\""]\n"",
    ""answer"": ""[[\""aias\"", \""asia\""], [\""pottur\"", \""prutot\""], [\""underdoer\"", \""unordered\""], [\""whisting\"", \""whitings\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 287,
        ""words"": [
            ""underdoer"",
            ""unordered"",
            ""whisting"",
            ""whitings"",
            ""asia"",
            ""aias"",
            ""prutot"",
            ""pottur""
        ],
        ""solution"": [
            [
                ""aias"",
                ""asia""
            ],
            [
                ""pottur"",
                ""prutot""
            ],
            [
                ""underdoer"",
                ""unordered""
            ],
            [
                ""whisting"",
                ""whitings""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
288,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tailing"", ""intagli"", ""sleer"", ""leers"", ""reels"", ""dante"", ""entad"", ""anted"", ""denat"", ""enterons"", ""tenoners"", ""sheth"", ""heths"", ""croh"", ""orch"", ""appels"", ""apples"", ""meline"", ""elemin"", ""demicannon"", ""cinnamoned""]
","[[""anted"", ""dante"", ""denat"", ""entad""], [""appels"", ""apples""], [""cinnamoned"", ""demicannon""], [""croh"", ""orch""], [""elemin"", ""meline""], [""enterons"", ""tenoners""], [""heths"", ""sheth""], [""intagli"", ""tailing""], [""leers"", ""reels"", ""sleer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tailing\"", \""intagli\"", \""sleer\"", \""leers\"", \""reels\"", \""dante\"", \""entad\"", \""anted\"", \""denat\"", \""enterons\"", \""tenoners\"", \""sheth\"", \""heths\"", \""croh\"", \""orch\"", \""appels\"", \""apples\"", \""meline\"", \""elemin\"", \""demicannon\"", \""cinnamoned\""]\n"",
    ""answer"": ""[[\""anted\"", \""dante\"", \""denat\"", \""entad\""], [\""appels\"", \""apples\""], [\""cinnamoned\"", \""demicannon\""], [\""croh\"", \""orch\""], [\""elemin\"", \""meline\""], [\""enterons\"", \""tenoners\""], [\""heths\"", \""sheth\""], [\""intagli\"", \""tailing\""], [\""leers\"", \""reels\"", \""sleer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 288,
        ""words"": [
            ""tailing"",
            ""intagli"",
            ""sleer"",
            ""leers"",
            ""reels"",
            ""dante"",
            ""entad"",
            ""anted"",
            ""denat"",
            ""enterons"",
            ""tenoners"",
            ""sheth"",
            ""heths"",
            ""croh"",
            ""orch"",
            ""appels"",
            ""apples"",
            ""meline"",
            ""elemin"",
            ""demicannon"",
            ""cinnamoned""
        ],
        ""solution"": [
            [
                ""anted"",
                ""dante"",
                ""denat"",
                ""entad""
            ],
            [
                ""appels"",
                ""apples""
            ],
            [
                ""cinnamoned"",
                ""demicannon""
            ],
            [
                ""croh"",
                ""orch""
            ],
            [
                ""elemin"",
                ""meline""
            ],
            [
                ""enterons"",
                ""tenoners""
            ],
            [
                ""heths"",
                ""sheth""
            ],
            [
                ""intagli"",
                ""tailing""
            ],
            [
                ""leers"",
                ""reels"",
                ""sleer""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
289,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""idolise"", ""dolisie"", ""doilies"", ""phasis"", ""aspish"", ""spahis"", ""stodgier"", ""digestor"", ""sleuths"", ""lushest"", ""hustles"", ""epeira"", ""pereia"", ""seedcase"", ""deceases""]
","[[""aspish"", ""phasis"", ""spahis""], [""deceases"", ""seedcase""], [""digestor"", ""stodgier""], [""doilies"", ""dolisie"", ""idolise""], [""epeira"", ""pereia""], [""hustles"", ""lushest"", ""sleuths""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""idolise\"", \""dolisie\"", \""doilies\"", \""phasis\"", \""aspish\"", \""spahis\"", \""stodgier\"", \""digestor\"", \""sleuths\"", \""lushest\"", \""hustles\"", \""epeira\"", \""pereia\"", \""seedcase\"", \""deceases\""]\n"",
    ""answer"": ""[[\""aspish\"", \""phasis\"", \""spahis\""], [\""deceases\"", \""seedcase\""], [\""digestor\"", \""stodgier\""], [\""doilies\"", \""dolisie\"", \""idolise\""], [\""epeira\"", \""pereia\""], [\""hustles\"", \""lushest\"", \""sleuths\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 289,
        ""words"": [
            ""idolise"",
            ""dolisie"",
            ""doilies"",
            ""phasis"",
            ""aspish"",
            ""spahis"",
            ""stodgier"",
            ""digestor"",
            ""sleuths"",
            ""lushest"",
            ""hustles"",
            ""epeira"",
            ""pereia"",
            ""seedcase"",
            ""deceases""
        ],
        ""solution"": [
            [
                ""aspish"",
                ""phasis"",
                ""spahis""
            ],
            [
                ""deceases"",
                ""seedcase""
            ],
            [
                ""digestor"",
                ""stodgier""
            ],
            [
                ""doilies"",
                ""dolisie"",
                ""idolise""
            ],
            [
                ""epeira"",
                ""pereia""
            ],
            [
                ""hustles"",
                ""lushest"",
                ""sleuths""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
290,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""baryta"", ""taryba"", ""massa"", ""amass"", ""assam"", ""scarlety"", ""castlery"", ""clower"", ""clowre"", ""crematories"", ""stercoremia"", ""impacters"", ""spermatic"", ""braehead"", ""barehead"", ""torc"", ""cort""]
","[[""amass"", ""assam"", ""massa""], [""barehead"", ""braehead""], [""baryta"", ""taryba""], [""castlery"", ""scarlety""], [""clower"", ""clowre""], [""cort"", ""torc""], [""crematories"", ""stercoremia""], [""impacters"", ""spermatic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""baryta\"", \""taryba\"", \""massa\"", \""amass\"", \""assam\"", \""scarlety\"", \""castlery\"", \""clower\"", \""clowre\"", \""crematories\"", \""stercoremia\"", \""impacters\"", \""spermatic\"", \""braehead\"", \""barehead\"", \""torc\"", \""cort\""]\n"",
    ""answer"": ""[[\""amass\"", \""assam\"", \""massa\""], [\""barehead\"", \""braehead\""], [\""baryta\"", \""taryba\""], [\""castlery\"", \""scarlety\""], [\""clower\"", \""clowre\""], [\""cort\"", \""torc\""], [\""crematories\"", \""stercoremia\""], [\""impacters\"", \""spermatic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 290,
        ""words"": [
            ""baryta"",
            ""taryba"",
            ""massa"",
            ""amass"",
            ""assam"",
            ""scarlety"",
            ""castlery"",
            ""clower"",
            ""clowre"",
            ""crematories"",
            ""stercoremia"",
            ""impacters"",
            ""spermatic"",
            ""braehead"",
            ""barehead"",
            ""torc"",
            ""cort""
        ],
        ""solution"": [
            [
                ""amass"",
                ""assam"",
                ""massa""
            ],
            [
                ""barehead"",
                ""braehead""
            ],
            [
                ""baryta"",
                ""taryba""
            ],
            [
                ""castlery"",
                ""scarlety""
            ],
            [
                ""clower"",
                ""clowre""
            ],
            [
                ""cort"",
                ""torc""
            ],
            [
                ""crematories"",
                ""stercoremia""
            ],
            [
                ""impacters"",
                ""spermatic""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
291,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dau"", ""aud"", ""tangler"", ""langret"", ""cornette"", ""trecento""]
","[[""aud"", ""dau""], [""cornette"", ""trecento""], [""langret"", ""tangler""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dau\"", \""aud\"", \""tangler\"", \""langret\"", \""cornette\"", \""trecento\""]\n"",
    ""answer"": ""[[\""aud\"", \""dau\""], [\""cornette\"", \""trecento\""], [\""langret\"", \""tangler\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 291,
        ""words"": [
            ""dau"",
            ""aud"",
            ""tangler"",
            ""langret"",
            ""cornette"",
            ""trecento""
        ],
        ""solution"": [
            [
                ""aud"",
                ""dau""
            ],
            [
                ""cornette"",
                ""trecento""
            ],
            [
                ""langret"",
                ""tangler""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
292,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unl"", ""nul"", ""sinewy"", ""swiney"", ""now"", ""own"", ""won"", ""olefines"", ""felonies""]
","[[""felonies"", ""olefines""], [""now"", ""own"", ""won""], [""nul"", ""unl""], [""sinewy"", ""swiney""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unl\"", \""nul\"", \""sinewy\"", \""swiney\"", \""now\"", \""own\"", \""won\"", \""olefines\"", \""felonies\""]\n"",
    ""answer"": ""[[\""felonies\"", \""olefines\""], [\""now\"", \""own\"", \""won\""], [\""nul\"", \""unl\""], [\""sinewy\"", \""swiney\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 292,
        ""words"": [
            ""unl"",
            ""nul"",
            ""sinewy"",
            ""swiney"",
            ""now"",
            ""own"",
            ""won"",
            ""olefines"",
            ""felonies""
        ],
        ""solution"": [
            [
                ""felonies"",
                ""olefines""
            ],
            [
                ""now"",
                ""own"",
                ""won""
            ],
            [
                ""nul"",
                ""unl""
            ],
            [
                ""sinewy"",
                ""swiney""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
293,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sewed"", ""weeds"", ""swede"", ""aspread"", ""saperda"", ""ideo"", ""iode"", ""canos"", ""ascon"", ""canso"", ""oscan"", ""vise"", ""vies"", ""openly"", ""poleyn"", ""onlepy"", ""mantuas"", ""manatus"", ""naa"", ""ana"", ""beriming"", ""bemiring"", ""dennet"", ""endent"", ""neednt""]
","[[""ana"", ""naa""], [""ascon"", ""canos"", ""canso"", ""oscan""], [""aspread"", ""saperda""], [""bemiring"", ""beriming""], [""dennet"", ""endent"", ""neednt""], [""ideo"", ""iode""], [""manatus"", ""mantuas""], [""onlepy"", ""openly"", ""poleyn""], [""sewed"", ""swede"", ""weeds""], [""vies"", ""vise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sewed\"", \""weeds\"", \""swede\"", \""aspread\"", \""saperda\"", \""ideo\"", \""iode\"", \""canos\"", \""ascon\"", \""canso\"", \""oscan\"", \""vise\"", \""vies\"", \""openly\"", \""poleyn\"", \""onlepy\"", \""mantuas\"", \""manatus\"", \""naa\"", \""ana\"", \""beriming\"", \""bemiring\"", \""dennet\"", \""endent\"", \""neednt\""]\n"",
    ""answer"": ""[[\""ana\"", \""naa\""], [\""ascon\"", \""canos\"", \""canso\"", \""oscan\""], [\""aspread\"", \""saperda\""], [\""bemiring\"", \""beriming\""], [\""dennet\"", \""endent\"", \""neednt\""], [\""ideo\"", \""iode\""], [\""manatus\"", \""mantuas\""], [\""onlepy\"", \""openly\"", \""poleyn\""], [\""sewed\"", \""swede\"", \""weeds\""], [\""vies\"", \""vise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 293,
        ""words"": [
            ""sewed"",
            ""weeds"",
            ""swede"",
            ""aspread"",
            ""saperda"",
            ""ideo"",
            ""iode"",
            ""canos"",
            ""ascon"",
            ""canso"",
            ""oscan"",
            ""vise"",
            ""vies"",
            ""openly"",
            ""poleyn"",
            ""onlepy"",
            ""mantuas"",
            ""manatus"",
            ""naa"",
            ""ana"",
            ""beriming"",
            ""bemiring"",
            ""dennet"",
            ""endent"",
            ""neednt""
        ],
        ""solution"": [
            [
                ""ana"",
                ""naa""
            ],
            [
                ""ascon"",
                ""canos"",
                ""canso"",
                ""oscan""
            ],
            [
                ""aspread"",
                ""saperda""
            ],
            [
                ""bemiring"",
                ""beriming""
            ],
            [
                ""dennet"",
                ""endent"",
                ""neednt""
            ],
            [
                ""ideo"",
                ""iode""
            ],
            [
                ""manatus"",
                ""mantuas""
            ],
            [
                ""onlepy"",
                ""openly"",
                ""poleyn""
            ],
            [
                ""sewed"",
                ""swede"",
                ""weeds""
            ],
            [
                ""vies"",
                ""vise""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
294,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""flueric"", ""ferulic"", ""lucifer"", ""croups"", ""corpus"", ""angili"", ""ailing""]
","[[""ailing"", ""angili""], [""corpus"", ""croups""], [""ferulic"", ""flueric"", ""lucifer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""flueric\"", \""ferulic\"", \""lucifer\"", \""croups\"", \""corpus\"", \""angili\"", \""ailing\""]\n"",
    ""answer"": ""[[\""ailing\"", \""angili\""], [\""corpus\"", \""croups\""], [\""ferulic\"", \""flueric\"", \""lucifer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 294,
        ""words"": [
            ""flueric"",
            ""ferulic"",
            ""lucifer"",
            ""croups"",
            ""corpus"",
            ""angili"",
            ""ailing""
        ],
        ""solution"": [
            [
                ""ailing"",
                ""angili""
            ],
            [
                ""corpus"",
                ""croups""
            ],
            [
                ""ferulic"",
                ""flueric"",
                ""lucifer""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
295,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""whort"", ""throw"", ""rowth"", ""wroth"", ""worth"", ""goosishly"", ""hyoglossi""]
","[[""goosishly"", ""hyoglossi""], [""rowth"", ""throw"", ""whort"", ""worth"", ""wroth""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""whort\"", \""throw\"", \""rowth\"", \""wroth\"", \""worth\"", \""goosishly\"", \""hyoglossi\""]\n"",
    ""answer"": ""[[\""goosishly\"", \""hyoglossi\""], [\""rowth\"", \""throw\"", \""whort\"", \""worth\"", \""wroth\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 295,
        ""words"": [
            ""whort"",
            ""throw"",
            ""rowth"",
            ""wroth"",
            ""worth"",
            ""goosishly"",
            ""hyoglossi""
        ],
        ""solution"": [
            [
                ""goosishly"",
                ""hyoglossi""
            ],
            [
                ""rowth"",
                ""throw"",
                ""whort"",
                ""worth"",
                ""wroth""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
296,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""patu"", ""paut"", ""tapu"", ""sarcura"", ""curaras"", ""flak"", ""falk"", ""foulder"", ""fouldre"", ""pawls"", ""spawl"", ""phanerogamy"", ""anemography"", ""parroted"", ""teardrop"", ""fumarole"", ""formulae"", ""zeals"", ""lazes"", ""entreats"", ""ratteens""]
","[[""anemography"", ""phanerogamy""], [""curaras"", ""sarcura""], [""entreats"", ""ratteens""], [""falk"", ""flak""], [""formulae"", ""fumarole""], [""foulder"", ""fouldre""], [""lazes"", ""zeals""], [""parroted"", ""teardrop""], [""patu"", ""paut"", ""tapu""], [""pawls"", ""spawl""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""patu\"", \""paut\"", \""tapu\"", \""sarcura\"", \""curaras\"", \""flak\"", \""falk\"", \""foulder\"", \""fouldre\"", \""pawls\"", \""spawl\"", \""phanerogamy\"", \""anemography\"", \""parroted\"", \""teardrop\"", \""fumarole\"", \""formulae\"", \""zeals\"", \""lazes\"", \""entreats\"", \""ratteens\""]\n"",
    ""answer"": ""[[\""anemography\"", \""phanerogamy\""], [\""curaras\"", \""sarcura\""], [\""entreats\"", \""ratteens\""], [\""falk\"", \""flak\""], [\""formulae\"", \""fumarole\""], [\""foulder\"", \""fouldre\""], [\""lazes\"", \""zeals\""], [\""parroted\"", \""teardrop\""], [\""patu\"", \""paut\"", \""tapu\""], [\""pawls\"", \""spawl\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 296,
        ""words"": [
            ""patu"",
            ""paut"",
            ""tapu"",
            ""sarcura"",
            ""curaras"",
            ""flak"",
            ""falk"",
            ""foulder"",
            ""fouldre"",
            ""pawls"",
            ""spawl"",
            ""phanerogamy"",
            ""anemography"",
            ""parroted"",
            ""teardrop"",
            ""fumarole"",
            ""formulae"",
            ""zeals"",
            ""lazes"",
            ""entreats"",
            ""ratteens""
        ],
        ""solution"": [
            [
                ""anemography"",
                ""phanerogamy""
            ],
            [
                ""curaras"",
                ""sarcura""
            ],
            [
                ""entreats"",
                ""ratteens""
            ],
            [
                ""falk"",
                ""flak""
            ],
            [
                ""formulae"",
                ""fumarole""
            ],
            [
                ""foulder"",
                ""fouldre""
            ],
            [
                ""lazes"",
                ""zeals""
            ],
            [
                ""parroted"",
                ""teardrop""
            ],
            [
                ""patu"",
                ""paut"",
                ""tapu""
            ],
            [
                ""pawls"",
                ""spawl""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
297,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""crops"", ""corps"", ""glauber"", ""guberla"", ""darghin"", ""harding"", ""decalin"", ""candiel"", ""cladine"", ""doley"", ""odyle"", ""recit"", ""trice"", ""citer"", ""buret"", ""bruet"", ""rebut"", ""brute"", ""tuber"", ""zealotist"", ""totalizes"", ""topstones"", ""potstones""]
","[[""bruet"", ""brute"", ""buret"", ""rebut"", ""tuber""], [""candiel"", ""cladine"", ""decalin""], [""citer"", ""recit"", ""trice""], [""corps"", ""crops""], [""darghin"", ""harding""], [""doley"", ""odyle""], [""glauber"", ""guberla""], [""potstones"", ""topstones""], [""totalizes"", ""zealotist""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""crops\"", \""corps\"", \""glauber\"", \""guberla\"", \""darghin\"", \""harding\"", \""decalin\"", \""candiel\"", \""cladine\"", \""doley\"", \""odyle\"", \""recit\"", \""trice\"", \""citer\"", \""buret\"", \""bruet\"", \""rebut\"", \""brute\"", \""tuber\"", \""zealotist\"", \""totalizes\"", \""topstones\"", \""potstones\""]\n"",
    ""answer"": ""[[\""bruet\"", \""brute\"", \""buret\"", \""rebut\"", \""tuber\""], [\""candiel\"", \""cladine\"", \""decalin\""], [\""citer\"", \""recit\"", \""trice\""], [\""corps\"", \""crops\""], [\""darghin\"", \""harding\""], [\""doley\"", \""odyle\""], [\""glauber\"", \""guberla\""], [\""potstones\"", \""topstones\""], [\""totalizes\"", \""zealotist\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 297,
        ""words"": [
            ""crops"",
            ""corps"",
            ""glauber"",
            ""guberla"",
            ""darghin"",
            ""harding"",
            ""decalin"",
            ""candiel"",
            ""cladine"",
            ""doley"",
            ""odyle"",
            ""recit"",
            ""trice"",
            ""citer"",
            ""buret"",
            ""bruet"",
            ""rebut"",
            ""brute"",
            ""tuber"",
            ""zealotist"",
            ""totalizes"",
            ""topstones"",
            ""potstones""
        ],
        ""solution"": [
            [
                ""bruet"",
                ""brute"",
                ""buret"",
                ""rebut"",
                ""tuber""
            ],
            [
                ""candiel"",
                ""cladine"",
                ""decalin""
            ],
            [
                ""citer"",
                ""recit"",
                ""trice""
            ],
            [
                ""corps"",
                ""crops""
            ],
            [
                ""darghin"",
                ""harding""
            ],
            [
                ""doley"",
                ""odyle""
            ],
            [
                ""glauber"",
                ""guberla""
            ],
            [
                ""potstones"",
                ""topstones""
            ],
            [
                ""totalizes"",
                ""zealotist""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
298,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lamnidae"", ""aldamine"", ""dringle"", ""grindle"", ""ruthenian"", ""hunterian""]
","[[""aldamine"", ""lamnidae""], [""dringle"", ""grindle""], [""hunterian"", ""ruthenian""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lamnidae\"", \""aldamine\"", \""dringle\"", \""grindle\"", \""ruthenian\"", \""hunterian\""]\n"",
    ""answer"": ""[[\""aldamine\"", \""lamnidae\""], [\""dringle\"", \""grindle\""], [\""hunterian\"", \""ruthenian\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 298,
        ""words"": [
            ""lamnidae"",
            ""aldamine"",
            ""dringle"",
            ""grindle"",
            ""ruthenian"",
            ""hunterian""
        ],
        ""solution"": [
            [
                ""aldamine"",
                ""lamnidae""
            ],
            [
                ""dringle"",
                ""grindle""
            ],
            [
                ""hunterian"",
                ""ruthenian""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
299,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""stavers"", ""starves"", ""boniness"", ""benisons"", ""interrace"", ""certainer"", ""stremma"", ""stammer"", ""sura"", ""saur"", ""rusa"", ""repels"", ""lepers"", ""parson"", ""aprons""]
","[[""aprons"", ""parson""], [""benisons"", ""boniness""], [""certainer"", ""interrace""], [""lepers"", ""repels""], [""rusa"", ""saur"", ""sura""], [""stammer"", ""stremma""], [""starves"", ""stavers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""stavers\"", \""starves\"", \""boniness\"", \""benisons\"", \""interrace\"", \""certainer\"", \""stremma\"", \""stammer\"", \""sura\"", \""saur\"", \""rusa\"", \""repels\"", \""lepers\"", \""parson\"", \""aprons\""]\n"",
    ""answer"": ""[[\""aprons\"", \""parson\""], [\""benisons\"", \""boniness\""], [\""certainer\"", \""interrace\""], [\""lepers\"", \""repels\""], [\""rusa\"", \""saur\"", \""sura\""], [\""stammer\"", \""stremma\""], [\""starves\"", \""stavers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 299,
        ""words"": [
            ""stavers"",
            ""starves"",
            ""boniness"",
            ""benisons"",
            ""interrace"",
            ""certainer"",
            ""stremma"",
            ""stammer"",
            ""sura"",
            ""saur"",
            ""rusa"",
            ""repels"",
            ""lepers"",
            ""parson"",
            ""aprons""
        ],
        ""solution"": [
            [
                ""aprons"",
                ""parson""
            ],
            [
                ""benisons"",
                ""boniness""
            ],
            [
                ""certainer"",
                ""interrace""
            ],
            [
                ""lepers"",
                ""repels""
            ],
            [
                ""rusa"",
                ""saur"",
                ""sura""
            ],
            [
                ""stammer"",
                ""stremma""
            ],
            [
                ""starves"",
                ""stavers""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
300,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""grasping"", ""sparging"", ""hacklers"", ""shackler"", ""pertaining"", ""repainting"", ""singeress"", ""ingresses"", ""elevons"", ""slovene""]
","[[""elevons"", ""slovene""], [""grasping"", ""sparging""], [""hacklers"", ""shackler""], [""ingresses"", ""singeress""], [""pertaining"", ""repainting""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""grasping\"", \""sparging\"", \""hacklers\"", \""shackler\"", \""pertaining\"", \""repainting\"", \""singeress\"", \""ingresses\"", \""elevons\"", \""slovene\""]\n"",
    ""answer"": ""[[\""elevons\"", \""slovene\""], [\""grasping\"", \""sparging\""], [\""hacklers\"", \""shackler\""], [\""ingresses\"", \""singeress\""], [\""pertaining\"", \""repainting\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 300,
        ""words"": [
            ""grasping"",
            ""sparging"",
            ""hacklers"",
            ""shackler"",
            ""pertaining"",
            ""repainting"",
            ""singeress"",
            ""ingresses"",
            ""elevons"",
            ""slovene""
        ],
        ""solution"": [
            [
                ""elevons"",
                ""slovene""
            ],
            [
                ""grasping"",
                ""sparging""
            ],
            [
                ""hacklers"",
                ""shackler""
            ],
            [
                ""ingresses"",
                ""singeress""
            ],
            [
                ""pertaining"",
                ""repainting""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
301,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""deliquiate"", ""eliquidate"", ""mermaid"", ""demiram"", ""calenture"", ""crenulate"", ""sudd"", ""duds"", ""logans"", ""slogan"", ""losang"", ""anglos"", ""clothilda"", ""thallodic"", ""hatress"", ""trashes"", ""hatcheries"", ""teacherish"", ""received"", ""deceiver"", ""elisor"", ""resoil"", ""lories"", ""oriels""]
","[[""anglos"", ""logans"", ""losang"", ""slogan""], [""calenture"", ""crenulate""], [""clothilda"", ""thallodic""], [""deceiver"", ""received""], [""deliquiate"", ""eliquidate""], [""demiram"", ""mermaid""], [""duds"", ""sudd""], [""elisor"", ""lories"", ""oriels"", ""resoil""], [""hatcheries"", ""teacherish""], [""hatress"", ""trashes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""deliquiate\"", \""eliquidate\"", \""mermaid\"", \""demiram\"", \""calenture\"", \""crenulate\"", \""sudd\"", \""duds\"", \""logans\"", \""slogan\"", \""losang\"", \""anglos\"", \""clothilda\"", \""thallodic\"", \""hatress\"", \""trashes\"", \""hatcheries\"", \""teacherish\"", \""received\"", \""deceiver\"", \""elisor\"", \""resoil\"", \""lories\"", \""oriels\""]\n"",
    ""answer"": ""[[\""anglos\"", \""logans\"", \""losang\"", \""slogan\""], [\""calenture\"", \""crenulate\""], [\""clothilda\"", \""thallodic\""], [\""deceiver\"", \""received\""], [\""deliquiate\"", \""eliquidate\""], [\""demiram\"", \""mermaid\""], [\""duds\"", \""sudd\""], [\""elisor\"", \""lories\"", \""oriels\"", \""resoil\""], [\""hatcheries\"", \""teacherish\""], [\""hatress\"", \""trashes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 301,
        ""words"": [
            ""deliquiate"",
            ""eliquidate"",
            ""mermaid"",
            ""demiram"",
            ""calenture"",
            ""crenulate"",
            ""sudd"",
            ""duds"",
            ""logans"",
            ""slogan"",
            ""losang"",
            ""anglos"",
            ""clothilda"",
            ""thallodic"",
            ""hatress"",
            ""trashes"",
            ""hatcheries"",
            ""teacherish"",
            ""received"",
            ""deceiver"",
            ""elisor"",
            ""resoil"",
            ""lories"",
            ""oriels""
        ],
        ""solution"": [
            [
                ""anglos"",
                ""logans"",
                ""losang"",
                ""slogan""
            ],
            [
                ""calenture"",
                ""crenulate""
            ],
            [
                ""clothilda"",
                ""thallodic""
            ],
            [
                ""deceiver"",
                ""received""
            ],
            [
                ""deliquiate"",
                ""eliquidate""
            ],
            [
                ""demiram"",
                ""mermaid""
            ],
            [
                ""duds"",
                ""sudd""
            ],
            [
                ""elisor"",
                ""lories"",
                ""oriels"",
                ""resoil""
            ],
            [
                ""hatcheries"",
                ""teacherish""
            ],
            [
                ""hatress"",
                ""trashes""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
302,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""moriche"", ""homeric"", ""prewraps"", ""wrappers"", ""watt"", ""twat"", ""dyschroia"", ""hyracoids"", ""elling"", ""lingle""]
","[[""dyschroia"", ""hyracoids""], [""elling"", ""lingle""], [""homeric"", ""moriche""], [""prewraps"", ""wrappers""], [""twat"", ""watt""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""moriche\"", \""homeric\"", \""prewraps\"", \""wrappers\"", \""watt\"", \""twat\"", \""dyschroia\"", \""hyracoids\"", \""elling\"", \""lingle\""]\n"",
    ""answer"": ""[[\""dyschroia\"", \""hyracoids\""], [\""elling\"", \""lingle\""], [\""homeric\"", \""moriche\""], [\""prewraps\"", \""wrappers\""], [\""twat\"", \""watt\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 302,
        ""words"": [
            ""moriche"",
            ""homeric"",
            ""prewraps"",
            ""wrappers"",
            ""watt"",
            ""twat"",
            ""dyschroia"",
            ""hyracoids"",
            ""elling"",
            ""lingle""
        ],
        ""solution"": [
            [
                ""dyschroia"",
                ""hyracoids""
            ],
            [
                ""elling"",
                ""lingle""
            ],
            [
                ""homeric"",
                ""moriche""
            ],
            [
                ""prewraps"",
                ""wrappers""
            ],
            [
                ""twat"",
                ""watt""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
303,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""abanet"", ""banate"", ""picine"", ""picein"", ""mortise"", ""moister"", ""trisome"", ""erotism"", ""potshard"", ""hardtops""]
","[[""abanet"", ""banate""], [""erotism"", ""moister"", ""mortise"", ""trisome""], [""hardtops"", ""potshard""], [""picein"", ""picine""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""abanet\"", \""banate\"", \""picine\"", \""picein\"", \""mortise\"", \""moister\"", \""trisome\"", \""erotism\"", \""potshard\"", \""hardtops\""]\n"",
    ""answer"": ""[[\""abanet\"", \""banate\""], [\""erotism\"", \""moister\"", \""mortise\"", \""trisome\""], [\""hardtops\"", \""potshard\""], [\""picein\"", \""picine\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 303,
        ""words"": [
            ""abanet"",
            ""banate"",
            ""picine"",
            ""picein"",
            ""mortise"",
            ""moister"",
            ""trisome"",
            ""erotism"",
            ""potshard"",
            ""hardtops""
        ],
        ""solution"": [
            [
                ""abanet"",
                ""banate""
            ],
            [
                ""erotism"",
                ""moister"",
                ""mortise"",
                ""trisome""
            ],
            [
                ""hardtops"",
                ""potshard""
            ],
            [
                ""picein"",
                ""picine""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
304,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""piolets"", ""pistole"", ""ploesti"", ""pashm"", ""phasm""]
","[[""pashm"", ""phasm""], [""piolets"", ""pistole"", ""ploesti""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""piolets\"", \""pistole\"", \""ploesti\"", \""pashm\"", \""phasm\""]\n"",
    ""answer"": ""[[\""pashm\"", \""phasm\""], [\""piolets\"", \""pistole\"", \""ploesti\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 304,
        ""words"": [
            ""piolets"",
            ""pistole"",
            ""ploesti"",
            ""pashm"",
            ""phasm""
        ],
        ""solution"": [
            [
                ""pashm"",
                ""phasm""
            ],
            [
                ""piolets"",
                ""pistole"",
                ""ploesti""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
305,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tunga"", ""gaunt"", ""ruinous"", ""urinous"", ""grandeeism"", ""renegadism"", ""deprest"", ""despert"", ""pahari"", ""raphia"", ""pariah""]
","[[""deprest"", ""despert""], [""gaunt"", ""tunga""], [""grandeeism"", ""renegadism""], [""pahari"", ""pariah"", ""raphia""], [""ruinous"", ""urinous""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tunga\"", \""gaunt\"", \""ruinous\"", \""urinous\"", \""grandeeism\"", \""renegadism\"", \""deprest\"", \""despert\"", \""pahari\"", \""raphia\"", \""pariah\""]\n"",
    ""answer"": ""[[\""deprest\"", \""despert\""], [\""gaunt\"", \""tunga\""], [\""grandeeism\"", \""renegadism\""], [\""pahari\"", \""pariah\"", \""raphia\""], [\""ruinous\"", \""urinous\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 305,
        ""words"": [
            ""tunga"",
            ""gaunt"",
            ""ruinous"",
            ""urinous"",
            ""grandeeism"",
            ""renegadism"",
            ""deprest"",
            ""despert"",
            ""pahari"",
            ""raphia"",
            ""pariah""
        ],
        ""solution"": [
            [
                ""deprest"",
                ""despert""
            ],
            [
                ""gaunt"",
                ""tunga""
            ],
            [
                ""grandeeism"",
                ""renegadism""
            ],
            [
                ""pahari"",
                ""pariah"",
                ""raphia""
            ],
            [
                ""ruinous"",
                ""urinous""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
306,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ectoglia"", ""goetical"", ""geotical"", ""loricati"", ""clitoria"", ""faq"", ""qaf""]
","[[""clitoria"", ""loricati""], [""ectoglia"", ""geotical"", ""goetical""], [""faq"", ""qaf""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ectoglia\"", \""goetical\"", \""geotical\"", \""loricati\"", \""clitoria\"", \""faq\"", \""qaf\""]\n"",
    ""answer"": ""[[\""clitoria\"", \""loricati\""], [\""ectoglia\"", \""geotical\"", \""goetical\""], [\""faq\"", \""qaf\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 306,
        ""words"": [
            ""ectoglia"",
            ""goetical"",
            ""geotical"",
            ""loricati"",
            ""clitoria"",
            ""faq"",
            ""qaf""
        ],
        ""solution"": [
            [
                ""clitoria"",
                ""loricati""
            ],
            [
                ""ectoglia"",
                ""geotical"",
                ""goetical""
            ],
            [
                ""faq"",
                ""qaf""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
307,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rikisha"", ""shikari"", ""skewer"", ""reskew"", ""lipemic"", ""pimelic"", ""asself"", ""fasels""]
","[[""asself"", ""fasels""], [""lipemic"", ""pimelic""], [""reskew"", ""skewer""], [""rikisha"", ""shikari""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rikisha\"", \""shikari\"", \""skewer\"", \""reskew\"", \""lipemic\"", \""pimelic\"", \""asself\"", \""fasels\""]\n"",
    ""answer"": ""[[\""asself\"", \""fasels\""], [\""lipemic\"", \""pimelic\""], [\""reskew\"", \""skewer\""], [\""rikisha\"", \""shikari\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 307,
        ""words"": [
            ""rikisha"",
            ""shikari"",
            ""skewer"",
            ""reskew"",
            ""lipemic"",
            ""pimelic"",
            ""asself"",
            ""fasels""
        ],
        ""solution"": [
            [
                ""asself"",
                ""fasels""
            ],
            [
                ""lipemic"",
                ""pimelic""
            ],
            [
                ""reskew"",
                ""skewer""
            ],
            [
                ""rikisha"",
                ""shikari""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
308,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""inconglomerate"", ""nongeometrical"", ""psittacine"", ""antiseptic"", ""guttural"", ""guttular"", ""slinging"", ""singling"", ""prorsa"", ""prosar"", ""heml"", ""helm"", ""arteritis"", ""irritates"", ""tigrine"", ""igniter"", ""ringite""]
","[[""antiseptic"", ""psittacine""], [""arteritis"", ""irritates""], [""guttular"", ""guttural""], [""helm"", ""heml""], [""igniter"", ""ringite"", ""tigrine""], [""inconglomerate"", ""nongeometrical""], [""prorsa"", ""prosar""], [""singling"", ""slinging""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""inconglomerate\"", \""nongeometrical\"", \""psittacine\"", \""antiseptic\"", \""guttural\"", \""guttular\"", \""slinging\"", \""singling\"", \""prorsa\"", \""prosar\"", \""heml\"", \""helm\"", \""arteritis\"", \""irritates\"", \""tigrine\"", \""igniter\"", \""ringite\""]\n"",
    ""answer"": ""[[\""antiseptic\"", \""psittacine\""], [\""arteritis\"", \""irritates\""], [\""guttular\"", \""guttural\""], [\""helm\"", \""heml\""], [\""igniter\"", \""ringite\"", \""tigrine\""], [\""inconglomerate\"", \""nongeometrical\""], [\""prorsa\"", \""prosar\""], [\""singling\"", \""slinging\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 308,
        ""words"": [
            ""inconglomerate"",
            ""nongeometrical"",
            ""psittacine"",
            ""antiseptic"",
            ""guttural"",
            ""guttular"",
            ""slinging"",
            ""singling"",
            ""prorsa"",
            ""prosar"",
            ""heml"",
            ""helm"",
            ""arteritis"",
            ""irritates"",
            ""tigrine"",
            ""igniter"",
            ""ringite""
        ],
        ""solution"": [
            [
                ""antiseptic"",
                ""psittacine""
            ],
            [
                ""arteritis"",
                ""irritates""
            ],
            [
                ""guttular"",
                ""guttural""
            ],
            [
                ""helm"",
                ""heml""
            ],
            [
                ""igniter"",
                ""ringite"",
                ""tigrine""
            ],
            [
                ""inconglomerate"",
                ""nongeometrical""
            ],
            [
                ""prorsa"",
                ""prosar""
            ],
            [
                ""singling"",
                ""slinging""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
309,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""illicit"", ""illitic"", ""bladed"", ""balded"", ""unrisen"", ""sunnier"", ""flota"", ""aloft"", ""agenes"", ""sagene"", ""senega"", ""senage"", ""scrieves"", ""services""]
","[[""agenes"", ""sagene"", ""senage"", ""senega""], [""aloft"", ""flota""], [""balded"", ""bladed""], [""illicit"", ""illitic""], [""scrieves"", ""services""], [""sunnier"", ""unrisen""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""illicit\"", \""illitic\"", \""bladed\"", \""balded\"", \""unrisen\"", \""sunnier\"", \""flota\"", \""aloft\"", \""agenes\"", \""sagene\"", \""senega\"", \""senage\"", \""scrieves\"", \""services\""]\n"",
    ""answer"": ""[[\""agenes\"", \""sagene\"", \""senage\"", \""senega\""], [\""aloft\"", \""flota\""], [\""balded\"", \""bladed\""], [\""illicit\"", \""illitic\""], [\""scrieves\"", \""services\""], [\""sunnier\"", \""unrisen\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 309,
        ""words"": [
            ""illicit"",
            ""illitic"",
            ""bladed"",
            ""balded"",
            ""unrisen"",
            ""sunnier"",
            ""flota"",
            ""aloft"",
            ""agenes"",
            ""sagene"",
            ""senega"",
            ""senage"",
            ""scrieves"",
            ""services""
        ],
        ""solution"": [
            [
                ""agenes"",
                ""sagene"",
                ""senage"",
                ""senega""
            ],
            [
                ""aloft"",
                ""flota""
            ],
            [
                ""balded"",
                ""bladed""
            ],
            [
                ""illicit"",
                ""illitic""
            ],
            [
                ""scrieves"",
                ""services""
            ],
            [
                ""sunnier"",
                ""unrisen""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
310,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""burnout"", ""outburn"", ""noils"", ""loins"", ""amt"", ""mat"", ""atm"", ""tam""]
","[[""amt"", ""atm"", ""mat"", ""tam""], [""burnout"", ""outburn""], [""loins"", ""noils""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""burnout\"", \""outburn\"", \""noils\"", \""loins\"", \""amt\"", \""mat\"", \""atm\"", \""tam\""]\n"",
    ""answer"": ""[[\""amt\"", \""atm\"", \""mat\"", \""tam\""], [\""burnout\"", \""outburn\""], [\""loins\"", \""noils\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 310,
        ""words"": [
            ""burnout"",
            ""outburn"",
            ""noils"",
            ""loins"",
            ""amt"",
            ""mat"",
            ""atm"",
            ""tam""
        ],
        ""solution"": [
            [
                ""amt"",
                ""atm"",
                ""mat"",
                ""tam""
            ],
            [
                ""burnout"",
                ""outburn""
            ],
            [
                ""loins"",
                ""noils""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
311,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gruidae"", ""gaudier"", ""prediligent"", ""perdiligent"", ""bastonet"", ""obstante"", ""mestee"", ""esteem"", ""pimenton"", ""pointmen"", ""imponent""]
","[[""bastonet"", ""obstante""], [""esteem"", ""mestee""], [""gaudier"", ""gruidae""], [""imponent"", ""pimenton"", ""pointmen""], [""perdiligent"", ""prediligent""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gruidae\"", \""gaudier\"", \""prediligent\"", \""perdiligent\"", \""bastonet\"", \""obstante\"", \""mestee\"", \""esteem\"", \""pimenton\"", \""pointmen\"", \""imponent\""]\n"",
    ""answer"": ""[[\""bastonet\"", \""obstante\""], [\""esteem\"", \""mestee\""], [\""gaudier\"", \""gruidae\""], [\""imponent\"", \""pimenton\"", \""pointmen\""], [\""perdiligent\"", \""prediligent\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 311,
        ""words"": [
            ""gruidae"",
            ""gaudier"",
            ""prediligent"",
            ""perdiligent"",
            ""bastonet"",
            ""obstante"",
            ""mestee"",
            ""esteem"",
            ""pimenton"",
            ""pointmen"",
            ""imponent""
        ],
        ""solution"": [
            [
                ""bastonet"",
                ""obstante""
            ],
            [
                ""esteem"",
                ""mestee""
            ],
            [
                ""gaudier"",
                ""gruidae""
            ],
            [
                ""imponent"",
                ""pimenton"",
                ""pointmen""
            ],
            [
                ""perdiligent"",
                ""prediligent""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
312,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dissent"", ""snidest"", ""disnest"", ""tapper"", ""appert"", ""collegial"", ""gallicole"", ""testicular"", ""trisulcate"", ""microphone"", ""neomorphic"", ""unvenerated"", ""unenervated"", ""wrong"", ""grown"", ""minters"", ""minster""]
","[[""appert"", ""tapper""], [""collegial"", ""gallicole""], [""disnest"", ""dissent"", ""snidest""], [""grown"", ""wrong""], [""microphone"", ""neomorphic""], [""minster"", ""minters""], [""testicular"", ""trisulcate""], [""unenervated"", ""unvenerated""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dissent\"", \""snidest\"", \""disnest\"", \""tapper\"", \""appert\"", \""collegial\"", \""gallicole\"", \""testicular\"", \""trisulcate\"", \""microphone\"", \""neomorphic\"", \""unvenerated\"", \""unenervated\"", \""wrong\"", \""grown\"", \""minters\"", \""minster\""]\n"",
    ""answer"": ""[[\""appert\"", \""tapper\""], [\""collegial\"", \""gallicole\""], [\""disnest\"", \""dissent\"", \""snidest\""], [\""grown\"", \""wrong\""], [\""microphone\"", \""neomorphic\""], [\""minster\"", \""minters\""], [\""testicular\"", \""trisulcate\""], [\""unenervated\"", \""unvenerated\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 312,
        ""words"": [
            ""dissent"",
            ""snidest"",
            ""disnest"",
            ""tapper"",
            ""appert"",
            ""collegial"",
            ""gallicole"",
            ""testicular"",
            ""trisulcate"",
            ""microphone"",
            ""neomorphic"",
            ""unvenerated"",
            ""unenervated"",
            ""wrong"",
            ""grown"",
            ""minters"",
            ""minster""
        ],
        ""solution"": [
            [
                ""appert"",
                ""tapper""
            ],
            [
                ""collegial"",
                ""gallicole""
            ],
            [
                ""disnest"",
                ""dissent"",
                ""snidest""
            ],
            [
                ""grown"",
                ""wrong""
            ],
            [
                ""microphone"",
                ""neomorphic""
            ],
            [
                ""minster"",
                ""minters""
            ],
            [
                ""testicular"",
                ""trisulcate""
            ],
            [
                ""unenervated"",
                ""unvenerated""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
313,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""saboteurs"", ""abortuses"", ""beden"", ""deben"", ""deneb"", ""heartnut"", ""earthnut"", ""appale"", ""appeal"", ""bora"", ""boar"", ""raob"", ""trussed"", ""dusters"", ""detruss""]
","[[""abortuses"", ""saboteurs""], [""appale"", ""appeal""], [""beden"", ""deben"", ""deneb""], [""boar"", ""bora"", ""raob""], [""detruss"", ""dusters"", ""trussed""], [""earthnut"", ""heartnut""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""saboteurs\"", \""abortuses\"", \""beden\"", \""deben\"", \""deneb\"", \""heartnut\"", \""earthnut\"", \""appale\"", \""appeal\"", \""bora\"", \""boar\"", \""raob\"", \""trussed\"", \""dusters\"", \""detruss\""]\n"",
    ""answer"": ""[[\""abortuses\"", \""saboteurs\""], [\""appale\"", \""appeal\""], [\""beden\"", \""deben\"", \""deneb\""], [\""boar\"", \""bora\"", \""raob\""], [\""detruss\"", \""dusters\"", \""trussed\""], [\""earthnut\"", \""heartnut\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 313,
        ""words"": [
            ""saboteurs"",
            ""abortuses"",
            ""beden"",
            ""deben"",
            ""deneb"",
            ""heartnut"",
            ""earthnut"",
            ""appale"",
            ""appeal"",
            ""bora"",
            ""boar"",
            ""raob"",
            ""trussed"",
            ""dusters"",
            ""detruss""
        ],
        ""solution"": [
            [
                ""abortuses"",
                ""saboteurs""
            ],
            [
                ""appale"",
                ""appeal""
            ],
            [
                ""beden"",
                ""deben"",
                ""deneb""
            ],
            [
                ""boar"",
                ""bora"",
                ""raob""
            ],
            [
                ""detruss"",
                ""dusters"",
                ""trussed""
            ],
            [
                ""earthnut"",
                ""heartnut""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
314,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mobbable"", ""bombable"", ""keats"", ""skate"", ""graders"", ""regards"", ""arrogative"", ""variegator"", ""neolith"", ""thelion"", ""hotline"", ""sisters"", ""resists"", ""counts"", ""tucson"", ""uncost"", ""hazy"", ""hayz"", ""hastens"", ""thaness"", ""snathes"", ""horns"", ""shorn""]
","[[""arrogative"", ""variegator""], [""bombable"", ""mobbable""], [""counts"", ""tucson"", ""uncost""], [""graders"", ""regards""], [""hastens"", ""snathes"", ""thaness""], [""hayz"", ""hazy""], [""horns"", ""shorn""], [""hotline"", ""neolith"", ""thelion""], [""keats"", ""skate""], [""resists"", ""sisters""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mobbable\"", \""bombable\"", \""keats\"", \""skate\"", \""graders\"", \""regards\"", \""arrogative\"", \""variegator\"", \""neolith\"", \""thelion\"", \""hotline\"", \""sisters\"", \""resists\"", \""counts\"", \""tucson\"", \""uncost\"", \""hazy\"", \""hayz\"", \""hastens\"", \""thaness\"", \""snathes\"", \""horns\"", \""shorn\""]\n"",
    ""answer"": ""[[\""arrogative\"", \""variegator\""], [\""bombable\"", \""mobbable\""], [\""counts\"", \""tucson\"", \""uncost\""], [\""graders\"", \""regards\""], [\""hastens\"", \""snathes\"", \""thaness\""], [\""hayz\"", \""hazy\""], [\""horns\"", \""shorn\""], [\""hotline\"", \""neolith\"", \""thelion\""], [\""keats\"", \""skate\""], [\""resists\"", \""sisters\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 314,
        ""words"": [
            ""mobbable"",
            ""bombable"",
            ""keats"",
            ""skate"",
            ""graders"",
            ""regards"",
            ""arrogative"",
            ""variegator"",
            ""neolith"",
            ""thelion"",
            ""hotline"",
            ""sisters"",
            ""resists"",
            ""counts"",
            ""tucson"",
            ""uncost"",
            ""hazy"",
            ""hayz"",
            ""hastens"",
            ""thaness"",
            ""snathes"",
            ""horns"",
            ""shorn""
        ],
        ""solution"": [
            [
                ""arrogative"",
                ""variegator""
            ],
            [
                ""bombable"",
                ""mobbable""
            ],
            [
                ""counts"",
                ""tucson"",
                ""uncost""
            ],
            [
                ""graders"",
                ""regards""
            ],
            [
                ""hastens"",
                ""snathes"",
                ""thaness""
            ],
            [
                ""hayz"",
                ""hazy""
            ],
            [
                ""horns"",
                ""shorn""
            ],
            [
                ""hotline"",
                ""neolith"",
                ""thelion""
            ],
            [
                ""keats"",
                ""skate""
            ],
            [
                ""resists"",
                ""sisters""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
315,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nitroso"", ""torsion"", ""isotron"", ""fcp"", ""pfc"", ""pcf"", ""panics"", ""panisc"", ""technic"", ""ticchen"", ""floc"", ""clof"", ""regma"", ""marge"", ""grame"", ""gamer"", ""boned"", ""boden""]
","[[""boden"", ""boned""], [""clof"", ""floc""], [""fcp"", ""pcf"", ""pfc""], [""gamer"", ""grame"", ""marge"", ""regma""], [""isotron"", ""nitroso"", ""torsion""], [""panics"", ""panisc""], [""technic"", ""ticchen""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nitroso\"", \""torsion\"", \""isotron\"", \""fcp\"", \""pfc\"", \""pcf\"", \""panics\"", \""panisc\"", \""technic\"", \""ticchen\"", \""floc\"", \""clof\"", \""regma\"", \""marge\"", \""grame\"", \""gamer\"", \""boned\"", \""boden\""]\n"",
    ""answer"": ""[[\""boden\"", \""boned\""], [\""clof\"", \""floc\""], [\""fcp\"", \""pcf\"", \""pfc\""], [\""gamer\"", \""grame\"", \""marge\"", \""regma\""], [\""isotron\"", \""nitroso\"", \""torsion\""], [\""panics\"", \""panisc\""], [\""technic\"", \""ticchen\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 315,
        ""words"": [
            ""nitroso"",
            ""torsion"",
            ""isotron"",
            ""fcp"",
            ""pfc"",
            ""pcf"",
            ""panics"",
            ""panisc"",
            ""technic"",
            ""ticchen"",
            ""floc"",
            ""clof"",
            ""regma"",
            ""marge"",
            ""grame"",
            ""gamer"",
            ""boned"",
            ""boden""
        ],
        ""solution"": [
            [
                ""boden"",
                ""boned""
            ],
            [
                ""clof"",
                ""floc""
            ],
            [
                ""fcp"",
                ""pcf"",
                ""pfc""
            ],
            [
                ""gamer"",
                ""grame"",
                ""marge"",
                ""regma""
            ],
            [
                ""isotron"",
                ""nitroso"",
                ""torsion""
            ],
            [
                ""panics"",
                ""panisc""
            ],
            [
                ""technic"",
                ""ticchen""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
316,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pharm"", ""prahm"", ""swithly"", ""whistly"", ""bitreadle"", ""liberated"", ""cabestro"", ""cabresto"", ""erectable"", ""celebrate"", ""matinees"", ""etamines"", ""seminate"", ""stichs"", ""schist""]
","[[""bitreadle"", ""liberated""], [""cabestro"", ""cabresto""], [""celebrate"", ""erectable""], [""etamines"", ""matinees"", ""seminate""], [""pharm"", ""prahm""], [""schist"", ""stichs""], [""swithly"", ""whistly""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pharm\"", \""prahm\"", \""swithly\"", \""whistly\"", \""bitreadle\"", \""liberated\"", \""cabestro\"", \""cabresto\"", \""erectable\"", \""celebrate\"", \""matinees\"", \""etamines\"", \""seminate\"", \""stichs\"", \""schist\""]\n"",
    ""answer"": ""[[\""bitreadle\"", \""liberated\""], [\""cabestro\"", \""cabresto\""], [\""celebrate\"", \""erectable\""], [\""etamines\"", \""matinees\"", \""seminate\""], [\""pharm\"", \""prahm\""], [\""schist\"", \""stichs\""], [\""swithly\"", \""whistly\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 316,
        ""words"": [
            ""pharm"",
            ""prahm"",
            ""swithly"",
            ""whistly"",
            ""bitreadle"",
            ""liberated"",
            ""cabestro"",
            ""cabresto"",
            ""erectable"",
            ""celebrate"",
            ""matinees"",
            ""etamines"",
            ""seminate"",
            ""stichs"",
            ""schist""
        ],
        ""solution"": [
            [
                ""bitreadle"",
                ""liberated""
            ],
            [
                ""cabestro"",
                ""cabresto""
            ],
            [
                ""celebrate"",
                ""erectable""
            ],
            [
                ""etamines"",
                ""matinees"",
                ""seminate""
            ],
            [
                ""pharm"",
                ""prahm""
            ],
            [
                ""schist"",
                ""stichs""
            ],
            [
                ""swithly"",
                ""whistly""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
317,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tentage"", ""genetta"", ""linolenic"", ""encinillo"", ""comminated"", ""commandite"", ""paraclete"", ""raceplate"", ""ghettoed"", ""dogteeth"", ""isidae"", ""idesia"", ""choriocele"", ""orchiocele"", ""latentness"", ""tenantless""]
","[[""choriocele"", ""orchiocele""], [""commandite"", ""comminated""], [""dogteeth"", ""ghettoed""], [""encinillo"", ""linolenic""], [""genetta"", ""tentage""], [""idesia"", ""isidae""], [""latentness"", ""tenantless""], [""paraclete"", ""raceplate""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tentage\"", \""genetta\"", \""linolenic\"", \""encinillo\"", \""comminated\"", \""commandite\"", \""paraclete\"", \""raceplate\"", \""ghettoed\"", \""dogteeth\"", \""isidae\"", \""idesia\"", \""choriocele\"", \""orchiocele\"", \""latentness\"", \""tenantless\""]\n"",
    ""answer"": ""[[\""choriocele\"", \""orchiocele\""], [\""commandite\"", \""comminated\""], [\""dogteeth\"", \""ghettoed\""], [\""encinillo\"", \""linolenic\""], [\""genetta\"", \""tentage\""], [\""idesia\"", \""isidae\""], [\""latentness\"", \""tenantless\""], [\""paraclete\"", \""raceplate\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 317,
        ""words"": [
            ""tentage"",
            ""genetta"",
            ""linolenic"",
            ""encinillo"",
            ""comminated"",
            ""commandite"",
            ""paraclete"",
            ""raceplate"",
            ""ghettoed"",
            ""dogteeth"",
            ""isidae"",
            ""idesia"",
            ""choriocele"",
            ""orchiocele"",
            ""latentness"",
            ""tenantless""
        ],
        ""solution"": [
            [
                ""choriocele"",
                ""orchiocele""
            ],
            [
                ""commandite"",
                ""comminated""
            ],
            [
                ""dogteeth"",
                ""ghettoed""
            ],
            [
                ""encinillo"",
                ""linolenic""
            ],
            [
                ""genetta"",
                ""tentage""
            ],
            [
                ""idesia"",
                ""isidae""
            ],
            [
                ""latentness"",
                ""tenantless""
            ],
            [
                ""paraclete"",
                ""raceplate""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
318,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""supines"", ""puisnes"", ""binary"", ""brainy"", ""drepanis"", ""sprained"", ""wades"", ""sawed"", ""mullites"", ""mellitus"", ""croupe"", ""poucer"", ""cuerpo"", ""recoup"", ""couper"", ""lumbus"", ""sumbul""]
","[[""binary"", ""brainy""], [""couper"", ""croupe"", ""cuerpo"", ""poucer"", ""recoup""], [""drepanis"", ""sprained""], [""lumbus"", ""sumbul""], [""mellitus"", ""mullites""], [""puisnes"", ""supines""], [""sawed"", ""wades""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""supines\"", \""puisnes\"", \""binary\"", \""brainy\"", \""drepanis\"", \""sprained\"", \""wades\"", \""sawed\"", \""mullites\"", \""mellitus\"", \""croupe\"", \""poucer\"", \""cuerpo\"", \""recoup\"", \""couper\"", \""lumbus\"", \""sumbul\""]\n"",
    ""answer"": ""[[\""binary\"", \""brainy\""], [\""couper\"", \""croupe\"", \""cuerpo\"", \""poucer\"", \""recoup\""], [\""drepanis\"", \""sprained\""], [\""lumbus\"", \""sumbul\""], [\""mellitus\"", \""mullites\""], [\""puisnes\"", \""supines\""], [\""sawed\"", \""wades\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 318,
        ""words"": [
            ""supines"",
            ""puisnes"",
            ""binary"",
            ""brainy"",
            ""drepanis"",
            ""sprained"",
            ""wades"",
            ""sawed"",
            ""mullites"",
            ""mellitus"",
            ""croupe"",
            ""poucer"",
            ""cuerpo"",
            ""recoup"",
            ""couper"",
            ""lumbus"",
            ""sumbul""
        ],
        ""solution"": [
            [
                ""binary"",
                ""brainy""
            ],
            [
                ""couper"",
                ""croupe"",
                ""cuerpo"",
                ""poucer"",
                ""recoup""
            ],
            [
                ""drepanis"",
                ""sprained""
            ],
            [
                ""lumbus"",
                ""sumbul""
            ],
            [
                ""mellitus"",
                ""mullites""
            ],
            [
                ""puisnes"",
                ""supines""
            ],
            [
                ""sawed"",
                ""wades""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
319,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""crotches"", ""crochets"", ""scotcher"", ""otterer"", ""rettore"", ""glucinum"", ""cingulum"", ""crematoria"", ""mercatoria"", ""prion"", ""orpin"", ""macedon"", ""conamed"", ""lairless"", ""railless"", ""salliers""]
","[[""cingulum"", ""glucinum""], [""conamed"", ""macedon""], [""crematoria"", ""mercatoria""], [""crochets"", ""crotches"", ""scotcher""], [""lairless"", ""railless"", ""salliers""], [""orpin"", ""prion""], [""otterer"", ""rettore""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""crotches\"", \""crochets\"", \""scotcher\"", \""otterer\"", \""rettore\"", \""glucinum\"", \""cingulum\"", \""crematoria\"", \""mercatoria\"", \""prion\"", \""orpin\"", \""macedon\"", \""conamed\"", \""lairless\"", \""railless\"", \""salliers\""]\n"",
    ""answer"": ""[[\""cingulum\"", \""glucinum\""], [\""conamed\"", \""macedon\""], [\""crematoria\"", \""mercatoria\""], [\""crochets\"", \""crotches\"", \""scotcher\""], [\""lairless\"", \""railless\"", \""salliers\""], [\""orpin\"", \""prion\""], [\""otterer\"", \""rettore\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 319,
        ""words"": [
            ""crotches"",
            ""crochets"",
            ""scotcher"",
            ""otterer"",
            ""rettore"",
            ""glucinum"",
            ""cingulum"",
            ""crematoria"",
            ""mercatoria"",
            ""prion"",
            ""orpin"",
            ""macedon"",
            ""conamed"",
            ""lairless"",
            ""railless"",
            ""salliers""
        ],
        ""solution"": [
            [
                ""cingulum"",
                ""glucinum""
            ],
            [
                ""conamed"",
                ""macedon""
            ],
            [
                ""crematoria"",
                ""mercatoria""
            ],
            [
                ""crochets"",
                ""crotches"",
                ""scotcher""
            ],
            [
                ""lairless"",
                ""railless"",
                ""salliers""
            ],
            [
                ""orpin"",
                ""prion""
            ],
            [
                ""otterer"",
                ""rettore""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
320,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""karewa"", ""awreak"", ""templates"", ""palmettes"", ""amaethon"", ""thomaean"", ""remark"", ""marker"", ""cine"", ""nice"", ""autoclave"", ""vacuolate""]
","[[""amaethon"", ""thomaean""], [""autoclave"", ""vacuolate""], [""awreak"", ""karewa""], [""cine"", ""nice""], [""marker"", ""remark""], [""palmettes"", ""templates""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""karewa\"", \""awreak\"", \""templates\"", \""palmettes\"", \""amaethon\"", \""thomaean\"", \""remark\"", \""marker\"", \""cine\"", \""nice\"", \""autoclave\"", \""vacuolate\""]\n"",
    ""answer"": ""[[\""amaethon\"", \""thomaean\""], [\""autoclave\"", \""vacuolate\""], [\""awreak\"", \""karewa\""], [\""cine\"", \""nice\""], [\""marker\"", \""remark\""], [\""palmettes\"", \""templates\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 320,
        ""words"": [
            ""karewa"",
            ""awreak"",
            ""templates"",
            ""palmettes"",
            ""amaethon"",
            ""thomaean"",
            ""remark"",
            ""marker"",
            ""cine"",
            ""nice"",
            ""autoclave"",
            ""vacuolate""
        ],
        ""solution"": [
            [
                ""amaethon"",
                ""thomaean""
            ],
            [
                ""autoclave"",
                ""vacuolate""
            ],
            [
                ""awreak"",
                ""karewa""
            ],
            [
                ""cine"",
                ""nice""
            ],
            [
                ""marker"",
                ""remark""
            ],
            [
                ""palmettes"",
                ""templates""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
321,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""satan"", ""nasat"", ""indiges"", ""dingies"", ""prosophist"", ""troopships""]
","[[""dingies"", ""indiges""], [""nasat"", ""satan""], [""prosophist"", ""troopships""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""satan\"", \""nasat\"", \""indiges\"", \""dingies\"", \""prosophist\"", \""troopships\""]\n"",
    ""answer"": ""[[\""dingies\"", \""indiges\""], [\""nasat\"", \""satan\""], [\""prosophist\"", \""troopships\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 321,
        ""words"": [
            ""satan"",
            ""nasat"",
            ""indiges"",
            ""dingies"",
            ""prosophist"",
            ""troopships""
        ],
        ""solution"": [
            [
                ""dingies"",
                ""indiges""
            ],
            [
                ""nasat"",
                ""satan""
            ],
            [
                ""prosophist"",
                ""troopships""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
322,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bracers"", ""scraber"", ""annulet"", ""nauntle"", ""pseudimago"", ""megapodius"", ""stan"", ""nast"", ""tans"", ""ants"", ""sant"", ""speiss"", ""sepsis"", ""pisses""]
","[[""annulet"", ""nauntle""], [""ants"", ""nast"", ""sant"", ""stan"", ""tans""], [""bracers"", ""scraber""], [""megapodius"", ""pseudimago""], [""pisses"", ""sepsis"", ""speiss""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bracers\"", \""scraber\"", \""annulet\"", \""nauntle\"", \""pseudimago\"", \""megapodius\"", \""stan\"", \""nast\"", \""tans\"", \""ants\"", \""sant\"", \""speiss\"", \""sepsis\"", \""pisses\""]\n"",
    ""answer"": ""[[\""annulet\"", \""nauntle\""], [\""ants\"", \""nast\"", \""sant\"", \""stan\"", \""tans\""], [\""bracers\"", \""scraber\""], [\""megapodius\"", \""pseudimago\""], [\""pisses\"", \""sepsis\"", \""speiss\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 322,
        ""words"": [
            ""bracers"",
            ""scraber"",
            ""annulet"",
            ""nauntle"",
            ""pseudimago"",
            ""megapodius"",
            ""stan"",
            ""nast"",
            ""tans"",
            ""ants"",
            ""sant"",
            ""speiss"",
            ""sepsis"",
            ""pisses""
        ],
        ""solution"": [
            [
                ""annulet"",
                ""nauntle""
            ],
            [
                ""ants"",
                ""nast"",
                ""sant"",
                ""stan"",
                ""tans""
            ],
            [
                ""bracers"",
                ""scraber""
            ],
            [
                ""megapodius"",
                ""pseudimago""
            ],
            [
                ""pisses"",
                ""sepsis"",
                ""speiss""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
323,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""argentiferous"", ""garnetiferous"", ""kouros"", ""rookus"", ""unimparted"", ""diparentum"", ""sedat"", ""sated"", ""stade"", ""stead"", ""tsade""]
","[[""argentiferous"", ""garnetiferous""], [""diparentum"", ""unimparted""], [""kouros"", ""rookus""], [""sated"", ""sedat"", ""stade"", ""stead"", ""tsade""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""argentiferous\"", \""garnetiferous\"", \""kouros\"", \""rookus\"", \""unimparted\"", \""diparentum\"", \""sedat\"", \""sated\"", \""stade\"", \""stead\"", \""tsade\""]\n"",
    ""answer"": ""[[\""argentiferous\"", \""garnetiferous\""], [\""diparentum\"", \""unimparted\""], [\""kouros\"", \""rookus\""], [\""sated\"", \""sedat\"", \""stade\"", \""stead\"", \""tsade\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 323,
        ""words"": [
            ""argentiferous"",
            ""garnetiferous"",
            ""kouros"",
            ""rookus"",
            ""unimparted"",
            ""diparentum"",
            ""sedat"",
            ""sated"",
            ""stade"",
            ""stead"",
            ""tsade""
        ],
        ""solution"": [
            [
                ""argentiferous"",
                ""garnetiferous""
            ],
            [
                ""diparentum"",
                ""unimparted""
            ],
            [
                ""kouros"",
                ""rookus""
            ],
            [
                ""sated"",
                ""sedat"",
                ""stade"",
                ""stead"",
                ""tsade""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
324,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""misdefine"", ""feminised"", ""stirk"", ""skirt""]
","[[""feminised"", ""misdefine""], [""skirt"", ""stirk""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""misdefine\"", \""feminised\"", \""stirk\"", \""skirt\""]\n"",
    ""answer"": ""[[\""feminised\"", \""misdefine\""], [\""skirt\"", \""stirk\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 324,
        ""words"": [
            ""misdefine"",
            ""feminised"",
            ""stirk"",
            ""skirt""
        ],
        ""solution"": [
            [
                ""feminised"",
                ""misdefine""
            ],
            [
                ""skirt"",
                ""stirk""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
325,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mediacy"", ""dicyema"", ""puan"", ""puna"", ""napu"", ""unimedial"", ""aluminide"", ""blaver"", ""barvel""]
","[[""aluminide"", ""unimedial""], [""barvel"", ""blaver""], [""dicyema"", ""mediacy""], [""napu"", ""puan"", ""puna""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mediacy\"", \""dicyema\"", \""puan\"", \""puna\"", \""napu\"", \""unimedial\"", \""aluminide\"", \""blaver\"", \""barvel\""]\n"",
    ""answer"": ""[[\""aluminide\"", \""unimedial\""], [\""barvel\"", \""blaver\""], [\""dicyema\"", \""mediacy\""], [\""napu\"", \""puan\"", \""puna\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 325,
        ""words"": [
            ""mediacy"",
            ""dicyema"",
            ""puan"",
            ""puna"",
            ""napu"",
            ""unimedial"",
            ""aluminide"",
            ""blaver"",
            ""barvel""
        ],
        ""solution"": [
            [
                ""aluminide"",
                ""unimedial""
            ],
            [
                ""barvel"",
                ""blaver""
            ],
            [
                ""dicyema"",
                ""mediacy""
            ],
            [
                ""napu"",
                ""puan"",
                ""puna""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
326,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bunchier"", ""cherubin"", ""dolerite"", ""loitered"", ""tarpaulins"", ""palustrian"", ""cosustain"", ""scusation"", ""tewit"", ""twite""]
","[[""bunchier"", ""cherubin""], [""cosustain"", ""scusation""], [""dolerite"", ""loitered""], [""palustrian"", ""tarpaulins""], [""tewit"", ""twite""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bunchier\"", \""cherubin\"", \""dolerite\"", \""loitered\"", \""tarpaulins\"", \""palustrian\"", \""cosustain\"", \""scusation\"", \""tewit\"", \""twite\""]\n"",
    ""answer"": ""[[\""bunchier\"", \""cherubin\""], [\""cosustain\"", \""scusation\""], [\""dolerite\"", \""loitered\""], [\""palustrian\"", \""tarpaulins\""], [\""tewit\"", \""twite\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 326,
        ""words"": [
            ""bunchier"",
            ""cherubin"",
            ""dolerite"",
            ""loitered"",
            ""tarpaulins"",
            ""palustrian"",
            ""cosustain"",
            ""scusation"",
            ""tewit"",
            ""twite""
        ],
        ""solution"": [
            [
                ""bunchier"",
                ""cherubin""
            ],
            [
                ""cosustain"",
                ""scusation""
            ],
            [
                ""dolerite"",
                ""loitered""
            ],
            [
                ""palustrian"",
                ""tarpaulins""
            ],
            [
                ""tewit"",
                ""twite""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
327,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""merging"", ""germing"", ""drumble"", ""rumbled"", ""inshoot"", ""insooth""]
","[[""drumble"", ""rumbled""], [""germing"", ""merging""], [""inshoot"", ""insooth""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""merging\"", \""germing\"", \""drumble\"", \""rumbled\"", \""inshoot\"", \""insooth\""]\n"",
    ""answer"": ""[[\""drumble\"", \""rumbled\""], [\""germing\"", \""merging\""], [\""inshoot\"", \""insooth\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 327,
        ""words"": [
            ""merging"",
            ""germing"",
            ""drumble"",
            ""rumbled"",
            ""inshoot"",
            ""insooth""
        ],
        ""solution"": [
            [
                ""drumble"",
                ""rumbled""
            ],
            [
                ""germing"",
                ""merging""
            ],
            [
                ""inshoot"",
                ""insooth""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
328,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""corelating"", ""relocating"", ""cellared"", ""recalled"", ""wrangle"", ""wangler"", ""tamboura"", ""marabuto"", ""marabout"", ""ankus"", ""kusan""]
","[[""ankus"", ""kusan""], [""cellared"", ""recalled""], [""corelating"", ""relocating""], [""marabout"", ""marabuto"", ""tamboura""], [""wangler"", ""wrangle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""corelating\"", \""relocating\"", \""cellared\"", \""recalled\"", \""wrangle\"", \""wangler\"", \""tamboura\"", \""marabuto\"", \""marabout\"", \""ankus\"", \""kusan\""]\n"",
    ""answer"": ""[[\""ankus\"", \""kusan\""], [\""cellared\"", \""recalled\""], [\""corelating\"", \""relocating\""], [\""marabout\"", \""marabuto\"", \""tamboura\""], [\""wangler\"", \""wrangle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 328,
        ""words"": [
            ""corelating"",
            ""relocating"",
            ""cellared"",
            ""recalled"",
            ""wrangle"",
            ""wangler"",
            ""tamboura"",
            ""marabuto"",
            ""marabout"",
            ""ankus"",
            ""kusan""
        ],
        ""solution"": [
            [
                ""ankus"",
                ""kusan""
            ],
            [
                ""cellared"",
                ""recalled""
            ],
            [
                ""corelating"",
                ""relocating""
            ],
            [
                ""marabout"",
                ""marabuto"",
                ""tamboura""
            ],
            [
                ""wangler"",
                ""wrangle""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
329,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""partial"", ""patrial"", ""picktooth"", ""toothpick"", ""octandrian"", ""dracontian"", ""rd"", ""dr""]
","[[""dr"", ""rd""], [""dracontian"", ""octandrian""], [""partial"", ""patrial""], [""picktooth"", ""toothpick""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""partial\"", \""patrial\"", \""picktooth\"", \""toothpick\"", \""octandrian\"", \""dracontian\"", \""rd\"", \""dr\""]\n"",
    ""answer"": ""[[\""dr\"", \""rd\""], [\""dracontian\"", \""octandrian\""], [\""partial\"", \""patrial\""], [\""picktooth\"", \""toothpick\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 329,
        ""words"": [
            ""partial"",
            ""patrial"",
            ""picktooth"",
            ""toothpick"",
            ""octandrian"",
            ""dracontian"",
            ""rd"",
            ""dr""
        ],
        ""solution"": [
            [
                ""dr"",
                ""rd""
            ],
            [
                ""dracontian"",
                ""octandrian""
            ],
            [
                ""partial"",
                ""patrial""
            ],
            [
                ""picktooth"",
                ""toothpick""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
330,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sparling"", ""laspring"", ""springal"", ""graplins"", ""kore"", ""roke"", ""kero"", ""wherrit"", ""writher"", ""whirret"", ""desirous"", ""siderous"", ""recons"", ""crones"", ""censor"", ""gil"", ""lig"", ""lusterlessness"", ""resultlessness"", ""paneled"", ""deplane"", ""khalat"", ""kathal"", ""gossipry"", ""gryposis""]
","[[""censor"", ""crones"", ""recons""], [""deplane"", ""paneled""], [""desirous"", ""siderous""], [""gil"", ""lig""], [""gossipry"", ""gryposis""], [""graplins"", ""laspring"", ""sparling"", ""springal""], [""kathal"", ""khalat""], [""kero"", ""kore"", ""roke""], [""lusterlessness"", ""resultlessness""], [""wherrit"", ""whirret"", ""writher""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sparling\"", \""laspring\"", \""springal\"", \""graplins\"", \""kore\"", \""roke\"", \""kero\"", \""wherrit\"", \""writher\"", \""whirret\"", \""desirous\"", \""siderous\"", \""recons\"", \""crones\"", \""censor\"", \""gil\"", \""lig\"", \""lusterlessness\"", \""resultlessness\"", \""paneled\"", \""deplane\"", \""khalat\"", \""kathal\"", \""gossipry\"", \""gryposis\""]\n"",
    ""answer"": ""[[\""censor\"", \""crones\"", \""recons\""], [\""deplane\"", \""paneled\""], [\""desirous\"", \""siderous\""], [\""gil\"", \""lig\""], [\""gossipry\"", \""gryposis\""], [\""graplins\"", \""laspring\"", \""sparling\"", \""springal\""], [\""kathal\"", \""khalat\""], [\""kero\"", \""kore\"", \""roke\""], [\""lusterlessness\"", \""resultlessness\""], [\""wherrit\"", \""whirret\"", \""writher\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 330,
        ""words"": [
            ""sparling"",
            ""laspring"",
            ""springal"",
            ""graplins"",
            ""kore"",
            ""roke"",
            ""kero"",
            ""wherrit"",
            ""writher"",
            ""whirret"",
            ""desirous"",
            ""siderous"",
            ""recons"",
            ""crones"",
            ""censor"",
            ""gil"",
            ""lig"",
            ""lusterlessness"",
            ""resultlessness"",
            ""paneled"",
            ""deplane"",
            ""khalat"",
            ""kathal"",
            ""gossipry"",
            ""gryposis""
        ],
        ""solution"": [
            [
                ""censor"",
                ""crones"",
                ""recons""
            ],
            [
                ""deplane"",
                ""paneled""
            ],
            [
                ""desirous"",
                ""siderous""
            ],
            [
                ""gil"",
                ""lig""
            ],
            [
                ""gossipry"",
                ""gryposis""
            ],
            [
                ""graplins"",
                ""laspring"",
                ""sparling"",
                ""springal""
            ],
            [
                ""kathal"",
                ""khalat""
            ],
            [
                ""kero"",
                ""kore"",
                ""roke""
            ],
            [
                ""lusterlessness"",
                ""resultlessness""
            ],
            [
                ""wherrit"",
                ""whirret"",
                ""writher""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
331,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""retation"", ""tentoria"", ""agentives"", ""negatives"", ""harridans"", ""sridharan"", ""basally"", ""salably""]
","[[""agentives"", ""negatives""], [""basally"", ""salably""], [""harridans"", ""sridharan""], [""retation"", ""tentoria""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""retation\"", \""tentoria\"", \""agentives\"", \""negatives\"", \""harridans\"", \""sridharan\"", \""basally\"", \""salably\""]\n"",
    ""answer"": ""[[\""agentives\"", \""negatives\""], [\""basally\"", \""salably\""], [\""harridans\"", \""sridharan\""], [\""retation\"", \""tentoria\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 331,
        ""words"": [
            ""retation"",
            ""tentoria"",
            ""agentives"",
            ""negatives"",
            ""harridans"",
            ""sridharan"",
            ""basally"",
            ""salably""
        ],
        ""solution"": [
            [
                ""agentives"",
                ""negatives""
            ],
            [
                ""basally"",
                ""salably""
            ],
            [
                ""harridans"",
                ""sridharan""
            ],
            [
                ""retation"",
                ""tentoria""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
332,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""antigenes"", ""enseating"", ""garrets"", ""graters"", ""garters""]
","[[""antigenes"", ""enseating""], [""garrets"", ""garters"", ""graters""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""antigenes\"", \""enseating\"", \""garrets\"", \""graters\"", \""garters\""]\n"",
    ""answer"": ""[[\""antigenes\"", \""enseating\""], [\""garrets\"", \""garters\"", \""graters\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 332,
        ""words"": [
            ""antigenes"",
            ""enseating"",
            ""garrets"",
            ""graters"",
            ""garters""
        ],
        ""solution"": [
            [
                ""antigenes"",
                ""enseating""
            ],
            [
                ""garrets"",
                ""garters"",
                ""graters""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
333,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""taino"", ""niota"", ""perish"", ""reship"", ""bailsman"", ""balanism"", ""ectrogenic"", ""geocentric"", ""egocentric"", ""coerecting"", ""kelpie"", ""pelike"", ""broos"", ""boors""]
","[[""bailsman"", ""balanism""], [""boors"", ""broos""], [""coerecting"", ""ectrogenic"", ""egocentric"", ""geocentric""], [""kelpie"", ""pelike""], [""niota"", ""taino""], [""perish"", ""reship""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""taino\"", \""niota\"", \""perish\"", \""reship\"", \""bailsman\"", \""balanism\"", \""ectrogenic\"", \""geocentric\"", \""egocentric\"", \""coerecting\"", \""kelpie\"", \""pelike\"", \""broos\"", \""boors\""]\n"",
    ""answer"": ""[[\""bailsman\"", \""balanism\""], [\""boors\"", \""broos\""], [\""coerecting\"", \""ectrogenic\"", \""egocentric\"", \""geocentric\""], [\""kelpie\"", \""pelike\""], [\""niota\"", \""taino\""], [\""perish\"", \""reship\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 333,
        ""words"": [
            ""taino"",
            ""niota"",
            ""perish"",
            ""reship"",
            ""bailsman"",
            ""balanism"",
            ""ectrogenic"",
            ""geocentric"",
            ""egocentric"",
            ""coerecting"",
            ""kelpie"",
            ""pelike"",
            ""broos"",
            ""boors""
        ],
        ""solution"": [
            [
                ""bailsman"",
                ""balanism""
            ],
            [
                ""boors"",
                ""broos""
            ],
            [
                ""coerecting"",
                ""ectrogenic"",
                ""egocentric"",
                ""geocentric""
            ],
            [
                ""kelpie"",
                ""pelike""
            ],
            [
                ""niota"",
                ""taino""
            ],
            [
                ""perish"",
                ""reship""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
334,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""founder"", ""refound"", ""pignorate"", ""operating"", ""plastomer"", ""temporals""]
","[[""founder"", ""refound""], [""operating"", ""pignorate""], [""plastomer"", ""temporals""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""founder\"", \""refound\"", \""pignorate\"", \""operating\"", \""plastomer\"", \""temporals\""]\n"",
    ""answer"": ""[[\""founder\"", \""refound\""], [\""operating\"", \""pignorate\""], [\""plastomer\"", \""temporals\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 334,
        ""words"": [
            ""founder"",
            ""refound"",
            ""pignorate"",
            ""operating"",
            ""plastomer"",
            ""temporals""
        ],
        ""solution"": [
            [
                ""founder"",
                ""refound""
            ],
            [
                ""operating"",
                ""pignorate""
            ],
            [
                ""plastomer"",
                ""temporals""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
335,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hairstone"", ""hortensia"", ""senhorita"", ""hortesian"", ""unmorbidly"", ""moribundly""]
","[[""hairstone"", ""hortensia"", ""hortesian"", ""senhorita""], [""moribundly"", ""unmorbidly""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hairstone\"", \""hortensia\"", \""senhorita\"", \""hortesian\"", \""unmorbidly\"", \""moribundly\""]\n"",
    ""answer"": ""[[\""hairstone\"", \""hortensia\"", \""hortesian\"", \""senhorita\""], [\""moribundly\"", \""unmorbidly\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 335,
        ""words"": [
            ""hairstone"",
            ""hortensia"",
            ""senhorita"",
            ""hortesian"",
            ""unmorbidly"",
            ""moribundly""
        ],
        ""solution"": [
            [
                ""hairstone"",
                ""hortensia"",
                ""hortesian"",
                ""senhorita""
            ],
            [
                ""moribundly"",
                ""unmorbidly""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
336,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""inport"", ""tropin"", ""wale"", ""alew"", ""weal"", ""diagnose"", ""agonised"", ""brawler"", ""warbler"", ""peculation"", ""unpoetical"", ""appraisable"", ""parablepsia"", ""flirtable"", ""filtrable"", ""renk"", ""kern"", ""syr"", ""yrs""]
","[[""agonised"", ""diagnose""], [""alew"", ""wale"", ""weal""], [""appraisable"", ""parablepsia""], [""brawler"", ""warbler""], [""filtrable"", ""flirtable""], [""inport"", ""tropin""], [""kern"", ""renk""], [""peculation"", ""unpoetical""], [""syr"", ""yrs""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""inport\"", \""tropin\"", \""wale\"", \""alew\"", \""weal\"", \""diagnose\"", \""agonised\"", \""brawler\"", \""warbler\"", \""peculation\"", \""unpoetical\"", \""appraisable\"", \""parablepsia\"", \""flirtable\"", \""filtrable\"", \""renk\"", \""kern\"", \""syr\"", \""yrs\""]\n"",
    ""answer"": ""[[\""agonised\"", \""diagnose\""], [\""alew\"", \""wale\"", \""weal\""], [\""appraisable\"", \""parablepsia\""], [\""brawler\"", \""warbler\""], [\""filtrable\"", \""flirtable\""], [\""inport\"", \""tropin\""], [\""kern\"", \""renk\""], [\""peculation\"", \""unpoetical\""], [\""syr\"", \""yrs\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 336,
        ""words"": [
            ""inport"",
            ""tropin"",
            ""wale"",
            ""alew"",
            ""weal"",
            ""diagnose"",
            ""agonised"",
            ""brawler"",
            ""warbler"",
            ""peculation"",
            ""unpoetical"",
            ""appraisable"",
            ""parablepsia"",
            ""flirtable"",
            ""filtrable"",
            ""renk"",
            ""kern"",
            ""syr"",
            ""yrs""
        ],
        ""solution"": [
            [
                ""agonised"",
                ""diagnose""
            ],
            [
                ""alew"",
                ""wale"",
                ""weal""
            ],
            [
                ""appraisable"",
                ""parablepsia""
            ],
            [
                ""brawler"",
                ""warbler""
            ],
            [
                ""filtrable"",
                ""flirtable""
            ],
            [
                ""inport"",
                ""tropin""
            ],
            [
                ""kern"",
                ""renk""
            ],
            [
                ""peculation"",
                ""unpoetical""
            ],
            [
                ""syr"",
                ""yrs""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
337,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""spiky"", ""pisky"", ""underhorsed"", ""undershored"", ""ectopy"", ""cotype"", ""uncoin"", ""nuncio"", ""pusscat"", ""upcasts"", ""strike"", ""skiter"", ""aesculin"", ""lunacies""]
","[[""aesculin"", ""lunacies""], [""cotype"", ""ectopy""], [""nuncio"", ""uncoin""], [""pisky"", ""spiky""], [""pusscat"", ""upcasts""], [""skiter"", ""strike""], [""underhorsed"", ""undershored""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""spiky\"", \""pisky\"", \""underhorsed\"", \""undershored\"", \""ectopy\"", \""cotype\"", \""uncoin\"", \""nuncio\"", \""pusscat\"", \""upcasts\"", \""strike\"", \""skiter\"", \""aesculin\"", \""lunacies\""]\n"",
    ""answer"": ""[[\""aesculin\"", \""lunacies\""], [\""cotype\"", \""ectopy\""], [\""nuncio\"", \""uncoin\""], [\""pisky\"", \""spiky\""], [\""pusscat\"", \""upcasts\""], [\""skiter\"", \""strike\""], [\""underhorsed\"", \""undershored\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 337,
        ""words"": [
            ""spiky"",
            ""pisky"",
            ""underhorsed"",
            ""undershored"",
            ""ectopy"",
            ""cotype"",
            ""uncoin"",
            ""nuncio"",
            ""pusscat"",
            ""upcasts"",
            ""strike"",
            ""skiter"",
            ""aesculin"",
            ""lunacies""
        ],
        ""solution"": [
            [
                ""aesculin"",
                ""lunacies""
            ],
            [
                ""cotype"",
                ""ectopy""
            ],
            [
                ""nuncio"",
                ""uncoin""
            ],
            [
                ""pisky"",
                ""spiky""
            ],
            [
                ""pusscat"",
                ""upcasts""
            ],
            [
                ""skiter"",
                ""strike""
            ],
            [
                ""underhorsed"",
                ""undershored""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
338,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""relaunder"", ""launderer"", ""revetting"", ""vignetter"", ""unmate"", ""untame"", ""unteam""]
","[[""launderer"", ""relaunder""], [""revetting"", ""vignetter""], [""unmate"", ""untame"", ""unteam""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""relaunder\"", \""launderer\"", \""revetting\"", \""vignetter\"", \""unmate\"", \""untame\"", \""unteam\""]\n"",
    ""answer"": ""[[\""launderer\"", \""relaunder\""], [\""revetting\"", \""vignetter\""], [\""unmate\"", \""untame\"", \""unteam\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 338,
        ""words"": [
            ""relaunder"",
            ""launderer"",
            ""revetting"",
            ""vignetter"",
            ""unmate"",
            ""untame"",
            ""unteam""
        ],
        ""solution"": [
            [
                ""launderer"",
                ""relaunder""
            ],
            [
                ""revetting"",
                ""vignetter""
            ],
            [
                ""unmate"",
                ""untame"",
                ""unteam""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
339,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""siloed"", ""isolde"", ""soiled"", ""gestae"", ""egesta"", ""ebenales"", ""lebanese"", ""kiku"", ""kuki"", ""undeviable"", ""unevadible"", ""nototrema"", ""antrotome""]
","[[""antrotome"", ""nototrema""], [""ebenales"", ""lebanese""], [""egesta"", ""gestae""], [""isolde"", ""siloed"", ""soiled""], [""kiku"", ""kuki""], [""undeviable"", ""unevadible""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""siloed\"", \""isolde\"", \""soiled\"", \""gestae\"", \""egesta\"", \""ebenales\"", \""lebanese\"", \""kiku\"", \""kuki\"", \""undeviable\"", \""unevadible\"", \""nototrema\"", \""antrotome\""]\n"",
    ""answer"": ""[[\""antrotome\"", \""nototrema\""], [\""ebenales\"", \""lebanese\""], [\""egesta\"", \""gestae\""], [\""isolde\"", \""siloed\"", \""soiled\""], [\""kiku\"", \""kuki\""], [\""undeviable\"", \""unevadible\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 339,
        ""words"": [
            ""siloed"",
            ""isolde"",
            ""soiled"",
            ""gestae"",
            ""egesta"",
            ""ebenales"",
            ""lebanese"",
            ""kiku"",
            ""kuki"",
            ""undeviable"",
            ""unevadible"",
            ""nototrema"",
            ""antrotome""
        ],
        ""solution"": [
            [
                ""antrotome"",
                ""nototrema""
            ],
            [
                ""ebenales"",
                ""lebanese""
            ],
            [
                ""egesta"",
                ""gestae""
            ],
            [
                ""isolde"",
                ""siloed"",
                ""soiled""
            ],
            [
                ""kiku"",
                ""kuki""
            ],
            [
                ""undeviable"",
                ""unevadible""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
340,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nicesome"", ""semicone"", ""urinousness"", ""ruinousness"", ""paralipses"", ""paralepsis""]
","[[""nicesome"", ""semicone""], [""paralepsis"", ""paralipses""], [""ruinousness"", ""urinousness""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nicesome\"", \""semicone\"", \""urinousness\"", \""ruinousness\"", \""paralipses\"", \""paralepsis\""]\n"",
    ""answer"": ""[[\""nicesome\"", \""semicone\""], [\""paralepsis\"", \""paralipses\""], [\""ruinousness\"", \""urinousness\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 340,
        ""words"": [
            ""nicesome"",
            ""semicone"",
            ""urinousness"",
            ""ruinousness"",
            ""paralipses"",
            ""paralepsis""
        ],
        ""solution"": [
            [
                ""nicesome"",
                ""semicone""
            ],
            [
                ""paralepsis"",
                ""paralipses""
            ],
            [
                ""ruinousness"",
                ""urinousness""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
341,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""errant"", ""terran"", ""suspect"", ""suscept""]
","[[""errant"", ""terran""], [""suscept"", ""suspect""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""errant\"", \""terran\"", \""suspect\"", \""suscept\""]\n"",
    ""answer"": ""[[\""errant\"", \""terran\""], [\""suscept\"", \""suspect\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 341,
        ""words"": [
            ""errant"",
            ""terran"",
            ""suspect"",
            ""suscept""
        ],
        ""solution"": [
            [
                ""errant"",
                ""terran""
            ],
            [
                ""suscept"",
                ""suspect""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
342,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""trabes"", ""breast"", ""bestar"", ""subnarcotic"", ""obscurantic"", ""segos"", ""gesso"", ""puckrel"", ""plucker"", ""reuphold"", ""upholder"", ""rhematic"", ""thermaic"", ""awarder"", ""reaward""]
","[[""awarder"", ""reaward""], [""bestar"", ""breast"", ""trabes""], [""gesso"", ""segos""], [""obscurantic"", ""subnarcotic""], [""plucker"", ""puckrel""], [""reuphold"", ""upholder""], [""rhematic"", ""thermaic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""trabes\"", \""breast\"", \""bestar\"", \""subnarcotic\"", \""obscurantic\"", \""segos\"", \""gesso\"", \""puckrel\"", \""plucker\"", \""reuphold\"", \""upholder\"", \""rhematic\"", \""thermaic\"", \""awarder\"", \""reaward\""]\n"",
    ""answer"": ""[[\""awarder\"", \""reaward\""], [\""bestar\"", \""breast\"", \""trabes\""], [\""gesso\"", \""segos\""], [\""obscurantic\"", \""subnarcotic\""], [\""plucker\"", \""puckrel\""], [\""reuphold\"", \""upholder\""], [\""rhematic\"", \""thermaic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 342,
        ""words"": [
            ""trabes"",
            ""breast"",
            ""bestar"",
            ""subnarcotic"",
            ""obscurantic"",
            ""segos"",
            ""gesso"",
            ""puckrel"",
            ""plucker"",
            ""reuphold"",
            ""upholder"",
            ""rhematic"",
            ""thermaic"",
            ""awarder"",
            ""reaward""
        ],
        ""solution"": [
            [
                ""awarder"",
                ""reaward""
            ],
            [
                ""bestar"",
                ""breast"",
                ""trabes""
            ],
            [
                ""gesso"",
                ""segos""
            ],
            [
                ""obscurantic"",
                ""subnarcotic""
            ],
            [
                ""plucker"",
                ""puckrel""
            ],
            [
                ""reuphold"",
                ""upholder""
            ],
            [
                ""rhematic"",
                ""thermaic""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
343,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""despin"", ""sniped"", ""spined"", ""cosiness"", ""cessions"", ""talisman"", ""natalism"", ""tailsman"", ""seenu"", ""unsee"", ""habiri"", ""bihari"", ""rhibia""]
","[[""bihari"", ""habiri"", ""rhibia""], [""cessions"", ""cosiness""], [""despin"", ""sniped"", ""spined""], [""natalism"", ""tailsman"", ""talisman""], [""seenu"", ""unsee""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""despin\"", \""sniped\"", \""spined\"", \""cosiness\"", \""cessions\"", \""talisman\"", \""natalism\"", \""tailsman\"", \""seenu\"", \""unsee\"", \""habiri\"", \""bihari\"", \""rhibia\""]\n"",
    ""answer"": ""[[\""bihari\"", \""habiri\"", \""rhibia\""], [\""cessions\"", \""cosiness\""], [\""despin\"", \""sniped\"", \""spined\""], [\""natalism\"", \""tailsman\"", \""talisman\""], [\""seenu\"", \""unsee\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 343,
        ""words"": [
            ""despin"",
            ""sniped"",
            ""spined"",
            ""cosiness"",
            ""cessions"",
            ""talisman"",
            ""natalism"",
            ""tailsman"",
            ""seenu"",
            ""unsee"",
            ""habiri"",
            ""bihari"",
            ""rhibia""
        ],
        ""solution"": [
            [
                ""bihari"",
                ""habiri"",
                ""rhibia""
            ],
            [
                ""cessions"",
                ""cosiness""
            ],
            [
                ""despin"",
                ""sniped"",
                ""spined""
            ],
            [
                ""natalism"",
                ""tailsman"",
                ""talisman""
            ],
            [
                ""seenu"",
                ""unsee""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
344,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""flamiest"", ""femalist"", ""fetalism"", ""collegial"", ""gallicole"", ""beaniest"", ""betaines"", ""mashy"", ""shyam"", ""grasser"", ""regrass"", ""ponica"", ""copain"", ""aponic"", ""emporte"", ""tempore"", ""rundi"", ""diurn""]
","[[""aponic"", ""copain"", ""ponica""], [""beaniest"", ""betaines""], [""collegial"", ""gallicole""], [""diurn"", ""rundi""], [""emporte"", ""tempore""], [""femalist"", ""fetalism"", ""flamiest""], [""grasser"", ""regrass""], [""mashy"", ""shyam""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""flamiest\"", \""femalist\"", \""fetalism\"", \""collegial\"", \""gallicole\"", \""beaniest\"", \""betaines\"", \""mashy\"", \""shyam\"", \""grasser\"", \""regrass\"", \""ponica\"", \""copain\"", \""aponic\"", \""emporte\"", \""tempore\"", \""rundi\"", \""diurn\""]\n"",
    ""answer"": ""[[\""aponic\"", \""copain\"", \""ponica\""], [\""beaniest\"", \""betaines\""], [\""collegial\"", \""gallicole\""], [\""diurn\"", \""rundi\""], [\""emporte\"", \""tempore\""], [\""femalist\"", \""fetalism\"", \""flamiest\""], [\""grasser\"", \""regrass\""], [\""mashy\"", \""shyam\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 344,
        ""words"": [
            ""flamiest"",
            ""femalist"",
            ""fetalism"",
            ""collegial"",
            ""gallicole"",
            ""beaniest"",
            ""betaines"",
            ""mashy"",
            ""shyam"",
            ""grasser"",
            ""regrass"",
            ""ponica"",
            ""copain"",
            ""aponic"",
            ""emporte"",
            ""tempore"",
            ""rundi"",
            ""diurn""
        ],
        ""solution"": [
            [
                ""aponic"",
                ""copain"",
                ""ponica""
            ],
            [
                ""beaniest"",
                ""betaines""
            ],
            [
                ""collegial"",
                ""gallicole""
            ],
            [
                ""diurn"",
                ""rundi""
            ],
            [
                ""emporte"",
                ""tempore""
            ],
            [
                ""femalist"",
                ""fetalism"",
                ""flamiest""
            ],
            [
                ""grasser"",
                ""regrass""
            ],
            [
                ""mashy"",
                ""shyam""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
345,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""guerinet"", ""geniture"", ""interacra"", ""antiracer"", ""tarriance"", ""oat"", ""tao"", ""toa"", ""cenchrus"", ""crunches"", ""neat"", ""aten"", ""taen"", ""nate"", ""tean""]
","[[""antiracer"", ""interacra"", ""tarriance""], [""aten"", ""nate"", ""neat"", ""taen"", ""tean""], [""cenchrus"", ""crunches""], [""geniture"", ""guerinet""], [""oat"", ""tao"", ""toa""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""guerinet\"", \""geniture\"", \""interacra\"", \""antiracer\"", \""tarriance\"", \""oat\"", \""tao\"", \""toa\"", \""cenchrus\"", \""crunches\"", \""neat\"", \""aten\"", \""taen\"", \""nate\"", \""tean\""]\n"",
    ""answer"": ""[[\""antiracer\"", \""interacra\"", \""tarriance\""], [\""aten\"", \""nate\"", \""neat\"", \""taen\"", \""tean\""], [\""cenchrus\"", \""crunches\""], [\""geniture\"", \""guerinet\""], [\""oat\"", \""tao\"", \""toa\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 345,
        ""words"": [
            ""guerinet"",
            ""geniture"",
            ""interacra"",
            ""antiracer"",
            ""tarriance"",
            ""oat"",
            ""tao"",
            ""toa"",
            ""cenchrus"",
            ""crunches"",
            ""neat"",
            ""aten"",
            ""taen"",
            ""nate"",
            ""tean""
        ],
        ""solution"": [
            [
                ""antiracer"",
                ""interacra"",
                ""tarriance""
            ],
            [
                ""aten"",
                ""nate"",
                ""neat"",
                ""taen"",
                ""tean""
            ],
            [
                ""cenchrus"",
                ""crunches""
            ],
            [
                ""geniture"",
                ""guerinet""
            ],
            [
                ""oat"",
                ""tao"",
                ""toa""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
346,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tlaco"", ""colat"", ""lacto"", ""octal"", ""nightman"", ""thingman""]
","[[""colat"", ""lacto"", ""octal"", ""tlaco""], [""nightman"", ""thingman""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tlaco\"", \""colat\"", \""lacto\"", \""octal\"", \""nightman\"", \""thingman\""]\n"",
    ""answer"": ""[[\""colat\"", \""lacto\"", \""octal\"", \""tlaco\""], [\""nightman\"", \""thingman\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 346,
        ""words"": [
            ""tlaco"",
            ""colat"",
            ""lacto"",
            ""octal"",
            ""nightman"",
            ""thingman""
        ],
        ""solution"": [
            [
                ""colat"",
                ""lacto"",
                ""octal"",
                ""tlaco""
            ],
            [
                ""nightman"",
                ""thingman""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
347,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""catabolin"", ""botanical"", ""washed"", ""shawed"", ""hawsed""]
","[[""botanical"", ""catabolin""], [""hawsed"", ""shawed"", ""washed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""catabolin\"", \""botanical\"", \""washed\"", \""shawed\"", \""hawsed\""]\n"",
    ""answer"": ""[[\""botanical\"", \""catabolin\""], [\""hawsed\"", \""shawed\"", \""washed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 347,
        ""words"": [
            ""catabolin"",
            ""botanical"",
            ""washed"",
            ""shawed"",
            ""hawsed""
        ],
        ""solution"": [
            [
                ""botanical"",
                ""catabolin""
            ],
            [
                ""hawsed"",
                ""shawed"",
                ""washed""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
348,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""custos"", ""scouts"", ""spectatorial"", ""poetastrical"", ""iodin"", ""idion"", ""duple"", ""puled""]
","[[""custos"", ""scouts""], [""duple"", ""puled""], [""idion"", ""iodin""], [""poetastrical"", ""spectatorial""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""custos\"", \""scouts\"", \""spectatorial\"", \""poetastrical\"", \""iodin\"", \""idion\"", \""duple\"", \""puled\""]\n"",
    ""answer"": ""[[\""custos\"", \""scouts\""], [\""duple\"", \""puled\""], [\""idion\"", \""iodin\""], [\""poetastrical\"", \""spectatorial\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 348,
        ""words"": [
            ""custos"",
            ""scouts"",
            ""spectatorial"",
            ""poetastrical"",
            ""iodin"",
            ""idion"",
            ""duple"",
            ""puled""
        ],
        ""solution"": [
            [
                ""custos"",
                ""scouts""
            ],
            [
                ""duple"",
                ""puled""
            ],
            [
                ""idion"",
                ""iodin""
            ],
            [
                ""poetastrical"",
                ""spectatorial""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
349,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""feminal"", ""inflame"", ""nixed"", ""index"", ""adrenotropic"", ""incorporated"", ""brookiest"", ""brookites"", ""thirsting"", ""trithings"", ""buscarle"", ""arbuscle"", ""cnemial"", ""melanic"", ""macho"", ""mocha"", ""curacies"", ""caesuric""]
","[[""adrenotropic"", ""incorporated""], [""arbuscle"", ""buscarle""], [""brookiest"", ""brookites""], [""caesuric"", ""curacies""], [""cnemial"", ""melanic""], [""feminal"", ""inflame""], [""index"", ""nixed""], [""macho"", ""mocha""], [""thirsting"", ""trithings""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""feminal\"", \""inflame\"", \""nixed\"", \""index\"", \""adrenotropic\"", \""incorporated\"", \""brookiest\"", \""brookites\"", \""thirsting\"", \""trithings\"", \""buscarle\"", \""arbuscle\"", \""cnemial\"", \""melanic\"", \""macho\"", \""mocha\"", \""curacies\"", \""caesuric\""]\n"",
    ""answer"": ""[[\""adrenotropic\"", \""incorporated\""], [\""arbuscle\"", \""buscarle\""], [\""brookiest\"", \""brookites\""], [\""caesuric\"", \""curacies\""], [\""cnemial\"", \""melanic\""], [\""feminal\"", \""inflame\""], [\""index\"", \""nixed\""], [\""macho\"", \""mocha\""], [\""thirsting\"", \""trithings\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 349,
        ""words"": [
            ""feminal"",
            ""inflame"",
            ""nixed"",
            ""index"",
            ""adrenotropic"",
            ""incorporated"",
            ""brookiest"",
            ""brookites"",
            ""thirsting"",
            ""trithings"",
            ""buscarle"",
            ""arbuscle"",
            ""cnemial"",
            ""melanic"",
            ""macho"",
            ""mocha"",
            ""curacies"",
            ""caesuric""
        ],
        ""solution"": [
            [
                ""adrenotropic"",
                ""incorporated""
            ],
            [
                ""arbuscle"",
                ""buscarle""
            ],
            [
                ""brookiest"",
                ""brookites""
            ],
            [
                ""caesuric"",
                ""curacies""
            ],
            [
                ""cnemial"",
                ""melanic""
            ],
            [
                ""feminal"",
                ""inflame""
            ],
            [
                ""index"",
                ""nixed""
            ],
            [
                ""macho"",
                ""mocha""
            ],
            [
                ""thirsting"",
                ""trithings""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
350,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""choli"", ""lochi"", ""choil"", ""olchi"", ""auricle"", ""ciruela""]
","[[""auricle"", ""ciruela""], [""choil"", ""choli"", ""lochi"", ""olchi""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""choli\"", \""lochi\"", \""choil\"", \""olchi\"", \""auricle\"", \""ciruela\""]\n"",
    ""answer"": ""[[\""auricle\"", \""ciruela\""], [\""choil\"", \""choli\"", \""lochi\"", \""olchi\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 350,
        ""words"": [
            ""choli"",
            ""lochi"",
            ""choil"",
            ""olchi"",
            ""auricle"",
            ""ciruela""
        ],
        ""solution"": [
            [
                ""auricle"",
                ""ciruela""
            ],
            [
                ""choil"",
                ""choli"",
                ""lochi"",
                ""olchi""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
351,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""smoko"", ""smook"", ""nallah"", ""hallan"", ""purda"", ""drupa"", ""buba"", ""babu"", ""cloamer"", ""caromel"", ""flew"", ""welf"", ""arecales"", ""lascaree"", ""slipstone"", ""pointless"", ""lotuses"", ""tousles"", ""solutes"", ""eviscerated"", ""deviscerate""]
","[[""arecales"", ""lascaree""], [""babu"", ""buba""], [""caromel"", ""cloamer""], [""deviscerate"", ""eviscerated""], [""drupa"", ""purda""], [""flew"", ""welf""], [""hallan"", ""nallah""], [""lotuses"", ""solutes"", ""tousles""], [""pointless"", ""slipstone""], [""smoko"", ""smook""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""smoko\"", \""smook\"", \""nallah\"", \""hallan\"", \""purda\"", \""drupa\"", \""buba\"", \""babu\"", \""cloamer\"", \""caromel\"", \""flew\"", \""welf\"", \""arecales\"", \""lascaree\"", \""slipstone\"", \""pointless\"", \""lotuses\"", \""tousles\"", \""solutes\"", \""eviscerated\"", \""deviscerate\""]\n"",
    ""answer"": ""[[\""arecales\"", \""lascaree\""], [\""babu\"", \""buba\""], [\""caromel\"", \""cloamer\""], [\""deviscerate\"", \""eviscerated\""], [\""drupa\"", \""purda\""], [\""flew\"", \""welf\""], [\""hallan\"", \""nallah\""], [\""lotuses\"", \""solutes\"", \""tousles\""], [\""pointless\"", \""slipstone\""], [\""smoko\"", \""smook\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 351,
        ""words"": [
            ""smoko"",
            ""smook"",
            ""nallah"",
            ""hallan"",
            ""purda"",
            ""drupa"",
            ""buba"",
            ""babu"",
            ""cloamer"",
            ""caromel"",
            ""flew"",
            ""welf"",
            ""arecales"",
            ""lascaree"",
            ""slipstone"",
            ""pointless"",
            ""lotuses"",
            ""tousles"",
            ""solutes"",
            ""eviscerated"",
            ""deviscerate""
        ],
        ""solution"": [
            [
                ""arecales"",
                ""lascaree""
            ],
            [
                ""babu"",
                ""buba""
            ],
            [
                ""caromel"",
                ""cloamer""
            ],
            [
                ""deviscerate"",
                ""eviscerated""
            ],
            [
                ""drupa"",
                ""purda""
            ],
            [
                ""flew"",
                ""welf""
            ],
            [
                ""hallan"",
                ""nallah""
            ],
            [
                ""lotuses"",
                ""solutes"",
                ""tousles""
            ],
            [
                ""pointless"",
                ""slipstone""
            ],
            [
                ""smoko"",
                ""smook""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
352,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cicala"", ""alcaic"", ""prenodal"", ""polander"", ""whale"", ""halwe"", ""wheal"", ""salpa"", ""palas"", ""terpine"", ""petrine"", ""percoidea"", ""adipocere"", ""liveable"", ""leviable"", ""diestrus"", ""studiers""]
","[[""adipocere"", ""percoidea""], [""alcaic"", ""cicala""], [""diestrus"", ""studiers""], [""halwe"", ""whale"", ""wheal""], [""leviable"", ""liveable""], [""palas"", ""salpa""], [""petrine"", ""terpine""], [""polander"", ""prenodal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cicala\"", \""alcaic\"", \""prenodal\"", \""polander\"", \""whale\"", \""halwe\"", \""wheal\"", \""salpa\"", \""palas\"", \""terpine\"", \""petrine\"", \""percoidea\"", \""adipocere\"", \""liveable\"", \""leviable\"", \""diestrus\"", \""studiers\""]\n"",
    ""answer"": ""[[\""adipocere\"", \""percoidea\""], [\""alcaic\"", \""cicala\""], [\""diestrus\"", \""studiers\""], [\""halwe\"", \""whale\"", \""wheal\""], [\""leviable\"", \""liveable\""], [\""palas\"", \""salpa\""], [\""petrine\"", \""terpine\""], [\""polander\"", \""prenodal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 352,
        ""words"": [
            ""cicala"",
            ""alcaic"",
            ""prenodal"",
            ""polander"",
            ""whale"",
            ""halwe"",
            ""wheal"",
            ""salpa"",
            ""palas"",
            ""terpine"",
            ""petrine"",
            ""percoidea"",
            ""adipocere"",
            ""liveable"",
            ""leviable"",
            ""diestrus"",
            ""studiers""
        ],
        ""solution"": [
            [
                ""adipocere"",
                ""percoidea""
            ],
            [
                ""alcaic"",
                ""cicala""
            ],
            [
                ""diestrus"",
                ""studiers""
            ],
            [
                ""halwe"",
                ""whale"",
                ""wheal""
            ],
            [
                ""leviable"",
                ""liveable""
            ],
            [
                ""palas"",
                ""salpa""
            ],
            [
                ""petrine"",
                ""terpine""
            ],
            [
                ""polander"",
                ""prenodal""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
353,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""retorn"", ""terron"", ""troner"", ""treron"", ""garget"", ""tagger"", ""dorsosacral"", ""sacrodorsal""]
","[[""dorsosacral"", ""sacrodorsal""], [""garget"", ""tagger""], [""retorn"", ""terron"", ""treron"", ""troner""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""retorn\"", \""terron\"", \""troner\"", \""treron\"", \""garget\"", \""tagger\"", \""dorsosacral\"", \""sacrodorsal\""]\n"",
    ""answer"": ""[[\""dorsosacral\"", \""sacrodorsal\""], [\""garget\"", \""tagger\""], [\""retorn\"", \""terron\"", \""treron\"", \""troner\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 353,
        ""words"": [
            ""retorn"",
            ""terron"",
            ""troner"",
            ""treron"",
            ""garget"",
            ""tagger"",
            ""dorsosacral"",
            ""sacrodorsal""
        ],
        ""solution"": [
            [
                ""dorsosacral"",
                ""sacrodorsal""
            ],
            [
                ""garget"",
                ""tagger""
            ],
            [
                ""retorn"",
                ""terron"",
                ""treron"",
                ""troner""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
354,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""molts"", ""smolt"", ""drollest"", ""strolled"", ""reharvest"", ""harvester"", ""epeiric"", ""epicier"", ""sciential"", ""elasticin"", ""alcogel"", ""collage""]
","[[""alcogel"", ""collage""], [""drollest"", ""strolled""], [""elasticin"", ""sciential""], [""epeiric"", ""epicier""], [""harvester"", ""reharvest""], [""molts"", ""smolt""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""molts\"", \""smolt\"", \""drollest\"", \""strolled\"", \""reharvest\"", \""harvester\"", \""epeiric\"", \""epicier\"", \""sciential\"", \""elasticin\"", \""alcogel\"", \""collage\""]\n"",
    ""answer"": ""[[\""alcogel\"", \""collage\""], [\""drollest\"", \""strolled\""], [\""elasticin\"", \""sciential\""], [\""epeiric\"", \""epicier\""], [\""harvester\"", \""reharvest\""], [\""molts\"", \""smolt\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 354,
        ""words"": [
            ""molts"",
            ""smolt"",
            ""drollest"",
            ""strolled"",
            ""reharvest"",
            ""harvester"",
            ""epeiric"",
            ""epicier"",
            ""sciential"",
            ""elasticin"",
            ""alcogel"",
            ""collage""
        ],
        ""solution"": [
            [
                ""alcogel"",
                ""collage""
            ],
            [
                ""drollest"",
                ""strolled""
            ],
            [
                ""elasticin"",
                ""sciential""
            ],
            [
                ""epeiric"",
                ""epicier""
            ],
            [
                ""harvester"",
                ""reharvest""
            ],
            [
                ""molts"",
                ""smolt""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
355,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""brunellia"", ""unliberal"", ""aho"", ""hao"", ""portia"", ""tropia"", ""tapiro"", ""blaseness"", ""sableness"", ""presenter"", ""represent"", ""repenters"", ""cairny"", ""riancy"", ""bomber"", ""mobber"", ""diane"", ""endia"", ""idean"", ""dichromat"", ""chromatid""]
","[[""aho"", ""hao""], [""blaseness"", ""sableness""], [""bomber"", ""mobber""], [""brunellia"", ""unliberal""], [""cairny"", ""riancy""], [""chromatid"", ""dichromat""], [""diane"", ""endia"", ""idean""], [""portia"", ""tapiro"", ""tropia""], [""presenter"", ""repenters"", ""represent""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""brunellia\"", \""unliberal\"", \""aho\"", \""hao\"", \""portia\"", \""tropia\"", \""tapiro\"", \""blaseness\"", \""sableness\"", \""presenter\"", \""represent\"", \""repenters\"", \""cairny\"", \""riancy\"", \""bomber\"", \""mobber\"", \""diane\"", \""endia\"", \""idean\"", \""dichromat\"", \""chromatid\""]\n"",
    ""answer"": ""[[\""aho\"", \""hao\""], [\""blaseness\"", \""sableness\""], [\""bomber\"", \""mobber\""], [\""brunellia\"", \""unliberal\""], [\""cairny\"", \""riancy\""], [\""chromatid\"", \""dichromat\""], [\""diane\"", \""endia\"", \""idean\""], [\""portia\"", \""tapiro\"", \""tropia\""], [\""presenter\"", \""repenters\"", \""represent\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 355,
        ""words"": [
            ""brunellia"",
            ""unliberal"",
            ""aho"",
            ""hao"",
            ""portia"",
            ""tropia"",
            ""tapiro"",
            ""blaseness"",
            ""sableness"",
            ""presenter"",
            ""represent"",
            ""repenters"",
            ""cairny"",
            ""riancy"",
            ""bomber"",
            ""mobber"",
            ""diane"",
            ""endia"",
            ""idean"",
            ""dichromat"",
            ""chromatid""
        ],
        ""solution"": [
            [
                ""aho"",
                ""hao""
            ],
            [
                ""blaseness"",
                ""sableness""
            ],
            [
                ""bomber"",
                ""mobber""
            ],
            [
                ""brunellia"",
                ""unliberal""
            ],
            [
                ""cairny"",
                ""riancy""
            ],
            [
                ""chromatid"",
                ""dichromat""
            ],
            [
                ""diane"",
                ""endia"",
                ""idean""
            ],
            [
                ""portia"",
                ""tapiro"",
                ""tropia""
            ],
            [
                ""presenter"",
                ""repenters"",
                ""represent""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
356,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""haired"", ""dehair"", ""predicts"", ""descript"", ""scripted"", ""mystes"", ""system"", ""reluctancy"", ""tralucency"", ""whales"", ""whasle"", ""wheals"", ""inbits"", ""binits"", ""microphotographic"", ""photomicrographic""]
","[[""binits"", ""inbits""], [""dehair"", ""haired""], [""descript"", ""predicts"", ""scripted""], [""microphotographic"", ""photomicrographic""], [""mystes"", ""system""], [""reluctancy"", ""tralucency""], [""whales"", ""whasle"", ""wheals""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""haired\"", \""dehair\"", \""predicts\"", \""descript\"", \""scripted\"", \""mystes\"", \""system\"", \""reluctancy\"", \""tralucency\"", \""whales\"", \""whasle\"", \""wheals\"", \""inbits\"", \""binits\"", \""microphotographic\"", \""photomicrographic\""]\n"",
    ""answer"": ""[[\""binits\"", \""inbits\""], [\""dehair\"", \""haired\""], [\""descript\"", \""predicts\"", \""scripted\""], [\""microphotographic\"", \""photomicrographic\""], [\""mystes\"", \""system\""], [\""reluctancy\"", \""tralucency\""], [\""whales\"", \""whasle\"", \""wheals\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 356,
        ""words"": [
            ""haired"",
            ""dehair"",
            ""predicts"",
            ""descript"",
            ""scripted"",
            ""mystes"",
            ""system"",
            ""reluctancy"",
            ""tralucency"",
            ""whales"",
            ""whasle"",
            ""wheals"",
            ""inbits"",
            ""binits"",
            ""microphotographic"",
            ""photomicrographic""
        ],
        ""solution"": [
            [
                ""binits"",
                ""inbits""
            ],
            [
                ""dehair"",
                ""haired""
            ],
            [
                ""descript"",
                ""predicts"",
                ""scripted""
            ],
            [
                ""microphotographic"",
                ""photomicrographic""
            ],
            [
                ""mystes"",
                ""system""
            ],
            [
                ""reluctancy"",
                ""tralucency""
            ],
            [
                ""whales"",
                ""whasle"",
                ""wheals""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
357,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""incgrporate"", ""procreating"", ""prerealization"", ""proletarianize"", ""egocentrically"", ""geocentrically"", ""raphe"", ""phare"", ""hepar"", ""cavalries"", ""calvaries"", ""cavaliers"", ""nonanaemic"", ""cenomanian"", ""freend"", ""ferned"", ""fender""]
","[[""calvaries"", ""cavaliers"", ""cavalries""], [""cenomanian"", ""nonanaemic""], [""egocentrically"", ""geocentrically""], [""fender"", ""ferned"", ""freend""], [""hepar"", ""phare"", ""raphe""], [""incgrporate"", ""procreating""], [""prerealization"", ""proletarianize""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""incgrporate\"", \""procreating\"", \""prerealization\"", \""proletarianize\"", \""egocentrically\"", \""geocentrically\"", \""raphe\"", \""phare\"", \""hepar\"", \""cavalries\"", \""calvaries\"", \""cavaliers\"", \""nonanaemic\"", \""cenomanian\"", \""freend\"", \""ferned\"", \""fender\""]\n"",
    ""answer"": ""[[\""calvaries\"", \""cavaliers\"", \""cavalries\""], [\""cenomanian\"", \""nonanaemic\""], [\""egocentrically\"", \""geocentrically\""], [\""fender\"", \""ferned\"", \""freend\""], [\""hepar\"", \""phare\"", \""raphe\""], [\""incgrporate\"", \""procreating\""], [\""prerealization\"", \""proletarianize\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 357,
        ""words"": [
            ""incgrporate"",
            ""procreating"",
            ""prerealization"",
            ""proletarianize"",
            ""egocentrically"",
            ""geocentrically"",
            ""raphe"",
            ""phare"",
            ""hepar"",
            ""cavalries"",
            ""calvaries"",
            ""cavaliers"",
            ""nonanaemic"",
            ""cenomanian"",
            ""freend"",
            ""ferned"",
            ""fender""
        ],
        ""solution"": [
            [
                ""calvaries"",
                ""cavaliers"",
                ""cavalries""
            ],
            [
                ""cenomanian"",
                ""nonanaemic""
            ],
            [
                ""egocentrically"",
                ""geocentrically""
            ],
            [
                ""fender"",
                ""ferned"",
                ""freend""
            ],
            [
                ""hepar"",
                ""phare"",
                ""raphe""
            ],
            [
                ""incgrporate"",
                ""procreating""
            ],
            [
                ""prerealization"",
                ""proletarianize""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
358,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""girds"", ""grids"", ""washed"", ""shawed"", ""hawsed"", ""lardoon"", ""orlando"", ""rolando""]
","[[""girds"", ""grids""], [""hawsed"", ""shawed"", ""washed""], [""lardoon"", ""orlando"", ""rolando""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""girds\"", \""grids\"", \""washed\"", \""shawed\"", \""hawsed\"", \""lardoon\"", \""orlando\"", \""rolando\""]\n"",
    ""answer"": ""[[\""girds\"", \""grids\""], [\""hawsed\"", \""shawed\"", \""washed\""], [\""lardoon\"", \""orlando\"", \""rolando\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 358,
        ""words"": [
            ""girds"",
            ""grids"",
            ""washed"",
            ""shawed"",
            ""hawsed"",
            ""lardoon"",
            ""orlando"",
            ""rolando""
        ],
        ""solution"": [
            [
                ""girds"",
                ""grids""
            ],
            [
                ""hawsed"",
                ""shawed"",
                ""washed""
            ],
            [
                ""lardoon"",
                ""orlando"",
                ""rolando""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
359,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bella"", ""label"", ""oner"", ""nore"", ""sels"", ""less"", ""ceil"", ""lice"", ""taming"", ""mating"", ""undefiled"", ""unfielded"", ""baldy"", ""badly"", ""blady"", ""rebates"", ""bestare"", ""berates"", ""beaters"", ""witess"", ""wisest""]
","[[""badly"", ""baldy"", ""blady""], [""beaters"", ""berates"", ""bestare"", ""rebates""], [""bella"", ""label""], [""ceil"", ""lice""], [""less"", ""sels""], [""mating"", ""taming""], [""nore"", ""oner""], [""undefiled"", ""unfielded""], [""wisest"", ""witess""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bella\"", \""label\"", \""oner\"", \""nore\"", \""sels\"", \""less\"", \""ceil\"", \""lice\"", \""taming\"", \""mating\"", \""undefiled\"", \""unfielded\"", \""baldy\"", \""badly\"", \""blady\"", \""rebates\"", \""bestare\"", \""berates\"", \""beaters\"", \""witess\"", \""wisest\""]\n"",
    ""answer"": ""[[\""badly\"", \""baldy\"", \""blady\""], [\""beaters\"", \""berates\"", \""bestare\"", \""rebates\""], [\""bella\"", \""label\""], [\""ceil\"", \""lice\""], [\""less\"", \""sels\""], [\""mating\"", \""taming\""], [\""nore\"", \""oner\""], [\""undefiled\"", \""unfielded\""], [\""wisest\"", \""witess\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 359,
        ""words"": [
            ""bella"",
            ""label"",
            ""oner"",
            ""nore"",
            ""sels"",
            ""less"",
            ""ceil"",
            ""lice"",
            ""taming"",
            ""mating"",
            ""undefiled"",
            ""unfielded"",
            ""baldy"",
            ""badly"",
            ""blady"",
            ""rebates"",
            ""bestare"",
            ""berates"",
            ""beaters"",
            ""witess"",
            ""wisest""
        ],
        ""solution"": [
            [
                ""badly"",
                ""baldy"",
                ""blady""
            ],
            [
                ""beaters"",
                ""berates"",
                ""bestare"",
                ""rebates""
            ],
            [
                ""bella"",
                ""label""
            ],
            [
                ""ceil"",
                ""lice""
            ],
            [
                ""less"",
                ""sels""
            ],
            [
                ""mating"",
                ""taming""
            ],
            [
                ""nore"",
                ""oner""
            ],
            [
                ""undefiled"",
                ""unfielded""
            ],
            [
                ""wisest"",
                ""witess""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
360,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lively"", ""evilly"", ""vilely"", ""kent"", ""knet"", ""putridly"", ""turpidly"", ""themis"", ""theism"", ""sailoring"", ""signorial"", ""originals"", ""truculent"", ""unclutter"", ""reamed"", ""remade"", ""meader"", ""buccocervical"", ""cervicobuccal"", ""refer"", ""rfree"", ""freer""]
","[[""buccocervical"", ""cervicobuccal""], [""evilly"", ""lively"", ""vilely""], [""freer"", ""refer"", ""rfree""], [""kent"", ""knet""], [""meader"", ""reamed"", ""remade""], [""originals"", ""sailoring"", ""signorial""], [""putridly"", ""turpidly""], [""theism"", ""themis""], [""truculent"", ""unclutter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lively\"", \""evilly\"", \""vilely\"", \""kent\"", \""knet\"", \""putridly\"", \""turpidly\"", \""themis\"", \""theism\"", \""sailoring\"", \""signorial\"", \""originals\"", \""truculent\"", \""unclutter\"", \""reamed\"", \""remade\"", \""meader\"", \""buccocervical\"", \""cervicobuccal\"", \""refer\"", \""rfree\"", \""freer\""]\n"",
    ""answer"": ""[[\""buccocervical\"", \""cervicobuccal\""], [\""evilly\"", \""lively\"", \""vilely\""], [\""freer\"", \""refer\"", \""rfree\""], [\""kent\"", \""knet\""], [\""meader\"", \""reamed\"", \""remade\""], [\""originals\"", \""sailoring\"", \""signorial\""], [\""putridly\"", \""turpidly\""], [\""theism\"", \""themis\""], [\""truculent\"", \""unclutter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 360,
        ""words"": [
            ""lively"",
            ""evilly"",
            ""vilely"",
            ""kent"",
            ""knet"",
            ""putridly"",
            ""turpidly"",
            ""themis"",
            ""theism"",
            ""sailoring"",
            ""signorial"",
            ""originals"",
            ""truculent"",
            ""unclutter"",
            ""reamed"",
            ""remade"",
            ""meader"",
            ""buccocervical"",
            ""cervicobuccal"",
            ""refer"",
            ""rfree"",
            ""freer""
        ],
        ""solution"": [
            [
                ""buccocervical"",
                ""cervicobuccal""
            ],
            [
                ""evilly"",
                ""lively"",
                ""vilely""
            ],
            [
                ""freer"",
                ""refer"",
                ""rfree""
            ],
            [
                ""kent"",
                ""knet""
            ],
            [
                ""meader"",
                ""reamed"",
                ""remade""
            ],
            [
                ""originals"",
                ""sailoring"",
                ""signorial""
            ],
            [
                ""putridly"",
                ""turpidly""
            ],
            [
                ""theism"",
                ""themis""
            ],
            [
                ""truculent"",
                ""unclutter""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
361,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""coutures"", ""outcurse"", ""curteous"", ""belay"", ""eably"", ""unordered"", ""underdoer"", ""tabi"", ""bait"", ""abit"", ""pasts"", ""spats"", ""peyotes"", ""eyespot"", ""euthanasic"", ""eustachian""]
","[[""abit"", ""bait"", ""tabi""], [""belay"", ""eably""], [""coutures"", ""curteous"", ""outcurse""], [""eustachian"", ""euthanasic""], [""eyespot"", ""peyotes""], [""pasts"", ""spats""], [""underdoer"", ""unordered""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""coutures\"", \""outcurse\"", \""curteous\"", \""belay\"", \""eably\"", \""unordered\"", \""underdoer\"", \""tabi\"", \""bait\"", \""abit\"", \""pasts\"", \""spats\"", \""peyotes\"", \""eyespot\"", \""euthanasic\"", \""eustachian\""]\n"",
    ""answer"": ""[[\""abit\"", \""bait\"", \""tabi\""], [\""belay\"", \""eably\""], [\""coutures\"", \""curteous\"", \""outcurse\""], [\""eustachian\"", \""euthanasic\""], [\""eyespot\"", \""peyotes\""], [\""pasts\"", \""spats\""], [\""underdoer\"", \""unordered\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 361,
        ""words"": [
            ""coutures"",
            ""outcurse"",
            ""curteous"",
            ""belay"",
            ""eably"",
            ""unordered"",
            ""underdoer"",
            ""tabi"",
            ""bait"",
            ""abit"",
            ""pasts"",
            ""spats"",
            ""peyotes"",
            ""eyespot"",
            ""euthanasic"",
            ""eustachian""
        ],
        ""solution"": [
            [
                ""abit"",
                ""bait"",
                ""tabi""
            ],
            [
                ""belay"",
                ""eably""
            ],
            [
                ""coutures"",
                ""curteous"",
                ""outcurse""
            ],
            [
                ""eustachian"",
                ""euthanasic""
            ],
            [
                ""eyespot"",
                ""peyotes""
            ],
            [
                ""pasts"",
                ""spats""
            ],
            [
                ""underdoer"",
                ""unordered""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
362,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ecartes"", ""creates"", ""delete"", ""teedle"", ""rodingite"", ""negritoid"", ""erotical"", ""loricate"", ""gaolage"", ""goalage""]
","[[""creates"", ""ecartes""], [""delete"", ""teedle""], [""erotical"", ""loricate""], [""gaolage"", ""goalage""], [""negritoid"", ""rodingite""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ecartes\"", \""creates\"", \""delete\"", \""teedle\"", \""rodingite\"", \""negritoid\"", \""erotical\"", \""loricate\"", \""gaolage\"", \""goalage\""]\n"",
    ""answer"": ""[[\""creates\"", \""ecartes\""], [\""delete\"", \""teedle\""], [\""erotical\"", \""loricate\""], [\""gaolage\"", \""goalage\""], [\""negritoid\"", \""rodingite\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 362,
        ""words"": [
            ""ecartes"",
            ""creates"",
            ""delete"",
            ""teedle"",
            ""rodingite"",
            ""negritoid"",
            ""erotical"",
            ""loricate"",
            ""gaolage"",
            ""goalage""
        ],
        ""solution"": [
            [
                ""creates"",
                ""ecartes""
            ],
            [
                ""delete"",
                ""teedle""
            ],
            [
                ""erotical"",
                ""loricate""
            ],
            [
                ""gaolage"",
                ""goalage""
            ],
            [
                ""negritoid"",
                ""rodingite""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
363,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""starred"", ""darters"", ""acutest"", ""scutate"", ""phasis"", ""spahis"", ""aspish"", ""viduine"", ""univied"", ""unmoralistic"", ""matriclinous"", ""okayed"", ""kayoed"", ""lask"", ""skal""]
","[[""acutest"", ""scutate""], [""aspish"", ""phasis"", ""spahis""], [""darters"", ""starred""], [""kayoed"", ""okayed""], [""lask"", ""skal""], [""matriclinous"", ""unmoralistic""], [""univied"", ""viduine""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""starred\"", \""darters\"", \""acutest\"", \""scutate\"", \""phasis\"", \""spahis\"", \""aspish\"", \""viduine\"", \""univied\"", \""unmoralistic\"", \""matriclinous\"", \""okayed\"", \""kayoed\"", \""lask\"", \""skal\""]\n"",
    ""answer"": ""[[\""acutest\"", \""scutate\""], [\""aspish\"", \""phasis\"", \""spahis\""], [\""darters\"", \""starred\""], [\""kayoed\"", \""okayed\""], [\""lask\"", \""skal\""], [\""matriclinous\"", \""unmoralistic\""], [\""univied\"", \""viduine\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 363,
        ""words"": [
            ""starred"",
            ""darters"",
            ""acutest"",
            ""scutate"",
            ""phasis"",
            ""spahis"",
            ""aspish"",
            ""viduine"",
            ""univied"",
            ""unmoralistic"",
            ""matriclinous"",
            ""okayed"",
            ""kayoed"",
            ""lask"",
            ""skal""
        ],
        ""solution"": [
            [
                ""acutest"",
                ""scutate""
            ],
            [
                ""aspish"",
                ""phasis"",
                ""spahis""
            ],
            [
                ""darters"",
                ""starred""
            ],
            [
                ""kayoed"",
                ""okayed""
            ],
            [
                ""lask"",
                ""skal""
            ],
            [
                ""matriclinous"",
                ""unmoralistic""
            ],
            [
                ""univied"",
                ""viduine""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
364,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""monocleid"", ""clinodome"", ""melodicon"", ""maenadism"", ""mandaeism""]
","[[""clinodome"", ""melodicon"", ""monocleid""], [""maenadism"", ""mandaeism""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""monocleid\"", \""clinodome\"", \""melodicon\"", \""maenadism\"", \""mandaeism\""]\n"",
    ""answer"": ""[[\""clinodome\"", \""melodicon\"", \""monocleid\""], [\""maenadism\"", \""mandaeism\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 364,
        ""words"": [
            ""monocleid"",
            ""clinodome"",
            ""melodicon"",
            ""maenadism"",
            ""mandaeism""
        ],
        ""solution"": [
            [
                ""clinodome"",
                ""melodicon"",
                ""monocleid""
            ],
            [
                ""maenadism"",
                ""mandaeism""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
365,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""neognathous"", ""anthogenous"", ""mordant"", ""dormant"", ""weer"", ""were""]
","[[""anthogenous"", ""neognathous""], [""dormant"", ""mordant""], [""weer"", ""were""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""neognathous\"", \""anthogenous\"", \""mordant\"", \""dormant\"", \""weer\"", \""were\""]\n"",
    ""answer"": ""[[\""anthogenous\"", \""neognathous\""], [\""dormant\"", \""mordant\""], [\""weer\"", \""were\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 365,
        ""words"": [
            ""neognathous"",
            ""anthogenous"",
            ""mordant"",
            ""dormant"",
            ""weer"",
            ""were""
        ],
        ""solution"": [
            [
                ""anthogenous"",
                ""neognathous""
            ],
            [
                ""dormant"",
                ""mordant""
            ],
            [
                ""weer"",
                ""were""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
366,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""encharged"", ""rechanged"", ""castalia"", ""sacalait"", ""tejon"", ""jeton"", ""eryon"", ""onery"", ""dyaster"", ""strayed"", ""wese"", ""ewes"", ""wees"", ""objectivate"", ""objectative"", ""bireme"", ""bemire"", ""berime""]
","[[""bemire"", ""berime"", ""bireme""], [""castalia"", ""sacalait""], [""dyaster"", ""strayed""], [""encharged"", ""rechanged""], [""eryon"", ""onery""], [""ewes"", ""wees"", ""wese""], [""jeton"", ""tejon""], [""objectative"", ""objectivate""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""encharged\"", \""rechanged\"", \""castalia\"", \""sacalait\"", \""tejon\"", \""jeton\"", \""eryon\"", \""onery\"", \""dyaster\"", \""strayed\"", \""wese\"", \""ewes\"", \""wees\"", \""objectivate\"", \""objectative\"", \""bireme\"", \""bemire\"", \""berime\""]\n"",
    ""answer"": ""[[\""bemire\"", \""berime\"", \""bireme\""], [\""castalia\"", \""sacalait\""], [\""dyaster\"", \""strayed\""], [\""encharged\"", \""rechanged\""], [\""eryon\"", \""onery\""], [\""ewes\"", \""wees\"", \""wese\""], [\""jeton\"", \""tejon\""], [\""objectative\"", \""objectivate\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 366,
        ""words"": [
            ""encharged"",
            ""rechanged"",
            ""castalia"",
            ""sacalait"",
            ""tejon"",
            ""jeton"",
            ""eryon"",
            ""onery"",
            ""dyaster"",
            ""strayed"",
            ""wese"",
            ""ewes"",
            ""wees"",
            ""objectivate"",
            ""objectative"",
            ""bireme"",
            ""bemire"",
            ""berime""
        ],
        ""solution"": [
            [
                ""bemire"",
                ""berime"",
                ""bireme""
            ],
            [
                ""castalia"",
                ""sacalait""
            ],
            [
                ""dyaster"",
                ""strayed""
            ],
            [
                ""encharged"",
                ""rechanged""
            ],
            [
                ""eryon"",
                ""onery""
            ],
            [
                ""ewes"",
                ""wees"",
                ""wese""
            ],
            [
                ""jeton"",
                ""tejon""
            ],
            [
                ""objectative"",
                ""objectivate""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
367,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""barkier"", ""brakier"", ""nonempirical"", ""prenominical""]
","[[""barkier"", ""brakier""], [""nonempirical"", ""prenominical""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""barkier\"", \""brakier\"", \""nonempirical\"", \""prenominical\""]\n"",
    ""answer"": ""[[\""barkier\"", \""brakier\""], [\""nonempirical\"", \""prenominical\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 367,
        ""words"": [
            ""barkier"",
            ""brakier"",
            ""nonempirical"",
            ""prenominical""
        ],
        ""solution"": [
            [
                ""barkier"",
                ""brakier""
            ],
            [
                ""nonempirical"",
                ""prenominical""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
368,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""scytheman"", ""yachtsmen"", ""proseneschal"", ""chaperonless"", ""posterist"", ""sportiest"", ""rebuttals"", ""trustable"", ""terminate"", ""interteam"", ""styrene"", ""yestern"", ""streyne""]
","[[""chaperonless"", ""proseneschal""], [""interteam"", ""terminate""], [""posterist"", ""sportiest""], [""rebuttals"", ""trustable""], [""scytheman"", ""yachtsmen""], [""streyne"", ""styrene"", ""yestern""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""scytheman\"", \""yachtsmen\"", \""proseneschal\"", \""chaperonless\"", \""posterist\"", \""sportiest\"", \""rebuttals\"", \""trustable\"", \""terminate\"", \""interteam\"", \""styrene\"", \""yestern\"", \""streyne\""]\n"",
    ""answer"": ""[[\""chaperonless\"", \""proseneschal\""], [\""interteam\"", \""terminate\""], [\""posterist\"", \""sportiest\""], [\""rebuttals\"", \""trustable\""], [\""scytheman\"", \""yachtsmen\""], [\""streyne\"", \""styrene\"", \""yestern\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 368,
        ""words"": [
            ""scytheman"",
            ""yachtsmen"",
            ""proseneschal"",
            ""chaperonless"",
            ""posterist"",
            ""sportiest"",
            ""rebuttals"",
            ""trustable"",
            ""terminate"",
            ""interteam"",
            ""styrene"",
            ""yestern"",
            ""streyne""
        ],
        ""solution"": [
            [
                ""chaperonless"",
                ""proseneschal""
            ],
            [
                ""interteam"",
                ""terminate""
            ],
            [
                ""posterist"",
                ""sportiest""
            ],
            [
                ""rebuttals"",
                ""trustable""
            ],
            [
                ""scytheman"",
                ""yachtsmen""
            ],
            [
                ""streyne"",
                ""styrene"",
                ""yestern""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
369,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sapiao"", ""aposia"", ""enscene"", ""encense"", ""resiled"", ""reslide"", ""spectres"", ""respects"", ""clinospore"", ""necropolis"", ""presession"", ""ropinesses"", ""impedient"", ""mendipite"", ""proletarian"", ""prerational"", ""modus"", ""domus""]
","[[""aposia"", ""sapiao""], [""clinospore"", ""necropolis""], [""domus"", ""modus""], [""encense"", ""enscene""], [""impedient"", ""mendipite""], [""prerational"", ""proletarian""], [""presession"", ""ropinesses""], [""resiled"", ""reslide""], [""respects"", ""spectres""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sapiao\"", \""aposia\"", \""enscene\"", \""encense\"", \""resiled\"", \""reslide\"", \""spectres\"", \""respects\"", \""clinospore\"", \""necropolis\"", \""presession\"", \""ropinesses\"", \""impedient\"", \""mendipite\"", \""proletarian\"", \""prerational\"", \""modus\"", \""domus\""]\n"",
    ""answer"": ""[[\""aposia\"", \""sapiao\""], [\""clinospore\"", \""necropolis\""], [\""domus\"", \""modus\""], [\""encense\"", \""enscene\""], [\""impedient\"", \""mendipite\""], [\""prerational\"", \""proletarian\""], [\""presession\"", \""ropinesses\""], [\""resiled\"", \""reslide\""], [\""respects\"", \""spectres\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 369,
        ""words"": [
            ""sapiao"",
            ""aposia"",
            ""enscene"",
            ""encense"",
            ""resiled"",
            ""reslide"",
            ""spectres"",
            ""respects"",
            ""clinospore"",
            ""necropolis"",
            ""presession"",
            ""ropinesses"",
            ""impedient"",
            ""mendipite"",
            ""proletarian"",
            ""prerational"",
            ""modus"",
            ""domus""
        ],
        ""solution"": [
            [
                ""aposia"",
                ""sapiao""
            ],
            [
                ""clinospore"",
                ""necropolis""
            ],
            [
                ""domus"",
                ""modus""
            ],
            [
                ""encense"",
                ""enscene""
            ],
            [
                ""impedient"",
                ""mendipite""
            ],
            [
                ""prerational"",
                ""proletarian""
            ],
            [
                ""presession"",
                ""ropinesses""
            ],
            [
                ""resiled"",
                ""reslide""
            ],
            [
                ""respects"",
                ""spectres""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
370,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""outas"", ""aotus"", ""autos"", ""osmund"", ""mounds"", ""methylotic"", ""lithectomy"", ""enalite"", ""leniate"", ""dunal"", ""ulnad"", ""laund"", ""lunda"", ""strontic"", ""contrist"", ""nigher"", ""hinger"", ""etape"", ""patee"", ""harelips"", ""plashier"", ""earlship""]
","[[""aotus"", ""autos"", ""outas""], [""contrist"", ""strontic""], [""dunal"", ""laund"", ""lunda"", ""ulnad""], [""earlship"", ""harelips"", ""plashier""], [""enalite"", ""leniate""], [""etape"", ""patee""], [""hinger"", ""nigher""], [""lithectomy"", ""methylotic""], [""mounds"", ""osmund""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""outas\"", \""aotus\"", \""autos\"", \""osmund\"", \""mounds\"", \""methylotic\"", \""lithectomy\"", \""enalite\"", \""leniate\"", \""dunal\"", \""ulnad\"", \""laund\"", \""lunda\"", \""strontic\"", \""contrist\"", \""nigher\"", \""hinger\"", \""etape\"", \""patee\"", \""harelips\"", \""plashier\"", \""earlship\""]\n"",
    ""answer"": ""[[\""aotus\"", \""autos\"", \""outas\""], [\""contrist\"", \""strontic\""], [\""dunal\"", \""laund\"", \""lunda\"", \""ulnad\""], [\""earlship\"", \""harelips\"", \""plashier\""], [\""enalite\"", \""leniate\""], [\""etape\"", \""patee\""], [\""hinger\"", \""nigher\""], [\""lithectomy\"", \""methylotic\""], [\""mounds\"", \""osmund\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 370,
        ""words"": [
            ""outas"",
            ""aotus"",
            ""autos"",
            ""osmund"",
            ""mounds"",
            ""methylotic"",
            ""lithectomy"",
            ""enalite"",
            ""leniate"",
            ""dunal"",
            ""ulnad"",
            ""laund"",
            ""lunda"",
            ""strontic"",
            ""contrist"",
            ""nigher"",
            ""hinger"",
            ""etape"",
            ""patee"",
            ""harelips"",
            ""plashier"",
            ""earlship""
        ],
        ""solution"": [
            [
                ""aotus"",
                ""autos"",
                ""outas""
            ],
            [
                ""contrist"",
                ""strontic""
            ],
            [
                ""dunal"",
                ""laund"",
                ""lunda"",
                ""ulnad""
            ],
            [
                ""earlship"",
                ""harelips"",
                ""plashier""
            ],
            [
                ""enalite"",
                ""leniate""
            ],
            [
                ""etape"",
                ""patee""
            ],
            [
                ""hinger"",
                ""nigher""
            ],
            [
                ""lithectomy"",
                ""methylotic""
            ],
            [
                ""mounds"",
                ""osmund""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
371,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ursal"", ""sural"", ""larus"", ""sextodecimo"", ""decimosexto"", ""agent"", ""etang"", ""poorness"", ""snoopers"", ""buna"", ""baun"", ""nuba"", ""nabu""]
","[[""agent"", ""etang""], [""baun"", ""buna"", ""nabu"", ""nuba""], [""decimosexto"", ""sextodecimo""], [""larus"", ""sural"", ""ursal""], [""poorness"", ""snoopers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ursal\"", \""sural\"", \""larus\"", \""sextodecimo\"", \""decimosexto\"", \""agent\"", \""etang\"", \""poorness\"", \""snoopers\"", \""buna\"", \""baun\"", \""nuba\"", \""nabu\""]\n"",
    ""answer"": ""[[\""agent\"", \""etang\""], [\""baun\"", \""buna\"", \""nabu\"", \""nuba\""], [\""decimosexto\"", \""sextodecimo\""], [\""larus\"", \""sural\"", \""ursal\""], [\""poorness\"", \""snoopers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 371,
        ""words"": [
            ""ursal"",
            ""sural"",
            ""larus"",
            ""sextodecimo"",
            ""decimosexto"",
            ""agent"",
            ""etang"",
            ""poorness"",
            ""snoopers"",
            ""buna"",
            ""baun"",
            ""nuba"",
            ""nabu""
        ],
        ""solution"": [
            [
                ""agent"",
                ""etang""
            ],
            [
                ""baun"",
                ""buna"",
                ""nabu"",
                ""nuba""
            ],
            [
                ""decimosexto"",
                ""sextodecimo""
            ],
            [
                ""larus"",
                ""sural"",
                ""ursal""
            ],
            [
                ""poorness"",
                ""snoopers""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
372,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ungeared"", ""dungaree"", ""tharm"", ""thram"", ""abidden"", ""bandied""]
","[[""abidden"", ""bandied""], [""dungaree"", ""ungeared""], [""tharm"", ""thram""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ungeared\"", \""dungaree\"", \""tharm\"", \""thram\"", \""abidden\"", \""bandied\""]\n"",
    ""answer"": ""[[\""abidden\"", \""bandied\""], [\""dungaree\"", \""ungeared\""], [\""tharm\"", \""thram\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 372,
        ""words"": [
            ""ungeared"",
            ""dungaree"",
            ""tharm"",
            ""thram"",
            ""abidden"",
            ""bandied""
        ],
        ""solution"": [
            [
                ""abidden"",
                ""bandied""
            ],
            [
                ""dungaree"",
                ""ungeared""
            ],
            [
                ""tharm"",
                ""thram""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
373,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""blastomycetic"", ""cytoblastemic"", ""unoriented"", ""nonerudite""]
","[[""blastomycetic"", ""cytoblastemic""], [""nonerudite"", ""unoriented""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""blastomycetic\"", \""cytoblastemic\"", \""unoriented\"", \""nonerudite\""]\n"",
    ""answer"": ""[[\""blastomycetic\"", \""cytoblastemic\""], [\""nonerudite\"", \""unoriented\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 373,
        ""words"": [
            ""blastomycetic"",
            ""cytoblastemic"",
            ""unoriented"",
            ""nonerudite""
        ],
        ""solution"": [
            [
                ""blastomycetic"",
                ""cytoblastemic""
            ],
            [
                ""nonerudite"",
                ""unoriented""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
374,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""elamitish"", ""lithemias"", ""pomster"", ""trompes"", ""stomper"", ""ventrodorsal"", ""dorsoventral"", ""indeprivable"", ""predivinable"", ""contise"", ""section"", ""noetics"", ""stilter"", ""litters"", ""litster"", ""tilters"", ""letrist"", ""tarsias"", ""aristas"", ""awrist"", ""wraist""]
","[[""aristas"", ""tarsias""], [""awrist"", ""wraist""], [""contise"", ""noetics"", ""section""], [""dorsoventral"", ""ventrodorsal""], [""elamitish"", ""lithemias""], [""indeprivable"", ""predivinable""], [""letrist"", ""litster"", ""litters"", ""stilter"", ""tilters""], [""pomster"", ""stomper"", ""trompes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""elamitish\"", \""lithemias\"", \""pomster\"", \""trompes\"", \""stomper\"", \""ventrodorsal\"", \""dorsoventral\"", \""indeprivable\"", \""predivinable\"", \""contise\"", \""section\"", \""noetics\"", \""stilter\"", \""litters\"", \""litster\"", \""tilters\"", \""letrist\"", \""tarsias\"", \""aristas\"", \""awrist\"", \""wraist\""]\n"",
    ""answer"": ""[[\""aristas\"", \""tarsias\""], [\""awrist\"", \""wraist\""], [\""contise\"", \""noetics\"", \""section\""], [\""dorsoventral\"", \""ventrodorsal\""], [\""elamitish\"", \""lithemias\""], [\""indeprivable\"", \""predivinable\""], [\""letrist\"", \""litster\"", \""litters\"", \""stilter\"", \""tilters\""], [\""pomster\"", \""stomper\"", \""trompes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 374,
        ""words"": [
            ""elamitish"",
            ""lithemias"",
            ""pomster"",
            ""trompes"",
            ""stomper"",
            ""ventrodorsal"",
            ""dorsoventral"",
            ""indeprivable"",
            ""predivinable"",
            ""contise"",
            ""section"",
            ""noetics"",
            ""stilter"",
            ""litters"",
            ""litster"",
            ""tilters"",
            ""letrist"",
            ""tarsias"",
            ""aristas"",
            ""awrist"",
            ""wraist""
        ],
        ""solution"": [
            [
                ""aristas"",
                ""tarsias""
            ],
            [
                ""awrist"",
                ""wraist""
            ],
            [
                ""contise"",
                ""noetics"",
                ""section""
            ],
            [
                ""dorsoventral"",
                ""ventrodorsal""
            ],
            [
                ""elamitish"",
                ""lithemias""
            ],
            [
                ""indeprivable"",
                ""predivinable""
            ],
            [
                ""letrist"",
                ""litster"",
                ""litters"",
                ""stilter"",
                ""tilters""
            ],
            [
                ""pomster"",
                ""stomper"",
                ""trompes""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
375,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""wintering"", ""retwining"", ""repasting"", ""trapesing"", ""cods"", ""docs""]
","[[""cods"", ""docs""], [""repasting"", ""trapesing""], [""retwining"", ""wintering""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""wintering\"", \""retwining\"", \""repasting\"", \""trapesing\"", \""cods\"", \""docs\""]\n"",
    ""answer"": ""[[\""cods\"", \""docs\""], [\""repasting\"", \""trapesing\""], [\""retwining\"", \""wintering\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 375,
        ""words"": [
            ""wintering"",
            ""retwining"",
            ""repasting"",
            ""trapesing"",
            ""cods"",
            ""docs""
        ],
        ""solution"": [
            [
                ""cods"",
                ""docs""
            ],
            [
                ""repasting"",
                ""trapesing""
            ],
            [
                ""retwining"",
                ""wintering""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
376,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""threnodic"", ""chondrite"", ""ochrolite"", ""horotelic"", ""castes"", ""cestas"", ""input"", ""punti"", ""impelled"", ""milleped"", ""stain"", ""satin"", ""tains"", ""saint"", ""enplanes"", ""pennales"", ""geniting"", ""tingeing"", ""genarch"", ""changer""]
","[[""castes"", ""cestas""], [""changer"", ""genarch""], [""chondrite"", ""threnodic""], [""enplanes"", ""pennales""], [""geniting"", ""tingeing""], [""horotelic"", ""ochrolite""], [""impelled"", ""milleped""], [""input"", ""punti""], [""saint"", ""satin"", ""stain"", ""tains""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""threnodic\"", \""chondrite\"", \""ochrolite\"", \""horotelic\"", \""castes\"", \""cestas\"", \""input\"", \""punti\"", \""impelled\"", \""milleped\"", \""stain\"", \""satin\"", \""tains\"", \""saint\"", \""enplanes\"", \""pennales\"", \""geniting\"", \""tingeing\"", \""genarch\"", \""changer\""]\n"",
    ""answer"": ""[[\""castes\"", \""cestas\""], [\""changer\"", \""genarch\""], [\""chondrite\"", \""threnodic\""], [\""enplanes\"", \""pennales\""], [\""geniting\"", \""tingeing\""], [\""horotelic\"", \""ochrolite\""], [\""impelled\"", \""milleped\""], [\""input\"", \""punti\""], [\""saint\"", \""satin\"", \""stain\"", \""tains\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 376,
        ""words"": [
            ""threnodic"",
            ""chondrite"",
            ""ochrolite"",
            ""horotelic"",
            ""castes"",
            ""cestas"",
            ""input"",
            ""punti"",
            ""impelled"",
            ""milleped"",
            ""stain"",
            ""satin"",
            ""tains"",
            ""saint"",
            ""enplanes"",
            ""pennales"",
            ""geniting"",
            ""tingeing"",
            ""genarch"",
            ""changer""
        ],
        ""solution"": [
            [
                ""castes"",
                ""cestas""
            ],
            [
                ""changer"",
                ""genarch""
            ],
            [
                ""chondrite"",
                ""threnodic""
            ],
            [
                ""enplanes"",
                ""pennales""
            ],
            [
                ""geniting"",
                ""tingeing""
            ],
            [
                ""horotelic"",
                ""ochrolite""
            ],
            [
                ""impelled"",
                ""milleped""
            ],
            [
                ""input"",
                ""punti""
            ],
            [
                ""saint"",
                ""satin"",
                ""stain"",
                ""tains""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
377,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hexakistetrahedron"", ""tetrakishexahedron"", ""flatwise"", ""flawiest"", ""saltwife"", ""balat"", ""tabla"", ""hiltless"", ""lithless"", ""unsnatched"", ""unstanched"", ""elfwort"", ""felwort"", ""levators"", ""oversalt"", ""overlast"", ""platie"", ""aplite"", ""pilate"", ""enhydra"", ""enhardy"", ""henyard"", ""stk"", ""tsk""]
","[[""aplite"", ""pilate"", ""platie""], [""balat"", ""tabla""], [""elfwort"", ""felwort""], [""enhardy"", ""enhydra"", ""henyard""], [""flatwise"", ""flawiest"", ""saltwife""], [""hexakistetrahedron"", ""tetrakishexahedron""], [""hiltless"", ""lithless""], [""levators"", ""overlast"", ""oversalt""], [""stk"", ""tsk""], [""unsnatched"", ""unstanched""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hexakistetrahedron\"", \""tetrakishexahedron\"", \""flatwise\"", \""flawiest\"", \""saltwife\"", \""balat\"", \""tabla\"", \""hiltless\"", \""lithless\"", \""unsnatched\"", \""unstanched\"", \""elfwort\"", \""felwort\"", \""levators\"", \""oversalt\"", \""overlast\"", \""platie\"", \""aplite\"", \""pilate\"", \""enhydra\"", \""enhardy\"", \""henyard\"", \""stk\"", \""tsk\""]\n"",
    ""answer"": ""[[\""aplite\"", \""pilate\"", \""platie\""], [\""balat\"", \""tabla\""], [\""elfwort\"", \""felwort\""], [\""enhardy\"", \""enhydra\"", \""henyard\""], [\""flatwise\"", \""flawiest\"", \""saltwife\""], [\""hexakistetrahedron\"", \""tetrakishexahedron\""], [\""hiltless\"", \""lithless\""], [\""levators\"", \""overlast\"", \""oversalt\""], [\""stk\"", \""tsk\""], [\""unsnatched\"", \""unstanched\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 377,
        ""words"": [
            ""hexakistetrahedron"",
            ""tetrakishexahedron"",
            ""flatwise"",
            ""flawiest"",
            ""saltwife"",
            ""balat"",
            ""tabla"",
            ""hiltless"",
            ""lithless"",
            ""unsnatched"",
            ""unstanched"",
            ""elfwort"",
            ""felwort"",
            ""levators"",
            ""oversalt"",
            ""overlast"",
            ""platie"",
            ""aplite"",
            ""pilate"",
            ""enhydra"",
            ""enhardy"",
            ""henyard"",
            ""stk"",
            ""tsk""
        ],
        ""solution"": [
            [
                ""aplite"",
                ""pilate"",
                ""platie""
            ],
            [
                ""balat"",
                ""tabla""
            ],
            [
                ""elfwort"",
                ""felwort""
            ],
            [
                ""enhardy"",
                ""enhydra"",
                ""henyard""
            ],
            [
                ""flatwise"",
                ""flawiest"",
                ""saltwife""
            ],
            [
                ""hexakistetrahedron"",
                ""tetrakishexahedron""
            ],
            [
                ""hiltless"",
                ""lithless""
            ],
            [
                ""levators"",
                ""overlast"",
                ""oversalt""
            ],
            [
                ""stk"",
                ""tsk""
            ],
            [
                ""unsnatched"",
                ""unstanched""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
378,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mithras"", ""thairms"", ""thirams"", ""thrimsa"", ""cosmoline"", ""semicolon"", ""acridonium"", ""dicoumarin"", ""monetising"", ""moistening""]
","[[""acridonium"", ""dicoumarin""], [""cosmoline"", ""semicolon""], [""mithras"", ""thairms"", ""thirams"", ""thrimsa""], [""moistening"", ""monetising""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mithras\"", \""thairms\"", \""thirams\"", \""thrimsa\"", \""cosmoline\"", \""semicolon\"", \""acridonium\"", \""dicoumarin\"", \""monetising\"", \""moistening\""]\n"",
    ""answer"": ""[[\""acridonium\"", \""dicoumarin\""], [\""cosmoline\"", \""semicolon\""], [\""mithras\"", \""thairms\"", \""thirams\"", \""thrimsa\""], [\""moistening\"", \""monetising\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 378,
        ""words"": [
            ""mithras"",
            ""thairms"",
            ""thirams"",
            ""thrimsa"",
            ""cosmoline"",
            ""semicolon"",
            ""acridonium"",
            ""dicoumarin"",
            ""monetising"",
            ""moistening""
        ],
        ""solution"": [
            [
                ""acridonium"",
                ""dicoumarin""
            ],
            [
                ""cosmoline"",
                ""semicolon""
            ],
            [
                ""mithras"",
                ""thairms"",
                ""thirams"",
                ""thrimsa""
            ],
            [
                ""moistening"",
                ""monetising""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
379,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dominative"", ""admonitive"", ""cumsha"", ""sumach"", ""shumac"", ""brot"", ""bort"", ""joel"", ""jole"", ""redoubled"", ""bouldered""]
","[[""admonitive"", ""dominative""], [""bort"", ""brot""], [""bouldered"", ""redoubled""], [""cumsha"", ""shumac"", ""sumach""], [""joel"", ""jole""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dominative\"", \""admonitive\"", \""cumsha\"", \""sumach\"", \""shumac\"", \""brot\"", \""bort\"", \""joel\"", \""jole\"", \""redoubled\"", \""bouldered\""]\n"",
    ""answer"": ""[[\""admonitive\"", \""dominative\""], [\""bort\"", \""brot\""], [\""bouldered\"", \""redoubled\""], [\""cumsha\"", \""shumac\"", \""sumach\""], [\""joel\"", \""jole\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 379,
        ""words"": [
            ""dominative"",
            ""admonitive"",
            ""cumsha"",
            ""sumach"",
            ""shumac"",
            ""brot"",
            ""bort"",
            ""joel"",
            ""jole"",
            ""redoubled"",
            ""bouldered""
        ],
        ""solution"": [
            [
                ""admonitive"",
                ""dominative""
            ],
            [
                ""bort"",
                ""brot""
            ],
            [
                ""bouldered"",
                ""redoubled""
            ],
            [
                ""cumsha"",
                ""shumac"",
                ""sumach""
            ],
            [
                ""joel"",
                ""jole""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
380,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""soliloquise"", ""soliloquies"", ""ounds"", ""sound"", ""nodus"", ""poudret"", ""trouped"", ""laurels"", ""allures"", ""rechar"", ""charer"", ""charre"", ""archer"", ""faciobrachial"", ""brachiofacial""]
","[[""allures"", ""laurels""], [""archer"", ""charer"", ""charre"", ""rechar""], [""brachiofacial"", ""faciobrachial""], [""nodus"", ""ounds"", ""sound""], [""poudret"", ""trouped""], [""soliloquies"", ""soliloquise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""soliloquise\"", \""soliloquies\"", \""ounds\"", \""sound\"", \""nodus\"", \""poudret\"", \""trouped\"", \""laurels\"", \""allures\"", \""rechar\"", \""charer\"", \""charre\"", \""archer\"", \""faciobrachial\"", \""brachiofacial\""]\n"",
    ""answer"": ""[[\""allures\"", \""laurels\""], [\""archer\"", \""charer\"", \""charre\"", \""rechar\""], [\""brachiofacial\"", \""faciobrachial\""], [\""nodus\"", \""ounds\"", \""sound\""], [\""poudret\"", \""trouped\""], [\""soliloquies\"", \""soliloquise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 380,
        ""words"": [
            ""soliloquise"",
            ""soliloquies"",
            ""ounds"",
            ""sound"",
            ""nodus"",
            ""poudret"",
            ""trouped"",
            ""laurels"",
            ""allures"",
            ""rechar"",
            ""charer"",
            ""charre"",
            ""archer"",
            ""faciobrachial"",
            ""brachiofacial""
        ],
        ""solution"": [
            [
                ""allures"",
                ""laurels""
            ],
            [
                ""archer"",
                ""charer"",
                ""charre"",
                ""rechar""
            ],
            [
                ""brachiofacial"",
                ""faciobrachial""
            ],
            [
                ""nodus"",
                ""ounds"",
                ""sound""
            ],
            [
                ""poudret"",
                ""trouped""
            ],
            [
                ""soliloquies"",
                ""soliloquise""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
381,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""imbrowned"", ""birdwomen"", ""angelus"", ""lagunes"", ""langues"", ""hiodon"", ""hindoo"", ""hoondi"", ""wen"", ""new"", ""pansit"", ""patins"", ""ptisan"", ""paints"", ""macon"", ""manoc"", ""coman"", ""bhutan"", ""thuban"", ""mazier"", ""maizer"", ""maidy"", ""yadim""]
","[[""angelus"", ""lagunes"", ""langues""], [""bhutan"", ""thuban""], [""birdwomen"", ""imbrowned""], [""coman"", ""macon"", ""manoc""], [""hindoo"", ""hiodon"", ""hoondi""], [""maidy"", ""yadim""], [""maizer"", ""mazier""], [""new"", ""wen""], [""paints"", ""pansit"", ""patins"", ""ptisan""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""imbrowned\"", \""birdwomen\"", \""angelus\"", \""lagunes\"", \""langues\"", \""hiodon\"", \""hindoo\"", \""hoondi\"", \""wen\"", \""new\"", \""pansit\"", \""patins\"", \""ptisan\"", \""paints\"", \""macon\"", \""manoc\"", \""coman\"", \""bhutan\"", \""thuban\"", \""mazier\"", \""maizer\"", \""maidy\"", \""yadim\""]\n"",
    ""answer"": ""[[\""angelus\"", \""lagunes\"", \""langues\""], [\""bhutan\"", \""thuban\""], [\""birdwomen\"", \""imbrowned\""], [\""coman\"", \""macon\"", \""manoc\""], [\""hindoo\"", \""hiodon\"", \""hoondi\""], [\""maidy\"", \""yadim\""], [\""maizer\"", \""mazier\""], [\""new\"", \""wen\""], [\""paints\"", \""pansit\"", \""patins\"", \""ptisan\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 381,
        ""words"": [
            ""imbrowned"",
            ""birdwomen"",
            ""angelus"",
            ""lagunes"",
            ""langues"",
            ""hiodon"",
            ""hindoo"",
            ""hoondi"",
            ""wen"",
            ""new"",
            ""pansit"",
            ""patins"",
            ""ptisan"",
            ""paints"",
            ""macon"",
            ""manoc"",
            ""coman"",
            ""bhutan"",
            ""thuban"",
            ""mazier"",
            ""maizer"",
            ""maidy"",
            ""yadim""
        ],
        ""solution"": [
            [
                ""angelus"",
                ""lagunes"",
                ""langues""
            ],
            [
                ""bhutan"",
                ""thuban""
            ],
            [
                ""birdwomen"",
                ""imbrowned""
            ],
            [
                ""coman"",
                ""macon"",
                ""manoc""
            ],
            [
                ""hindoo"",
                ""hiodon"",
                ""hoondi""
            ],
            [
                ""maidy"",
                ""yadim""
            ],
            [
                ""maizer"",
                ""mazier""
            ],
            [
                ""new"",
                ""wen""
            ],
            [
                ""paints"",
                ""pansit"",
                ""patins"",
                ""ptisan""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
382,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""schmoos"", ""smoochs"", ""palaeechinoid"", ""deinocephalia"", ""tempter"", ""retempt"", ""kellys"", ""skelly"", ""panyar"", ""panary"", ""orchestra"", ""carthorse"", ""horsecart"", ""koko"", ""kook"", ""dicyan"", ""cyanid""]
","[[""carthorse"", ""horsecart"", ""orchestra""], [""cyanid"", ""dicyan""], [""deinocephalia"", ""palaeechinoid""], [""kellys"", ""skelly""], [""koko"", ""kook""], [""panary"", ""panyar""], [""retempt"", ""tempter""], [""schmoos"", ""smoochs""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""schmoos\"", \""smoochs\"", \""palaeechinoid\"", \""deinocephalia\"", \""tempter\"", \""retempt\"", \""kellys\"", \""skelly\"", \""panyar\"", \""panary\"", \""orchestra\"", \""carthorse\"", \""horsecart\"", \""koko\"", \""kook\"", \""dicyan\"", \""cyanid\""]\n"",
    ""answer"": ""[[\""carthorse\"", \""horsecart\"", \""orchestra\""], [\""cyanid\"", \""dicyan\""], [\""deinocephalia\"", \""palaeechinoid\""], [\""kellys\"", \""skelly\""], [\""koko\"", \""kook\""], [\""panary\"", \""panyar\""], [\""retempt\"", \""tempter\""], [\""schmoos\"", \""smoochs\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 382,
        ""words"": [
            ""schmoos"",
            ""smoochs"",
            ""palaeechinoid"",
            ""deinocephalia"",
            ""tempter"",
            ""retempt"",
            ""kellys"",
            ""skelly"",
            ""panyar"",
            ""panary"",
            ""orchestra"",
            ""carthorse"",
            ""horsecart"",
            ""koko"",
            ""kook"",
            ""dicyan"",
            ""cyanid""
        ],
        ""solution"": [
            [
                ""carthorse"",
                ""horsecart"",
                ""orchestra""
            ],
            [
                ""cyanid"",
                ""dicyan""
            ],
            [
                ""deinocephalia"",
                ""palaeechinoid""
            ],
            [
                ""kellys"",
                ""skelly""
            ],
            [
                ""koko"",
                ""kook""
            ],
            [
                ""panary"",
                ""panyar""
            ],
            [
                ""retempt"",
                ""tempter""
            ],
            [
                ""schmoos"",
                ""smoochs""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
383,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cereals"", ""rescale"", ""sclerae"", ""prickfoot"", ""tickproof"", ""clasping"", ""scalping"", ""borderer"", ""broderer"", ""callboy"", ""collyba"", ""usselven"", ""unvessel"", ""ichu"", ""huic""]
","[[""borderer"", ""broderer""], [""callboy"", ""collyba""], [""cereals"", ""rescale"", ""sclerae""], [""clasping"", ""scalping""], [""huic"", ""ichu""], [""prickfoot"", ""tickproof""], [""unvessel"", ""usselven""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cereals\"", \""rescale\"", \""sclerae\"", \""prickfoot\"", \""tickproof\"", \""clasping\"", \""scalping\"", \""borderer\"", \""broderer\"", \""callboy\"", \""collyba\"", \""usselven\"", \""unvessel\"", \""ichu\"", \""huic\""]\n"",
    ""answer"": ""[[\""borderer\"", \""broderer\""], [\""callboy\"", \""collyba\""], [\""cereals\"", \""rescale\"", \""sclerae\""], [\""clasping\"", \""scalping\""], [\""huic\"", \""ichu\""], [\""prickfoot\"", \""tickproof\""], [\""unvessel\"", \""usselven\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 383,
        ""words"": [
            ""cereals"",
            ""rescale"",
            ""sclerae"",
            ""prickfoot"",
            ""tickproof"",
            ""clasping"",
            ""scalping"",
            ""borderer"",
            ""broderer"",
            ""callboy"",
            ""collyba"",
            ""usselven"",
            ""unvessel"",
            ""ichu"",
            ""huic""
        ],
        ""solution"": [
            [
                ""borderer"",
                ""broderer""
            ],
            [
                ""callboy"",
                ""collyba""
            ],
            [
                ""cereals"",
                ""rescale"",
                ""sclerae""
            ],
            [
                ""clasping"",
                ""scalping""
            ],
            [
                ""huic"",
                ""ichu""
            ],
            [
                ""prickfoot"",
                ""tickproof""
            ],
            [
                ""unvessel"",
                ""usselven""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
384,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""versor"", ""rovers"", ""brats"", ""brast"", ""gavel"", ""glave"", ""ingroup"", ""pouring"", ""rouping"", ""zira"", ""izar"", ""masquers"", ""marquess""]
","[[""brast"", ""brats""], [""gavel"", ""glave""], [""ingroup"", ""pouring"", ""rouping""], [""izar"", ""zira""], [""marquess"", ""masquers""], [""rovers"", ""versor""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""versor\"", \""rovers\"", \""brats\"", \""brast\"", \""gavel\"", \""glave\"", \""ingroup\"", \""pouring\"", \""rouping\"", \""zira\"", \""izar\"", \""masquers\"", \""marquess\""]\n"",
    ""answer"": ""[[\""brast\"", \""brats\""], [\""gavel\"", \""glave\""], [\""ingroup\"", \""pouring\"", \""rouping\""], [\""izar\"", \""zira\""], [\""marquess\"", \""masquers\""], [\""rovers\"", \""versor\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 384,
        ""words"": [
            ""versor"",
            ""rovers"",
            ""brats"",
            ""brast"",
            ""gavel"",
            ""glave"",
            ""ingroup"",
            ""pouring"",
            ""rouping"",
            ""zira"",
            ""izar"",
            ""masquers"",
            ""marquess""
        ],
        ""solution"": [
            [
                ""brast"",
                ""brats""
            ],
            [
                ""gavel"",
                ""glave""
            ],
            [
                ""ingroup"",
                ""pouring"",
                ""rouping""
            ],
            [
                ""izar"",
                ""zira""
            ],
            [
                ""marquess"",
                ""masquers""
            ],
            [
                ""rovers"",
                ""versor""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
385,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ahoy"", ""hoya"", ""pentad"", ""pedant"", ""lithoid"", ""dithiol""]
","[[""ahoy"", ""hoya""], [""dithiol"", ""lithoid""], [""pedant"", ""pentad""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ahoy\"", \""hoya\"", \""pentad\"", \""pedant\"", \""lithoid\"", \""dithiol\""]\n"",
    ""answer"": ""[[\""ahoy\"", \""hoya\""], [\""dithiol\"", \""lithoid\""], [\""pedant\"", \""pentad\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 385,
        ""words"": [
            ""ahoy"",
            ""hoya"",
            ""pentad"",
            ""pedant"",
            ""lithoid"",
            ""dithiol""
        ],
        ""solution"": [
            [
                ""ahoy"",
                ""hoya""
            ],
            [
                ""dithiol"",
                ""lithoid""
            ],
            [
                ""pedant"",
                ""pentad""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
386,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""murderer"", ""demurrer"", ""ratio"", ""ariot"", ""seconding"", ""consigned"", ""encodings"", ""latvia"", ""avital"", ""ethicals"", ""claithes"", ""paristhmion"", ""misanthropi"", ""glans"", ""slang""]
","[[""ariot"", ""ratio""], [""avital"", ""latvia""], [""claithes"", ""ethicals""], [""consigned"", ""encodings"", ""seconding""], [""demurrer"", ""murderer""], [""glans"", ""slang""], [""misanthropi"", ""paristhmion""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""murderer\"", \""demurrer\"", \""ratio\"", \""ariot\"", \""seconding\"", \""consigned\"", \""encodings\"", \""latvia\"", \""avital\"", \""ethicals\"", \""claithes\"", \""paristhmion\"", \""misanthropi\"", \""glans\"", \""slang\""]\n"",
    ""answer"": ""[[\""ariot\"", \""ratio\""], [\""avital\"", \""latvia\""], [\""claithes\"", \""ethicals\""], [\""consigned\"", \""encodings\"", \""seconding\""], [\""demurrer\"", \""murderer\""], [\""glans\"", \""slang\""], [\""misanthropi\"", \""paristhmion\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 386,
        ""words"": [
            ""murderer"",
            ""demurrer"",
            ""ratio"",
            ""ariot"",
            ""seconding"",
            ""consigned"",
            ""encodings"",
            ""latvia"",
            ""avital"",
            ""ethicals"",
            ""claithes"",
            ""paristhmion"",
            ""misanthropi"",
            ""glans"",
            ""slang""
        ],
        ""solution"": [
            [
                ""ariot"",
                ""ratio""
            ],
            [
                ""avital"",
                ""latvia""
            ],
            [
                ""claithes"",
                ""ethicals""
            ],
            [
                ""consigned"",
                ""encodings"",
                ""seconding""
            ],
            [
                ""demurrer"",
                ""murderer""
            ],
            [
                ""glans"",
                ""slang""
            ],
            [
                ""misanthropi"",
                ""paristhmion""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
387,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""astrol"", ""sortal"", ""tartrate"", ""tartaret"", ""clumber"", ""crumble"", ""peridia"", ""deripia""]
","[[""astrol"", ""sortal""], [""clumber"", ""crumble""], [""deripia"", ""peridia""], [""tartaret"", ""tartrate""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""astrol\"", \""sortal\"", \""tartrate\"", \""tartaret\"", \""clumber\"", \""crumble\"", \""peridia\"", \""deripia\""]\n"",
    ""answer"": ""[[\""astrol\"", \""sortal\""], [\""clumber\"", \""crumble\""], [\""deripia\"", \""peridia\""], [\""tartaret\"", \""tartrate\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 387,
        ""words"": [
            ""astrol"",
            ""sortal"",
            ""tartrate"",
            ""tartaret"",
            ""clumber"",
            ""crumble"",
            ""peridia"",
            ""deripia""
        ],
        ""solution"": [
            [
                ""astrol"",
                ""sortal""
            ],
            [
                ""clumber"",
                ""crumble""
            ],
            [
                ""deripia"",
                ""peridia""
            ],
            [
                ""tartaret"",
                ""tartrate""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
388,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mesmerist"", ""meristems"", ""pneumatophony"", ""pneumonopathy""]
","[[""meristems"", ""mesmerist""], [""pneumatophony"", ""pneumonopathy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mesmerist\"", \""meristems\"", \""pneumatophony\"", \""pneumonopathy\""]\n"",
    ""answer"": ""[[\""meristems\"", \""mesmerist\""], [\""pneumatophony\"", \""pneumonopathy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 388,
        ""words"": [
            ""mesmerist"",
            ""meristems"",
            ""pneumatophony"",
            ""pneumonopathy""
        ],
        ""solution"": [
            [
                ""meristems"",
                ""mesmerist""
            ],
            [
                ""pneumatophony"",
                ""pneumonopathy""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
389,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""stools"", ""sotols"", ""wags"", ""swag"", ""gallian"", ""lingala"", ""masting"", ""matings"", ""rafters"", ""strafer"", ""fraters"", ""clin"", ""incl""]
","[[""clin"", ""incl""], [""fraters"", ""rafters"", ""strafer""], [""gallian"", ""lingala""], [""masting"", ""matings""], [""sotols"", ""stools""], [""swag"", ""wags""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""stools\"", \""sotols\"", \""wags\"", \""swag\"", \""gallian\"", \""lingala\"", \""masting\"", \""matings\"", \""rafters\"", \""strafer\"", \""fraters\"", \""clin\"", \""incl\""]\n"",
    ""answer"": ""[[\""clin\"", \""incl\""], [\""fraters\"", \""rafters\"", \""strafer\""], [\""gallian\"", \""lingala\""], [\""masting\"", \""matings\""], [\""sotols\"", \""stools\""], [\""swag\"", \""wags\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 389,
        ""words"": [
            ""stools"",
            ""sotols"",
            ""wags"",
            ""swag"",
            ""gallian"",
            ""lingala"",
            ""masting"",
            ""matings"",
            ""rafters"",
            ""strafer"",
            ""fraters"",
            ""clin"",
            ""incl""
        ],
        ""solution"": [
            [
                ""clin"",
                ""incl""
            ],
            [
                ""fraters"",
                ""rafters"",
                ""strafer""
            ],
            [
                ""gallian"",
                ""lingala""
            ],
            [
                ""masting"",
                ""matings""
            ],
            [
                ""sotols"",
                ""stools""
            ],
            [
                ""swag"",
                ""wags""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
390,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""colpeurynter"", ""counterreply"", ""abrasing"", ""bargains"", ""exorcised"", ""cresoxide"", ""geometrical"", ""glaciometer"", ""jinkers"", ""jerkins"", ""anytime"", ""amenity"", ""lamer"", ""realm"", ""bottlesful"", ""bottlefuls""]
","[[""abrasing"", ""bargains""], [""amenity"", ""anytime""], [""bottlefuls"", ""bottlesful""], [""colpeurynter"", ""counterreply""], [""cresoxide"", ""exorcised""], [""geometrical"", ""glaciometer""], [""jerkins"", ""jinkers""], [""lamer"", ""realm""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""colpeurynter\"", \""counterreply\"", \""abrasing\"", \""bargains\"", \""exorcised\"", \""cresoxide\"", \""geometrical\"", \""glaciometer\"", \""jinkers\"", \""jerkins\"", \""anytime\"", \""amenity\"", \""lamer\"", \""realm\"", \""bottlesful\"", \""bottlefuls\""]\n"",
    ""answer"": ""[[\""abrasing\"", \""bargains\""], [\""amenity\"", \""anytime\""], [\""bottlefuls\"", \""bottlesful\""], [\""colpeurynter\"", \""counterreply\""], [\""cresoxide\"", \""exorcised\""], [\""geometrical\"", \""glaciometer\""], [\""jerkins\"", \""jinkers\""], [\""lamer\"", \""realm\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 390,
        ""words"": [
            ""colpeurynter"",
            ""counterreply"",
            ""abrasing"",
            ""bargains"",
            ""exorcised"",
            ""cresoxide"",
            ""geometrical"",
            ""glaciometer"",
            ""jinkers"",
            ""jerkins"",
            ""anytime"",
            ""amenity"",
            ""lamer"",
            ""realm"",
            ""bottlesful"",
            ""bottlefuls""
        ],
        ""solution"": [
            [
                ""abrasing"",
                ""bargains""
            ],
            [
                ""amenity"",
                ""anytime""
            ],
            [
                ""bottlefuls"",
                ""bottlesful""
            ],
            [
                ""colpeurynter"",
                ""counterreply""
            ],
            [
                ""cresoxide"",
                ""exorcised""
            ],
            [
                ""geometrical"",
                ""glaciometer""
            ],
            [
                ""jerkins"",
                ""jinkers""
            ],
            [
                ""lamer"",
                ""realm""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
391,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""because"", ""besauce"", ""hevea"", ""heave"", ""senilism"", ""liminess"", ""prepense"", ""perpense"", ""persevered"", ""predeserve"", ""wrist"", ""writs"", ""socotri"", ""octrois""]
","[[""because"", ""besauce""], [""heave"", ""hevea""], [""liminess"", ""senilism""], [""octrois"", ""socotri""], [""perpense"", ""prepense""], [""persevered"", ""predeserve""], [""wrist"", ""writs""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""because\"", \""besauce\"", \""hevea\"", \""heave\"", \""senilism\"", \""liminess\"", \""prepense\"", \""perpense\"", \""persevered\"", \""predeserve\"", \""wrist\"", \""writs\"", \""socotri\"", \""octrois\""]\n"",
    ""answer"": ""[[\""because\"", \""besauce\""], [\""heave\"", \""hevea\""], [\""liminess\"", \""senilism\""], [\""octrois\"", \""socotri\""], [\""perpense\"", \""prepense\""], [\""persevered\"", \""predeserve\""], [\""wrist\"", \""writs\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 391,
        ""words"": [
            ""because"",
            ""besauce"",
            ""hevea"",
            ""heave"",
            ""senilism"",
            ""liminess"",
            ""prepense"",
            ""perpense"",
            ""persevered"",
            ""predeserve"",
            ""wrist"",
            ""writs"",
            ""socotri"",
            ""octrois""
        ],
        ""solution"": [
            [
                ""because"",
                ""besauce""
            ],
            [
                ""heave"",
                ""hevea""
            ],
            [
                ""liminess"",
                ""senilism""
            ],
            [
                ""octrois"",
                ""socotri""
            ],
            [
                ""perpense"",
                ""prepense""
            ],
            [
                ""persevered"",
                ""predeserve""
            ],
            [
                ""wrist"",
                ""writs""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
392,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fanit"", ""faint"", ""fanti"", ""pt"", ""tp"", ""missteer"", ""trisemes"", ""snuzzle"", ""nuzzles"", ""etua"", ""aute"", ""haplosis"", ""alphosis"", ""protonema"", ""monoptera"", ""talliers"", ""literals"", ""eelpouts"", ""outsleep"", ""animating"", ""aminating"", ""imaginant""]
","[[""alphosis"", ""haplosis""], [""aminating"", ""animating"", ""imaginant""], [""aute"", ""etua""], [""eelpouts"", ""outsleep""], [""faint"", ""fanit"", ""fanti""], [""literals"", ""talliers""], [""missteer"", ""trisemes""], [""monoptera"", ""protonema""], [""nuzzles"", ""snuzzle""], [""pt"", ""tp""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fanit\"", \""faint\"", \""fanti\"", \""pt\"", \""tp\"", \""missteer\"", \""trisemes\"", \""snuzzle\"", \""nuzzles\"", \""etua\"", \""aute\"", \""haplosis\"", \""alphosis\"", \""protonema\"", \""monoptera\"", \""talliers\"", \""literals\"", \""eelpouts\"", \""outsleep\"", \""animating\"", \""aminating\"", \""imaginant\""]\n"",
    ""answer"": ""[[\""alphosis\"", \""haplosis\""], [\""aminating\"", \""animating\"", \""imaginant\""], [\""aute\"", \""etua\""], [\""eelpouts\"", \""outsleep\""], [\""faint\"", \""fanit\"", \""fanti\""], [\""literals\"", \""talliers\""], [\""missteer\"", \""trisemes\""], [\""monoptera\"", \""protonema\""], [\""nuzzles\"", \""snuzzle\""], [\""pt\"", \""tp\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 392,
        ""words"": [
            ""fanit"",
            ""faint"",
            ""fanti"",
            ""pt"",
            ""tp"",
            ""missteer"",
            ""trisemes"",
            ""snuzzle"",
            ""nuzzles"",
            ""etua"",
            ""aute"",
            ""haplosis"",
            ""alphosis"",
            ""protonema"",
            ""monoptera"",
            ""talliers"",
            ""literals"",
            ""eelpouts"",
            ""outsleep"",
            ""animating"",
            ""aminating"",
            ""imaginant""
        ],
        ""solution"": [
            [
                ""alphosis"",
                ""haplosis""
            ],
            [
                ""aminating"",
                ""animating"",
                ""imaginant""
            ],
            [
                ""aute"",
                ""etua""
            ],
            [
                ""eelpouts"",
                ""outsleep""
            ],
            [
                ""faint"",
                ""fanit"",
                ""fanti""
            ],
            [
                ""literals"",
                ""talliers""
            ],
            [
                ""missteer"",
                ""trisemes""
            ],
            [
                ""monoptera"",
                ""protonema""
            ],
            [
                ""nuzzles"",
                ""snuzzle""
            ],
            [
                ""pt"",
                ""tp""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
393,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""retain"", ""retina"", ""entria"", ""prestable"", ""beplaster"", ""flourished"", ""deflourish"", ""allures"", ""laurels"", ""troika"", ""korait"", ""thoraxes"", ""oxhearts"", ""tither"", ""hitter"", ""overarches"", ""oversearch""]
","[[""allures"", ""laurels""], [""beplaster"", ""prestable""], [""deflourish"", ""flourished""], [""entria"", ""retain"", ""retina""], [""hitter"", ""tither""], [""korait"", ""troika""], [""overarches"", ""oversearch""], [""oxhearts"", ""thoraxes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""retain\"", \""retina\"", \""entria\"", \""prestable\"", \""beplaster\"", \""flourished\"", \""deflourish\"", \""allures\"", \""laurels\"", \""troika\"", \""korait\"", \""thoraxes\"", \""oxhearts\"", \""tither\"", \""hitter\"", \""overarches\"", \""oversearch\""]\n"",
    ""answer"": ""[[\""allures\"", \""laurels\""], [\""beplaster\"", \""prestable\""], [\""deflourish\"", \""flourished\""], [\""entria\"", \""retain\"", \""retina\""], [\""hitter\"", \""tither\""], [\""korait\"", \""troika\""], [\""overarches\"", \""oversearch\""], [\""oxhearts\"", \""thoraxes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 393,
        ""words"": [
            ""retain"",
            ""retina"",
            ""entria"",
            ""prestable"",
            ""beplaster"",
            ""flourished"",
            ""deflourish"",
            ""allures"",
            ""laurels"",
            ""troika"",
            ""korait"",
            ""thoraxes"",
            ""oxhearts"",
            ""tither"",
            ""hitter"",
            ""overarches"",
            ""oversearch""
        ],
        ""solution"": [
            [
                ""allures"",
                ""laurels""
            ],
            [
                ""beplaster"",
                ""prestable""
            ],
            [
                ""deflourish"",
                ""flourished""
            ],
            [
                ""entria"",
                ""retain"",
                ""retina""
            ],
            [
                ""hitter"",
                ""tither""
            ],
            [
                ""korait"",
                ""troika""
            ],
            [
                ""overarches"",
                ""oversearch""
            ],
            [
                ""oxhearts"",
                ""thoraxes""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
394,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""desma"", ""dames"", ""tonuses"", ""outness"", ""spinales"", ""spaniels"", ""sulphinide"", ""delphinius""]
","[[""dames"", ""desma""], [""delphinius"", ""sulphinide""], [""outness"", ""tonuses""], [""spaniels"", ""spinales""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""desma\"", \""dames\"", \""tonuses\"", \""outness\"", \""spinales\"", \""spaniels\"", \""sulphinide\"", \""delphinius\""]\n"",
    ""answer"": ""[[\""dames\"", \""desma\""], [\""delphinius\"", \""sulphinide\""], [\""outness\"", \""tonuses\""], [\""spaniels\"", \""spinales\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 394,
        ""words"": [
            ""desma"",
            ""dames"",
            ""tonuses"",
            ""outness"",
            ""spinales"",
            ""spaniels"",
            ""sulphinide"",
            ""delphinius""
        ],
        ""solution"": [
            [
                ""dames"",
                ""desma""
            ],
            [
                ""delphinius"",
                ""sulphinide""
            ],
            [
                ""outness"",
                ""tonuses""
            ],
            [
                ""spaniels"",
                ""spinales""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
395,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""kissing"", ""skiings"", ""reeky"", ""rekey"", ""foutre"", ""fouter"", ""tempora"", ""pteroma""]
","[[""fouter"", ""foutre""], [""kissing"", ""skiings""], [""pteroma"", ""tempora""], [""reeky"", ""rekey""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""kissing\"", \""skiings\"", \""reeky\"", \""rekey\"", \""foutre\"", \""fouter\"", \""tempora\"", \""pteroma\""]\n"",
    ""answer"": ""[[\""fouter\"", \""foutre\""], [\""kissing\"", \""skiings\""], [\""pteroma\"", \""tempora\""], [\""reeky\"", \""rekey\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 395,
        ""words"": [
            ""kissing"",
            ""skiings"",
            ""reeky"",
            ""rekey"",
            ""foutre"",
            ""fouter"",
            ""tempora"",
            ""pteroma""
        ],
        ""solution"": [
            [
                ""fouter"",
                ""foutre""
            ],
            [
                ""kissing"",
                ""skiings""
            ],
            [
                ""pteroma"",
                ""tempora""
            ],
            [
                ""reeky"",
                ""rekey""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
396,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""scrutinise"", ""scrutinies"", ""sinecurist"", ""alfur"", ""fural"", ""halicot"", ""tachiol"", ""unpaised"", ""espundia"", ""aphemic"", ""impeach"", ""talipedic"", ""talpicide""]
","[[""alfur"", ""fural""], [""aphemic"", ""impeach""], [""espundia"", ""unpaised""], [""halicot"", ""tachiol""], [""scrutinies"", ""scrutinise"", ""sinecurist""], [""talipedic"", ""talpicide""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""scrutinise\"", \""scrutinies\"", \""sinecurist\"", \""alfur\"", \""fural\"", \""halicot\"", \""tachiol\"", \""unpaised\"", \""espundia\"", \""aphemic\"", \""impeach\"", \""talipedic\"", \""talpicide\""]\n"",
    ""answer"": ""[[\""alfur\"", \""fural\""], [\""aphemic\"", \""impeach\""], [\""espundia\"", \""unpaised\""], [\""halicot\"", \""tachiol\""], [\""scrutinies\"", \""scrutinise\"", \""sinecurist\""], [\""talipedic\"", \""talpicide\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 396,
        ""words"": [
            ""scrutinise"",
            ""scrutinies"",
            ""sinecurist"",
            ""alfur"",
            ""fural"",
            ""halicot"",
            ""tachiol"",
            ""unpaised"",
            ""espundia"",
            ""aphemic"",
            ""impeach"",
            ""talipedic"",
            ""talpicide""
        ],
        ""solution"": [
            [
                ""alfur"",
                ""fural""
            ],
            [
                ""aphemic"",
                ""impeach""
            ],
            [
                ""espundia"",
                ""unpaised""
            ],
            [
                ""halicot"",
                ""tachiol""
            ],
            [
                ""scrutinies"",
                ""scrutinise"",
                ""sinecurist""
            ],
            [
                ""talipedic"",
                ""talpicide""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
397,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""octary"", ""actory"", ""decomposer"", ""recomposed"", ""acubens"", ""benacus""]
","[[""actory"", ""octary""], [""acubens"", ""benacus""], [""decomposer"", ""recomposed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""octary\"", \""actory\"", \""decomposer\"", \""recomposed\"", \""acubens\"", \""benacus\""]\n"",
    ""answer"": ""[[\""actory\"", \""octary\""], [\""acubens\"", \""benacus\""], [\""decomposer\"", \""recomposed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 397,
        ""words"": [
            ""octary"",
            ""actory"",
            ""decomposer"",
            ""recomposed"",
            ""acubens"",
            ""benacus""
        ],
        ""solution"": [
            [
                ""actory"",
                ""octary""
            ],
            [
                ""acubens"",
                ""benacus""
            ],
            [
                ""decomposer"",
                ""recomposed""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
398,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""matcher"", ""marchet"", ""rematch"", ""tenurial"", ""rutelian"", ""lutrinae"", ""aglee"", ""aegle"", ""galee"", ""baroco"", ""barcoo"", ""cafila"", ""facial"", ""etched"", ""teched""]
","[[""aegle"", ""aglee"", ""galee""], [""barcoo"", ""baroco""], [""cafila"", ""facial""], [""etched"", ""teched""], [""lutrinae"", ""rutelian"", ""tenurial""], [""marchet"", ""matcher"", ""rematch""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""matcher\"", \""marchet\"", \""rematch\"", \""tenurial\"", \""rutelian\"", \""lutrinae\"", \""aglee\"", \""aegle\"", \""galee\"", \""baroco\"", \""barcoo\"", \""cafila\"", \""facial\"", \""etched\"", \""teched\""]\n"",
    ""answer"": ""[[\""aegle\"", \""aglee\"", \""galee\""], [\""barcoo\"", \""baroco\""], [\""cafila\"", \""facial\""], [\""etched\"", \""teched\""], [\""lutrinae\"", \""rutelian\"", \""tenurial\""], [\""marchet\"", \""matcher\"", \""rematch\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 398,
        ""words"": [
            ""matcher"",
            ""marchet"",
            ""rematch"",
            ""tenurial"",
            ""rutelian"",
            ""lutrinae"",
            ""aglee"",
            ""aegle"",
            ""galee"",
            ""baroco"",
            ""barcoo"",
            ""cafila"",
            ""facial"",
            ""etched"",
            ""teched""
        ],
        ""solution"": [
            [
                ""aegle"",
                ""aglee"",
                ""galee""
            ],
            [
                ""barcoo"",
                ""baroco""
            ],
            [
                ""cafila"",
                ""facial""
            ],
            [
                ""etched"",
                ""teched""
            ],
            [
                ""lutrinae"",
                ""rutelian"",
                ""tenurial""
            ],
            [
                ""marchet"",
                ""matcher"",
                ""rematch""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
399,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tipless"", ""pitless"", ""stipels"", ""remained"", ""adermine"", ""norse"", ""ornes"", ""senor"", ""snore"", ""porture"", ""trouper"", ""agla"", ""alga"", ""babes"", ""abbes""]
","[[""abbes"", ""babes""], [""adermine"", ""remained""], [""agla"", ""alga""], [""norse"", ""ornes"", ""senor"", ""snore""], [""pitless"", ""stipels"", ""tipless""], [""porture"", ""trouper""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tipless\"", \""pitless\"", \""stipels\"", \""remained\"", \""adermine\"", \""norse\"", \""ornes\"", \""senor\"", \""snore\"", \""porture\"", \""trouper\"", \""agla\"", \""alga\"", \""babes\"", \""abbes\""]\n"",
    ""answer"": ""[[\""abbes\"", \""babes\""], [\""adermine\"", \""remained\""], [\""agla\"", \""alga\""], [\""norse\"", \""ornes\"", \""senor\"", \""snore\""], [\""pitless\"", \""stipels\"", \""tipless\""], [\""porture\"", \""trouper\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 399,
        ""words"": [
            ""tipless"",
            ""pitless"",
            ""stipels"",
            ""remained"",
            ""adermine"",
            ""norse"",
            ""ornes"",
            ""senor"",
            ""snore"",
            ""porture"",
            ""trouper"",
            ""agla"",
            ""alga"",
            ""babes"",
            ""abbes""
        ],
        ""solution"": [
            [
                ""abbes"",
                ""babes""
            ],
            [
                ""adermine"",
                ""remained""
            ],
            [
                ""agla"",
                ""alga""
            ],
            [
                ""norse"",
                ""ornes"",
                ""senor"",
                ""snore""
            ],
            [
                ""pitless"",
                ""stipels"",
                ""tipless""
            ],
            [
                ""porture"",
                ""trouper""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
400,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""teaman"", ""amante"", ""amenta"", ""phototelegraphic"", ""telephotographic"", ""sputter"", ""putters"", ""rewhisper"", ""whisperer"", ""dissue"", ""disuse"", ""issued"", ""fibromucous"", ""mucofibrous"", ""nettiest"", ""tentiest"", ""trilloes"", ""trollies"", ""bis"", ""sib""]
","[[""amante"", ""amenta"", ""teaman""], [""bis"", ""sib""], [""dissue"", ""disuse"", ""issued""], [""fibromucous"", ""mucofibrous""], [""nettiest"", ""tentiest""], [""phototelegraphic"", ""telephotographic""], [""putters"", ""sputter""], [""rewhisper"", ""whisperer""], [""trilloes"", ""trollies""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""teaman\"", \""amante\"", \""amenta\"", \""phototelegraphic\"", \""telephotographic\"", \""sputter\"", \""putters\"", \""rewhisper\"", \""whisperer\"", \""dissue\"", \""disuse\"", \""issued\"", \""fibromucous\"", \""mucofibrous\"", \""nettiest\"", \""tentiest\"", \""trilloes\"", \""trollies\"", \""bis\"", \""sib\""]\n"",
    ""answer"": ""[[\""amante\"", \""amenta\"", \""teaman\""], [\""bis\"", \""sib\""], [\""dissue\"", \""disuse\"", \""issued\""], [\""fibromucous\"", \""mucofibrous\""], [\""nettiest\"", \""tentiest\""], [\""phototelegraphic\"", \""telephotographic\""], [\""putters\"", \""sputter\""], [\""rewhisper\"", \""whisperer\""], [\""trilloes\"", \""trollies\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 400,
        ""words"": [
            ""teaman"",
            ""amante"",
            ""amenta"",
            ""phototelegraphic"",
            ""telephotographic"",
            ""sputter"",
            ""putters"",
            ""rewhisper"",
            ""whisperer"",
            ""dissue"",
            ""disuse"",
            ""issued"",
            ""fibromucous"",
            ""mucofibrous"",
            ""nettiest"",
            ""tentiest"",
            ""trilloes"",
            ""trollies"",
            ""bis"",
            ""sib""
        ],
        ""solution"": [
            [
                ""amante"",
                ""amenta"",
                ""teaman""
            ],
            [
                ""bis"",
                ""sib""
            ],
            [
                ""dissue"",
                ""disuse"",
                ""issued""
            ],
            [
                ""fibromucous"",
                ""mucofibrous""
            ],
            [
                ""nettiest"",
                ""tentiest""
            ],
            [
                ""phototelegraphic"",
                ""telephotographic""
            ],
            [
                ""putters"",
                ""sputter""
            ],
            [
                ""rewhisper"",
                ""whisperer""
            ],
            [
                ""trilloes"",
                ""trollies""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
401,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""terming"", ""metring"", ""gaping"", ""paging"", ""anna"", ""anan"", ""nana"", ""ahunt"", ""unhat"", ""friskest"", ""frsikets"", ""friskets""]
","[[""ahunt"", ""unhat""], [""anan"", ""anna"", ""nana""], [""friskest"", ""friskets"", ""frsikets""], [""gaping"", ""paging""], [""metring"", ""terming""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""terming\"", \""metring\"", \""gaping\"", \""paging\"", \""anna\"", \""anan\"", \""nana\"", \""ahunt\"", \""unhat\"", \""friskest\"", \""frsikets\"", \""friskets\""]\n"",
    ""answer"": ""[[\""ahunt\"", \""unhat\""], [\""anan\"", \""anna\"", \""nana\""], [\""friskest\"", \""friskets\"", \""frsikets\""], [\""gaping\"", \""paging\""], [\""metring\"", \""terming\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 401,
        ""words"": [
            ""terming"",
            ""metring"",
            ""gaping"",
            ""paging"",
            ""anna"",
            ""anan"",
            ""nana"",
            ""ahunt"",
            ""unhat"",
            ""friskest"",
            ""frsikets"",
            ""friskets""
        ],
        ""solution"": [
            [
                ""ahunt"",
                ""unhat""
            ],
            [
                ""anan"",
                ""anna"",
                ""nana""
            ],
            [
                ""friskest"",
                ""friskets"",
                ""frsikets""
            ],
            [
                ""gaping"",
                ""paging""
            ],
            [
                ""metring"",
                ""terming""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
402,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""animize"", ""miazine"", ""revaluating"", ""granulative"", ""boultel"", ""boutell"", ""dogmen"", ""gnomed"", ""ghent"", ""thegn"", ""redhearted"", ""rethreaded"", ""comet"", ""comte""]
","[[""animize"", ""miazine""], [""boultel"", ""boutell""], [""comet"", ""comte""], [""dogmen"", ""gnomed""], [""ghent"", ""thegn""], [""granulative"", ""revaluating""], [""redhearted"", ""rethreaded""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""animize\"", \""miazine\"", \""revaluating\"", \""granulative\"", \""boultel\"", \""boutell\"", \""dogmen\"", \""gnomed\"", \""ghent\"", \""thegn\"", \""redhearted\"", \""rethreaded\"", \""comet\"", \""comte\""]\n"",
    ""answer"": ""[[\""animize\"", \""miazine\""], [\""boultel\"", \""boutell\""], [\""comet\"", \""comte\""], [\""dogmen\"", \""gnomed\""], [\""ghent\"", \""thegn\""], [\""granulative\"", \""revaluating\""], [\""redhearted\"", \""rethreaded\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 402,
        ""words"": [
            ""animize"",
            ""miazine"",
            ""revaluating"",
            ""granulative"",
            ""boultel"",
            ""boutell"",
            ""dogmen"",
            ""gnomed"",
            ""ghent"",
            ""thegn"",
            ""redhearted"",
            ""rethreaded"",
            ""comet"",
            ""comte""
        ],
        ""solution"": [
            [
                ""animize"",
                ""miazine""
            ],
            [
                ""boultel"",
                ""boutell""
            ],
            [
                ""comet"",
                ""comte""
            ],
            [
                ""dogmen"",
                ""gnomed""
            ],
            [
                ""ghent"",
                ""thegn""
            ],
            [
                ""granulative"",
                ""revaluating""
            ],
            [
                ""redhearted"",
                ""rethreaded""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
403,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nog"", ""gon"", ""informal"", ""formalin"", ""springed"", ""sprindge"", ""costispinal"", ""pansciolist"", ""railage"", ""algeria"", ""regalia"", ""lairage"", ""argaile""]
","[[""algeria"", ""argaile"", ""lairage"", ""railage"", ""regalia""], [""costispinal"", ""pansciolist""], [""formalin"", ""informal""], [""gon"", ""nog""], [""sprindge"", ""springed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nog\"", \""gon\"", \""informal\"", \""formalin\"", \""springed\"", \""sprindge\"", \""costispinal\"", \""pansciolist\"", \""railage\"", \""algeria\"", \""regalia\"", \""lairage\"", \""argaile\""]\n"",
    ""answer"": ""[[\""algeria\"", \""argaile\"", \""lairage\"", \""railage\"", \""regalia\""], [\""costispinal\"", \""pansciolist\""], [\""formalin\"", \""informal\""], [\""gon\"", \""nog\""], [\""sprindge\"", \""springed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 403,
        ""words"": [
            ""nog"",
            ""gon"",
            ""informal"",
            ""formalin"",
            ""springed"",
            ""sprindge"",
            ""costispinal"",
            ""pansciolist"",
            ""railage"",
            ""algeria"",
            ""regalia"",
            ""lairage"",
            ""argaile""
        ],
        ""solution"": [
            [
                ""algeria"",
                ""argaile"",
                ""lairage"",
                ""railage"",
                ""regalia""
            ],
            [
                ""costispinal"",
                ""pansciolist""
            ],
            [
                ""formalin"",
                ""informal""
            ],
            [
                ""gon"",
                ""nog""
            ],
            [
                ""sprindge"",
                ""springed""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
404,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""floreat"", ""floater"", ""sponsal"", ""plasson"", ""doxie"", ""oxide"", ""cornada"", ""cardona"", ""lobbied"", ""bilobed"", ""truckers"", ""restruck"", ""extradural"", ""dextraural"", ""decnet"", ""cedent"", ""decent""]
","[[""bilobed"", ""lobbied""], [""cardona"", ""cornada""], [""cedent"", ""decent"", ""decnet""], [""dextraural"", ""extradural""], [""doxie"", ""oxide""], [""floater"", ""floreat""], [""plasson"", ""sponsal""], [""restruck"", ""truckers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""floreat\"", \""floater\"", \""sponsal\"", \""plasson\"", \""doxie\"", \""oxide\"", \""cornada\"", \""cardona\"", \""lobbied\"", \""bilobed\"", \""truckers\"", \""restruck\"", \""extradural\"", \""dextraural\"", \""decnet\"", \""cedent\"", \""decent\""]\n"",
    ""answer"": ""[[\""bilobed\"", \""lobbied\""], [\""cardona\"", \""cornada\""], [\""cedent\"", \""decent\"", \""decnet\""], [\""dextraural\"", \""extradural\""], [\""doxie\"", \""oxide\""], [\""floater\"", \""floreat\""], [\""plasson\"", \""sponsal\""], [\""restruck\"", \""truckers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 404,
        ""words"": [
            ""floreat"",
            ""floater"",
            ""sponsal"",
            ""plasson"",
            ""doxie"",
            ""oxide"",
            ""cornada"",
            ""cardona"",
            ""lobbied"",
            ""bilobed"",
            ""truckers"",
            ""restruck"",
            ""extradural"",
            ""dextraural"",
            ""decnet"",
            ""cedent"",
            ""decent""
        ],
        ""solution"": [
            [
                ""bilobed"",
                ""lobbied""
            ],
            [
                ""cardona"",
                ""cornada""
            ],
            [
                ""cedent"",
                ""decent"",
                ""decnet""
            ],
            [
                ""dextraural"",
                ""extradural""
            ],
            [
                ""doxie"",
                ""oxide""
            ],
            [
                ""floater"",
                ""floreat""
            ],
            [
                ""plasson"",
                ""sponsal""
            ],
            [
                ""restruck"",
                ""truckers""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
405,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cultch"", ""clutch"", ""aphelion"", ""phelonia"", ""phenolia"", ""sidership"", ""spiderish"", ""adrenotropic"", ""incorporated"", ""assented"", ""sensated"", ""enatic"", ""anetic"", ""intruders"", ""unstirred"", ""chagan"", ""changa"", ""quienal"", ""quinela"", ""navalist"", ""latvians"", ""salivant"", ""valiants""]
","[[""adrenotropic"", ""incorporated""], [""anetic"", ""enatic""], [""aphelion"", ""phelonia"", ""phenolia""], [""assented"", ""sensated""], [""chagan"", ""changa""], [""clutch"", ""cultch""], [""intruders"", ""unstirred""], [""latvians"", ""navalist"", ""salivant"", ""valiants""], [""quienal"", ""quinela""], [""sidership"", ""spiderish""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cultch\"", \""clutch\"", \""aphelion\"", \""phelonia\"", \""phenolia\"", \""sidership\"", \""spiderish\"", \""adrenotropic\"", \""incorporated\"", \""assented\"", \""sensated\"", \""enatic\"", \""anetic\"", \""intruders\"", \""unstirred\"", \""chagan\"", \""changa\"", \""quienal\"", \""quinela\"", \""navalist\"", \""latvians\"", \""salivant\"", \""valiants\""]\n"",
    ""answer"": ""[[\""adrenotropic\"", \""incorporated\""], [\""anetic\"", \""enatic\""], [\""aphelion\"", \""phelonia\"", \""phenolia\""], [\""assented\"", \""sensated\""], [\""chagan\"", \""changa\""], [\""clutch\"", \""cultch\""], [\""intruders\"", \""unstirred\""], [\""latvians\"", \""navalist\"", \""salivant\"", \""valiants\""], [\""quienal\"", \""quinela\""], [\""sidership\"", \""spiderish\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 405,
        ""words"": [
            ""cultch"",
            ""clutch"",
            ""aphelion"",
            ""phelonia"",
            ""phenolia"",
            ""sidership"",
            ""spiderish"",
            ""adrenotropic"",
            ""incorporated"",
            ""assented"",
            ""sensated"",
            ""enatic"",
            ""anetic"",
            ""intruders"",
            ""unstirred"",
            ""chagan"",
            ""changa"",
            ""quienal"",
            ""quinela"",
            ""navalist"",
            ""latvians"",
            ""salivant"",
            ""valiants""
        ],
        ""solution"": [
            [
                ""adrenotropic"",
                ""incorporated""
            ],
            [
                ""anetic"",
                ""enatic""
            ],
            [
                ""aphelion"",
                ""phelonia"",
                ""phenolia""
            ],
            [
                ""assented"",
                ""sensated""
            ],
            [
                ""chagan"",
                ""changa""
            ],
            [
                ""clutch"",
                ""cultch""
            ],
            [
                ""intruders"",
                ""unstirred""
            ],
            [
                ""latvians"",
                ""navalist"",
                ""salivant"",
                ""valiants""
            ],
            [
                ""quienal"",
                ""quinela""
            ],
            [
                ""sidership"",
                ""spiderish""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
406,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""shor"", ""rhos"", ""hors"", ""indenters"", ""intenders"", ""germon"", ""morgen"", ""monger"", ""somberness"", ""sombreness"", ""anicular"", ""caulinar"", ""carinula""]
","[[""anicular"", ""carinula"", ""caulinar""], [""germon"", ""monger"", ""morgen""], [""hors"", ""rhos"", ""shor""], [""indenters"", ""intenders""], [""somberness"", ""sombreness""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""shor\"", \""rhos\"", \""hors\"", \""indenters\"", \""intenders\"", \""germon\"", \""morgen\"", \""monger\"", \""somberness\"", \""sombreness\"", \""anicular\"", \""caulinar\"", \""carinula\""]\n"",
    ""answer"": ""[[\""anicular\"", \""carinula\"", \""caulinar\""], [\""germon\"", \""monger\"", \""morgen\""], [\""hors\"", \""rhos\"", \""shor\""], [\""indenters\"", \""intenders\""], [\""somberness\"", \""sombreness\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 406,
        ""words"": [
            ""shor"",
            ""rhos"",
            ""hors"",
            ""indenters"",
            ""intenders"",
            ""germon"",
            ""morgen"",
            ""monger"",
            ""somberness"",
            ""sombreness"",
            ""anicular"",
            ""caulinar"",
            ""carinula""
        ],
        ""solution"": [
            [
                ""anicular"",
                ""carinula"",
                ""caulinar""
            ],
            [
                ""germon"",
                ""monger"",
                ""morgen""
            ],
            [
                ""hors"",
                ""rhos"",
                ""shor""
            ],
            [
                ""indenters"",
                ""intenders""
            ],
            [
                ""somberness"",
                ""sombreness""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
407,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""granulitic"", ""curtailing"", ""coteline"", ""election"", ""reearn"", ""earner"", ""ranere"", ""nearer"", ""circut"", ""turcic"", ""goodyship"", ""gipsyhood"", ""sheely"", ""sheyle"", ""unreel"", ""renule"", ""enlure"", ""pliancy"", ""pycnial""]
","[[""circut"", ""turcic""], [""coteline"", ""election""], [""curtailing"", ""granulitic""], [""earner"", ""nearer"", ""ranere"", ""reearn""], [""enlure"", ""renule"", ""unreel""], [""gipsyhood"", ""goodyship""], [""pliancy"", ""pycnial""], [""sheely"", ""sheyle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""granulitic\"", \""curtailing\"", \""coteline\"", \""election\"", \""reearn\"", \""earner\"", \""ranere\"", \""nearer\"", \""circut\"", \""turcic\"", \""goodyship\"", \""gipsyhood\"", \""sheely\"", \""sheyle\"", \""unreel\"", \""renule\"", \""enlure\"", \""pliancy\"", \""pycnial\""]\n"",
    ""answer"": ""[[\""circut\"", \""turcic\""], [\""coteline\"", \""election\""], [\""curtailing\"", \""granulitic\""], [\""earner\"", \""nearer\"", \""ranere\"", \""reearn\""], [\""enlure\"", \""renule\"", \""unreel\""], [\""gipsyhood\"", \""goodyship\""], [\""pliancy\"", \""pycnial\""], [\""sheely\"", \""sheyle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 407,
        ""words"": [
            ""granulitic"",
            ""curtailing"",
            ""coteline"",
            ""election"",
            ""reearn"",
            ""earner"",
            ""ranere"",
            ""nearer"",
            ""circut"",
            ""turcic"",
            ""goodyship"",
            ""gipsyhood"",
            ""sheely"",
            ""sheyle"",
            ""unreel"",
            ""renule"",
            ""enlure"",
            ""pliancy"",
            ""pycnial""
        ],
        ""solution"": [
            [
                ""circut"",
                ""turcic""
            ],
            [
                ""coteline"",
                ""election""
            ],
            [
                ""curtailing"",
                ""granulitic""
            ],
            [
                ""earner"",
                ""nearer"",
                ""ranere"",
                ""reearn""
            ],
            [
                ""enlure"",
                ""renule"",
                ""unreel""
            ],
            [
                ""gipsyhood"",
                ""goodyship""
            ],
            [
                ""pliancy"",
                ""pycnial""
            ],
            [
                ""sheely"",
                ""sheyle""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
408,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""petchary"", ""patchery"", ""angwich"", ""chinwag"", ""chawing"", ""unperverted"", ""preventured""]
","[[""angwich"", ""chawing"", ""chinwag""], [""patchery"", ""petchary""], [""preventured"", ""unperverted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""petchary\"", \""patchery\"", \""angwich\"", \""chinwag\"", \""chawing\"", \""unperverted\"", \""preventured\""]\n"",
    ""answer"": ""[[\""angwich\"", \""chawing\"", \""chinwag\""], [\""patchery\"", \""petchary\""], [\""preventured\"", \""unperverted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 408,
        ""words"": [
            ""petchary"",
            ""patchery"",
            ""angwich"",
            ""chinwag"",
            ""chawing"",
            ""unperverted"",
            ""preventured""
        ],
        ""solution"": [
            [
                ""angwich"",
                ""chawing"",
                ""chinwag""
            ],
            [
                ""patchery"",
                ""petchary""
            ],
            [
                ""preventured"",
                ""unperverted""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
409,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""zeatins"", ""zaniest"", ""spunk"", ""punks"", ""gridelin"", ""dreiling"", ""numeration"", ""mountainer"", ""nominature""]
","[[""dreiling"", ""gridelin""], [""mountainer"", ""nominature"", ""numeration""], [""punks"", ""spunk""], [""zaniest"", ""zeatins""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""zeatins\"", \""zaniest\"", \""spunk\"", \""punks\"", \""gridelin\"", \""dreiling\"", \""numeration\"", \""mountainer\"", \""nominature\""]\n"",
    ""answer"": ""[[\""dreiling\"", \""gridelin\""], [\""mountainer\"", \""nominature\"", \""numeration\""], [\""punks\"", \""spunk\""], [\""zaniest\"", \""zeatins\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 409,
        ""words"": [
            ""zeatins"",
            ""zaniest"",
            ""spunk"",
            ""punks"",
            ""gridelin"",
            ""dreiling"",
            ""numeration"",
            ""mountainer"",
            ""nominature""
        ],
        ""solution"": [
            [
                ""dreiling"",
                ""gridelin""
            ],
            [
                ""mountainer"",
                ""nominature"",
                ""numeration""
            ],
            [
                ""punks"",
                ""spunk""
            ],
            [
                ""zaniest"",
                ""zeatins""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
410,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sportier"", ""pierrots"", ""pongee"", ""eponge"", ""khatti"", ""thitka"", ""escaper"", ""percase"", ""respace"", ""spondiac"", ""spondaic"", ""spadonic"", ""emendator"", ""ondameter"", ""geotical"", ""goetical""]
","[[""emendator"", ""ondameter""], [""eponge"", ""pongee""], [""escaper"", ""percase"", ""respace""], [""geotical"", ""goetical""], [""khatti"", ""thitka""], [""pierrots"", ""sportier""], [""spadonic"", ""spondaic"", ""spondiac""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sportier\"", \""pierrots\"", \""pongee\"", \""eponge\"", \""khatti\"", \""thitka\"", \""escaper\"", \""percase\"", \""respace\"", \""spondiac\"", \""spondaic\"", \""spadonic\"", \""emendator\"", \""ondameter\"", \""geotical\"", \""goetical\""]\n"",
    ""answer"": ""[[\""emendator\"", \""ondameter\""], [\""eponge\"", \""pongee\""], [\""escaper\"", \""percase\"", \""respace\""], [\""geotical\"", \""goetical\""], [\""khatti\"", \""thitka\""], [\""pierrots\"", \""sportier\""], [\""spadonic\"", \""spondaic\"", \""spondiac\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 410,
        ""words"": [
            ""sportier"",
            ""pierrots"",
            ""pongee"",
            ""eponge"",
            ""khatti"",
            ""thitka"",
            ""escaper"",
            ""percase"",
            ""respace"",
            ""spondiac"",
            ""spondaic"",
            ""spadonic"",
            ""emendator"",
            ""ondameter"",
            ""geotical"",
            ""goetical""
        ],
        ""solution"": [
            [
                ""emendator"",
                ""ondameter""
            ],
            [
                ""eponge"",
                ""pongee""
            ],
            [
                ""escaper"",
                ""percase"",
                ""respace""
            ],
            [
                ""geotical"",
                ""goetical""
            ],
            [
                ""khatti"",
                ""thitka""
            ],
            [
                ""pierrots"",
                ""sportier""
            ],
            [
                ""spadonic"",
                ""spondaic"",
                ""spondiac""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
411,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""amantadine"", ""adamantine"", ""lymphectasia"", ""metaphysical"", ""lookout"", ""outlook"", ""rechristens"", ""christeners""]
","[[""adamantine"", ""amantadine""], [""christeners"", ""rechristens""], [""lookout"", ""outlook""], [""lymphectasia"", ""metaphysical""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""amantadine\"", \""adamantine\"", \""lymphectasia\"", \""metaphysical\"", \""lookout\"", \""outlook\"", \""rechristens\"", \""christeners\""]\n"",
    ""answer"": ""[[\""adamantine\"", \""amantadine\""], [\""christeners\"", \""rechristens\""], [\""lookout\"", \""outlook\""], [\""lymphectasia\"", \""metaphysical\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 411,
        ""words"": [
            ""amantadine"",
            ""adamantine"",
            ""lymphectasia"",
            ""metaphysical"",
            ""lookout"",
            ""outlook"",
            ""rechristens"",
            ""christeners""
        ],
        ""solution"": [
            [
                ""adamantine"",
                ""amantadine""
            ],
            [
                ""christeners"",
                ""rechristens""
            ],
            [
                ""lookout"",
                ""outlook""
            ],
            [
                ""lymphectasia"",
                ""metaphysical""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
412,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""congo"", ""cogon"", ""achenes"", ""casheen"", ""enchase"", ""corrida"", ""ricardo"", ""for"", ""orf"", ""phylloclad"", ""cladophyll"", ""tylaster"", ""slattery""]
","[[""achenes"", ""casheen"", ""enchase""], [""cladophyll"", ""phylloclad""], [""cogon"", ""congo""], [""corrida"", ""ricardo""], [""for"", ""orf""], [""slattery"", ""tylaster""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""congo\"", \""cogon\"", \""achenes\"", \""casheen\"", \""enchase\"", \""corrida\"", \""ricardo\"", \""for\"", \""orf\"", \""phylloclad\"", \""cladophyll\"", \""tylaster\"", \""slattery\""]\n"",
    ""answer"": ""[[\""achenes\"", \""casheen\"", \""enchase\""], [\""cladophyll\"", \""phylloclad\""], [\""cogon\"", \""congo\""], [\""corrida\"", \""ricardo\""], [\""for\"", \""orf\""], [\""slattery\"", \""tylaster\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 412,
        ""words"": [
            ""congo"",
            ""cogon"",
            ""achenes"",
            ""casheen"",
            ""enchase"",
            ""corrida"",
            ""ricardo"",
            ""for"",
            ""orf"",
            ""phylloclad"",
            ""cladophyll"",
            ""tylaster"",
            ""slattery""
        ],
        ""solution"": [
            [
                ""achenes"",
                ""casheen"",
                ""enchase""
            ],
            [
                ""cladophyll"",
                ""phylloclad""
            ],
            [
                ""cogon"",
                ""congo""
            ],
            [
                ""corrida"",
                ""ricardo""
            ],
            [
                ""for"",
                ""orf""
            ],
            [
                ""slattery"",
                ""tylaster""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
413,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""emeses"", ""semese"", ""cosset"", ""estocs"", ""cosets"", ""escots"", ""cestos"", ""gesneria"", ""anergies"", ""neoneds"", ""donnees"", ""trichromic"", ""microcrith"", ""unhalted"", ""unlathed"", ""termine"", ""tiremen"", ""cheepers"", ""speecher"", ""duffer"", ""ruffed"", ""tidiness"", ""insisted""]
","[[""anergies"", ""gesneria""], [""cestos"", ""cosets"", ""cosset"", ""escots"", ""estocs""], [""cheepers"", ""speecher""], [""donnees"", ""neoneds""], [""duffer"", ""ruffed""], [""emeses"", ""semese""], [""insisted"", ""tidiness""], [""microcrith"", ""trichromic""], [""termine"", ""tiremen""], [""unhalted"", ""unlathed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""emeses\"", \""semese\"", \""cosset\"", \""estocs\"", \""cosets\"", \""escots\"", \""cestos\"", \""gesneria\"", \""anergies\"", \""neoneds\"", \""donnees\"", \""trichromic\"", \""microcrith\"", \""unhalted\"", \""unlathed\"", \""termine\"", \""tiremen\"", \""cheepers\"", \""speecher\"", \""duffer\"", \""ruffed\"", \""tidiness\"", \""insisted\""]\n"",
    ""answer"": ""[[\""anergies\"", \""gesneria\""], [\""cestos\"", \""cosets\"", \""cosset\"", \""escots\"", \""estocs\""], [\""cheepers\"", \""speecher\""], [\""donnees\"", \""neoneds\""], [\""duffer\"", \""ruffed\""], [\""emeses\"", \""semese\""], [\""insisted\"", \""tidiness\""], [\""microcrith\"", \""trichromic\""], [\""termine\"", \""tiremen\""], [\""unhalted\"", \""unlathed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 413,
        ""words"": [
            ""emeses"",
            ""semese"",
            ""cosset"",
            ""estocs"",
            ""cosets"",
            ""escots"",
            ""cestos"",
            ""gesneria"",
            ""anergies"",
            ""neoneds"",
            ""donnees"",
            ""trichromic"",
            ""microcrith"",
            ""unhalted"",
            ""unlathed"",
            ""termine"",
            ""tiremen"",
            ""cheepers"",
            ""speecher"",
            ""duffer"",
            ""ruffed"",
            ""tidiness"",
            ""insisted""
        ],
        ""solution"": [
            [
                ""anergies"",
                ""gesneria""
            ],
            [
                ""cestos"",
                ""cosets"",
                ""cosset"",
                ""escots"",
                ""estocs""
            ],
            [
                ""cheepers"",
                ""speecher""
            ],
            [
                ""donnees"",
                ""neoneds""
            ],
            [
                ""duffer"",
                ""ruffed""
            ],
            [
                ""emeses"",
                ""semese""
            ],
            [
                ""insisted"",
                ""tidiness""
            ],
            [
                ""microcrith"",
                ""trichromic""
            ],
            [
                ""termine"",
                ""tiremen""
            ],
            [
                ""unhalted"",
                ""unlathed""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
414,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""perter"", ""preter"", ""shiel"", ""heils"", ""misgauged"", ""misguaged"", ""loathly"", ""tallyho"", ""labra"", ""rabal"", ""masculation"", ""maculations"", ""scenical"", ""calcines"", ""nebulose"", ""bluenose"", ""lava"", ""aval""]
","[[""aval"", ""lava""], [""bluenose"", ""nebulose""], [""calcines"", ""scenical""], [""heils"", ""shiel""], [""labra"", ""rabal""], [""loathly"", ""tallyho""], [""maculations"", ""masculation""], [""misgauged"", ""misguaged""], [""perter"", ""preter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""perter\"", \""preter\"", \""shiel\"", \""heils\"", \""misgauged\"", \""misguaged\"", \""loathly\"", \""tallyho\"", \""labra\"", \""rabal\"", \""masculation\"", \""maculations\"", \""scenical\"", \""calcines\"", \""nebulose\"", \""bluenose\"", \""lava\"", \""aval\""]\n"",
    ""answer"": ""[[\""aval\"", \""lava\""], [\""bluenose\"", \""nebulose\""], [\""calcines\"", \""scenical\""], [\""heils\"", \""shiel\""], [\""labra\"", \""rabal\""], [\""loathly\"", \""tallyho\""], [\""maculations\"", \""masculation\""], [\""misgauged\"", \""misguaged\""], [\""perter\"", \""preter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 414,
        ""words"": [
            ""perter"",
            ""preter"",
            ""shiel"",
            ""heils"",
            ""misgauged"",
            ""misguaged"",
            ""loathly"",
            ""tallyho"",
            ""labra"",
            ""rabal"",
            ""masculation"",
            ""maculations"",
            ""scenical"",
            ""calcines"",
            ""nebulose"",
            ""bluenose"",
            ""lava"",
            ""aval""
        ],
        ""solution"": [
            [
                ""aval"",
                ""lava""
            ],
            [
                ""bluenose"",
                ""nebulose""
            ],
            [
                ""calcines"",
                ""scenical""
            ],
            [
                ""heils"",
                ""shiel""
            ],
            [
                ""labra"",
                ""rabal""
            ],
            [
                ""loathly"",
                ""tallyho""
            ],
            [
                ""maculations"",
                ""masculation""
            ],
            [
                ""misgauged"",
                ""misguaged""
            ],
            [
                ""perter"",
                ""preter""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
415,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nemertinea"", ""minnetaree"", ""nylgau"", ""guanyl"", ""wacken"", ""acknew"", ""sistani"", ""isatins"", ""dims"", ""mids"", ""encored"", ""ecderon"", ""encoder"", ""quinnat"", ""quintan"", ""lins"", ""nils""]
","[[""acknew"", ""wacken""], [""dims"", ""mids""], [""ecderon"", ""encoder"", ""encored""], [""guanyl"", ""nylgau""], [""isatins"", ""sistani""], [""lins"", ""nils""], [""minnetaree"", ""nemertinea""], [""quinnat"", ""quintan""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nemertinea\"", \""minnetaree\"", \""nylgau\"", \""guanyl\"", \""wacken\"", \""acknew\"", \""sistani\"", \""isatins\"", \""dims\"", \""mids\"", \""encored\"", \""ecderon\"", \""encoder\"", \""quinnat\"", \""quintan\"", \""lins\"", \""nils\""]\n"",
    ""answer"": ""[[\""acknew\"", \""wacken\""], [\""dims\"", \""mids\""], [\""ecderon\"", \""encoder\"", \""encored\""], [\""guanyl\"", \""nylgau\""], [\""isatins\"", \""sistani\""], [\""lins\"", \""nils\""], [\""minnetaree\"", \""nemertinea\""], [\""quinnat\"", \""quintan\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 415,
        ""words"": [
            ""nemertinea"",
            ""minnetaree"",
            ""nylgau"",
            ""guanyl"",
            ""wacken"",
            ""acknew"",
            ""sistani"",
            ""isatins"",
            ""dims"",
            ""mids"",
            ""encored"",
            ""ecderon"",
            ""encoder"",
            ""quinnat"",
            ""quintan"",
            ""lins"",
            ""nils""
        ],
        ""solution"": [
            [
                ""acknew"",
                ""wacken""
            ],
            [
                ""dims"",
                ""mids""
            ],
            [
                ""ecderon"",
                ""encoder"",
                ""encored""
            ],
            [
                ""guanyl"",
                ""nylgau""
            ],
            [
                ""isatins"",
                ""sistani""
            ],
            [
                ""lins"",
                ""nils""
            ],
            [
                ""minnetaree"",
                ""nemertinea""
            ],
            [
                ""quinnat"",
                ""quintan""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
416,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""virulence"", ""cervuline"", ""sherani"", ""nearish"", ""hernias"", ""monamniotic"", ""commination"", ""barrio"", ""brairo"", ""batad"", ""abdat"", ""quadrual"", ""quadrula""]
","[[""abdat"", ""batad""], [""barrio"", ""brairo""], [""cervuline"", ""virulence""], [""commination"", ""monamniotic""], [""hernias"", ""nearish"", ""sherani""], [""quadrual"", ""quadrula""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""virulence\"", \""cervuline\"", \""sherani\"", \""nearish\"", \""hernias\"", \""monamniotic\"", \""commination\"", \""barrio\"", \""brairo\"", \""batad\"", \""abdat\"", \""quadrual\"", \""quadrula\""]\n"",
    ""answer"": ""[[\""abdat\"", \""batad\""], [\""barrio\"", \""brairo\""], [\""cervuline\"", \""virulence\""], [\""commination\"", \""monamniotic\""], [\""hernias\"", \""nearish\"", \""sherani\""], [\""quadrual\"", \""quadrula\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 416,
        ""words"": [
            ""virulence"",
            ""cervuline"",
            ""sherani"",
            ""nearish"",
            ""hernias"",
            ""monamniotic"",
            ""commination"",
            ""barrio"",
            ""brairo"",
            ""batad"",
            ""abdat"",
            ""quadrual"",
            ""quadrula""
        ],
        ""solution"": [
            [
                ""abdat"",
                ""batad""
            ],
            [
                ""barrio"",
                ""brairo""
            ],
            [
                ""cervuline"",
                ""virulence""
            ],
            [
                ""commination"",
                ""monamniotic""
            ],
            [
                ""hernias"",
                ""nearish"",
                ""sherani""
            ],
            [
                ""quadrual"",
                ""quadrula""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
417,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""busser"", ""burses"", ""subers"", ""obelial"", ""bolelia"", ""lobelia"", ""nougats"", ""outsang"", ""sedations"", ""dissonate"", ""pillagers"", ""aspergill""]
","[[""aspergill"", ""pillagers""], [""bolelia"", ""lobelia"", ""obelial""], [""burses"", ""busser"", ""subers""], [""dissonate"", ""sedations""], [""nougats"", ""outsang""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""busser\"", \""burses\"", \""subers\"", \""obelial\"", \""bolelia\"", \""lobelia\"", \""nougats\"", \""outsang\"", \""sedations\"", \""dissonate\"", \""pillagers\"", \""aspergill\""]\n"",
    ""answer"": ""[[\""aspergill\"", \""pillagers\""], [\""bolelia\"", \""lobelia\"", \""obelial\""], [\""burses\"", \""busser\"", \""subers\""], [\""dissonate\"", \""sedations\""], [\""nougats\"", \""outsang\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 417,
        ""words"": [
            ""busser"",
            ""burses"",
            ""subers"",
            ""obelial"",
            ""bolelia"",
            ""lobelia"",
            ""nougats"",
            ""outsang"",
            ""sedations"",
            ""dissonate"",
            ""pillagers"",
            ""aspergill""
        ],
        ""solution"": [
            [
                ""aspergill"",
                ""pillagers""
            ],
            [
                ""bolelia"",
                ""lobelia"",
                ""obelial""
            ],
            [
                ""burses"",
                ""busser"",
                ""subers""
            ],
            [
                ""dissonate"",
                ""sedations""
            ],
            [
                ""nougats"",
                ""outsang""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
418,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""latigos"", ""galiots"", ""saligot"", ""sneest"", ""tenses"", ""subcenter"", ""rubescent"", ""subcentre""]
","[[""galiots"", ""latigos"", ""saligot""], [""rubescent"", ""subcenter"", ""subcentre""], [""sneest"", ""tenses""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""latigos\"", \""galiots\"", \""saligot\"", \""sneest\"", \""tenses\"", \""subcenter\"", \""rubescent\"", \""subcentre\""]\n"",
    ""answer"": ""[[\""galiots\"", \""latigos\"", \""saligot\""], [\""rubescent\"", \""subcenter\"", \""subcentre\""], [\""sneest\"", \""tenses\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 418,
        ""words"": [
            ""latigos"",
            ""galiots"",
            ""saligot"",
            ""sneest"",
            ""tenses"",
            ""subcenter"",
            ""rubescent"",
            ""subcentre""
        ],
        ""solution"": [
            [
                ""galiots"",
                ""latigos"",
                ""saligot""
            ],
            [
                ""rubescent"",
                ""subcenter"",
                ""subcentre""
            ],
            [
                ""sneest"",
                ""tenses""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
419,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""noverint"", ""inventor"", ""astheny"", ""shantey""]
","[[""astheny"", ""shantey""], [""inventor"", ""noverint""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""noverint\"", \""inventor\"", \""astheny\"", \""shantey\""]\n"",
    ""answer"": ""[[\""astheny\"", \""shantey\""], [\""inventor\"", \""noverint\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 419,
        ""words"": [
            ""noverint"",
            ""inventor"",
            ""astheny"",
            ""shantey""
        ],
        ""solution"": [
            [
                ""astheny"",
                ""shantey""
            ],
            [
                ""inventor"",
                ""noverint""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
420,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""diameters"", ""dreamiest"", ""mainsails"", ""massilian"", ""oime"", ""meio"", ""palude"", ""uplead"", ""procanal"", ""coplanar"", ""encrusts"", ""curtness"", ""cannulate"", ""antelucan""]
","[[""antelucan"", ""cannulate""], [""coplanar"", ""procanal""], [""curtness"", ""encrusts""], [""diameters"", ""dreamiest""], [""mainsails"", ""massilian""], [""meio"", ""oime""], [""palude"", ""uplead""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""diameters\"", \""dreamiest\"", \""mainsails\"", \""massilian\"", \""oime\"", \""meio\"", \""palude\"", \""uplead\"", \""procanal\"", \""coplanar\"", \""encrusts\"", \""curtness\"", \""cannulate\"", \""antelucan\""]\n"",
    ""answer"": ""[[\""antelucan\"", \""cannulate\""], [\""coplanar\"", \""procanal\""], [\""curtness\"", \""encrusts\""], [\""diameters\"", \""dreamiest\""], [\""mainsails\"", \""massilian\""], [\""meio\"", \""oime\""], [\""palude\"", \""uplead\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 420,
        ""words"": [
            ""diameters"",
            ""dreamiest"",
            ""mainsails"",
            ""massilian"",
            ""oime"",
            ""meio"",
            ""palude"",
            ""uplead"",
            ""procanal"",
            ""coplanar"",
            ""encrusts"",
            ""curtness"",
            ""cannulate"",
            ""antelucan""
        ],
        ""solution"": [
            [
                ""antelucan"",
                ""cannulate""
            ],
            [
                ""coplanar"",
                ""procanal""
            ],
            [
                ""curtness"",
                ""encrusts""
            ],
            [
                ""diameters"",
                ""dreamiest""
            ],
            [
                ""mainsails"",
                ""massilian""
            ],
            [
                ""meio"",
                ""oime""
            ],
            [
                ""palude"",
                ""uplead""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
421,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""drays"", ""dryas"", ""yards"", ""stephane"", ""heptanes"", ""haptenes"", ""foetal"", ""folate"", ""maternities"", ""semitertian"", ""disponed"", ""pondside""]
","[[""disponed"", ""pondside""], [""drays"", ""dryas"", ""yards""], [""foetal"", ""folate""], [""haptenes"", ""heptanes"", ""stephane""], [""maternities"", ""semitertian""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""drays\"", \""dryas\"", \""yards\"", \""stephane\"", \""heptanes\"", \""haptenes\"", \""foetal\"", \""folate\"", \""maternities\"", \""semitertian\"", \""disponed\"", \""pondside\""]\n"",
    ""answer"": ""[[\""disponed\"", \""pondside\""], [\""drays\"", \""dryas\"", \""yards\""], [\""foetal\"", \""folate\""], [\""haptenes\"", \""heptanes\"", \""stephane\""], [\""maternities\"", \""semitertian\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 421,
        ""words"": [
            ""drays"",
            ""dryas"",
            ""yards"",
            ""stephane"",
            ""heptanes"",
            ""haptenes"",
            ""foetal"",
            ""folate"",
            ""maternities"",
            ""semitertian"",
            ""disponed"",
            ""pondside""
        ],
        ""solution"": [
            [
                ""disponed"",
                ""pondside""
            ],
            [
                ""drays"",
                ""dryas"",
                ""yards""
            ],
            [
                ""foetal"",
                ""folate""
            ],
            [
                ""haptenes"",
                ""heptanes"",
                ""stephane""
            ],
            [
                ""maternities"",
                ""semitertian""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
422,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""trotline"", ""interlot"", ""spark"", ""parks"", ""hastener"", ""heartens"", ""slump"", ""lumps"", ""plums"", ""inept"", ""pinte"", ""nepit"", ""cuir"", ""uric""]
","[[""cuir"", ""uric""], [""hastener"", ""heartens""], [""inept"", ""nepit"", ""pinte""], [""interlot"", ""trotline""], [""lumps"", ""plums"", ""slump""], [""parks"", ""spark""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""trotline\"", \""interlot\"", \""spark\"", \""parks\"", \""hastener\"", \""heartens\"", \""slump\"", \""lumps\"", \""plums\"", \""inept\"", \""pinte\"", \""nepit\"", \""cuir\"", \""uric\""]\n"",
    ""answer"": ""[[\""cuir\"", \""uric\""], [\""hastener\"", \""heartens\""], [\""inept\"", \""nepit\"", \""pinte\""], [\""interlot\"", \""trotline\""], [\""lumps\"", \""plums\"", \""slump\""], [\""parks\"", \""spark\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 422,
        ""words"": [
            ""trotline"",
            ""interlot"",
            ""spark"",
            ""parks"",
            ""hastener"",
            ""heartens"",
            ""slump"",
            ""lumps"",
            ""plums"",
            ""inept"",
            ""pinte"",
            ""nepit"",
            ""cuir"",
            ""uric""
        ],
        ""solution"": [
            [
                ""cuir"",
                ""uric""
            ],
            [
                ""hastener"",
                ""heartens""
            ],
            [
                ""inept"",
                ""nepit"",
                ""pinte""
            ],
            [
                ""interlot"",
                ""trotline""
            ],
            [
                ""lumps"",
                ""plums"",
                ""slump""
            ],
            [
                ""parks"",
                ""spark""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
423,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""discrepation"", ""predications"", ""southed"", ""shouted""]
","[[""discrepation"", ""predications""], [""shouted"", ""southed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""discrepation\"", \""predications\"", \""southed\"", \""shouted\""]\n"",
    ""answer"": ""[[\""discrepation\"", \""predications\""], [\""shouted\"", \""southed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 423,
        ""words"": [
            ""discrepation"",
            ""predications"",
            ""southed"",
            ""shouted""
        ],
        ""solution"": [
            [
                ""discrepation"",
                ""predications""
            ],
            [
                ""shouted"",
                ""southed""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
424,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reflate"", ""faltere"", ""enosist"", ""nosiest"", ""dogs"", ""gods"", ""presell"", ""speller"", ""respell"", ""trindles"", ""tendrils"", ""loretin"", ""retinol"", ""athena"", ""aneath"", ""ahtena"", ""labiomental"", ""mentolabial"", ""outpull"", ""pullout""]
","[[""ahtena"", ""aneath"", ""athena""], [""dogs"", ""gods""], [""enosist"", ""nosiest""], [""faltere"", ""reflate""], [""labiomental"", ""mentolabial""], [""loretin"", ""retinol""], [""outpull"", ""pullout""], [""presell"", ""respell"", ""speller""], [""tendrils"", ""trindles""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reflate\"", \""faltere\"", \""enosist\"", \""nosiest\"", \""dogs\"", \""gods\"", \""presell\"", \""speller\"", \""respell\"", \""trindles\"", \""tendrils\"", \""loretin\"", \""retinol\"", \""athena\"", \""aneath\"", \""ahtena\"", \""labiomental\"", \""mentolabial\"", \""outpull\"", \""pullout\""]\n"",
    ""answer"": ""[[\""ahtena\"", \""aneath\"", \""athena\""], [\""dogs\"", \""gods\""], [\""enosist\"", \""nosiest\""], [\""faltere\"", \""reflate\""], [\""labiomental\"", \""mentolabial\""], [\""loretin\"", \""retinol\""], [\""outpull\"", \""pullout\""], [\""presell\"", \""respell\"", \""speller\""], [\""tendrils\"", \""trindles\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 424,
        ""words"": [
            ""reflate"",
            ""faltere"",
            ""enosist"",
            ""nosiest"",
            ""dogs"",
            ""gods"",
            ""presell"",
            ""speller"",
            ""respell"",
            ""trindles"",
            ""tendrils"",
            ""loretin"",
            ""retinol"",
            ""athena"",
            ""aneath"",
            ""ahtena"",
            ""labiomental"",
            ""mentolabial"",
            ""outpull"",
            ""pullout""
        ],
        ""solution"": [
            [
                ""ahtena"",
                ""aneath"",
                ""athena""
            ],
            [
                ""dogs"",
                ""gods""
            ],
            [
                ""enosist"",
                ""nosiest""
            ],
            [
                ""faltere"",
                ""reflate""
            ],
            [
                ""labiomental"",
                ""mentolabial""
            ],
            [
                ""loretin"",
                ""retinol""
            ],
            [
                ""outpull"",
                ""pullout""
            ],
            [
                ""presell"",
                ""respell"",
                ""speller""
            ],
            [
                ""tendrils"",
                ""trindles""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
425,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""decliner"", ""reclined"", ""hysteropathy"", ""hysterophyta"", ""dicyan"", ""cyanid"", ""lively"", ""vilely"", ""evilly""]
","[[""cyanid"", ""dicyan""], [""decliner"", ""reclined""], [""evilly"", ""lively"", ""vilely""], [""hysteropathy"", ""hysterophyta""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""decliner\"", \""reclined\"", \""hysteropathy\"", \""hysterophyta\"", \""dicyan\"", \""cyanid\"", \""lively\"", \""vilely\"", \""evilly\""]\n"",
    ""answer"": ""[[\""cyanid\"", \""dicyan\""], [\""decliner\"", \""reclined\""], [\""evilly\"", \""lively\"", \""vilely\""], [\""hysteropathy\"", \""hysterophyta\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 425,
        ""words"": [
            ""decliner"",
            ""reclined"",
            ""hysteropathy"",
            ""hysterophyta"",
            ""dicyan"",
            ""cyanid"",
            ""lively"",
            ""vilely"",
            ""evilly""
        ],
        ""solution"": [
            [
                ""cyanid"",
                ""dicyan""
            ],
            [
                ""decliner"",
                ""reclined""
            ],
            [
                ""evilly"",
                ""lively"",
                ""vilely""
            ],
            [
                ""hysteropathy"",
                ""hysterophyta""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
426,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""kapote"", ""topeka"", ""laithe"", ""halite"", ""lathie"", ""entomologise"", ""entomologies""]
","[[""entomologies"", ""entomologise""], [""halite"", ""laithe"", ""lathie""], [""kapote"", ""topeka""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""kapote\"", \""topeka\"", \""laithe\"", \""halite\"", \""lathie\"", \""entomologise\"", \""entomologies\""]\n"",
    ""answer"": ""[[\""entomologies\"", \""entomologise\""], [\""halite\"", \""laithe\"", \""lathie\""], [\""kapote\"", \""topeka\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 426,
        ""words"": [
            ""kapote"",
            ""topeka"",
            ""laithe"",
            ""halite"",
            ""lathie"",
            ""entomologise"",
            ""entomologies""
        ],
        ""solution"": [
            [
                ""entomologies"",
                ""entomologise""
            ],
            [
                ""halite"",
                ""laithe"",
                ""lathie""
            ],
            [
                ""kapote"",
                ""topeka""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
427,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rewards"", ""warders"", ""redraws"", ""scobicular"", ""scrobicula"", ""platen"", ""planet"", ""pantle"", ""acrasin"", ""carinas"", ""sarcina""]
","[[""acrasin"", ""carinas"", ""sarcina""], [""pantle"", ""planet"", ""platen""], [""redraws"", ""rewards"", ""warders""], [""scobicular"", ""scrobicula""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rewards\"", \""warders\"", \""redraws\"", \""scobicular\"", \""scrobicula\"", \""platen\"", \""planet\"", \""pantle\"", \""acrasin\"", \""carinas\"", \""sarcina\""]\n"",
    ""answer"": ""[[\""acrasin\"", \""carinas\"", \""sarcina\""], [\""pantle\"", \""planet\"", \""platen\""], [\""redraws\"", \""rewards\"", \""warders\""], [\""scobicular\"", \""scrobicula\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 427,
        ""words"": [
            ""rewards"",
            ""warders"",
            ""redraws"",
            ""scobicular"",
            ""scrobicula"",
            ""platen"",
            ""planet"",
            ""pantle"",
            ""acrasin"",
            ""carinas"",
            ""sarcina""
        ],
        ""solution"": [
            [
                ""acrasin"",
                ""carinas"",
                ""sarcina""
            ],
            [
                ""pantle"",
                ""planet"",
                ""platen""
            ],
            [
                ""redraws"",
                ""rewards"",
                ""warders""
            ],
            [
                ""scobicular"",
                ""scrobicula""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
428,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""opercules"", ""recouples"", ""temple"", ""pelmet"", ""flots"", ""lofts"", ""pareus"", ""pauser"", ""canoed"", ""deacon"", ""woodsmen"", ""downsome""]
","[[""canoed"", ""deacon""], [""downsome"", ""woodsmen""], [""flots"", ""lofts""], [""opercules"", ""recouples""], [""pareus"", ""pauser""], [""pelmet"", ""temple""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""opercules\"", \""recouples\"", \""temple\"", \""pelmet\"", \""flots\"", \""lofts\"", \""pareus\"", \""pauser\"", \""canoed\"", \""deacon\"", \""woodsmen\"", \""downsome\""]\n"",
    ""answer"": ""[[\""canoed\"", \""deacon\""], [\""downsome\"", \""woodsmen\""], [\""flots\"", \""lofts\""], [\""opercules\"", \""recouples\""], [\""pareus\"", \""pauser\""], [\""pelmet\"", \""temple\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 428,
        ""words"": [
            ""opercules"",
            ""recouples"",
            ""temple"",
            ""pelmet"",
            ""flots"",
            ""lofts"",
            ""pareus"",
            ""pauser"",
            ""canoed"",
            ""deacon"",
            ""woodsmen"",
            ""downsome""
        ],
        ""solution"": [
            [
                ""canoed"",
                ""deacon""
            ],
            [
                ""downsome"",
                ""woodsmen""
            ],
            [
                ""flots"",
                ""lofts""
            ],
            [
                ""opercules"",
                ""recouples""
            ],
            [
                ""pareus"",
                ""pauser""
            ],
            [
                ""pelmet"",
                ""temple""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
429,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""perceptually"", ""preceptually"", ""meaned"", ""demean"", ""amende"", ""nadeem"", ""rhyta"", ""yarth"", ""peeks"", ""pekes"", ""herophile"", ""rheophile"", ""interdome"", ""mordenite"", ""nemertoid"", ""trioleic"", ""elicitor""]
","[[""amende"", ""demean"", ""meaned"", ""nadeem""], [""elicitor"", ""trioleic""], [""herophile"", ""rheophile""], [""interdome"", ""mordenite"", ""nemertoid""], [""peeks"", ""pekes""], [""perceptually"", ""preceptually""], [""rhyta"", ""yarth""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""perceptually\"", \""preceptually\"", \""meaned\"", \""demean\"", \""amende\"", \""nadeem\"", \""rhyta\"", \""yarth\"", \""peeks\"", \""pekes\"", \""herophile\"", \""rheophile\"", \""interdome\"", \""mordenite\"", \""nemertoid\"", \""trioleic\"", \""elicitor\""]\n"",
    ""answer"": ""[[\""amende\"", \""demean\"", \""meaned\"", \""nadeem\""], [\""elicitor\"", \""trioleic\""], [\""herophile\"", \""rheophile\""], [\""interdome\"", \""mordenite\"", \""nemertoid\""], [\""peeks\"", \""pekes\""], [\""perceptually\"", \""preceptually\""], [\""rhyta\"", \""yarth\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 429,
        ""words"": [
            ""perceptually"",
            ""preceptually"",
            ""meaned"",
            ""demean"",
            ""amende"",
            ""nadeem"",
            ""rhyta"",
            ""yarth"",
            ""peeks"",
            ""pekes"",
            ""herophile"",
            ""rheophile"",
            ""interdome"",
            ""mordenite"",
            ""nemertoid"",
            ""trioleic"",
            ""elicitor""
        ],
        ""solution"": [
            [
                ""amende"",
                ""demean"",
                ""meaned"",
                ""nadeem""
            ],
            [
                ""elicitor"",
                ""trioleic""
            ],
            [
                ""herophile"",
                ""rheophile""
            ],
            [
                ""interdome"",
                ""mordenite"",
                ""nemertoid""
            ],
            [
                ""peeks"",
                ""pekes""
            ],
            [
                ""perceptually"",
                ""preceptually""
            ],
            [
                ""rhyta"",
                ""yarth""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
430,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reconstrue"", ""rescounter"", ""staidest"", ""distaste"", ""overmantel"", ""overmantle""]
","[[""distaste"", ""staidest""], [""overmantel"", ""overmantle""], [""reconstrue"", ""rescounter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reconstrue\"", \""rescounter\"", \""staidest\"", \""distaste\"", \""overmantel\"", \""overmantle\""]\n"",
    ""answer"": ""[[\""distaste\"", \""staidest\""], [\""overmantel\"", \""overmantle\""], [\""reconstrue\"", \""rescounter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 430,
        ""words"": [
            ""reconstrue"",
            ""rescounter"",
            ""staidest"",
            ""distaste"",
            ""overmantel"",
            ""overmantle""
        ],
        ""solution"": [
            [
                ""distaste"",
                ""staidest""
            ],
            [
                ""overmantel"",
                ""overmantle""
            ],
            [
                ""reconstrue"",
                ""rescounter""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
431,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""proteins"", ""ripstone"", ""femorotibial"", ""tibiofemoral"", ""holsters"", ""hostlers"", ""undecorated"", ""undercoated"", ""perorally"", ""preorally""]
","[[""femorotibial"", ""tibiofemoral""], [""holsters"", ""hostlers""], [""perorally"", ""preorally""], [""proteins"", ""ripstone""], [""undecorated"", ""undercoated""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""proteins\"", \""ripstone\"", \""femorotibial\"", \""tibiofemoral\"", \""holsters\"", \""hostlers\"", \""undecorated\"", \""undercoated\"", \""perorally\"", \""preorally\""]\n"",
    ""answer"": ""[[\""femorotibial\"", \""tibiofemoral\""], [\""holsters\"", \""hostlers\""], [\""perorally\"", \""preorally\""], [\""proteins\"", \""ripstone\""], [\""undecorated\"", \""undercoated\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 431,
        ""words"": [
            ""proteins"",
            ""ripstone"",
            ""femorotibial"",
            ""tibiofemoral"",
            ""holsters"",
            ""hostlers"",
            ""undecorated"",
            ""undercoated"",
            ""perorally"",
            ""preorally""
        ],
        ""solution"": [
            [
                ""femorotibial"",
                ""tibiofemoral""
            ],
            [
                ""holsters"",
                ""hostlers""
            ],
            [
                ""perorally"",
                ""preorally""
            ],
            [
                ""proteins"",
                ""ripstone""
            ],
            [
                ""undecorated"",
                ""undercoated""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
432,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cyber"", ""becry"", ""bryce"", ""shick"", ""hicks"", ""spoilment"", ""simpleton"", ""labra"", ""rabal"", ""intactile"", ""catlinite"", ""carisa"", ""sciara""]
","[[""becry"", ""bryce"", ""cyber""], [""carisa"", ""sciara""], [""catlinite"", ""intactile""], [""hicks"", ""shick""], [""labra"", ""rabal""], [""simpleton"", ""spoilment""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cyber\"", \""becry\"", \""bryce\"", \""shick\"", \""hicks\"", \""spoilment\"", \""simpleton\"", \""labra\"", \""rabal\"", \""intactile\"", \""catlinite\"", \""carisa\"", \""sciara\""]\n"",
    ""answer"": ""[[\""becry\"", \""bryce\"", \""cyber\""], [\""carisa\"", \""sciara\""], [\""catlinite\"", \""intactile\""], [\""hicks\"", \""shick\""], [\""labra\"", \""rabal\""], [\""simpleton\"", \""spoilment\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 432,
        ""words"": [
            ""cyber"",
            ""becry"",
            ""bryce"",
            ""shick"",
            ""hicks"",
            ""spoilment"",
            ""simpleton"",
            ""labra"",
            ""rabal"",
            ""intactile"",
            ""catlinite"",
            ""carisa"",
            ""sciara""
        ],
        ""solution"": [
            [
                ""becry"",
                ""bryce"",
                ""cyber""
            ],
            [
                ""carisa"",
                ""sciara""
            ],
            [
                ""catlinite"",
                ""intactile""
            ],
            [
                ""hicks"",
                ""shick""
            ],
            [
                ""labra"",
                ""rabal""
            ],
            [
                ""simpleton"",
                ""spoilment""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
433,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cancerite"", ""centricae"", ""alterable"", ""relatable"", ""tailor"", ""rialto"", ""olor"", ""orlo"", ""rool"", ""roading"", ""gradino"", ""adoring"", ""gordian"", ""idorgan""]
","[[""adoring"", ""gordian"", ""gradino"", ""idorgan"", ""roading""], [""alterable"", ""relatable""], [""cancerite"", ""centricae""], [""olor"", ""orlo"", ""rool""], [""rialto"", ""tailor""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cancerite\"", \""centricae\"", \""alterable\"", \""relatable\"", \""tailor\"", \""rialto\"", \""olor\"", \""orlo\"", \""rool\"", \""roading\"", \""gradino\"", \""adoring\"", \""gordian\"", \""idorgan\""]\n"",
    ""answer"": ""[[\""adoring\"", \""gordian\"", \""gradino\"", \""idorgan\"", \""roading\""], [\""alterable\"", \""relatable\""], [\""cancerite\"", \""centricae\""], [\""olor\"", \""orlo\"", \""rool\""], [\""rialto\"", \""tailor\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 433,
        ""words"": [
            ""cancerite"",
            ""centricae"",
            ""alterable"",
            ""relatable"",
            ""tailor"",
            ""rialto"",
            ""olor"",
            ""orlo"",
            ""rool"",
            ""roading"",
            ""gradino"",
            ""adoring"",
            ""gordian"",
            ""idorgan""
        ],
        ""solution"": [
            [
                ""adoring"",
                ""gordian"",
                ""gradino"",
                ""idorgan"",
                ""roading""
            ],
            [
                ""alterable"",
                ""relatable""
            ],
            [
                ""cancerite"",
                ""centricae""
            ],
            [
                ""olor"",
                ""orlo"",
                ""rool""
            ],
            [
                ""rialto"",
                ""tailor""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
434,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ashur"", ""surah"", ""documental"", ""columnated""]
","[[""ashur"", ""surah""], [""columnated"", ""documental""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ashur\"", \""surah\"", \""documental\"", \""columnated\""]\n"",
    ""answer"": ""[[\""ashur\"", \""surah\""], [\""columnated\"", \""documental\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 434,
        ""words"": [
            ""ashur"",
            ""surah"",
            ""documental"",
            ""columnated""
        ],
        ""solution"": [
            [
                ""ashur"",
                ""surah""
            ],
            [
                ""columnated"",
                ""documental""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
435,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fractal"", ""flatcar"", ""drowsing"", ""wordings"", ""swording"", ""misatone"", ""amniotes"", ""somniate"", ""aditio"", ""otidia"", ""umbering"", ""embruing"", ""trappings"", ""strapping""]
","[[""aditio"", ""otidia""], [""amniotes"", ""misatone"", ""somniate""], [""drowsing"", ""swording"", ""wordings""], [""embruing"", ""umbering""], [""flatcar"", ""fractal""], [""strapping"", ""trappings""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fractal\"", \""flatcar\"", \""drowsing\"", \""wordings\"", \""swording\"", \""misatone\"", \""amniotes\"", \""somniate\"", \""aditio\"", \""otidia\"", \""umbering\"", \""embruing\"", \""trappings\"", \""strapping\""]\n"",
    ""answer"": ""[[\""aditio\"", \""otidia\""], [\""amniotes\"", \""misatone\"", \""somniate\""], [\""drowsing\"", \""swording\"", \""wordings\""], [\""embruing\"", \""umbering\""], [\""flatcar\"", \""fractal\""], [\""strapping\"", \""trappings\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 435,
        ""words"": [
            ""fractal"",
            ""flatcar"",
            ""drowsing"",
            ""wordings"",
            ""swording"",
            ""misatone"",
            ""amniotes"",
            ""somniate"",
            ""aditio"",
            ""otidia"",
            ""umbering"",
            ""embruing"",
            ""trappings"",
            ""strapping""
        ],
        ""solution"": [
            [
                ""aditio"",
                ""otidia""
            ],
            [
                ""amniotes"",
                ""misatone"",
                ""somniate""
            ],
            [
                ""drowsing"",
                ""swording"",
                ""wordings""
            ],
            [
                ""embruing"",
                ""umbering""
            ],
            [
                ""flatcar"",
                ""fractal""
            ],
            [
                ""strapping"",
                ""trappings""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
436,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dirks"", ""drisk"", ""mancala"", ""almanac"", ""interluder"", ""interruled"", ""terminate"", ""attermine"", ""blowout"", ""outblow"", ""outbowl""]
","[[""almanac"", ""mancala""], [""attermine"", ""terminate""], [""blowout"", ""outblow"", ""outbowl""], [""dirks"", ""drisk""], [""interluder"", ""interruled""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dirks\"", \""drisk\"", \""mancala\"", \""almanac\"", \""interluder\"", \""interruled\"", \""terminate\"", \""attermine\"", \""blowout\"", \""outblow\"", \""outbowl\""]\n"",
    ""answer"": ""[[\""almanac\"", \""mancala\""], [\""attermine\"", \""terminate\""], [\""blowout\"", \""outblow\"", \""outbowl\""], [\""dirks\"", \""drisk\""], [\""interluder\"", \""interruled\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 436,
        ""words"": [
            ""dirks"",
            ""drisk"",
            ""mancala"",
            ""almanac"",
            ""interluder"",
            ""interruled"",
            ""terminate"",
            ""attermine"",
            ""blowout"",
            ""outblow"",
            ""outbowl""
        ],
        ""solution"": [
            [
                ""almanac"",
                ""mancala""
            ],
            [
                ""attermine"",
                ""terminate""
            ],
            [
                ""blowout"",
                ""outblow"",
                ""outbowl""
            ],
            [
                ""dirks"",
                ""drisk""
            ],
            [
                ""interluder"",
                ""interruled""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
437,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""premolar"", ""premoral"", ""conicalness"", ""laconicness"", ""mateships"", ""steamship"", ""shipmates"", ""marcher"", ""remarch"", ""charmer"", ""salicetum"", ""elasticum"", ""typologies"", ""logotypies"", ""pisteology""]
","[[""charmer"", ""marcher"", ""remarch""], [""conicalness"", ""laconicness""], [""elasticum"", ""salicetum""], [""logotypies"", ""pisteology"", ""typologies""], [""mateships"", ""shipmates"", ""steamship""], [""premolar"", ""premoral""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""premolar\"", \""premoral\"", \""conicalness\"", \""laconicness\"", \""mateships\"", \""steamship\"", \""shipmates\"", \""marcher\"", \""remarch\"", \""charmer\"", \""salicetum\"", \""elasticum\"", \""typologies\"", \""logotypies\"", \""pisteology\""]\n"",
    ""answer"": ""[[\""charmer\"", \""marcher\"", \""remarch\""], [\""conicalness\"", \""laconicness\""], [\""elasticum\"", \""salicetum\""], [\""logotypies\"", \""pisteology\"", \""typologies\""], [\""mateships\"", \""shipmates\"", \""steamship\""], [\""premolar\"", \""premoral\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 437,
        ""words"": [
            ""premolar"",
            ""premoral"",
            ""conicalness"",
            ""laconicness"",
            ""mateships"",
            ""steamship"",
            ""shipmates"",
            ""marcher"",
            ""remarch"",
            ""charmer"",
            ""salicetum"",
            ""elasticum"",
            ""typologies"",
            ""logotypies"",
            ""pisteology""
        ],
        ""solution"": [
            [
                ""charmer"",
                ""marcher"",
                ""remarch""
            ],
            [
                ""conicalness"",
                ""laconicness""
            ],
            [
                ""elasticum"",
                ""salicetum""
            ],
            [
                ""logotypies"",
                ""pisteology"",
                ""typologies""
            ],
            [
                ""mateships"",
                ""shipmates"",
                ""steamship""
            ],
            [
                ""premolar"",
                ""premoral""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
438,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""origans"", ""signora"", ""soaring"", ""reflowered"", ""deflowerer""]
","[[""deflowerer"", ""reflowered""], [""origans"", ""signora"", ""soaring""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""origans\"", \""signora\"", \""soaring\"", \""reflowered\"", \""deflowerer\""]\n"",
    ""answer"": ""[[\""deflowerer\"", \""reflowered\""], [\""origans\"", \""signora\"", \""soaring\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 438,
        ""words"": [
            ""origans"",
            ""signora"",
            ""soaring"",
            ""reflowered"",
            ""deflowerer""
        ],
        ""solution"": [
            [
                ""deflowerer"",
                ""reflowered""
            ],
            [
                ""origans"",
                ""signora"",
                ""soaring""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
439,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mandore"", ""mandoer"", ""madrone"", ""omander"", ""conrector"", ""concretor"", ""tapoa"", ""patao"", ""opata""]
","[[""concretor"", ""conrector""], [""madrone"", ""mandoer"", ""mandore"", ""omander""], [""opata"", ""patao"", ""tapoa""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mandore\"", \""mandoer\"", \""madrone\"", \""omander\"", \""conrector\"", \""concretor\"", \""tapoa\"", \""patao\"", \""opata\""]\n"",
    ""answer"": ""[[\""concretor\"", \""conrector\""], [\""madrone\"", \""mandoer\"", \""mandore\"", \""omander\""], [\""opata\"", \""patao\"", \""tapoa\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 439,
        ""words"": [
            ""mandore"",
            ""mandoer"",
            ""madrone"",
            ""omander"",
            ""conrector"",
            ""concretor"",
            ""tapoa"",
            ""patao"",
            ""opata""
        ],
        ""solution"": [
            [
                ""concretor"",
                ""conrector""
            ],
            [
                ""madrone"",
                ""mandoer"",
                ""mandore"",
                ""omander""
            ],
            [
                ""opata"",
                ""patao"",
                ""tapoa""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
440,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bosker"", ""brokes"", ""line"", ""lien"", ""neil"", ""nile"", ""estop"", ""poets"", ""macaglia"", ""almaciga""]
","[[""almaciga"", ""macaglia""], [""bosker"", ""brokes""], [""estop"", ""poets""], [""lien"", ""line"", ""neil"", ""nile""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bosker\"", \""brokes\"", \""line\"", \""lien\"", \""neil\"", \""nile\"", \""estop\"", \""poets\"", \""macaglia\"", \""almaciga\""]\n"",
    ""answer"": ""[[\""almaciga\"", \""macaglia\""], [\""bosker\"", \""brokes\""], [\""estop\"", \""poets\""], [\""lien\"", \""line\"", \""neil\"", \""nile\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 440,
        ""words"": [
            ""bosker"",
            ""brokes"",
            ""line"",
            ""lien"",
            ""neil"",
            ""nile"",
            ""estop"",
            ""poets"",
            ""macaglia"",
            ""almaciga""
        ],
        ""solution"": [
            [
                ""almaciga"",
                ""macaglia""
            ],
            [
                ""bosker"",
                ""brokes""
            ],
            [
                ""estop"",
                ""poets""
            ],
            [
                ""lien"",
                ""line"",
                ""neil"",
                ""nile""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
441,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""recede"", ""decree"", ""alignment"", ""lamenting"", ""dobrao"", ""doorba"", ""abrood"", ""dizaine"", ""diazine"", ""nonsignature"", ""unresonating"", ""arhats"", ""harast"", ""outsin"", ""ustion""]
","[[""abrood"", ""dobrao"", ""doorba""], [""alignment"", ""lamenting""], [""arhats"", ""harast""], [""decree"", ""recede""], [""diazine"", ""dizaine""], [""nonsignature"", ""unresonating""], [""outsin"", ""ustion""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""recede\"", \""decree\"", \""alignment\"", \""lamenting\"", \""dobrao\"", \""doorba\"", \""abrood\"", \""dizaine\"", \""diazine\"", \""nonsignature\"", \""unresonating\"", \""arhats\"", \""harast\"", \""outsin\"", \""ustion\""]\n"",
    ""answer"": ""[[\""abrood\"", \""dobrao\"", \""doorba\""], [\""alignment\"", \""lamenting\""], [\""arhats\"", \""harast\""], [\""decree\"", \""recede\""], [\""diazine\"", \""dizaine\""], [\""nonsignature\"", \""unresonating\""], [\""outsin\"", \""ustion\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 441,
        ""words"": [
            ""recede"",
            ""decree"",
            ""alignment"",
            ""lamenting"",
            ""dobrao"",
            ""doorba"",
            ""abrood"",
            ""dizaine"",
            ""diazine"",
            ""nonsignature"",
            ""unresonating"",
            ""arhats"",
            ""harast"",
            ""outsin"",
            ""ustion""
        ],
        ""solution"": [
            [
                ""abrood"",
                ""dobrao"",
                ""doorba""
            ],
            [
                ""alignment"",
                ""lamenting""
            ],
            [
                ""arhats"",
                ""harast""
            ],
            [
                ""decree"",
                ""recede""
            ],
            [
                ""diazine"",
                ""dizaine""
            ],
            [
                ""nonsignature"",
                ""unresonating""
            ],
            [
                ""outsin"",
                ""ustion""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
442,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""laden"", ""naled"", ""lenad"", ""durmasts"", ""mustards"", ""postings"", ""signpost"", ""postsign""]
","[[""durmasts"", ""mustards""], [""laden"", ""lenad"", ""naled""], [""postings"", ""postsign"", ""signpost""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""laden\"", \""naled\"", \""lenad\"", \""durmasts\"", \""mustards\"", \""postings\"", \""signpost\"", \""postsign\""]\n"",
    ""answer"": ""[[\""durmasts\"", \""mustards\""], [\""laden\"", \""lenad\"", \""naled\""], [\""postings\"", \""postsign\"", \""signpost\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 442,
        ""words"": [
            ""laden"",
            ""naled"",
            ""lenad"",
            ""durmasts"",
            ""mustards"",
            ""postings"",
            ""signpost"",
            ""postsign""
        ],
        ""solution"": [
            [
                ""durmasts"",
                ""mustards""
            ],
            [
                ""laden"",
                ""lenad"",
                ""naled""
            ],
            [
                ""postings"",
                ""postsign"",
                ""signpost""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
443,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ba"", ""ab"", ""unpot"", ""puton"", ""lymnaeid"", ""maidenly"", ""medianly""]
","[[""ab"", ""ba""], [""lymnaeid"", ""maidenly"", ""medianly""], [""puton"", ""unpot""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ba\"", \""ab\"", \""unpot\"", \""puton\"", \""lymnaeid\"", \""maidenly\"", \""medianly\""]\n"",
    ""answer"": ""[[\""ab\"", \""ba\""], [\""lymnaeid\"", \""maidenly\"", \""medianly\""], [\""puton\"", \""unpot\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 443,
        ""words"": [
            ""ba"",
            ""ab"",
            ""unpot"",
            ""puton"",
            ""lymnaeid"",
            ""maidenly"",
            ""medianly""
        ],
        ""solution"": [
            [
                ""ab"",
                ""ba""
            ],
            [
                ""lymnaeid"",
                ""maidenly"",
                ""medianly""
            ],
            [
                ""puton"",
                ""unpot""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
444,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""upmix"", ""mixup"", ""inustion"", ""unionist"", ""citrination"", ""intrication"", ""piedra"", ""depair"", ""repaid"", ""ipse"", ""pies"", ""pise"", ""sipe"", ""extend"", ""dentex"", ""secus"", ""scuse"", ""petate"", ""pattee"", ""tapete"", ""sutleress"", ""streusels""]
","[[""citrination"", ""intrication""], [""dentex"", ""extend""], [""depair"", ""piedra"", ""repaid""], [""inustion"", ""unionist""], [""ipse"", ""pies"", ""pise"", ""sipe""], [""mixup"", ""upmix""], [""pattee"", ""petate"", ""tapete""], [""scuse"", ""secus""], [""streusels"", ""sutleress""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""upmix\"", \""mixup\"", \""inustion\"", \""unionist\"", \""citrination\"", \""intrication\"", \""piedra\"", \""depair\"", \""repaid\"", \""ipse\"", \""pies\"", \""pise\"", \""sipe\"", \""extend\"", \""dentex\"", \""secus\"", \""scuse\"", \""petate\"", \""pattee\"", \""tapete\"", \""sutleress\"", \""streusels\""]\n"",
    ""answer"": ""[[\""citrination\"", \""intrication\""], [\""dentex\"", \""extend\""], [\""depair\"", \""piedra\"", \""repaid\""], [\""inustion\"", \""unionist\""], [\""ipse\"", \""pies\"", \""pise\"", \""sipe\""], [\""mixup\"", \""upmix\""], [\""pattee\"", \""petate\"", \""tapete\""], [\""scuse\"", \""secus\""], [\""streusels\"", \""sutleress\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 444,
        ""words"": [
            ""upmix"",
            ""mixup"",
            ""inustion"",
            ""unionist"",
            ""citrination"",
            ""intrication"",
            ""piedra"",
            ""depair"",
            ""repaid"",
            ""ipse"",
            ""pies"",
            ""pise"",
            ""sipe"",
            ""extend"",
            ""dentex"",
            ""secus"",
            ""scuse"",
            ""petate"",
            ""pattee"",
            ""tapete"",
            ""sutleress"",
            ""streusels""
        ],
        ""solution"": [
            [
                ""citrination"",
                ""intrication""
            ],
            [
                ""dentex"",
                ""extend""
            ],
            [
                ""depair"",
                ""piedra"",
                ""repaid""
            ],
            [
                ""inustion"",
                ""unionist""
            ],
            [
                ""ipse"",
                ""pies"",
                ""pise"",
                ""sipe""
            ],
            [
                ""mixup"",
                ""upmix""
            ],
            [
                ""pattee"",
                ""petate"",
                ""tapete""
            ],
            [
                ""scuse"",
                ""secus""
            ],
            [
                ""streusels"",
                ""sutleress""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
445,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""twist"", ""twits"", ""epiloia"", ""aliipoe"", ""cornuted"", ""contrude"", ""netters"", ""tenters"", ""riblet"", ""beltir"", ""kays"", ""yaks"", ""liny"", ""inly"", ""eggler"", ""legger""]
","[[""aliipoe"", ""epiloia""], [""beltir"", ""riblet""], [""contrude"", ""cornuted""], [""eggler"", ""legger""], [""inly"", ""liny""], [""kays"", ""yaks""], [""netters"", ""tenters""], [""twist"", ""twits""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""twist\"", \""twits\"", \""epiloia\"", \""aliipoe\"", \""cornuted\"", \""contrude\"", \""netters\"", \""tenters\"", \""riblet\"", \""beltir\"", \""kays\"", \""yaks\"", \""liny\"", \""inly\"", \""eggler\"", \""legger\""]\n"",
    ""answer"": ""[[\""aliipoe\"", \""epiloia\""], [\""beltir\"", \""riblet\""], [\""contrude\"", \""cornuted\""], [\""eggler\"", \""legger\""], [\""inly\"", \""liny\""], [\""kays\"", \""yaks\""], [\""netters\"", \""tenters\""], [\""twist\"", \""twits\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 445,
        ""words"": [
            ""twist"",
            ""twits"",
            ""epiloia"",
            ""aliipoe"",
            ""cornuted"",
            ""contrude"",
            ""netters"",
            ""tenters"",
            ""riblet"",
            ""beltir"",
            ""kays"",
            ""yaks"",
            ""liny"",
            ""inly"",
            ""eggler"",
            ""legger""
        ],
        ""solution"": [
            [
                ""aliipoe"",
                ""epiloia""
            ],
            [
                ""beltir"",
                ""riblet""
            ],
            [
                ""contrude"",
                ""cornuted""
            ],
            [
                ""eggler"",
                ""legger""
            ],
            [
                ""inly"",
                ""liny""
            ],
            [
                ""kays"",
                ""yaks""
            ],
            [
                ""netters"",
                ""tenters""
            ],
            [
                ""twist"",
                ""twits""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
446,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rostra"", ""sartor"", ""bringela"", ""rebaling"", ""balinger"", ""blearing"", ""maror"", ""morra"", ""armor"", ""grasshopper"", ""hoppergrass"", ""diastema"", ""adamsite"", ""loculed"", ""collude"", ""doyen"", ""doney""]
","[[""adamsite"", ""diastema""], [""armor"", ""maror"", ""morra""], [""balinger"", ""blearing"", ""bringela"", ""rebaling""], [""collude"", ""loculed""], [""doney"", ""doyen""], [""grasshopper"", ""hoppergrass""], [""rostra"", ""sartor""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rostra\"", \""sartor\"", \""bringela\"", \""rebaling\"", \""balinger\"", \""blearing\"", \""maror\"", \""morra\"", \""armor\"", \""grasshopper\"", \""hoppergrass\"", \""diastema\"", \""adamsite\"", \""loculed\"", \""collude\"", \""doyen\"", \""doney\""]\n"",
    ""answer"": ""[[\""adamsite\"", \""diastema\""], [\""armor\"", \""maror\"", \""morra\""], [\""balinger\"", \""blearing\"", \""bringela\"", \""rebaling\""], [\""collude\"", \""loculed\""], [\""doney\"", \""doyen\""], [\""grasshopper\"", \""hoppergrass\""], [\""rostra\"", \""sartor\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 446,
        ""words"": [
            ""rostra"",
            ""sartor"",
            ""bringela"",
            ""rebaling"",
            ""balinger"",
            ""blearing"",
            ""maror"",
            ""morra"",
            ""armor"",
            ""grasshopper"",
            ""hoppergrass"",
            ""diastema"",
            ""adamsite"",
            ""loculed"",
            ""collude"",
            ""doyen"",
            ""doney""
        ],
        ""solution"": [
            [
                ""adamsite"",
                ""diastema""
            ],
            [
                ""armor"",
                ""maror"",
                ""morra""
            ],
            [
                ""balinger"",
                ""blearing"",
                ""bringela"",
                ""rebaling""
            ],
            [
                ""collude"",
                ""loculed""
            ],
            [
                ""doney"",
                ""doyen""
            ],
            [
                ""grasshopper"",
                ""hoppergrass""
            ],
            [
                ""rostra"",
                ""sartor""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
447,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""herein"", ""inhere"", ""hadji"", ""jihad"", ""ginnier"", ""nigrine"", ""gv"", ""vg"", ""longer"", ""relong"", ""windstorm"", ""stormwind"", ""verpa"", ""parve"", ""paver"", ""misima"", ""misaim""]
","[[""ginnier"", ""nigrine""], [""gv"", ""vg""], [""hadji"", ""jihad""], [""herein"", ""inhere""], [""longer"", ""relong""], [""misaim"", ""misima""], [""parve"", ""paver"", ""verpa""], [""stormwind"", ""windstorm""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""herein\"", \""inhere\"", \""hadji\"", \""jihad\"", \""ginnier\"", \""nigrine\"", \""gv\"", \""vg\"", \""longer\"", \""relong\"", \""windstorm\"", \""stormwind\"", \""verpa\"", \""parve\"", \""paver\"", \""misima\"", \""misaim\""]\n"",
    ""answer"": ""[[\""ginnier\"", \""nigrine\""], [\""gv\"", \""vg\""], [\""hadji\"", \""jihad\""], [\""herein\"", \""inhere\""], [\""longer\"", \""relong\""], [\""misaim\"", \""misima\""], [\""parve\"", \""paver\"", \""verpa\""], [\""stormwind\"", \""windstorm\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 447,
        ""words"": [
            ""herein"",
            ""inhere"",
            ""hadji"",
            ""jihad"",
            ""ginnier"",
            ""nigrine"",
            ""gv"",
            ""vg"",
            ""longer"",
            ""relong"",
            ""windstorm"",
            ""stormwind"",
            ""verpa"",
            ""parve"",
            ""paver"",
            ""misima"",
            ""misaim""
        ],
        ""solution"": [
            [
                ""ginnier"",
                ""nigrine""
            ],
            [
                ""gv"",
                ""vg""
            ],
            [
                ""hadji"",
                ""jihad""
            ],
            [
                ""herein"",
                ""inhere""
            ],
            [
                ""longer"",
                ""relong""
            ],
            [
                ""misaim"",
                ""misima""
            ],
            [
                ""parve"",
                ""paver"",
                ""verpa""
            ],
            [
                ""stormwind"",
                ""windstorm""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
448,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""li"", ""il"", ""sederunts"", ""untressed"", ""undersets"", ""thyms"", ""myths"", ""smyth"", ""orsellic"", ""colliers"", ""gravamen"", ""graveman"", ""pastimer"", ""maspiter"", ""raspers"", ""sparser"", ""parsers"", ""sparers"", ""heaten"", ""taheen"", ""ethane""]
","[[""colliers"", ""orsellic""], [""ethane"", ""heaten"", ""taheen""], [""gravamen"", ""graveman""], [""il"", ""li""], [""maspiter"", ""pastimer""], [""myths"", ""smyth"", ""thyms""], [""parsers"", ""raspers"", ""sparers"", ""sparser""], [""sederunts"", ""undersets"", ""untressed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""li\"", \""il\"", \""sederunts\"", \""untressed\"", \""undersets\"", \""thyms\"", \""myths\"", \""smyth\"", \""orsellic\"", \""colliers\"", \""gravamen\"", \""graveman\"", \""pastimer\"", \""maspiter\"", \""raspers\"", \""sparser\"", \""parsers\"", \""sparers\"", \""heaten\"", \""taheen\"", \""ethane\""]\n"",
    ""answer"": ""[[\""colliers\"", \""orsellic\""], [\""ethane\"", \""heaten\"", \""taheen\""], [\""gravamen\"", \""graveman\""], [\""il\"", \""li\""], [\""maspiter\"", \""pastimer\""], [\""myths\"", \""smyth\"", \""thyms\""], [\""parsers\"", \""raspers\"", \""sparers\"", \""sparser\""], [\""sederunts\"", \""undersets\"", \""untressed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 448,
        ""words"": [
            ""li"",
            ""il"",
            ""sederunts"",
            ""untressed"",
            ""undersets"",
            ""thyms"",
            ""myths"",
            ""smyth"",
            ""orsellic"",
            ""colliers"",
            ""gravamen"",
            ""graveman"",
            ""pastimer"",
            ""maspiter"",
            ""raspers"",
            ""sparser"",
            ""parsers"",
            ""sparers"",
            ""heaten"",
            ""taheen"",
            ""ethane""
        ],
        ""solution"": [
            [
                ""colliers"",
                ""orsellic""
            ],
            [
                ""ethane"",
                ""heaten"",
                ""taheen""
            ],
            [
                ""gravamen"",
                ""graveman""
            ],
            [
                ""il"",
                ""li""
            ],
            [
                ""maspiter"",
                ""pastimer""
            ],
            [
                ""myths"",
                ""smyth"",
                ""thyms""
            ],
            [
                ""parsers"",
                ""raspers"",
                ""sparers"",
                ""sparser""
            ],
            [
                ""sederunts"",
                ""undersets"",
                ""untressed""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
449,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""toric"", ""troic"", ""empanels"", ""emplanes"", ""ensample"", ""manas"", ""saman"", ""comatous"", ""autocosm"", ""expected"", ""excepted"", ""loyalism"", ""lysiloma"", ""cornish"", ""sorchin"", ""cronish"", ""externs"", ""sextern"", ""lapper"", ""rappel""]
","[[""autocosm"", ""comatous""], [""cornish"", ""cronish"", ""sorchin""], [""empanels"", ""emplanes"", ""ensample""], [""excepted"", ""expected""], [""externs"", ""sextern""], [""lapper"", ""rappel""], [""loyalism"", ""lysiloma""], [""manas"", ""saman""], [""toric"", ""troic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""toric\"", \""troic\"", \""empanels\"", \""emplanes\"", \""ensample\"", \""manas\"", \""saman\"", \""comatous\"", \""autocosm\"", \""expected\"", \""excepted\"", \""loyalism\"", \""lysiloma\"", \""cornish\"", \""sorchin\"", \""cronish\"", \""externs\"", \""sextern\"", \""lapper\"", \""rappel\""]\n"",
    ""answer"": ""[[\""autocosm\"", \""comatous\""], [\""cornish\"", \""cronish\"", \""sorchin\""], [\""empanels\"", \""emplanes\"", \""ensample\""], [\""excepted\"", \""expected\""], [\""externs\"", \""sextern\""], [\""lapper\"", \""rappel\""], [\""loyalism\"", \""lysiloma\""], [\""manas\"", \""saman\""], [\""toric\"", \""troic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 449,
        ""words"": [
            ""toric"",
            ""troic"",
            ""empanels"",
            ""emplanes"",
            ""ensample"",
            ""manas"",
            ""saman"",
            ""comatous"",
            ""autocosm"",
            ""expected"",
            ""excepted"",
            ""loyalism"",
            ""lysiloma"",
            ""cornish"",
            ""sorchin"",
            ""cronish"",
            ""externs"",
            ""sextern"",
            ""lapper"",
            ""rappel""
        ],
        ""solution"": [
            [
                ""autocosm"",
                ""comatous""
            ],
            [
                ""cornish"",
                ""cronish"",
                ""sorchin""
            ],
            [
                ""empanels"",
                ""emplanes"",
                ""ensample""
            ],
            [
                ""excepted"",
                ""expected""
            ],
            [
                ""externs"",
                ""sextern""
            ],
            [
                ""lapper"",
                ""rappel""
            ],
            [
                ""loyalism"",
                ""lysiloma""
            ],
            [
                ""manas"",
                ""saman""
            ],
            [
                ""toric"",
                ""troic""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
450,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""iranist"", ""istrian"", ""consoles"", ""coolness"", ""surinam"", ""suramin"", ""uranism"", ""lined"", ""eldin"", ""tinlet"", ""litten"", ""reluctant"", ""tralucent"", ""ingrave"", ""vinegar"", ""reaving"", ""shola"", ""halos"", ""ascolichen"", ""chalcosine"", ""tamarin"", ""martian""]
","[[""ascolichen"", ""chalcosine""], [""consoles"", ""coolness""], [""eldin"", ""lined""], [""halos"", ""shola""], [""ingrave"", ""reaving"", ""vinegar""], [""iranist"", ""istrian""], [""litten"", ""tinlet""], [""martian"", ""tamarin""], [""reluctant"", ""tralucent""], [""suramin"", ""surinam"", ""uranism""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""iranist\"", \""istrian\"", \""consoles\"", \""coolness\"", \""surinam\"", \""suramin\"", \""uranism\"", \""lined\"", \""eldin\"", \""tinlet\"", \""litten\"", \""reluctant\"", \""tralucent\"", \""ingrave\"", \""vinegar\"", \""reaving\"", \""shola\"", \""halos\"", \""ascolichen\"", \""chalcosine\"", \""tamarin\"", \""martian\""]\n"",
    ""answer"": ""[[\""ascolichen\"", \""chalcosine\""], [\""consoles\"", \""coolness\""], [\""eldin\"", \""lined\""], [\""halos\"", \""shola\""], [\""ingrave\"", \""reaving\"", \""vinegar\""], [\""iranist\"", \""istrian\""], [\""litten\"", \""tinlet\""], [\""martian\"", \""tamarin\""], [\""reluctant\"", \""tralucent\""], [\""suramin\"", \""surinam\"", \""uranism\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 450,
        ""words"": [
            ""iranist"",
            ""istrian"",
            ""consoles"",
            ""coolness"",
            ""surinam"",
            ""suramin"",
            ""uranism"",
            ""lined"",
            ""eldin"",
            ""tinlet"",
            ""litten"",
            ""reluctant"",
            ""tralucent"",
            ""ingrave"",
            ""vinegar"",
            ""reaving"",
            ""shola"",
            ""halos"",
            ""ascolichen"",
            ""chalcosine"",
            ""tamarin"",
            ""martian""
        ],
        ""solution"": [
            [
                ""ascolichen"",
                ""chalcosine""
            ],
            [
                ""consoles"",
                ""coolness""
            ],
            [
                ""eldin"",
                ""lined""
            ],
            [
                ""halos"",
                ""shola""
            ],
            [
                ""ingrave"",
                ""reaving"",
                ""vinegar""
            ],
            [
                ""iranist"",
                ""istrian""
            ],
            [
                ""litten"",
                ""tinlet""
            ],
            [
                ""martian"",
                ""tamarin""
            ],
            [
                ""reluctant"",
                ""tralucent""
            ],
            [
                ""suramin"",
                ""surinam"",
                ""uranism""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
451,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""phagocytism"", ""mycophagist"", ""radiotelegraphy"", ""teleradiography"", ""indulger"", ""ungirdle"", ""overcall"", ""coverall"", ""vocaller"", ""iodochloride"", ""chloroiodide"", ""angry"", ""rangy"", ""absorpt"", ""barpost"", ""elias"", ""aisle"", ""glore"", ""ogler"", ""staffer"", ""restaff""]
","[[""absorpt"", ""barpost""], [""aisle"", ""elias""], [""angry"", ""rangy""], [""chloroiodide"", ""iodochloride""], [""coverall"", ""overcall"", ""vocaller""], [""glore"", ""ogler""], [""indulger"", ""ungirdle""], [""mycophagist"", ""phagocytism""], [""radiotelegraphy"", ""teleradiography""], [""restaff"", ""staffer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""phagocytism\"", \""mycophagist\"", \""radiotelegraphy\"", \""teleradiography\"", \""indulger\"", \""ungirdle\"", \""overcall\"", \""coverall\"", \""vocaller\"", \""iodochloride\"", \""chloroiodide\"", \""angry\"", \""rangy\"", \""absorpt\"", \""barpost\"", \""elias\"", \""aisle\"", \""glore\"", \""ogler\"", \""staffer\"", \""restaff\""]\n"",
    ""answer"": ""[[\""absorpt\"", \""barpost\""], [\""aisle\"", \""elias\""], [\""angry\"", \""rangy\""], [\""chloroiodide\"", \""iodochloride\""], [\""coverall\"", \""overcall\"", \""vocaller\""], [\""glore\"", \""ogler\""], [\""indulger\"", \""ungirdle\""], [\""mycophagist\"", \""phagocytism\""], [\""radiotelegraphy\"", \""teleradiography\""], [\""restaff\"", \""staffer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 451,
        ""words"": [
            ""phagocytism"",
            ""mycophagist"",
            ""radiotelegraphy"",
            ""teleradiography"",
            ""indulger"",
            ""ungirdle"",
            ""overcall"",
            ""coverall"",
            ""vocaller"",
            ""iodochloride"",
            ""chloroiodide"",
            ""angry"",
            ""rangy"",
            ""absorpt"",
            ""barpost"",
            ""elias"",
            ""aisle"",
            ""glore"",
            ""ogler"",
            ""staffer"",
            ""restaff""
        ],
        ""solution"": [
            [
                ""absorpt"",
                ""barpost""
            ],
            [
                ""aisle"",
                ""elias""
            ],
            [
                ""angry"",
                ""rangy""
            ],
            [
                ""chloroiodide"",
                ""iodochloride""
            ],
            [
                ""coverall"",
                ""overcall"",
                ""vocaller""
            ],
            [
                ""glore"",
                ""ogler""
            ],
            [
                ""indulger"",
                ""ungirdle""
            ],
            [
                ""mycophagist"",
                ""phagocytism""
            ],
            [
                ""radiotelegraphy"",
                ""teleradiography""
            ],
            [
                ""restaff"",
                ""staffer""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
452,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""poetised"", ""epidotes"", ""recruits"", ""crustier"", ""maidan"", ""aidman"", ""villous"", ""ovillus""]
","[[""aidman"", ""maidan""], [""crustier"", ""recruits""], [""epidotes"", ""poetised""], [""ovillus"", ""villous""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""poetised\"", \""epidotes\"", \""recruits\"", \""crustier\"", \""maidan\"", \""aidman\"", \""villous\"", \""ovillus\""]\n"",
    ""answer"": ""[[\""aidman\"", \""maidan\""], [\""crustier\"", \""recruits\""], [\""epidotes\"", \""poetised\""], [\""ovillus\"", \""villous\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 452,
        ""words"": [
            ""poetised"",
            ""epidotes"",
            ""recruits"",
            ""crustier"",
            ""maidan"",
            ""aidman"",
            ""villous"",
            ""ovillus""
        ],
        ""solution"": [
            [
                ""aidman"",
                ""maidan""
            ],
            [
                ""crustier"",
                ""recruits""
            ],
            [
                ""epidotes"",
                ""poetised""
            ],
            [
                ""ovillus"",
                ""villous""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
453,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""baths"", ""bahts"", ""preclusion"", ""perculsion"", ""boccaro"", ""barocco"", ""forded"", ""fodder"", ""freddo""]
","[[""bahts"", ""baths""], [""barocco"", ""boccaro""], [""fodder"", ""forded"", ""freddo""], [""perculsion"", ""preclusion""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""baths\"", \""bahts\"", \""preclusion\"", \""perculsion\"", \""boccaro\"", \""barocco\"", \""forded\"", \""fodder\"", \""freddo\""]\n"",
    ""answer"": ""[[\""bahts\"", \""baths\""], [\""barocco\"", \""boccaro\""], [\""fodder\"", \""forded\"", \""freddo\""], [\""perculsion\"", \""preclusion\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 453,
        ""words"": [
            ""baths"",
            ""bahts"",
            ""preclusion"",
            ""perculsion"",
            ""boccaro"",
            ""barocco"",
            ""forded"",
            ""fodder"",
            ""freddo""
        ],
        ""solution"": [
            [
                ""bahts"",
                ""baths""
            ],
            [
                ""barocco"",
                ""boccaro""
            ],
            [
                ""fodder"",
                ""forded"",
                ""freddo""
            ],
            [
                ""perculsion"",
                ""preclusion""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
454,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hebrews"", ""beshrew"", ""infielders"", ""friendlies"", ""chair"", ""chria"", ""ibm"", ""mib""]
","[[""beshrew"", ""hebrews""], [""chair"", ""chria""], [""friendlies"", ""infielders""], [""ibm"", ""mib""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hebrews\"", \""beshrew\"", \""infielders\"", \""friendlies\"", \""chair\"", \""chria\"", \""ibm\"", \""mib\""]\n"",
    ""answer"": ""[[\""beshrew\"", \""hebrews\""], [\""chair\"", \""chria\""], [\""friendlies\"", \""infielders\""], [\""ibm\"", \""mib\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 454,
        ""words"": [
            ""hebrews"",
            ""beshrew"",
            ""infielders"",
            ""friendlies"",
            ""chair"",
            ""chria"",
            ""ibm"",
            ""mib""
        ],
        ""solution"": [
            [
                ""beshrew"",
                ""hebrews""
            ],
            [
                ""chair"",
                ""chria""
            ],
            [
                ""friendlies"",
                ""infielders""
            ],
            [
                ""ibm"",
                ""mib""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
455,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""overcalls"", ""coveralls"", ""thatcher"", ""rethatch"", ""aht"", ""tha"", ""hat"", ""blote"", ""botel"", ""psychorrhagy"", ""chrysography"", ""retepora"", ""paterero"", ""perorate"", ""unco"", ""cuon""]
","[[""aht"", ""hat"", ""tha""], [""blote"", ""botel""], [""chrysography"", ""psychorrhagy""], [""coveralls"", ""overcalls""], [""cuon"", ""unco""], [""paterero"", ""perorate"", ""retepora""], [""rethatch"", ""thatcher""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""overcalls\"", \""coveralls\"", \""thatcher\"", \""rethatch\"", \""aht\"", \""tha\"", \""hat\"", \""blote\"", \""botel\"", \""psychorrhagy\"", \""chrysography\"", \""retepora\"", \""paterero\"", \""perorate\"", \""unco\"", \""cuon\""]\n"",
    ""answer"": ""[[\""aht\"", \""hat\"", \""tha\""], [\""blote\"", \""botel\""], [\""chrysography\"", \""psychorrhagy\""], [\""coveralls\"", \""overcalls\""], [\""cuon\"", \""unco\""], [\""paterero\"", \""perorate\"", \""retepora\""], [\""rethatch\"", \""thatcher\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 455,
        ""words"": [
            ""overcalls"",
            ""coveralls"",
            ""thatcher"",
            ""rethatch"",
            ""aht"",
            ""tha"",
            ""hat"",
            ""blote"",
            ""botel"",
            ""psychorrhagy"",
            ""chrysography"",
            ""retepora"",
            ""paterero"",
            ""perorate"",
            ""unco"",
            ""cuon""
        ],
        ""solution"": [
            [
                ""aht"",
                ""hat"",
                ""tha""
            ],
            [
                ""blote"",
                ""botel""
            ],
            [
                ""chrysography"",
                ""psychorrhagy""
            ],
            [
                ""coveralls"",
                ""overcalls""
            ],
            [
                ""cuon"",
                ""unco""
            ],
            [
                ""paterero"",
                ""perorate"",
                ""retepora""
            ],
            [
                ""rethatch"",
                ""thatcher""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
456,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ridgingly"", ""girdingly"", ""resolders"", ""orderless"", ""solderers"", ""ripa"", ""pria""]
","[[""girdingly"", ""ridgingly""], [""orderless"", ""resolders"", ""solderers""], [""pria"", ""ripa""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ridgingly\"", \""girdingly\"", \""resolders\"", \""orderless\"", \""solderers\"", \""ripa\"", \""pria\""]\n"",
    ""answer"": ""[[\""girdingly\"", \""ridgingly\""], [\""orderless\"", \""resolders\"", \""solderers\""], [\""pria\"", \""ripa\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 456,
        ""words"": [
            ""ridgingly"",
            ""girdingly"",
            ""resolders"",
            ""orderless"",
            ""solderers"",
            ""ripa"",
            ""pria""
        ],
        ""solution"": [
            [
                ""girdingly"",
                ""ridgingly""
            ],
            [
                ""orderless"",
                ""resolders"",
                ""solderers""
            ],
            [
                ""pria"",
                ""ripa""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
457,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ukes"", ""kues"", ""unglee"", ""lungee"", ""regoliths"", ""ghostlier"", ""subtruncated"", ""unsubtracted""]
","[[""ghostlier"", ""regoliths""], [""kues"", ""ukes""], [""lungee"", ""unglee""], [""subtruncated"", ""unsubtracted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ukes\"", \""kues\"", \""unglee\"", \""lungee\"", \""regoliths\"", \""ghostlier\"", \""subtruncated\"", \""unsubtracted\""]\n"",
    ""answer"": ""[[\""ghostlier\"", \""regoliths\""], [\""kues\"", \""ukes\""], [\""lungee\"", \""unglee\""], [\""subtruncated\"", \""unsubtracted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 457,
        ""words"": [
            ""ukes"",
            ""kues"",
            ""unglee"",
            ""lungee"",
            ""regoliths"",
            ""ghostlier"",
            ""subtruncated"",
            ""unsubtracted""
        ],
        ""solution"": [
            [
                ""ghostlier"",
                ""regoliths""
            ],
            [
                ""kues"",
                ""ukes""
            ],
            [
                ""lungee"",
                ""unglee""
            ],
            [
                ""subtruncated"",
                ""unsubtracted""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
458,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""holohemihedral"", ""hemiholohedral"", ""fuchi"", ""fichu"", ""housewear"", ""warehouse"", ""monadical"", ""nomadical"", ""shiners"", ""shrines"", ""captation"", ""anaptotic"", ""takeovers"", ""overtakes"", ""infiltering"", ""interfiling"", ""untraceableness"", ""uncreatableness""]
","[[""anaptotic"", ""captation""], [""fichu"", ""fuchi""], [""hemiholohedral"", ""holohemihedral""], [""housewear"", ""warehouse""], [""infiltering"", ""interfiling""], [""monadical"", ""nomadical""], [""overtakes"", ""takeovers""], [""shiners"", ""shrines""], [""uncreatableness"", ""untraceableness""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""holohemihedral\"", \""hemiholohedral\"", \""fuchi\"", \""fichu\"", \""housewear\"", \""warehouse\"", \""monadical\"", \""nomadical\"", \""shiners\"", \""shrines\"", \""captation\"", \""anaptotic\"", \""takeovers\"", \""overtakes\"", \""infiltering\"", \""interfiling\"", \""untraceableness\"", \""uncreatableness\""]\n"",
    ""answer"": ""[[\""anaptotic\"", \""captation\""], [\""fichu\"", \""fuchi\""], [\""hemiholohedral\"", \""holohemihedral\""], [\""housewear\"", \""warehouse\""], [\""infiltering\"", \""interfiling\""], [\""monadical\"", \""nomadical\""], [\""overtakes\"", \""takeovers\""], [\""shiners\"", \""shrines\""], [\""uncreatableness\"", \""untraceableness\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 458,
        ""words"": [
            ""holohemihedral"",
            ""hemiholohedral"",
            ""fuchi"",
            ""fichu"",
            ""housewear"",
            ""warehouse"",
            ""monadical"",
            ""nomadical"",
            ""shiners"",
            ""shrines"",
            ""captation"",
            ""anaptotic"",
            ""takeovers"",
            ""overtakes"",
            ""infiltering"",
            ""interfiling"",
            ""untraceableness"",
            ""uncreatableness""
        ],
        ""solution"": [
            [
                ""anaptotic"",
                ""captation""
            ],
            [
                ""fichu"",
                ""fuchi""
            ],
            [
                ""hemiholohedral"",
                ""holohemihedral""
            ],
            [
                ""housewear"",
                ""warehouse""
            ],
            [
                ""infiltering"",
                ""interfiling""
            ],
            [
                ""monadical"",
                ""nomadical""
            ],
            [
                ""overtakes"",
                ""takeovers""
            ],
            [
                ""shiners"",
                ""shrines""
            ],
            [
                ""uncreatableness"",
                ""untraceableness""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
459,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""psychomancy"", ""scyphomancy"", ""drosser"", ""dorsers"", ""olefines"", ""felonies"", ""tress"", ""rests"", ""perlingual"", ""prelingual"", ""troak"", ""kotar"", ""tarok"", ""propels"", ""loppers"", ""sabadin"", ""indabas"", ""heterodromy"", ""hydrometeor""]
","[[""dorsers"", ""drosser""], [""felonies"", ""olefines""], [""heterodromy"", ""hydrometeor""], [""indabas"", ""sabadin""], [""kotar"", ""tarok"", ""troak""], [""loppers"", ""propels""], [""perlingual"", ""prelingual""], [""psychomancy"", ""scyphomancy""], [""rests"", ""tress""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""psychomancy\"", \""scyphomancy\"", \""drosser\"", \""dorsers\"", \""olefines\"", \""felonies\"", \""tress\"", \""rests\"", \""perlingual\"", \""prelingual\"", \""troak\"", \""kotar\"", \""tarok\"", \""propels\"", \""loppers\"", \""sabadin\"", \""indabas\"", \""heterodromy\"", \""hydrometeor\""]\n"",
    ""answer"": ""[[\""dorsers\"", \""drosser\""], [\""felonies\"", \""olefines\""], [\""heterodromy\"", \""hydrometeor\""], [\""indabas\"", \""sabadin\""], [\""kotar\"", \""tarok\"", \""troak\""], [\""loppers\"", \""propels\""], [\""perlingual\"", \""prelingual\""], [\""psychomancy\"", \""scyphomancy\""], [\""rests\"", \""tress\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 459,
        ""words"": [
            ""psychomancy"",
            ""scyphomancy"",
            ""drosser"",
            ""dorsers"",
            ""olefines"",
            ""felonies"",
            ""tress"",
            ""rests"",
            ""perlingual"",
            ""prelingual"",
            ""troak"",
            ""kotar"",
            ""tarok"",
            ""propels"",
            ""loppers"",
            ""sabadin"",
            ""indabas"",
            ""heterodromy"",
            ""hydrometeor""
        ],
        ""solution"": [
            [
                ""dorsers"",
                ""drosser""
            ],
            [
                ""felonies"",
                ""olefines""
            ],
            [
                ""heterodromy"",
                ""hydrometeor""
            ],
            [
                ""indabas"",
                ""sabadin""
            ],
            [
                ""kotar"",
                ""tarok"",
                ""troak""
            ],
            [
                ""loppers"",
                ""propels""
            ],
            [
                ""perlingual"",
                ""prelingual""
            ],
            [
                ""psychomancy"",
                ""scyphomancy""
            ],
            [
                ""rests"",
                ""tress""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
460,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""staller"", ""stellar"", ""dethrones"", ""threnodes"", ""shortened"", ""unrecoded"", ""coendured""]
","[[""coendured"", ""unrecoded""], [""dethrones"", ""shortened"", ""threnodes""], [""staller"", ""stellar""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""staller\"", \""stellar\"", \""dethrones\"", \""threnodes\"", \""shortened\"", \""unrecoded\"", \""coendured\""]\n"",
    ""answer"": ""[[\""coendured\"", \""unrecoded\""], [\""dethrones\"", \""shortened\"", \""threnodes\""], [\""staller\"", \""stellar\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 460,
        ""words"": [
            ""staller"",
            ""stellar"",
            ""dethrones"",
            ""threnodes"",
            ""shortened"",
            ""unrecoded"",
            ""coendured""
        ],
        ""solution"": [
            [
                ""coendured"",
                ""unrecoded""
            ],
            [
                ""dethrones"",
                ""shortened"",
                ""threnodes""
            ],
            [
                ""staller"",
                ""stellar""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
461,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sumpit"", ""misput"", ""sawed"", ""wades"", ""counters"", ""recounts"", ""trounces"", ""construe"", ""katrine"", ""keratin"", ""intaker"", ""cheesy"", ""sychee"", ""ned"", ""den"", ""end""]
","[[""cheesy"", ""sychee""], [""construe"", ""counters"", ""recounts"", ""trounces""], [""den"", ""end"", ""ned""], [""intaker"", ""katrine"", ""keratin""], [""misput"", ""sumpit""], [""sawed"", ""wades""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sumpit\"", \""misput\"", \""sawed\"", \""wades\"", \""counters\"", \""recounts\"", \""trounces\"", \""construe\"", \""katrine\"", \""keratin\"", \""intaker\"", \""cheesy\"", \""sychee\"", \""ned\"", \""den\"", \""end\""]\n"",
    ""answer"": ""[[\""cheesy\"", \""sychee\""], [\""construe\"", \""counters\"", \""recounts\"", \""trounces\""], [\""den\"", \""end\"", \""ned\""], [\""intaker\"", \""katrine\"", \""keratin\""], [\""misput\"", \""sumpit\""], [\""sawed\"", \""wades\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 461,
        ""words"": [
            ""sumpit"",
            ""misput"",
            ""sawed"",
            ""wades"",
            ""counters"",
            ""recounts"",
            ""trounces"",
            ""construe"",
            ""katrine"",
            ""keratin"",
            ""intaker"",
            ""cheesy"",
            ""sychee"",
            ""ned"",
            ""den"",
            ""end""
        ],
        ""solution"": [
            [
                ""cheesy"",
                ""sychee""
            ],
            [
                ""construe"",
                ""counters"",
                ""recounts"",
                ""trounces""
            ],
            [
                ""den"",
                ""end"",
                ""ned""
            ],
            [
                ""intaker"",
                ""katrine"",
                ""keratin""
            ],
            [
                ""misput"",
                ""sumpit""
            ],
            [
                ""sawed"",
                ""wades""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
462,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""natica"", ""antica"", ""tanica"", ""actian"", ""adorable"", ""roadable"", ""tartrate"", ""tartaret"", ""ordeal"", ""loader"", ""reload""]
","[[""actian"", ""antica"", ""natica"", ""tanica""], [""adorable"", ""roadable""], [""loader"", ""ordeal"", ""reload""], [""tartaret"", ""tartrate""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""natica\"", \""antica\"", \""tanica\"", \""actian\"", \""adorable\"", \""roadable\"", \""tartrate\"", \""tartaret\"", \""ordeal\"", \""loader\"", \""reload\""]\n"",
    ""answer"": ""[[\""actian\"", \""antica\"", \""natica\"", \""tanica\""], [\""adorable\"", \""roadable\""], [\""loader\"", \""ordeal\"", \""reload\""], [\""tartaret\"", \""tartrate\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 462,
        ""words"": [
            ""natica"",
            ""antica"",
            ""tanica"",
            ""actian"",
            ""adorable"",
            ""roadable"",
            ""tartrate"",
            ""tartaret"",
            ""ordeal"",
            ""loader"",
            ""reload""
        ],
        ""solution"": [
            [
                ""actian"",
                ""antica"",
                ""natica"",
                ""tanica""
            ],
            [
                ""adorable"",
                ""roadable""
            ],
            [
                ""loader"",
                ""ordeal"",
                ""reload""
            ],
            [
                ""tartaret"",
                ""tartrate""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
463,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bundlet"", ""blunted"", ""unfeeding"", ""unfeigned"", ""hardener"", ""reharden"", ""antitorpedo"", ""deportation""]
","[[""antitorpedo"", ""deportation""], [""blunted"", ""bundlet""], [""hardener"", ""reharden""], [""unfeeding"", ""unfeigned""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bundlet\"", \""blunted\"", \""unfeeding\"", \""unfeigned\"", \""hardener\"", \""reharden\"", \""antitorpedo\"", \""deportation\""]\n"",
    ""answer"": ""[[\""antitorpedo\"", \""deportation\""], [\""blunted\"", \""bundlet\""], [\""hardener\"", \""reharden\""], [\""unfeeding\"", \""unfeigned\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 463,
        ""words"": [
            ""bundlet"",
            ""blunted"",
            ""unfeeding"",
            ""unfeigned"",
            ""hardener"",
            ""reharden"",
            ""antitorpedo"",
            ""deportation""
        ],
        ""solution"": [
            [
                ""antitorpedo"",
                ""deportation""
            ],
            [
                ""blunted"",
                ""bundlet""
            ],
            [
                ""hardener"",
                ""reharden""
            ],
            [
                ""unfeeding"",
                ""unfeigned""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
464,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dinettes"", ""insetted"", ""atamasco"", ""ascomata"", ""peru"", ""pure"", ""spellers"", ""presells"", ""respells"", ""creche"", ""recche"", ""lienable"", ""lineable"", ""caveat"", ""vacate"", ""cavate"", ""perpetualist"", ""pluriseptate"", ""ghoul"", ""lough""]
","[[""ascomata"", ""atamasco""], [""cavate"", ""caveat"", ""vacate""], [""creche"", ""recche""], [""dinettes"", ""insetted""], [""ghoul"", ""lough""], [""lienable"", ""lineable""], [""perpetualist"", ""pluriseptate""], [""peru"", ""pure""], [""presells"", ""respells"", ""spellers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dinettes\"", \""insetted\"", \""atamasco\"", \""ascomata\"", \""peru\"", \""pure\"", \""spellers\"", \""presells\"", \""respells\"", \""creche\"", \""recche\"", \""lienable\"", \""lineable\"", \""caveat\"", \""vacate\"", \""cavate\"", \""perpetualist\"", \""pluriseptate\"", \""ghoul\"", \""lough\""]\n"",
    ""answer"": ""[[\""ascomata\"", \""atamasco\""], [\""cavate\"", \""caveat\"", \""vacate\""], [\""creche\"", \""recche\""], [\""dinettes\"", \""insetted\""], [\""ghoul\"", \""lough\""], [\""lienable\"", \""lineable\""], [\""perpetualist\"", \""pluriseptate\""], [\""peru\"", \""pure\""], [\""presells\"", \""respells\"", \""spellers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 464,
        ""words"": [
            ""dinettes"",
            ""insetted"",
            ""atamasco"",
            ""ascomata"",
            ""peru"",
            ""pure"",
            ""spellers"",
            ""presells"",
            ""respells"",
            ""creche"",
            ""recche"",
            ""lienable"",
            ""lineable"",
            ""caveat"",
            ""vacate"",
            ""cavate"",
            ""perpetualist"",
            ""pluriseptate"",
            ""ghoul"",
            ""lough""
        ],
        ""solution"": [
            [
                ""ascomata"",
                ""atamasco""
            ],
            [
                ""cavate"",
                ""caveat"",
                ""vacate""
            ],
            [
                ""creche"",
                ""recche""
            ],
            [
                ""dinettes"",
                ""insetted""
            ],
            [
                ""ghoul"",
                ""lough""
            ],
            [
                ""lienable"",
                ""lineable""
            ],
            [
                ""perpetualist"",
                ""pluriseptate""
            ],
            [
                ""peru"",
                ""pure""
            ],
            [
                ""presells"",
                ""respells"",
                ""spellers""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
465,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""istles"", ""islets"", ""sliest"", ""sistle"", ""torenia"", ""otarine"", ""trisagion"", ""rigatonis"", ""barton"", ""brotan"", ""darned"", ""nadder"", ""bowlin"", ""inblow""]
","[[""barton"", ""brotan""], [""bowlin"", ""inblow""], [""darned"", ""nadder""], [""islets"", ""istles"", ""sistle"", ""sliest""], [""otarine"", ""torenia""], [""rigatonis"", ""trisagion""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""istles\"", \""islets\"", \""sliest\"", \""sistle\"", \""torenia\"", \""otarine\"", \""trisagion\"", \""rigatonis\"", \""barton\"", \""brotan\"", \""darned\"", \""nadder\"", \""bowlin\"", \""inblow\""]\n"",
    ""answer"": ""[[\""barton\"", \""brotan\""], [\""bowlin\"", \""inblow\""], [\""darned\"", \""nadder\""], [\""islets\"", \""istles\"", \""sistle\"", \""sliest\""], [\""otarine\"", \""torenia\""], [\""rigatonis\"", \""trisagion\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 465,
        ""words"": [
            ""istles"",
            ""islets"",
            ""sliest"",
            ""sistle"",
            ""torenia"",
            ""otarine"",
            ""trisagion"",
            ""rigatonis"",
            ""barton"",
            ""brotan"",
            ""darned"",
            ""nadder"",
            ""bowlin"",
            ""inblow""
        ],
        ""solution"": [
            [
                ""barton"",
                ""brotan""
            ],
            [
                ""bowlin"",
                ""inblow""
            ],
            [
                ""darned"",
                ""nadder""
            ],
            [
                ""islets"",
                ""istles"",
                ""sistle"",
                ""sliest""
            ],
            [
                ""otarine"",
                ""torenia""
            ],
            [
                ""rigatonis"",
                ""trisagion""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
466,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""steigh"", ""gesith"", ""eights"", ""skidpan"", ""kidnaps"", ""quaters"", ""quartes"", ""quatres"", ""orectic"", ""cerotic"", ""cervine"", ""revince"", ""overdure"", ""devourer"", ""trundle"", ""rundlet"", ""mediastina"", ""disanimate"", ""aerical"", ""acieral""]
","[[""acieral"", ""aerical""], [""cerotic"", ""orectic""], [""cervine"", ""revince""], [""devourer"", ""overdure""], [""disanimate"", ""mediastina""], [""eights"", ""gesith"", ""steigh""], [""kidnaps"", ""skidpan""], [""quartes"", ""quaters"", ""quatres""], [""rundlet"", ""trundle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""steigh\"", \""gesith\"", \""eights\"", \""skidpan\"", \""kidnaps\"", \""quaters\"", \""quartes\"", \""quatres\"", \""orectic\"", \""cerotic\"", \""cervine\"", \""revince\"", \""overdure\"", \""devourer\"", \""trundle\"", \""rundlet\"", \""mediastina\"", \""disanimate\"", \""aerical\"", \""acieral\""]\n"",
    ""answer"": ""[[\""acieral\"", \""aerical\""], [\""cerotic\"", \""orectic\""], [\""cervine\"", \""revince\""], [\""devourer\"", \""overdure\""], [\""disanimate\"", \""mediastina\""], [\""eights\"", \""gesith\"", \""steigh\""], [\""kidnaps\"", \""skidpan\""], [\""quartes\"", \""quaters\"", \""quatres\""], [\""rundlet\"", \""trundle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 466,
        ""words"": [
            ""steigh"",
            ""gesith"",
            ""eights"",
            ""skidpan"",
            ""kidnaps"",
            ""quaters"",
            ""quartes"",
            ""quatres"",
            ""orectic"",
            ""cerotic"",
            ""cervine"",
            ""revince"",
            ""overdure"",
            ""devourer"",
            ""trundle"",
            ""rundlet"",
            ""mediastina"",
            ""disanimate"",
            ""aerical"",
            ""acieral""
        ],
        ""solution"": [
            [
                ""acieral"",
                ""aerical""
            ],
            [
                ""cerotic"",
                ""orectic""
            ],
            [
                ""cervine"",
                ""revince""
            ],
            [
                ""devourer"",
                ""overdure""
            ],
            [
                ""disanimate"",
                ""mediastina""
            ],
            [
                ""eights"",
                ""gesith"",
                ""steigh""
            ],
            [
                ""kidnaps"",
                ""skidpan""
            ],
            [
                ""quartes"",
                ""quaters"",
                ""quatres""
            ],
            [
                ""rundlet"",
                ""trundle""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
467,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""thuban"", ""bhutan"", ""pasteup"", ""pupates"", ""straighten"", ""shattering""]
","[[""bhutan"", ""thuban""], [""pasteup"", ""pupates""], [""shattering"", ""straighten""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""thuban\"", \""bhutan\"", \""pasteup\"", \""pupates\"", \""straighten\"", \""shattering\""]\n"",
    ""answer"": ""[[\""bhutan\"", \""thuban\""], [\""pasteup\"", \""pupates\""], [\""shattering\"", \""straighten\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 467,
        ""words"": [
            ""thuban"",
            ""bhutan"",
            ""pasteup"",
            ""pupates"",
            ""straighten"",
            ""shattering""
        ],
        ""solution"": [
            [
                ""bhutan"",
                ""thuban""
            ],
            [
                ""pasteup"",
                ""pupates""
            ],
            [
                ""shattering"",
                ""straighten""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
468,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""undig"", ""gundi"", ""infiltering"", ""interfiling"", ""holdfast"", ""fasthold"", ""chatchke"", ""hatcheck"", ""silences"", ""licenses"", ""podarge"", ""pegador"", ""stimulator"", ""mutilators"", ""divulsion"", ""diluvions"", ""caedmonian"", ""macedonian""]
","[[""caedmonian"", ""macedonian""], [""chatchke"", ""hatcheck""], [""diluvions"", ""divulsion""], [""fasthold"", ""holdfast""], [""gundi"", ""undig""], [""infiltering"", ""interfiling""], [""licenses"", ""silences""], [""mutilators"", ""stimulator""], [""pegador"", ""podarge""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""undig\"", \""gundi\"", \""infiltering\"", \""interfiling\"", \""holdfast\"", \""fasthold\"", \""chatchke\"", \""hatcheck\"", \""silences\"", \""licenses\"", \""podarge\"", \""pegador\"", \""stimulator\"", \""mutilators\"", \""divulsion\"", \""diluvions\"", \""caedmonian\"", \""macedonian\""]\n"",
    ""answer"": ""[[\""caedmonian\"", \""macedonian\""], [\""chatchke\"", \""hatcheck\""], [\""diluvions\"", \""divulsion\""], [\""fasthold\"", \""holdfast\""], [\""gundi\"", \""undig\""], [\""infiltering\"", \""interfiling\""], [\""licenses\"", \""silences\""], [\""mutilators\"", \""stimulator\""], [\""pegador\"", \""podarge\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 468,
        ""words"": [
            ""undig"",
            ""gundi"",
            ""infiltering"",
            ""interfiling"",
            ""holdfast"",
            ""fasthold"",
            ""chatchke"",
            ""hatcheck"",
            ""silences"",
            ""licenses"",
            ""podarge"",
            ""pegador"",
            ""stimulator"",
            ""mutilators"",
            ""divulsion"",
            ""diluvions"",
            ""caedmonian"",
            ""macedonian""
        ],
        ""solution"": [
            [
                ""caedmonian"",
                ""macedonian""
            ],
            [
                ""chatchke"",
                ""hatcheck""
            ],
            [
                ""diluvions"",
                ""divulsion""
            ],
            [
                ""fasthold"",
                ""holdfast""
            ],
            [
                ""gundi"",
                ""undig""
            ],
            [
                ""infiltering"",
                ""interfiling""
            ],
            [
                ""licenses"",
                ""silences""
            ],
            [
                ""mutilators"",
                ""stimulator""
            ],
            [
                ""pegador"",
                ""podarge""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
469,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""seralbumen"", ""mensurable"", ""lebensraum"", ""redemolish"", ""demolisher"", ""cavillation"", ""vacillation"", ""lingism"", ""simling"", ""smiling"", ""sliming"", ""quieters"", ""requites"", ""curates"", ""sucrate""]
","[[""cavillation"", ""vacillation""], [""curates"", ""sucrate""], [""demolisher"", ""redemolish""], [""lebensraum"", ""mensurable"", ""seralbumen""], [""lingism"", ""simling"", ""sliming"", ""smiling""], [""quieters"", ""requites""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""seralbumen\"", \""mensurable\"", \""lebensraum\"", \""redemolish\"", \""demolisher\"", \""cavillation\"", \""vacillation\"", \""lingism\"", \""simling\"", \""smiling\"", \""sliming\"", \""quieters\"", \""requites\"", \""curates\"", \""sucrate\""]\n"",
    ""answer"": ""[[\""cavillation\"", \""vacillation\""], [\""curates\"", \""sucrate\""], [\""demolisher\"", \""redemolish\""], [\""lebensraum\"", \""mensurable\"", \""seralbumen\""], [\""lingism\"", \""simling\"", \""sliming\"", \""smiling\""], [\""quieters\"", \""requites\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 469,
        ""words"": [
            ""seralbumen"",
            ""mensurable"",
            ""lebensraum"",
            ""redemolish"",
            ""demolisher"",
            ""cavillation"",
            ""vacillation"",
            ""lingism"",
            ""simling"",
            ""smiling"",
            ""sliming"",
            ""quieters"",
            ""requites"",
            ""curates"",
            ""sucrate""
        ],
        ""solution"": [
            [
                ""cavillation"",
                ""vacillation""
            ],
            [
                ""curates"",
                ""sucrate""
            ],
            [
                ""demolisher"",
                ""redemolish""
            ],
            [
                ""lebensraum"",
                ""mensurable"",
                ""seralbumen""
            ],
            [
                ""lingism"",
                ""simling"",
                ""sliming"",
                ""smiling""
            ],
            [
                ""quieters"",
                ""requites""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
470,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""describe"", ""escribed"", ""bel"", ""elb"", ""lemanry"", ""lyreman"", ""delves"", ""devels"", ""outlanced"", ""unlocated"", ""quints"", ""squint"", ""overlayer"", ""overearly"", ""mutter"", ""turmet"", ""bellum"", ""embull"", ""tromba"", ""tambor""]
","[[""bel"", ""elb""], [""bellum"", ""embull""], [""delves"", ""devels""], [""describe"", ""escribed""], [""lemanry"", ""lyreman""], [""mutter"", ""turmet""], [""outlanced"", ""unlocated""], [""overearly"", ""overlayer""], [""quints"", ""squint""], [""tambor"", ""tromba""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""describe\"", \""escribed\"", \""bel\"", \""elb\"", \""lemanry\"", \""lyreman\"", \""delves\"", \""devels\"", \""outlanced\"", \""unlocated\"", \""quints\"", \""squint\"", \""overlayer\"", \""overearly\"", \""mutter\"", \""turmet\"", \""bellum\"", \""embull\"", \""tromba\"", \""tambor\""]\n"",
    ""answer"": ""[[\""bel\"", \""elb\""], [\""bellum\"", \""embull\""], [\""delves\"", \""devels\""], [\""describe\"", \""escribed\""], [\""lemanry\"", \""lyreman\""], [\""mutter\"", \""turmet\""], [\""outlanced\"", \""unlocated\""], [\""overearly\"", \""overlayer\""], [\""quints\"", \""squint\""], [\""tambor\"", \""tromba\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 470,
        ""words"": [
            ""describe"",
            ""escribed"",
            ""bel"",
            ""elb"",
            ""lemanry"",
            ""lyreman"",
            ""delves"",
            ""devels"",
            ""outlanced"",
            ""unlocated"",
            ""quints"",
            ""squint"",
            ""overlayer"",
            ""overearly"",
            ""mutter"",
            ""turmet"",
            ""bellum"",
            ""embull"",
            ""tromba"",
            ""tambor""
        ],
        ""solution"": [
            [
                ""bel"",
                ""elb""
            ],
            [
                ""bellum"",
                ""embull""
            ],
            [
                ""delves"",
                ""devels""
            ],
            [
                ""describe"",
                ""escribed""
            ],
            [
                ""lemanry"",
                ""lyreman""
            ],
            [
                ""mutter"",
                ""turmet""
            ],
            [
                ""outlanced"",
                ""unlocated""
            ],
            [
                ""overearly"",
                ""overlayer""
            ],
            [
                ""quints"",
                ""squint""
            ],
            [
                ""tambor"",
                ""tromba""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
471,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""blam"", ""balm"", ""lamb"", ""desmon"", ""demons"", ""openest"", ""posteen"", ""fishbone"", ""bonefish""]
","[[""balm"", ""blam"", ""lamb""], [""bonefish"", ""fishbone""], [""demons"", ""desmon""], [""openest"", ""posteen""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""blam\"", \""balm\"", \""lamb\"", \""desmon\"", \""demons\"", \""openest\"", \""posteen\"", \""fishbone\"", \""bonefish\""]\n"",
    ""answer"": ""[[\""balm\"", \""blam\"", \""lamb\""], [\""bonefish\"", \""fishbone\""], [\""demons\"", \""desmon\""], [\""openest\"", \""posteen\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 471,
        ""words"": [
            ""blam"",
            ""balm"",
            ""lamb"",
            ""desmon"",
            ""demons"",
            ""openest"",
            ""posteen"",
            ""fishbone"",
            ""bonefish""
        ],
        ""solution"": [
            [
                ""balm"",
                ""blam"",
                ""lamb""
            ],
            [
                ""bonefish"",
                ""fishbone""
            ],
            [
                ""demons"",
                ""desmon""
            ],
            [
                ""openest"",
                ""posteen""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
472,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""resojourn"", ""sojourner"", ""imperiled"", ""reimplied"", ""determinant"", ""detrainment"", ""quakeress"", ""squeakers"", ""itaconate"", ""acetation"", ""pratincolous"", ""patroclinous"", ""rupestrian"", ""supertrain"", ""bolter"", ""rebolt"", ""brotel"", ""cereal"", ""relace""]
","[[""acetation"", ""itaconate""], [""bolter"", ""brotel"", ""rebolt""], [""cereal"", ""relace""], [""determinant"", ""detrainment""], [""imperiled"", ""reimplied""], [""patroclinous"", ""pratincolous""], [""quakeress"", ""squeakers""], [""resojourn"", ""sojourner""], [""rupestrian"", ""supertrain""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""resojourn\"", \""sojourner\"", \""imperiled\"", \""reimplied\"", \""determinant\"", \""detrainment\"", \""quakeress\"", \""squeakers\"", \""itaconate\"", \""acetation\"", \""pratincolous\"", \""patroclinous\"", \""rupestrian\"", \""supertrain\"", \""bolter\"", \""rebolt\"", \""brotel\"", \""cereal\"", \""relace\""]\n"",
    ""answer"": ""[[\""acetation\"", \""itaconate\""], [\""bolter\"", \""brotel\"", \""rebolt\""], [\""cereal\"", \""relace\""], [\""determinant\"", \""detrainment\""], [\""imperiled\"", \""reimplied\""], [\""patroclinous\"", \""pratincolous\""], [\""quakeress\"", \""squeakers\""], [\""resojourn\"", \""sojourner\""], [\""rupestrian\"", \""supertrain\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 472,
        ""words"": [
            ""resojourn"",
            ""sojourner"",
            ""imperiled"",
            ""reimplied"",
            ""determinant"",
            ""detrainment"",
            ""quakeress"",
            ""squeakers"",
            ""itaconate"",
            ""acetation"",
            ""pratincolous"",
            ""patroclinous"",
            ""rupestrian"",
            ""supertrain"",
            ""bolter"",
            ""rebolt"",
            ""brotel"",
            ""cereal"",
            ""relace""
        ],
        ""solution"": [
            [
                ""acetation"",
                ""itaconate""
            ],
            [
                ""bolter"",
                ""brotel"",
                ""rebolt""
            ],
            [
                ""cereal"",
                ""relace""
            ],
            [
                ""determinant"",
                ""detrainment""
            ],
            [
                ""imperiled"",
                ""reimplied""
            ],
            [
                ""patroclinous"",
                ""pratincolous""
            ],
            [
                ""quakeress"",
                ""squeakers""
            ],
            [
                ""resojourn"",
                ""sojourner""
            ],
            [
                ""rupestrian"",
                ""supertrain""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
473,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""teachable"", ""cheatable"", ""sarcitis"", ""triassic"", ""connumerate"", ""countreeman"", ""clitoria"", ""loricati""]
","[[""cheatable"", ""teachable""], [""clitoria"", ""loricati""], [""connumerate"", ""countreeman""], [""sarcitis"", ""triassic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""teachable\"", \""cheatable\"", \""sarcitis\"", \""triassic\"", \""connumerate\"", \""countreeman\"", \""clitoria\"", \""loricati\""]\n"",
    ""answer"": ""[[\""cheatable\"", \""teachable\""], [\""clitoria\"", \""loricati\""], [\""connumerate\"", \""countreeman\""], [\""sarcitis\"", \""triassic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 473,
        ""words"": [
            ""teachable"",
            ""cheatable"",
            ""sarcitis"",
            ""triassic"",
            ""connumerate"",
            ""countreeman"",
            ""clitoria"",
            ""loricati""
        ],
        ""solution"": [
            [
                ""cheatable"",
                ""teachable""
            ],
            [
                ""clitoria"",
                ""loricati""
            ],
            [
                ""connumerate"",
                ""countreeman""
            ],
            [
                ""sarcitis"",
                ""triassic""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
474,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""photochronograph"", ""chronophotograph"", ""dishes"", ""hissed"", ""spuming"", ""impugns"", ""eggler"", ""legger"", ""swiping"", ""wisping"", ""cider"", ""dicer"", ""troper"", ""report"", ""caspar"", ""scarpa"", ""pitsaw"", ""sawpit""]
","[[""caspar"", ""scarpa""], [""chronophotograph"", ""photochronograph""], [""cider"", ""dicer""], [""dishes"", ""hissed""], [""eggler"", ""legger""], [""impugns"", ""spuming""], [""pitsaw"", ""sawpit""], [""report"", ""troper""], [""swiping"", ""wisping""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""photochronograph\"", \""chronophotograph\"", \""dishes\"", \""hissed\"", \""spuming\"", \""impugns\"", \""eggler\"", \""legger\"", \""swiping\"", \""wisping\"", \""cider\"", \""dicer\"", \""troper\"", \""report\"", \""caspar\"", \""scarpa\"", \""pitsaw\"", \""sawpit\""]\n"",
    ""answer"": ""[[\""caspar\"", \""scarpa\""], [\""chronophotograph\"", \""photochronograph\""], [\""cider\"", \""dicer\""], [\""dishes\"", \""hissed\""], [\""eggler\"", \""legger\""], [\""impugns\"", \""spuming\""], [\""pitsaw\"", \""sawpit\""], [\""report\"", \""troper\""], [\""swiping\"", \""wisping\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 474,
        ""words"": [
            ""photochronograph"",
            ""chronophotograph"",
            ""dishes"",
            ""hissed"",
            ""spuming"",
            ""impugns"",
            ""eggler"",
            ""legger"",
            ""swiping"",
            ""wisping"",
            ""cider"",
            ""dicer"",
            ""troper"",
            ""report"",
            ""caspar"",
            ""scarpa"",
            ""pitsaw"",
            ""sawpit""
        ],
        ""solution"": [
            [
                ""caspar"",
                ""scarpa""
            ],
            [
                ""chronophotograph"",
                ""photochronograph""
            ],
            [
                ""cider"",
                ""dicer""
            ],
            [
                ""dishes"",
                ""hissed""
            ],
            [
                ""eggler"",
                ""legger""
            ],
            [
                ""impugns"",
                ""spuming""
            ],
            [
                ""pitsaw"",
                ""sawpit""
            ],
            [
                ""report"",
                ""troper""
            ],
            [
                ""swiping"",
                ""wisping""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
475,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""trucks"", ""struck"", ""salebrous"", ""labouress"", ""intender"", ""retinned"", ""yawled"", ""awedly"", ""formene"", ""foremen"", ""maegbot"", ""magbote"", ""ceylon"", ""cloyne"", ""espadon"", ""spadone"", ""prehended"", ""deprehend""]
","[[""awedly"", ""yawled""], [""ceylon"", ""cloyne""], [""deprehend"", ""prehended""], [""espadon"", ""spadone""], [""foremen"", ""formene""], [""intender"", ""retinned""], [""labouress"", ""salebrous""], [""maegbot"", ""magbote""], [""struck"", ""trucks""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""trucks\"", \""struck\"", \""salebrous\"", \""labouress\"", \""intender\"", \""retinned\"", \""yawled\"", \""awedly\"", \""formene\"", \""foremen\"", \""maegbot\"", \""magbote\"", \""ceylon\"", \""cloyne\"", \""espadon\"", \""spadone\"", \""prehended\"", \""deprehend\""]\n"",
    ""answer"": ""[[\""awedly\"", \""yawled\""], [\""ceylon\"", \""cloyne\""], [\""deprehend\"", \""prehended\""], [\""espadon\"", \""spadone\""], [\""foremen\"", \""formene\""], [\""intender\"", \""retinned\""], [\""labouress\"", \""salebrous\""], [\""maegbot\"", \""magbote\""], [\""struck\"", \""trucks\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 475,
        ""words"": [
            ""trucks"",
            ""struck"",
            ""salebrous"",
            ""labouress"",
            ""intender"",
            ""retinned"",
            ""yawled"",
            ""awedly"",
            ""formene"",
            ""foremen"",
            ""maegbot"",
            ""magbote"",
            ""ceylon"",
            ""cloyne"",
            ""espadon"",
            ""spadone"",
            ""prehended"",
            ""deprehend""
        ],
        ""solution"": [
            [
                ""awedly"",
                ""yawled""
            ],
            [
                ""ceylon"",
                ""cloyne""
            ],
            [
                ""deprehend"",
                ""prehended""
            ],
            [
                ""espadon"",
                ""spadone""
            ],
            [
                ""foremen"",
                ""formene""
            ],
            [
                ""intender"",
                ""retinned""
            ],
            [
                ""labouress"",
                ""salebrous""
            ],
            [
                ""maegbot"",
                ""magbote""
            ],
            [
                ""struck"",
                ""trucks""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
476,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sporters"", ""portress"", ""steamroll"", ""martellos"", ""teloi"", ""eliot"", ""toile"", ""gambist"", ""gambits"", ""animation"", ""amination"", ""poignado"", ""apogonid"", ""niching"", ""chining"", ""inching"", ""det"", ""ted"", ""testamur"", ""maturest"", ""geminal"", ""gamelin""]
","[[""amination"", ""animation""], [""apogonid"", ""poignado""], [""chining"", ""inching"", ""niching""], [""det"", ""ted""], [""eliot"", ""teloi"", ""toile""], [""gambist"", ""gambits""], [""gamelin"", ""geminal""], [""martellos"", ""steamroll""], [""maturest"", ""testamur""], [""portress"", ""sporters""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sporters\"", \""portress\"", \""steamroll\"", \""martellos\"", \""teloi\"", \""eliot\"", \""toile\"", \""gambist\"", \""gambits\"", \""animation\"", \""amination\"", \""poignado\"", \""apogonid\"", \""niching\"", \""chining\"", \""inching\"", \""det\"", \""ted\"", \""testamur\"", \""maturest\"", \""geminal\"", \""gamelin\""]\n"",
    ""answer"": ""[[\""amination\"", \""animation\""], [\""apogonid\"", \""poignado\""], [\""chining\"", \""inching\"", \""niching\""], [\""det\"", \""ted\""], [\""eliot\"", \""teloi\"", \""toile\""], [\""gambist\"", \""gambits\""], [\""gamelin\"", \""geminal\""], [\""martellos\"", \""steamroll\""], [\""maturest\"", \""testamur\""], [\""portress\"", \""sporters\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 476,
        ""words"": [
            ""sporters"",
            ""portress"",
            ""steamroll"",
            ""martellos"",
            ""teloi"",
            ""eliot"",
            ""toile"",
            ""gambist"",
            ""gambits"",
            ""animation"",
            ""amination"",
            ""poignado"",
            ""apogonid"",
            ""niching"",
            ""chining"",
            ""inching"",
            ""det"",
            ""ted"",
            ""testamur"",
            ""maturest"",
            ""geminal"",
            ""gamelin""
        ],
        ""solution"": [
            [
                ""amination"",
                ""animation""
            ],
            [
                ""apogonid"",
                ""poignado""
            ],
            [
                ""chining"",
                ""inching"",
                ""niching""
            ],
            [
                ""det"",
                ""ted""
            ],
            [
                ""eliot"",
                ""teloi"",
                ""toile""
            ],
            [
                ""gambist"",
                ""gambits""
            ],
            [
                ""gamelin"",
                ""geminal""
            ],
            [
                ""martellos"",
                ""steamroll""
            ],
            [
                ""maturest"",
                ""testamur""
            ],
            [
                ""portress"",
                ""sporters""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
477,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cubists"", ""bustics"", ""debell"", ""belled"", ""tronage"", ""negator"", ""teat"", ""atte"", ""etta"", ""asphalt"", ""taplash"", ""quinacrine"", ""inquirance"", ""pyrenic"", ""cyprine"", ""humane"", ""humean""]
","[[""asphalt"", ""taplash""], [""atte"", ""etta"", ""teat""], [""belled"", ""debell""], [""bustics"", ""cubists""], [""cyprine"", ""pyrenic""], [""humane"", ""humean""], [""inquirance"", ""quinacrine""], [""negator"", ""tronage""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cubists\"", \""bustics\"", \""debell\"", \""belled\"", \""tronage\"", \""negator\"", \""teat\"", \""atte\"", \""etta\"", \""asphalt\"", \""taplash\"", \""quinacrine\"", \""inquirance\"", \""pyrenic\"", \""cyprine\"", \""humane\"", \""humean\""]\n"",
    ""answer"": ""[[\""asphalt\"", \""taplash\""], [\""atte\"", \""etta\"", \""teat\""], [\""belled\"", \""debell\""], [\""bustics\"", \""cubists\""], [\""cyprine\"", \""pyrenic\""], [\""humane\"", \""humean\""], [\""inquirance\"", \""quinacrine\""], [\""negator\"", \""tronage\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 477,
        ""words"": [
            ""cubists"",
            ""bustics"",
            ""debell"",
            ""belled"",
            ""tronage"",
            ""negator"",
            ""teat"",
            ""atte"",
            ""etta"",
            ""asphalt"",
            ""taplash"",
            ""quinacrine"",
            ""inquirance"",
            ""pyrenic"",
            ""cyprine"",
            ""humane"",
            ""humean""
        ],
        ""solution"": [
            [
                ""asphalt"",
                ""taplash""
            ],
            [
                ""atte"",
                ""etta"",
                ""teat""
            ],
            [
                ""belled"",
                ""debell""
            ],
            [
                ""bustics"",
                ""cubists""
            ],
            [
                ""cyprine"",
                ""pyrenic""
            ],
            [
                ""humane"",
                ""humean""
            ],
            [
                ""inquirance"",
                ""quinacrine""
            ],
            [
                ""negator"",
                ""tronage""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
478,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cocreditor"", ""codirector"", ""premit"", ""permit"", ""teloi"", ""toile"", ""eliot"", ""durban"", ""undrab"", ""archit"", ""chitra"", ""pogonip"", ""pooping"", ""analogist"", ""nostalgia"", ""bestar"", ""restab"", ""barest"", ""trabes"", ""resilient"", ""listerine"", ""skedlock"", ""skeldock""]
","[[""analogist"", ""nostalgia""], [""archit"", ""chitra""], [""barest"", ""bestar"", ""restab"", ""trabes""], [""cocreditor"", ""codirector""], [""durban"", ""undrab""], [""eliot"", ""teloi"", ""toile""], [""listerine"", ""resilient""], [""permit"", ""premit""], [""pogonip"", ""pooping""], [""skedlock"", ""skeldock""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cocreditor\"", \""codirector\"", \""premit\"", \""permit\"", \""teloi\"", \""toile\"", \""eliot\"", \""durban\"", \""undrab\"", \""archit\"", \""chitra\"", \""pogonip\"", \""pooping\"", \""analogist\"", \""nostalgia\"", \""bestar\"", \""restab\"", \""barest\"", \""trabes\"", \""resilient\"", \""listerine\"", \""skedlock\"", \""skeldock\""]\n"",
    ""answer"": ""[[\""analogist\"", \""nostalgia\""], [\""archit\"", \""chitra\""], [\""barest\"", \""bestar\"", \""restab\"", \""trabes\""], [\""cocreditor\"", \""codirector\""], [\""durban\"", \""undrab\""], [\""eliot\"", \""teloi\"", \""toile\""], [\""listerine\"", \""resilient\""], [\""permit\"", \""premit\""], [\""pogonip\"", \""pooping\""], [\""skedlock\"", \""skeldock\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 478,
        ""words"": [
            ""cocreditor"",
            ""codirector"",
            ""premit"",
            ""permit"",
            ""teloi"",
            ""toile"",
            ""eliot"",
            ""durban"",
            ""undrab"",
            ""archit"",
            ""chitra"",
            ""pogonip"",
            ""pooping"",
            ""analogist"",
            ""nostalgia"",
            ""bestar"",
            ""restab"",
            ""barest"",
            ""trabes"",
            ""resilient"",
            ""listerine"",
            ""skedlock"",
            ""skeldock""
        ],
        ""solution"": [
            [
                ""analogist"",
                ""nostalgia""
            ],
            [
                ""archit"",
                ""chitra""
            ],
            [
                ""barest"",
                ""bestar"",
                ""restab"",
                ""trabes""
            ],
            [
                ""cocreditor"",
                ""codirector""
            ],
            [
                ""durban"",
                ""undrab""
            ],
            [
                ""eliot"",
                ""teloi"",
                ""toile""
            ],
            [
                ""listerine"",
                ""resilient""
            ],
            [
                ""permit"",
                ""premit""
            ],
            [
                ""pogonip"",
                ""pooping""
            ],
            [
                ""skedlock"",
                ""skeldock""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
479,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""septemia"", ""estampie"", ""asearch"", ""eschara"", ""urazine"", ""azurine""]
","[[""asearch"", ""eschara""], [""azurine"", ""urazine""], [""estampie"", ""septemia""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""septemia\"", \""estampie\"", \""asearch\"", \""eschara\"", \""urazine\"", \""azurine\""]\n"",
    ""answer"": ""[[\""asearch\"", \""eschara\""], [\""azurine\"", \""urazine\""], [\""estampie\"", \""septemia\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 479,
        ""words"": [
            ""septemia"",
            ""estampie"",
            ""asearch"",
            ""eschara"",
            ""urazine"",
            ""azurine""
        ],
        ""solution"": [
            [
                ""asearch"",
                ""eschara""
            ],
            [
                ""azurine"",
                ""urazine""
            ],
            [
                ""estampie"",
                ""septemia""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
480,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rethreaded"", ""redhearted"", ""morencite"", ""intercome"", ""entomeric""]
","[[""entomeric"", ""intercome"", ""morencite""], [""redhearted"", ""rethreaded""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rethreaded\"", \""redhearted\"", \""morencite\"", \""intercome\"", \""entomeric\""]\n"",
    ""answer"": ""[[\""entomeric\"", \""intercome\"", \""morencite\""], [\""redhearted\"", \""rethreaded\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 480,
        ""words"": [
            ""rethreaded"",
            ""redhearted"",
            ""morencite"",
            ""intercome"",
            ""entomeric""
        ],
        ""solution"": [
            [
                ""entomeric"",
                ""intercome"",
                ""morencite""
            ],
            [
                ""redhearted"",
                ""rethreaded""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
481,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bushbuck"", ""buckbush"", ""taka"", ""atka""]
","[[""atka"", ""taka""], [""buckbush"", ""bushbuck""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bushbuck\"", \""buckbush\"", \""taka\"", \""atka\""]\n"",
    ""answer"": ""[[\""atka\"", \""taka\""], [\""buckbush\"", \""bushbuck\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 481,
        ""words"": [
            ""bushbuck"",
            ""buckbush"",
            ""taka"",
            ""atka""
        ],
        ""solution"": [
            [
                ""atka"",
                ""taka""
            ],
            [
                ""buckbush"",
                ""bushbuck""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
482,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""eater"", ""teaer"", ""arete"", ""plyer"", ""reply"", ""lepry"", ""lutein"", ""untile"", ""burley"", ""burely"", ""baster"", ""restab"", ""breast"", ""raged"", ""edgar"", ""garde"", ""grade"", ""gader"", ""regelates"", ""eglateres"", ""relegates""]
","[[""arete"", ""eater"", ""teaer""], [""baster"", ""breast"", ""restab""], [""burely"", ""burley""], [""edgar"", ""gader"", ""garde"", ""grade"", ""raged""], [""eglateres"", ""regelates"", ""relegates""], [""lepry"", ""plyer"", ""reply""], [""lutein"", ""untile""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""eater\"", \""teaer\"", \""arete\"", \""plyer\"", \""reply\"", \""lepry\"", \""lutein\"", \""untile\"", \""burley\"", \""burely\"", \""baster\"", \""restab\"", \""breast\"", \""raged\"", \""edgar\"", \""garde\"", \""grade\"", \""gader\"", \""regelates\"", \""eglateres\"", \""relegates\""]\n"",
    ""answer"": ""[[\""arete\"", \""eater\"", \""teaer\""], [\""baster\"", \""breast\"", \""restab\""], [\""burely\"", \""burley\""], [\""edgar\"", \""gader\"", \""garde\"", \""grade\"", \""raged\""], [\""eglateres\"", \""regelates\"", \""relegates\""], [\""lepry\"", \""plyer\"", \""reply\""], [\""lutein\"", \""untile\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 482,
        ""words"": [
            ""eater"",
            ""teaer"",
            ""arete"",
            ""plyer"",
            ""reply"",
            ""lepry"",
            ""lutein"",
            ""untile"",
            ""burley"",
            ""burely"",
            ""baster"",
            ""restab"",
            ""breast"",
            ""raged"",
            ""edgar"",
            ""garde"",
            ""grade"",
            ""gader"",
            ""regelates"",
            ""eglateres"",
            ""relegates""
        ],
        ""solution"": [
            [
                ""arete"",
                ""eater"",
                ""teaer""
            ],
            [
                ""baster"",
                ""breast"",
                ""restab""
            ],
            [
                ""burely"",
                ""burley""
            ],
            [
                ""edgar"",
                ""gader"",
                ""garde"",
                ""grade"",
                ""raged""
            ],
            [
                ""eglateres"",
                ""regelates"",
                ""relegates""
            ],
            [
                ""lepry"",
                ""plyer"",
                ""reply""
            ],
            [
                ""lutein"",
                ""untile""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
483,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cystolith"", ""lithocyst"", ""clout"", ""culot"", ""woidre"", ""weirdo"", ""citatory"", ""atrocity""]
","[[""atrocity"", ""citatory""], [""clout"", ""culot""], [""cystolith"", ""lithocyst""], [""weirdo"", ""woidre""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cystolith\"", \""lithocyst\"", \""clout\"", \""culot\"", \""woidre\"", \""weirdo\"", \""citatory\"", \""atrocity\""]\n"",
    ""answer"": ""[[\""atrocity\"", \""citatory\""], [\""clout\"", \""culot\""], [\""cystolith\"", \""lithocyst\""], [\""weirdo\"", \""woidre\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 483,
        ""words"": [
            ""cystolith"",
            ""lithocyst"",
            ""clout"",
            ""culot"",
            ""woidre"",
            ""weirdo"",
            ""citatory"",
            ""atrocity""
        ],
        ""solution"": [
            [
                ""atrocity"",
                ""citatory""
            ],
            [
                ""clout"",
                ""culot""
            ],
            [
                ""cystolith"",
                ""lithocyst""
            ],
            [
                ""weirdo"",
                ""woidre""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
484,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""heath"", ""theah"", ""pretensively"", ""presentively"", ""pinochle"", ""phenolic"", ""selly"", ""yells"", ""warps"", ""wraps""]
","[[""heath"", ""theah""], [""phenolic"", ""pinochle""], [""presentively"", ""pretensively""], [""selly"", ""yells""], [""warps"", ""wraps""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""heath\"", \""theah\"", \""pretensively\"", \""presentively\"", \""pinochle\"", \""phenolic\"", \""selly\"", \""yells\"", \""warps\"", \""wraps\""]\n"",
    ""answer"": ""[[\""heath\"", \""theah\""], [\""phenolic\"", \""pinochle\""], [\""presentively\"", \""pretensively\""], [\""selly\"", \""yells\""], [\""warps\"", \""wraps\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 484,
        ""words"": [
            ""heath"",
            ""theah"",
            ""pretensively"",
            ""presentively"",
            ""pinochle"",
            ""phenolic"",
            ""selly"",
            ""yells"",
            ""warps"",
            ""wraps""
        ],
        ""solution"": [
            [
                ""heath"",
                ""theah""
            ],
            [
                ""phenolic"",
                ""pinochle""
            ],
            [
                ""presentively"",
                ""pretensively""
            ],
            [
                ""selly"",
                ""yells""
            ],
            [
                ""warps"",
                ""wraps""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
485,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pooka"", ""oopak"", ""matchbooks"", ""smoothback"", ""dronte"", ""rodent"", ""snoopiest"", ""spooniest"", ""grabs"", ""garbs"", ""penances"", ""spencean"", ""geneserin"", ""engineers"", ""pride"", ""redip"", ""pried"", ""riped""]
","[[""dronte"", ""rodent""], [""engineers"", ""geneserin""], [""garbs"", ""grabs""], [""matchbooks"", ""smoothback""], [""oopak"", ""pooka""], [""penances"", ""spencean""], [""pride"", ""pried"", ""redip"", ""riped""], [""snoopiest"", ""spooniest""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pooka\"", \""oopak\"", \""matchbooks\"", \""smoothback\"", \""dronte\"", \""rodent\"", \""snoopiest\"", \""spooniest\"", \""grabs\"", \""garbs\"", \""penances\"", \""spencean\"", \""geneserin\"", \""engineers\"", \""pride\"", \""redip\"", \""pried\"", \""riped\""]\n"",
    ""answer"": ""[[\""dronte\"", \""rodent\""], [\""engineers\"", \""geneserin\""], [\""garbs\"", \""grabs\""], [\""matchbooks\"", \""smoothback\""], [\""oopak\"", \""pooka\""], [\""penances\"", \""spencean\""], [\""pride\"", \""pried\"", \""redip\"", \""riped\""], [\""snoopiest\"", \""spooniest\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 485,
        ""words"": [
            ""pooka"",
            ""oopak"",
            ""matchbooks"",
            ""smoothback"",
            ""dronte"",
            ""rodent"",
            ""snoopiest"",
            ""spooniest"",
            ""grabs"",
            ""garbs"",
            ""penances"",
            ""spencean"",
            ""geneserin"",
            ""engineers"",
            ""pride"",
            ""redip"",
            ""pried"",
            ""riped""
        ],
        ""solution"": [
            [
                ""dronte"",
                ""rodent""
            ],
            [
                ""engineers"",
                ""geneserin""
            ],
            [
                ""garbs"",
                ""grabs""
            ],
            [
                ""matchbooks"",
                ""smoothback""
            ],
            [
                ""oopak"",
                ""pooka""
            ],
            [
                ""penances"",
                ""spencean""
            ],
            [
                ""pride"",
                ""pried"",
                ""redip"",
                ""riped""
            ],
            [
                ""snoopiest"",
                ""spooniest""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
486,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""grasps"", ""sprags"", ""devirginate"", ""denigrative"", ""charuk"", ""chukar"", ""imposers"", ""promises"", ""semipros"", ""tache"", ""cheat"", ""theca"", ""teach"", ""glummer"", ""grummel"", ""trapt"", ""pratt""]
","[[""charuk"", ""chukar""], [""cheat"", ""tache"", ""teach"", ""theca""], [""denigrative"", ""devirginate""], [""glummer"", ""grummel""], [""grasps"", ""sprags""], [""imposers"", ""promises"", ""semipros""], [""pratt"", ""trapt""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""grasps\"", \""sprags\"", \""devirginate\"", \""denigrative\"", \""charuk\"", \""chukar\"", \""imposers\"", \""promises\"", \""semipros\"", \""tache\"", \""cheat\"", \""theca\"", \""teach\"", \""glummer\"", \""grummel\"", \""trapt\"", \""pratt\""]\n"",
    ""answer"": ""[[\""charuk\"", \""chukar\""], [\""cheat\"", \""tache\"", \""teach\"", \""theca\""], [\""denigrative\"", \""devirginate\""], [\""glummer\"", \""grummel\""], [\""grasps\"", \""sprags\""], [\""imposers\"", \""promises\"", \""semipros\""], [\""pratt\"", \""trapt\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 486,
        ""words"": [
            ""grasps"",
            ""sprags"",
            ""devirginate"",
            ""denigrative"",
            ""charuk"",
            ""chukar"",
            ""imposers"",
            ""promises"",
            ""semipros"",
            ""tache"",
            ""cheat"",
            ""theca"",
            ""teach"",
            ""glummer"",
            ""grummel"",
            ""trapt"",
            ""pratt""
        ],
        ""solution"": [
            [
                ""charuk"",
                ""chukar""
            ],
            [
                ""cheat"",
                ""tache"",
                ""teach"",
                ""theca""
            ],
            [
                ""denigrative"",
                ""devirginate""
            ],
            [
                ""glummer"",
                ""grummel""
            ],
            [
                ""grasps"",
                ""sprags""
            ],
            [
                ""imposers"",
                ""promises"",
                ""semipros""
            ],
            [
                ""pratt"",
                ""trapt""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
487,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tridiapason"", ""disparation"", ""cutlets"", ""scuttle"", ""cuttles"", ""castors"", ""costars"", ""astrally"", ""stallary"", ""conatus"", ""toucans"", ""tearless"", ""rateless"", ""rhodium"", ""humidor"", ""cangue"", ""uncage"", ""kaleege"", ""keelage""]
","[[""astrally"", ""stallary""], [""cangue"", ""uncage""], [""castors"", ""costars""], [""conatus"", ""toucans""], [""cutlets"", ""cuttles"", ""scuttle""], [""disparation"", ""tridiapason""], [""humidor"", ""rhodium""], [""kaleege"", ""keelage""], [""rateless"", ""tearless""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tridiapason\"", \""disparation\"", \""cutlets\"", \""scuttle\"", \""cuttles\"", \""castors\"", \""costars\"", \""astrally\"", \""stallary\"", \""conatus\"", \""toucans\"", \""tearless\"", \""rateless\"", \""rhodium\"", \""humidor\"", \""cangue\"", \""uncage\"", \""kaleege\"", \""keelage\""]\n"",
    ""answer"": ""[[\""astrally\"", \""stallary\""], [\""cangue\"", \""uncage\""], [\""castors\"", \""costars\""], [\""conatus\"", \""toucans\""], [\""cutlets\"", \""cuttles\"", \""scuttle\""], [\""disparation\"", \""tridiapason\""], [\""humidor\"", \""rhodium\""], [\""kaleege\"", \""keelage\""], [\""rateless\"", \""tearless\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 487,
        ""words"": [
            ""tridiapason"",
            ""disparation"",
            ""cutlets"",
            ""scuttle"",
            ""cuttles"",
            ""castors"",
            ""costars"",
            ""astrally"",
            ""stallary"",
            ""conatus"",
            ""toucans"",
            ""tearless"",
            ""rateless"",
            ""rhodium"",
            ""humidor"",
            ""cangue"",
            ""uncage"",
            ""kaleege"",
            ""keelage""
        ],
        ""solution"": [
            [
                ""astrally"",
                ""stallary""
            ],
            [
                ""cangue"",
                ""uncage""
            ],
            [
                ""castors"",
                ""costars""
            ],
            [
                ""conatus"",
                ""toucans""
            ],
            [
                ""cutlets"",
                ""cuttles"",
                ""scuttle""
            ],
            [
                ""disparation"",
                ""tridiapason""
            ],
            [
                ""humidor"",
                ""rhodium""
            ],
            [
                ""kaleege"",
                ""keelage""
            ],
            [
                ""rateless"",
                ""tearless""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
488,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""presential"", ""alpestrine"", ""episternal"", ""interlapse"", ""snaws"", ""swans""]
","[[""alpestrine"", ""episternal"", ""interlapse"", ""presential""], [""snaws"", ""swans""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""presential\"", \""alpestrine\"", \""episternal\"", \""interlapse\"", \""snaws\"", \""swans\""]\n"",
    ""answer"": ""[[\""alpestrine\"", \""episternal\"", \""interlapse\"", \""presential\""], [\""snaws\"", \""swans\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 488,
        ""words"": [
            ""presential"",
            ""alpestrine"",
            ""episternal"",
            ""interlapse"",
            ""snaws"",
            ""swans""
        ],
        ""solution"": [
            [
                ""alpestrine"",
                ""episternal"",
                ""interlapse"",
                ""presential""
            ],
            [
                ""snaws"",
                ""swans""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
489,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""asa"", ""aas"", ""saa"", ""synergid"", ""syringed"", ""crops"", ""corps""]
","[[""aas"", ""asa"", ""saa""], [""corps"", ""crops""], [""synergid"", ""syringed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""asa\"", \""aas\"", \""saa\"", \""synergid\"", \""syringed\"", \""crops\"", \""corps\""]\n"",
    ""answer"": ""[[\""aas\"", \""asa\"", \""saa\""], [\""corps\"", \""crops\""], [\""synergid\"", \""syringed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 489,
        ""words"": [
            ""asa"",
            ""aas"",
            ""saa"",
            ""synergid"",
            ""syringed"",
            ""crops"",
            ""corps""
        ],
        ""solution"": [
            [
                ""aas"",
                ""asa"",
                ""saa""
            ],
            [
                ""corps"",
                ""crops""
            ],
            [
                ""synergid"",
                ""syringed""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
490,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cartoning"", ""nontragic"", ""dissenters"", ""instressed"", ""pliny"", ""pinyl""]
","[[""cartoning"", ""nontragic""], [""dissenters"", ""instressed""], [""pinyl"", ""pliny""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cartoning\"", \""nontragic\"", \""dissenters\"", \""instressed\"", \""pliny\"", \""pinyl\""]\n"",
    ""answer"": ""[[\""cartoning\"", \""nontragic\""], [\""dissenters\"", \""instressed\""], [\""pinyl\"", \""pliny\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 490,
        ""words"": [
            ""cartoning"",
            ""nontragic"",
            ""dissenters"",
            ""instressed"",
            ""pliny"",
            ""pinyl""
        ],
        ""solution"": [
            [
                ""cartoning"",
                ""nontragic""
            ],
            [
                ""dissenters"",
                ""instressed""
            ],
            [
                ""pinyl"",
                ""pliny""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
491,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""usurpers"", ""pursuers"", ""grummets"", ""grummest"", ""ringed"", ""reding"", ""engrid"", ""girned"", ""dinger"", ""brasque"", ""barques"", ""reef"", ""fere"", ""feer"", ""benshee"", ""shebeen""]
","[[""barques"", ""brasque""], [""benshee"", ""shebeen""], [""dinger"", ""engrid"", ""girned"", ""reding"", ""ringed""], [""feer"", ""fere"", ""reef""], [""grummest"", ""grummets""], [""pursuers"", ""usurpers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""usurpers\"", \""pursuers\"", \""grummets\"", \""grummest\"", \""ringed\"", \""reding\"", \""engrid\"", \""girned\"", \""dinger\"", \""brasque\"", \""barques\"", \""reef\"", \""fere\"", \""feer\"", \""benshee\"", \""shebeen\""]\n"",
    ""answer"": ""[[\""barques\"", \""brasque\""], [\""benshee\"", \""shebeen\""], [\""dinger\"", \""engrid\"", \""girned\"", \""reding\"", \""ringed\""], [\""feer\"", \""fere\"", \""reef\""], [\""grummest\"", \""grummets\""], [\""pursuers\"", \""usurpers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 491,
        ""words"": [
            ""usurpers"",
            ""pursuers"",
            ""grummets"",
            ""grummest"",
            ""ringed"",
            ""reding"",
            ""engrid"",
            ""girned"",
            ""dinger"",
            ""brasque"",
            ""barques"",
            ""reef"",
            ""fere"",
            ""feer"",
            ""benshee"",
            ""shebeen""
        ],
        ""solution"": [
            [
                ""barques"",
                ""brasque""
            ],
            [
                ""benshee"",
                ""shebeen""
            ],
            [
                ""dinger"",
                ""engrid"",
                ""girned"",
                ""reding"",
                ""ringed""
            ],
            [
                ""feer"",
                ""fere"",
                ""reef""
            ],
            [
                ""grummest"",
                ""grummets""
            ],
            [
                ""pursuers"",
                ""usurpers""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
492,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cacur"", ""accur"", ""inept"", ""pinte"", ""nepit"", ""deric"", ""cider"", ""riced"", ""fummle"", ""fummel"", ""roadster"", ""dartrose""]
","[[""accur"", ""cacur""], [""cider"", ""deric"", ""riced""], [""dartrose"", ""roadster""], [""fummel"", ""fummle""], [""inept"", ""nepit"", ""pinte""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cacur\"", \""accur\"", \""inept\"", \""pinte\"", \""nepit\"", \""deric\"", \""cider\"", \""riced\"", \""fummle\"", \""fummel\"", \""roadster\"", \""dartrose\""]\n"",
    ""answer"": ""[[\""accur\"", \""cacur\""], [\""cider\"", \""deric\"", \""riced\""], [\""dartrose\"", \""roadster\""], [\""fummel\"", \""fummle\""], [\""inept\"", \""nepit\"", \""pinte\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 492,
        ""words"": [
            ""cacur"",
            ""accur"",
            ""inept"",
            ""pinte"",
            ""nepit"",
            ""deric"",
            ""cider"",
            ""riced"",
            ""fummle"",
            ""fummel"",
            ""roadster"",
            ""dartrose""
        ],
        ""solution"": [
            [
                ""accur"",
                ""cacur""
            ],
            [
                ""cider"",
                ""deric"",
                ""riced""
            ],
            [
                ""dartrose"",
                ""roadster""
            ],
            [
                ""fummel"",
                ""fummle""
            ],
            [
                ""inept"",
                ""nepit"",
                ""pinte""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
493,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sarra"", ""arras"", ""fidicula"", ""fiducial"", ""uprises"", ""suspire"", ""pussier"", ""bemole"", ""moeble"", ""embole"", ""millraces"", ""miscaller"", ""blinders"", ""brindles"", ""isocyanin"", ""sicyonian"", ""arisaid"", ""ardisia"", ""onza"", ""zona"", ""ozan"", ""azon"", ""renk"", ""kern""]
","[[""ardisia"", ""arisaid""], [""arras"", ""sarra""], [""azon"", ""onza"", ""ozan"", ""zona""], [""bemole"", ""embole"", ""moeble""], [""blinders"", ""brindles""], [""fidicula"", ""fiducial""], [""isocyanin"", ""sicyonian""], [""kern"", ""renk""], [""millraces"", ""miscaller""], [""pussier"", ""suspire"", ""uprises""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sarra\"", \""arras\"", \""fidicula\"", \""fiducial\"", \""uprises\"", \""suspire\"", \""pussier\"", \""bemole\"", \""moeble\"", \""embole\"", \""millraces\"", \""miscaller\"", \""blinders\"", \""brindles\"", \""isocyanin\"", \""sicyonian\"", \""arisaid\"", \""ardisia\"", \""onza\"", \""zona\"", \""ozan\"", \""azon\"", \""renk\"", \""kern\""]\n"",
    ""answer"": ""[[\""ardisia\"", \""arisaid\""], [\""arras\"", \""sarra\""], [\""azon\"", \""onza\"", \""ozan\"", \""zona\""], [\""bemole\"", \""embole\"", \""moeble\""], [\""blinders\"", \""brindles\""], [\""fidicula\"", \""fiducial\""], [\""isocyanin\"", \""sicyonian\""], [\""kern\"", \""renk\""], [\""millraces\"", \""miscaller\""], [\""pussier\"", \""suspire\"", \""uprises\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 493,
        ""words"": [
            ""sarra"",
            ""arras"",
            ""fidicula"",
            ""fiducial"",
            ""uprises"",
            ""suspire"",
            ""pussier"",
            ""bemole"",
            ""moeble"",
            ""embole"",
            ""millraces"",
            ""miscaller"",
            ""blinders"",
            ""brindles"",
            ""isocyanin"",
            ""sicyonian"",
            ""arisaid"",
            ""ardisia"",
            ""onza"",
            ""zona"",
            ""ozan"",
            ""azon"",
            ""renk"",
            ""kern""
        ],
        ""solution"": [
            [
                ""ardisia"",
                ""arisaid""
            ],
            [
                ""arras"",
                ""sarra""
            ],
            [
                ""azon"",
                ""onza"",
                ""ozan"",
                ""zona""
            ],
            [
                ""bemole"",
                ""embole"",
                ""moeble""
            ],
            [
                ""blinders"",
                ""brindles""
            ],
            [
                ""fidicula"",
                ""fiducial""
            ],
            [
                ""isocyanin"",
                ""sicyonian""
            ],
            [
                ""kern"",
                ""renk""
            ],
            [
                ""millraces"",
                ""miscaller""
            ],
            [
                ""pussier"",
                ""suspire"",
                ""uprises""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
494,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""maniacs"", ""camansi"", ""caimans"", ""manasic"", ""bleep"", ""plebe"", ""legislators"", ""allegorists"", ""intonacos"", ""conations""]
","[[""allegorists"", ""legislators""], [""bleep"", ""plebe""], [""caimans"", ""camansi"", ""manasic"", ""maniacs""], [""conations"", ""intonacos""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""maniacs\"", \""camansi\"", \""caimans\"", \""manasic\"", \""bleep\"", \""plebe\"", \""legislators\"", \""allegorists\"", \""intonacos\"", \""conations\""]\n"",
    ""answer"": ""[[\""allegorists\"", \""legislators\""], [\""bleep\"", \""plebe\""], [\""caimans\"", \""camansi\"", \""manasic\"", \""maniacs\""], [\""conations\"", \""intonacos\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 494,
        ""words"": [
            ""maniacs"",
            ""camansi"",
            ""caimans"",
            ""manasic"",
            ""bleep"",
            ""plebe"",
            ""legislators"",
            ""allegorists"",
            ""intonacos"",
            ""conations""
        ],
        ""solution"": [
            [
                ""allegorists"",
                ""legislators""
            ],
            [
                ""bleep"",
                ""plebe""
            ],
            [
                ""caimans"",
                ""camansi"",
                ""manasic"",
                ""maniacs""
            ],
            [
                ""conations"",
                ""intonacos""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
495,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sportiest"", ""posterist"", ""darnedest"", ""deerstand"", ""warmed"", ""meward"", ""percussor"", ""procuress"", ""retiming"", ""meriting"", ""whity"", ""withy"", ""bechase"", ""beaches"", ""cup"", ""cpu""]
","[[""beaches"", ""bechase""], [""cpu"", ""cup""], [""darnedest"", ""deerstand""], [""meriting"", ""retiming""], [""meward"", ""warmed""], [""percussor"", ""procuress""], [""posterist"", ""sportiest""], [""whity"", ""withy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sportiest\"", \""posterist\"", \""darnedest\"", \""deerstand\"", \""warmed\"", \""meward\"", \""percussor\"", \""procuress\"", \""retiming\"", \""meriting\"", \""whity\"", \""withy\"", \""bechase\"", \""beaches\"", \""cup\"", \""cpu\""]\n"",
    ""answer"": ""[[\""beaches\"", \""bechase\""], [\""cpu\"", \""cup\""], [\""darnedest\"", \""deerstand\""], [\""meriting\"", \""retiming\""], [\""meward\"", \""warmed\""], [\""percussor\"", \""procuress\""], [\""posterist\"", \""sportiest\""], [\""whity\"", \""withy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 495,
        ""words"": [
            ""sportiest"",
            ""posterist"",
            ""darnedest"",
            ""deerstand"",
            ""warmed"",
            ""meward"",
            ""percussor"",
            ""procuress"",
            ""retiming"",
            ""meriting"",
            ""whity"",
            ""withy"",
            ""bechase"",
            ""beaches"",
            ""cup"",
            ""cpu""
        ],
        ""solution"": [
            [
                ""beaches"",
                ""bechase""
            ],
            [
                ""cpu"",
                ""cup""
            ],
            [
                ""darnedest"",
                ""deerstand""
            ],
            [
                ""meriting"",
                ""retiming""
            ],
            [
                ""meward"",
                ""warmed""
            ],
            [
                ""percussor"",
                ""procuress""
            ],
            [
                ""posterist"",
                ""sportiest""
            ],
            [
                ""whity"",
                ""withy""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
496,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reinvests"", ""sirventes"", ""quinicin"", ""quininic""]
","[[""quinicin"", ""quininic""], [""reinvests"", ""sirventes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reinvests\"", \""sirventes\"", \""quinicin\"", \""quininic\""]\n"",
    ""answer"": ""[[\""quinicin\"", \""quininic\""], [\""reinvests\"", \""sirventes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 496,
        ""words"": [
            ""reinvests"",
            ""sirventes"",
            ""quinicin"",
            ""quininic""
        ],
        ""solution"": [
            [
                ""quinicin"",
                ""quininic""
            ],
            [
                ""reinvests"",
                ""sirventes""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
497,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""panosteitis"", ""poinsettias"", ""polit"", ""pilot"", ""retrenching"", ""trenchering"", ""outscream"", ""castoreum""]
","[[""castoreum"", ""outscream""], [""panosteitis"", ""poinsettias""], [""pilot"", ""polit""], [""retrenching"", ""trenchering""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""panosteitis\"", \""poinsettias\"", \""polit\"", \""pilot\"", \""retrenching\"", \""trenchering\"", \""outscream\"", \""castoreum\""]\n"",
    ""answer"": ""[[\""castoreum\"", \""outscream\""], [\""panosteitis\"", \""poinsettias\""], [\""pilot\"", \""polit\""], [\""retrenching\"", \""trenchering\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 497,
        ""words"": [
            ""panosteitis"",
            ""poinsettias"",
            ""polit"",
            ""pilot"",
            ""retrenching"",
            ""trenchering"",
            ""outscream"",
            ""castoreum""
        ],
        ""solution"": [
            [
                ""castoreum"",
                ""outscream""
            ],
            [
                ""panosteitis"",
                ""poinsettias""
            ],
            [
                ""pilot"",
                ""polit""
            ],
            [
                ""retrenching"",
                ""trenchering""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
498,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""arbores"", ""brasero"", ""parentality"", ""paternality"", ""sacralize"", ""rascalize"", ""hortite"", ""thorite"", ""orthite"", ""ritely"", ""tilyer"", ""tilery"", ""canterelle"", ""crenellate"", ""precisest"", ""tricepses""]
","[[""arbores"", ""brasero""], [""canterelle"", ""crenellate""], [""hortite"", ""orthite"", ""thorite""], [""parentality"", ""paternality""], [""precisest"", ""tricepses""], [""rascalize"", ""sacralize""], [""ritely"", ""tilery"", ""tilyer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""arbores\"", \""brasero\"", \""parentality\"", \""paternality\"", \""sacralize\"", \""rascalize\"", \""hortite\"", \""thorite\"", \""orthite\"", \""ritely\"", \""tilyer\"", \""tilery\"", \""canterelle\"", \""crenellate\"", \""precisest\"", \""tricepses\""]\n"",
    ""answer"": ""[[\""arbores\"", \""brasero\""], [\""canterelle\"", \""crenellate\""], [\""hortite\"", \""orthite\"", \""thorite\""], [\""parentality\"", \""paternality\""], [\""precisest\"", \""tricepses\""], [\""rascalize\"", \""sacralize\""], [\""ritely\"", \""tilery\"", \""tilyer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 498,
        ""words"": [
            ""arbores"",
            ""brasero"",
            ""parentality"",
            ""paternality"",
            ""sacralize"",
            ""rascalize"",
            ""hortite"",
            ""thorite"",
            ""orthite"",
            ""ritely"",
            ""tilyer"",
            ""tilery"",
            ""canterelle"",
            ""crenellate"",
            ""precisest"",
            ""tricepses""
        ],
        ""solution"": [
            [
                ""arbores"",
                ""brasero""
            ],
            [
                ""canterelle"",
                ""crenellate""
            ],
            [
                ""hortite"",
                ""orthite"",
                ""thorite""
            ],
            [
                ""parentality"",
                ""paternality""
            ],
            [
                ""precisest"",
                ""tricepses""
            ],
            [
                ""rascalize"",
                ""sacralize""
            ],
            [
                ""ritely"",
                ""tilery"",
                ""tilyer""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
499,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""varioles"", ""oversail"", ""valorise"", ""epigram"", ""primage"", ""insteps"", ""spinets"", ""deloul"", ""duello""]
","[[""deloul"", ""duello""], [""epigram"", ""primage""], [""insteps"", ""spinets""], [""oversail"", ""valorise"", ""varioles""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""varioles\"", \""oversail\"", \""valorise\"", \""epigram\"", \""primage\"", \""insteps\"", \""spinets\"", \""deloul\"", \""duello\""]\n"",
    ""answer"": ""[[\""deloul\"", \""duello\""], [\""epigram\"", \""primage\""], [\""insteps\"", \""spinets\""], [\""oversail\"", \""valorise\"", \""varioles\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 499,
        ""words"": [
            ""varioles"",
            ""oversail"",
            ""valorise"",
            ""epigram"",
            ""primage"",
            ""insteps"",
            ""spinets"",
            ""deloul"",
            ""duello""
        ],
        ""solution"": [
            [
                ""deloul"",
                ""duello""
            ],
            [
                ""epigram"",
                ""primage""
            ],
            [
                ""insteps"",
                ""spinets""
            ],
            [
                ""oversail"",
                ""valorise"",
                ""varioles""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
500,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""medianism"", ""maidenism"", ""lackies"", ""saclike"", ""badaga"", ""dagaba"", ""gadaba"", ""antiphonic"", ""napthionic"", ""underdive"", ""underived""]
","[[""antiphonic"", ""napthionic""], [""badaga"", ""dagaba"", ""gadaba""], [""lackies"", ""saclike""], [""maidenism"", ""medianism""], [""underdive"", ""underived""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""medianism\"", \""maidenism\"", \""lackies\"", \""saclike\"", \""badaga\"", \""dagaba\"", \""gadaba\"", \""antiphonic\"", \""napthionic\"", \""underdive\"", \""underived\""]\n"",
    ""answer"": ""[[\""antiphonic\"", \""napthionic\""], [\""badaga\"", \""dagaba\"", \""gadaba\""], [\""lackies\"", \""saclike\""], [\""maidenism\"", \""medianism\""], [\""underdive\"", \""underived\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 500,
        ""words"": [
            ""medianism"",
            ""maidenism"",
            ""lackies"",
            ""saclike"",
            ""badaga"",
            ""dagaba"",
            ""gadaba"",
            ""antiphonic"",
            ""napthionic"",
            ""underdive"",
            ""underived""
        ],
        ""solution"": [
            [
                ""antiphonic"",
                ""napthionic""
            ],
            [
                ""badaga"",
                ""dagaba"",
                ""gadaba""
            ],
            [
                ""lackies"",
                ""saclike""
            ],
            [
                ""maidenism"",
                ""medianism""
            ],
            [
                ""underdive"",
                ""underived""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
501,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""workbench"", ""benchwork"", ""moocha"", ""moocah"", ""holoside"", ""dhoolies"", ""chernites"", ""stenchier"", ""westing"", ""twinges"", ""stewing"", ""ectopia"", ""opacite"", ""semsen"", ""semens"", ""menses"", ""alencons"", ""scalenon""]
","[[""alencons"", ""scalenon""], [""benchwork"", ""workbench""], [""chernites"", ""stenchier""], [""dhoolies"", ""holoside""], [""ectopia"", ""opacite""], [""menses"", ""semens"", ""semsen""], [""moocah"", ""moocha""], [""stewing"", ""twinges"", ""westing""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""workbench\"", \""benchwork\"", \""moocha\"", \""moocah\"", \""holoside\"", \""dhoolies\"", \""chernites\"", \""stenchier\"", \""westing\"", \""twinges\"", \""stewing\"", \""ectopia\"", \""opacite\"", \""semsen\"", \""semens\"", \""menses\"", \""alencons\"", \""scalenon\""]\n"",
    ""answer"": ""[[\""alencons\"", \""scalenon\""], [\""benchwork\"", \""workbench\""], [\""chernites\"", \""stenchier\""], [\""dhoolies\"", \""holoside\""], [\""ectopia\"", \""opacite\""], [\""menses\"", \""semens\"", \""semsen\""], [\""moocah\"", \""moocha\""], [\""stewing\"", \""twinges\"", \""westing\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 501,
        ""words"": [
            ""workbench"",
            ""benchwork"",
            ""moocha"",
            ""moocah"",
            ""holoside"",
            ""dhoolies"",
            ""chernites"",
            ""stenchier"",
            ""westing"",
            ""twinges"",
            ""stewing"",
            ""ectopia"",
            ""opacite"",
            ""semsen"",
            ""semens"",
            ""menses"",
            ""alencons"",
            ""scalenon""
        ],
        ""solution"": [
            [
                ""alencons"",
                ""scalenon""
            ],
            [
                ""benchwork"",
                ""workbench""
            ],
            [
                ""chernites"",
                ""stenchier""
            ],
            [
                ""dhoolies"",
                ""holoside""
            ],
            [
                ""ectopia"",
                ""opacite""
            ],
            [
                ""menses"",
                ""semens"",
                ""semsen""
            ],
            [
                ""moocah"",
                ""moocha""
            ],
            [
                ""stewing"",
                ""twinges"",
                ""westing""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
502,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tengu"", ""unget"", ""hirseled"", ""relished"", ""braises"", ""rebasis"", ""brassie"", ""evaluating"", ""vaginulate"", ""gomart"", ""margot"", ""bards"", ""brads"", ""tenaces"", ""cetanes"", ""sinned"", ""dennis""]
","[[""bards"", ""brads""], [""braises"", ""brassie"", ""rebasis""], [""cetanes"", ""tenaces""], [""dennis"", ""sinned""], [""evaluating"", ""vaginulate""], [""gomart"", ""margot""], [""hirseled"", ""relished""], [""tengu"", ""unget""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tengu\"", \""unget\"", \""hirseled\"", \""relished\"", \""braises\"", \""rebasis\"", \""brassie\"", \""evaluating\"", \""vaginulate\"", \""gomart\"", \""margot\"", \""bards\"", \""brads\"", \""tenaces\"", \""cetanes\"", \""sinned\"", \""dennis\""]\n"",
    ""answer"": ""[[\""bards\"", \""brads\""], [\""braises\"", \""brassie\"", \""rebasis\""], [\""cetanes\"", \""tenaces\""], [\""dennis\"", \""sinned\""], [\""evaluating\"", \""vaginulate\""], [\""gomart\"", \""margot\""], [\""hirseled\"", \""relished\""], [\""tengu\"", \""unget\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 502,
        ""words"": [
            ""tengu"",
            ""unget"",
            ""hirseled"",
            ""relished"",
            ""braises"",
            ""rebasis"",
            ""brassie"",
            ""evaluating"",
            ""vaginulate"",
            ""gomart"",
            ""margot"",
            ""bards"",
            ""brads"",
            ""tenaces"",
            ""cetanes"",
            ""sinned"",
            ""dennis""
        ],
        ""solution"": [
            [
                ""bards"",
                ""brads""
            ],
            [
                ""braises"",
                ""brassie"",
                ""rebasis""
            ],
            [
                ""cetanes"",
                ""tenaces""
            ],
            [
                ""dennis"",
                ""sinned""
            ],
            [
                ""evaluating"",
                ""vaginulate""
            ],
            [
                ""gomart"",
                ""margot""
            ],
            [
                ""hirseled"",
                ""relished""
            ],
            [
                ""tengu"",
                ""unget""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
503,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""soir"", ""sori"", ""elevator"", ""overlate"", ""godship"", ""dogship"", ""morels"", ""somler"", ""morsel""]
","[[""dogship"", ""godship""], [""elevator"", ""overlate""], [""morels"", ""morsel"", ""somler""], [""soir"", ""sori""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""soir\"", \""sori\"", \""elevator\"", \""overlate\"", \""godship\"", \""dogship\"", \""morels\"", \""somler\"", \""morsel\""]\n"",
    ""answer"": ""[[\""dogship\"", \""godship\""], [\""elevator\"", \""overlate\""], [\""morels\"", \""morsel\"", \""somler\""], [\""soir\"", \""sori\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 503,
        ""words"": [
            ""soir"",
            ""sori"",
            ""elevator"",
            ""overlate"",
            ""godship"",
            ""dogship"",
            ""morels"",
            ""somler"",
            ""morsel""
        ],
        ""solution"": [
            [
                ""dogship"",
                ""godship""
            ],
            [
                ""elevator"",
                ""overlate""
            ],
            [
                ""morels"",
                ""morsel"",
                ""somler""
            ],
            [
                ""soir"",
                ""sori""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
504,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""semantical"", ""lemniscata"", ""rehammers"", ""hammerers"", ""warehouses"", ""housewares"", ""somberness"", ""sombreness"", ""predestine"", ""presidente""]
","[[""hammerers"", ""rehammers""], [""housewares"", ""warehouses""], [""lemniscata"", ""semantical""], [""predestine"", ""presidente""], [""somberness"", ""sombreness""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""semantical\"", \""lemniscata\"", \""rehammers\"", \""hammerers\"", \""warehouses\"", \""housewares\"", \""somberness\"", \""sombreness\"", \""predestine\"", \""presidente\""]\n"",
    ""answer"": ""[[\""hammerers\"", \""rehammers\""], [\""housewares\"", \""warehouses\""], [\""lemniscata\"", \""semantical\""], [\""predestine\"", \""presidente\""], [\""somberness\"", \""sombreness\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 504,
        ""words"": [
            ""semantical"",
            ""lemniscata"",
            ""rehammers"",
            ""hammerers"",
            ""warehouses"",
            ""housewares"",
            ""somberness"",
            ""sombreness"",
            ""predestine"",
            ""presidente""
        ],
        ""solution"": [
            [
                ""hammerers"",
                ""rehammers""
            ],
            [
                ""housewares"",
                ""warehouses""
            ],
            [
                ""lemniscata"",
                ""semantical""
            ],
            [
                ""predestine"",
                ""presidente""
            ],
            [
                ""somberness"",
                ""sombreness""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
505,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""escoted"", ""cestode"", ""tedesco"", ""nascan"", ""cannas"", ""aimer"", ""maire"", ""evaporating"", ""pervagation"", ""guyot"", ""gouty"", ""ossia"", ""sosia"", ""oasis"", ""endosmotic"", ""mesodontic"", ""austerus"", ""tauruses"", ""ornately"", ""neolatry""]
","[[""aimer"", ""maire""], [""austerus"", ""tauruses""], [""cannas"", ""nascan""], [""cestode"", ""escoted"", ""tedesco""], [""endosmotic"", ""mesodontic""], [""evaporating"", ""pervagation""], [""gouty"", ""guyot""], [""neolatry"", ""ornately""], [""oasis"", ""ossia"", ""sosia""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""escoted\"", \""cestode\"", \""tedesco\"", \""nascan\"", \""cannas\"", \""aimer\"", \""maire\"", \""evaporating\"", \""pervagation\"", \""guyot\"", \""gouty\"", \""ossia\"", \""sosia\"", \""oasis\"", \""endosmotic\"", \""mesodontic\"", \""austerus\"", \""tauruses\"", \""ornately\"", \""neolatry\""]\n"",
    ""answer"": ""[[\""aimer\"", \""maire\""], [\""austerus\"", \""tauruses\""], [\""cannas\"", \""nascan\""], [\""cestode\"", \""escoted\"", \""tedesco\""], [\""endosmotic\"", \""mesodontic\""], [\""evaporating\"", \""pervagation\""], [\""gouty\"", \""guyot\""], [\""neolatry\"", \""ornately\""], [\""oasis\"", \""ossia\"", \""sosia\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 505,
        ""words"": [
            ""escoted"",
            ""cestode"",
            ""tedesco"",
            ""nascan"",
            ""cannas"",
            ""aimer"",
            ""maire"",
            ""evaporating"",
            ""pervagation"",
            ""guyot"",
            ""gouty"",
            ""ossia"",
            ""sosia"",
            ""oasis"",
            ""endosmotic"",
            ""mesodontic"",
            ""austerus"",
            ""tauruses"",
            ""ornately"",
            ""neolatry""
        ],
        ""solution"": [
            [
                ""aimer"",
                ""maire""
            ],
            [
                ""austerus"",
                ""tauruses""
            ],
            [
                ""cannas"",
                ""nascan""
            ],
            [
                ""cestode"",
                ""escoted"",
                ""tedesco""
            ],
            [
                ""endosmotic"",
                ""mesodontic""
            ],
            [
                ""evaporating"",
                ""pervagation""
            ],
            [
                ""gouty"",
                ""guyot""
            ],
            [
                ""neolatry"",
                ""ornately""
            ],
            [
                ""oasis"",
                ""ossia"",
                ""sosia""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
506,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""encoach"", ""conchae"", ""alcali"", ""laical"", ""tricepses"", ""precisest"", ""drainages"", ""gardenias"", ""yea"", ""aye"", ""crambe"", ""camber"", ""becram""]
","[[""alcali"", ""laical""], [""aye"", ""yea""], [""becram"", ""camber"", ""crambe""], [""conchae"", ""encoach""], [""drainages"", ""gardenias""], [""precisest"", ""tricepses""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""encoach\"", \""conchae\"", \""alcali\"", \""laical\"", \""tricepses\"", \""precisest\"", \""drainages\"", \""gardenias\"", \""yea\"", \""aye\"", \""crambe\"", \""camber\"", \""becram\""]\n"",
    ""answer"": ""[[\""alcali\"", \""laical\""], [\""aye\"", \""yea\""], [\""becram\"", \""camber\"", \""crambe\""], [\""conchae\"", \""encoach\""], [\""drainages\"", \""gardenias\""], [\""precisest\"", \""tricepses\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 506,
        ""words"": [
            ""encoach"",
            ""conchae"",
            ""alcali"",
            ""laical"",
            ""tricepses"",
            ""precisest"",
            ""drainages"",
            ""gardenias"",
            ""yea"",
            ""aye"",
            ""crambe"",
            ""camber"",
            ""becram""
        ],
        ""solution"": [
            [
                ""alcali"",
                ""laical""
            ],
            [
                ""aye"",
                ""yea""
            ],
            [
                ""becram"",
                ""camber"",
                ""crambe""
            ],
            [
                ""conchae"",
                ""encoach""
            ],
            [
                ""drainages"",
                ""gardenias""
            ],
            [
                ""precisest"",
                ""tricepses""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
507,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""oblation"", ""lobation"", ""boltonia"", ""pastina"", ""taipans"", ""hor"", ""rho"", ""runes"", ""nurse"", ""aissor"", ""rissoa"", ""sauteing"", ""unitages""]
","[[""aissor"", ""rissoa""], [""boltonia"", ""lobation"", ""oblation""], [""hor"", ""rho""], [""nurse"", ""runes""], [""pastina"", ""taipans""], [""sauteing"", ""unitages""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""oblation\"", \""lobation\"", \""boltonia\"", \""pastina\"", \""taipans\"", \""hor\"", \""rho\"", \""runes\"", \""nurse\"", \""aissor\"", \""rissoa\"", \""sauteing\"", \""unitages\""]\n"",
    ""answer"": ""[[\""aissor\"", \""rissoa\""], [\""boltonia\"", \""lobation\"", \""oblation\""], [\""hor\"", \""rho\""], [\""nurse\"", \""runes\""], [\""pastina\"", \""taipans\""], [\""sauteing\"", \""unitages\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 507,
        ""words"": [
            ""oblation"",
            ""lobation"",
            ""boltonia"",
            ""pastina"",
            ""taipans"",
            ""hor"",
            ""rho"",
            ""runes"",
            ""nurse"",
            ""aissor"",
            ""rissoa"",
            ""sauteing"",
            ""unitages""
        ],
        ""solution"": [
            [
                ""aissor"",
                ""rissoa""
            ],
            [
                ""boltonia"",
                ""lobation"",
                ""oblation""
            ],
            [
                ""hor"",
                ""rho""
            ],
            [
                ""nurse"",
                ""runes""
            ],
            [
                ""pastina"",
                ""taipans""
            ],
            [
                ""sauteing"",
                ""unitages""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
508,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dilucidate"", ""adulticide"", ""tharf"", ""farth"", ""direct"", ""credit"", ""triced"", ""jeered"", ""jereed"", ""toadies"", ""estadio"", ""iodates"", ""inradii"", ""iridian"", ""weared"", ""rewade""]
","[[""adulticide"", ""dilucidate""], [""credit"", ""direct"", ""triced""], [""estadio"", ""iodates"", ""toadies""], [""farth"", ""tharf""], [""inradii"", ""iridian""], [""jeered"", ""jereed""], [""rewade"", ""weared""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dilucidate\"", \""adulticide\"", \""tharf\"", \""farth\"", \""direct\"", \""credit\"", \""triced\"", \""jeered\"", \""jereed\"", \""toadies\"", \""estadio\"", \""iodates\"", \""inradii\"", \""iridian\"", \""weared\"", \""rewade\""]\n"",
    ""answer"": ""[[\""adulticide\"", \""dilucidate\""], [\""credit\"", \""direct\"", \""triced\""], [\""estadio\"", \""iodates\"", \""toadies\""], [\""farth\"", \""tharf\""], [\""inradii\"", \""iridian\""], [\""jeered\"", \""jereed\""], [\""rewade\"", \""weared\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 508,
        ""words"": [
            ""dilucidate"",
            ""adulticide"",
            ""tharf"",
            ""farth"",
            ""direct"",
            ""credit"",
            ""triced"",
            ""jeered"",
            ""jereed"",
            ""toadies"",
            ""estadio"",
            ""iodates"",
            ""inradii"",
            ""iridian"",
            ""weared"",
            ""rewade""
        ],
        ""solution"": [
            [
                ""adulticide"",
                ""dilucidate""
            ],
            [
                ""credit"",
                ""direct"",
                ""triced""
            ],
            [
                ""estadio"",
                ""iodates"",
                ""toadies""
            ],
            [
                ""farth"",
                ""tharf""
            ],
            [
                ""inradii"",
                ""iridian""
            ],
            [
                ""jeered"",
                ""jereed""
            ],
            [
                ""rewade"",
                ""weared""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
509,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reabolish"", ""abolisher"", ""fasciole"", ""focalise"", ""diluents"", ""insulted"", ""unlisted"", ""gablock"", ""backlog"", ""waiters"", ""waister"", ""wastrie"", ""swertia"", ""wastier"", ""debosh"", ""beshod"", ""shelve"", ""shevel"", ""helves""]
","[[""abolisher"", ""reabolish""], [""backlog"", ""gablock""], [""beshod"", ""debosh""], [""diluents"", ""insulted"", ""unlisted""], [""fasciole"", ""focalise""], [""helves"", ""shelve"", ""shevel""], [""swertia"", ""waister"", ""waiters"", ""wastier"", ""wastrie""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reabolish\"", \""abolisher\"", \""fasciole\"", \""focalise\"", \""diluents\"", \""insulted\"", \""unlisted\"", \""gablock\"", \""backlog\"", \""waiters\"", \""waister\"", \""wastrie\"", \""swertia\"", \""wastier\"", \""debosh\"", \""beshod\"", \""shelve\"", \""shevel\"", \""helves\""]\n"",
    ""answer"": ""[[\""abolisher\"", \""reabolish\""], [\""backlog\"", \""gablock\""], [\""beshod\"", \""debosh\""], [\""diluents\"", \""insulted\"", \""unlisted\""], [\""fasciole\"", \""focalise\""], [\""helves\"", \""shelve\"", \""shevel\""], [\""swertia\"", \""waister\"", \""waiters\"", \""wastier\"", \""wastrie\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 509,
        ""words"": [
            ""reabolish"",
            ""abolisher"",
            ""fasciole"",
            ""focalise"",
            ""diluents"",
            ""insulted"",
            ""unlisted"",
            ""gablock"",
            ""backlog"",
            ""waiters"",
            ""waister"",
            ""wastrie"",
            ""swertia"",
            ""wastier"",
            ""debosh"",
            ""beshod"",
            ""shelve"",
            ""shevel"",
            ""helves""
        ],
        ""solution"": [
            [
                ""abolisher"",
                ""reabolish""
            ],
            [
                ""backlog"",
                ""gablock""
            ],
            [
                ""beshod"",
                ""debosh""
            ],
            [
                ""diluents"",
                ""insulted"",
                ""unlisted""
            ],
            [
                ""fasciole"",
                ""focalise""
            ],
            [
                ""helves"",
                ""shelve"",
                ""shevel""
            ],
            [
                ""swertia"",
                ""waister"",
                ""waiters"",
                ""wastier"",
                ""wastrie""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
510,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""aridian"", ""diarian"", ""beamiest"", ""mesabite"", ""elsewhen"", ""enwheels"", ""roadbed"", ""boarded"", ""disblame"", ""semibald"", ""bedismal"", ""reduit"", ""erudit"", ""wonk"", ""know"", ""despairer"", ""draperies"", ""repraised"", ""atoned"", ""donate""]
","[[""aridian"", ""diarian""], [""atoned"", ""donate""], [""beamiest"", ""mesabite""], [""bedismal"", ""disblame"", ""semibald""], [""boarded"", ""roadbed""], [""despairer"", ""draperies"", ""repraised""], [""elsewhen"", ""enwheels""], [""erudit"", ""reduit""], [""know"", ""wonk""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""aridian\"", \""diarian\"", \""beamiest\"", \""mesabite\"", \""elsewhen\"", \""enwheels\"", \""roadbed\"", \""boarded\"", \""disblame\"", \""semibald\"", \""bedismal\"", \""reduit\"", \""erudit\"", \""wonk\"", \""know\"", \""despairer\"", \""draperies\"", \""repraised\"", \""atoned\"", \""donate\""]\n"",
    ""answer"": ""[[\""aridian\"", \""diarian\""], [\""atoned\"", \""donate\""], [\""beamiest\"", \""mesabite\""], [\""bedismal\"", \""disblame\"", \""semibald\""], [\""boarded\"", \""roadbed\""], [\""despairer\"", \""draperies\"", \""repraised\""], [\""elsewhen\"", \""enwheels\""], [\""erudit\"", \""reduit\""], [\""know\"", \""wonk\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 510,
        ""words"": [
            ""aridian"",
            ""diarian"",
            ""beamiest"",
            ""mesabite"",
            ""elsewhen"",
            ""enwheels"",
            ""roadbed"",
            ""boarded"",
            ""disblame"",
            ""semibald"",
            ""bedismal"",
            ""reduit"",
            ""erudit"",
            ""wonk"",
            ""know"",
            ""despairer"",
            ""draperies"",
            ""repraised"",
            ""atoned"",
            ""donate""
        ],
        ""solution"": [
            [
                ""aridian"",
                ""diarian""
            ],
            [
                ""atoned"",
                ""donate""
            ],
            [
                ""beamiest"",
                ""mesabite""
            ],
            [
                ""bedismal"",
                ""disblame"",
                ""semibald""
            ],
            [
                ""boarded"",
                ""roadbed""
            ],
            [
                ""despairer"",
                ""draperies"",
                ""repraised""
            ],
            [
                ""elsewhen"",
                ""enwheels""
            ],
            [
                ""erudit"",
                ""reduit""
            ],
            [
                ""know"",
                ""wonk""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
511,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""anthranil"", ""anthralin"", ""outfall"", ""fallout"", ""pul"", ""plu"", ""mythographer"", ""thermography""]
","[[""anthralin"", ""anthranil""], [""fallout"", ""outfall""], [""mythographer"", ""thermography""], [""plu"", ""pul""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""anthranil\"", \""anthralin\"", \""outfall\"", \""fallout\"", \""pul\"", \""plu\"", \""mythographer\"", \""thermography\""]\n"",
    ""answer"": ""[[\""anthralin\"", \""anthranil\""], [\""fallout\"", \""outfall\""], [\""mythographer\"", \""thermography\""], [\""plu\"", \""pul\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 511,
        ""words"": [
            ""anthranil"",
            ""anthralin"",
            ""outfall"",
            ""fallout"",
            ""pul"",
            ""plu"",
            ""mythographer"",
            ""thermography""
        ],
        ""solution"": [
            [
                ""anthralin"",
                ""anthranil""
            ],
            [
                ""fallout"",
                ""outfall""
            ],
            [
                ""mythographer"",
                ""thermography""
            ],
            [
                ""plu"",
                ""pul""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
512,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""archeress"", ""searchers"", ""selectors"", ""corselets"", ""kolis"", ""kilos"", ""hurtfully"", ""ruthfully"", ""reckling"", ""clerking"", ""louder"", ""loured""]
","[[""archeress"", ""searchers""], [""clerking"", ""reckling""], [""corselets"", ""selectors""], [""hurtfully"", ""ruthfully""], [""kilos"", ""kolis""], [""louder"", ""loured""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""archeress\"", \""searchers\"", \""selectors\"", \""corselets\"", \""kolis\"", \""kilos\"", \""hurtfully\"", \""ruthfully\"", \""reckling\"", \""clerking\"", \""louder\"", \""loured\""]\n"",
    ""answer"": ""[[\""archeress\"", \""searchers\""], [\""clerking\"", \""reckling\""], [\""corselets\"", \""selectors\""], [\""hurtfully\"", \""ruthfully\""], [\""kilos\"", \""kolis\""], [\""louder\"", \""loured\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 512,
        ""words"": [
            ""archeress"",
            ""searchers"",
            ""selectors"",
            ""corselets"",
            ""kolis"",
            ""kilos"",
            ""hurtfully"",
            ""ruthfully"",
            ""reckling"",
            ""clerking"",
            ""louder"",
            ""loured""
        ],
        ""solution"": [
            [
                ""archeress"",
                ""searchers""
            ],
            [
                ""clerking"",
                ""reckling""
            ],
            [
                ""corselets"",
                ""selectors""
            ],
            [
                ""hurtfully"",
                ""ruthfully""
            ],
            [
                ""kilos"",
                ""kolis""
            ],
            [
                ""louder"",
                ""loured""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
513,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""patel"", ""pleat"", ""tonite"", ""tiento"", ""vacation"", ""octavian"", ""octavina"", ""talcking"", ""tackling"", ""miscoined"", ""meniscoid""]
","[[""meniscoid"", ""miscoined""], [""octavian"", ""octavina"", ""vacation""], [""patel"", ""pleat""], [""tackling"", ""talcking""], [""tiento"", ""tonite""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""patel\"", \""pleat\"", \""tonite\"", \""tiento\"", \""vacation\"", \""octavian\"", \""octavina\"", \""talcking\"", \""tackling\"", \""miscoined\"", \""meniscoid\""]\n"",
    ""answer"": ""[[\""meniscoid\"", \""miscoined\""], [\""octavian\"", \""octavina\"", \""vacation\""], [\""patel\"", \""pleat\""], [\""tackling\"", \""talcking\""], [\""tiento\"", \""tonite\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 513,
        ""words"": [
            ""patel"",
            ""pleat"",
            ""tonite"",
            ""tiento"",
            ""vacation"",
            ""octavian"",
            ""octavina"",
            ""talcking"",
            ""tackling"",
            ""miscoined"",
            ""meniscoid""
        ],
        ""solution"": [
            [
                ""meniscoid"",
                ""miscoined""
            ],
            [
                ""octavian"",
                ""octavina"",
                ""vacation""
            ],
            [
                ""patel"",
                ""pleat""
            ],
            [
                ""tackling"",
                ""talcking""
            ],
            [
                ""tiento"",
                ""tonite""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
514,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""claim"", ""clima"", ""malic"", ""lourdy"", ""dourly""]
","[[""claim"", ""clima"", ""malic""], [""dourly"", ""lourdy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""claim\"", \""clima\"", \""malic\"", \""lourdy\"", \""dourly\""]\n"",
    ""answer"": ""[[\""claim\"", \""clima\"", \""malic\""], [\""dourly\"", \""lourdy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 514,
        ""words"": [
            ""claim"",
            ""clima"",
            ""malic"",
            ""lourdy"",
            ""dourly""
        ],
        ""solution"": [
            [
                ""claim"",
                ""clima"",
                ""malic""
            ],
            [
                ""dourly"",
                ""lourdy""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
515,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""angelicas"", ""analgesic"", ""pleonasms"", ""neoplasms""]
","[[""analgesic"", ""angelicas""], [""neoplasms"", ""pleonasms""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""angelicas\"", \""analgesic\"", \""pleonasms\"", \""neoplasms\""]\n"",
    ""answer"": ""[[\""analgesic\"", \""angelicas\""], [\""neoplasms\"", \""pleonasms\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 515,
        ""words"": [
            ""angelicas"",
            ""analgesic"",
            ""pleonasms"",
            ""neoplasms""
        ],
        ""solution"": [
            [
                ""analgesic"",
                ""angelicas""
            ],
            [
                ""neoplasms"",
                ""pleonasms""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
516,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""prom"", ""romp"", ""aftertaste"", ""afterstate""]
","[[""afterstate"", ""aftertaste""], [""prom"", ""romp""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""prom\"", \""romp\"", \""aftertaste\"", \""afterstate\""]\n"",
    ""answer"": ""[[\""afterstate\"", \""aftertaste\""], [\""prom\"", \""romp\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 516,
        ""words"": [
            ""prom"",
            ""romp"",
            ""aftertaste"",
            ""afterstate""
        ],
        ""solution"": [
            [
                ""afterstate"",
                ""aftertaste""
            ],
            [
                ""prom"",
                ""romp""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
517,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""feste"", ""fetes"", ""feest"", ""etabelli"", ""beatille"", ""neckings"", ""snecking"", ""headskin"", ""skinhead"", ""nakedish"", ""formylal"", ""formally""]
","[[""beatille"", ""etabelli""], [""feest"", ""feste"", ""fetes""], [""formally"", ""formylal""], [""headskin"", ""nakedish"", ""skinhead""], [""neckings"", ""snecking""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""feste\"", \""fetes\"", \""feest\"", \""etabelli\"", \""beatille\"", \""neckings\"", \""snecking\"", \""headskin\"", \""skinhead\"", \""nakedish\"", \""formylal\"", \""formally\""]\n"",
    ""answer"": ""[[\""beatille\"", \""etabelli\""], [\""feest\"", \""feste\"", \""fetes\""], [\""formally\"", \""formylal\""], [\""headskin\"", \""nakedish\"", \""skinhead\""], [\""neckings\"", \""snecking\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 517,
        ""words"": [
            ""feste"",
            ""fetes"",
            ""feest"",
            ""etabelli"",
            ""beatille"",
            ""neckings"",
            ""snecking"",
            ""headskin"",
            ""skinhead"",
            ""nakedish"",
            ""formylal"",
            ""formally""
        ],
        ""solution"": [
            [
                ""beatille"",
                ""etabelli""
            ],
            [
                ""feest"",
                ""feste"",
                ""fetes""
            ],
            [
                ""formally"",
                ""formylal""
            ],
            [
                ""headskin"",
                ""nakedish"",
                ""skinhead""
            ],
            [
                ""neckings"",
                ""snecking""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
518,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""feminal"", ""inflame"", ""bugi"", ""guib"", ""trones"", ""stoner"", ""noster"", ""nestor"", ""sterno"", ""diageotropism"", ""geodiatropism"", ""agrypnia"", ""paginary"", ""cerned"", ""decern"", ""cendre"", ""salvers"", ""servals"", ""slavers"", ""ripal"", ""pilar"", ""april"", ""parli"", ""encup"", ""punce""]
","[[""agrypnia"", ""paginary""], [""april"", ""parli"", ""pilar"", ""ripal""], [""bugi"", ""guib""], [""cendre"", ""cerned"", ""decern""], [""diageotropism"", ""geodiatropism""], [""encup"", ""punce""], [""feminal"", ""inflame""], [""nestor"", ""noster"", ""sterno"", ""stoner"", ""trones""], [""salvers"", ""servals"", ""slavers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""feminal\"", \""inflame\"", \""bugi\"", \""guib\"", \""trones\"", \""stoner\"", \""noster\"", \""nestor\"", \""sterno\"", \""diageotropism\"", \""geodiatropism\"", \""agrypnia\"", \""paginary\"", \""cerned\"", \""decern\"", \""cendre\"", \""salvers\"", \""servals\"", \""slavers\"", \""ripal\"", \""pilar\"", \""april\"", \""parli\"", \""encup\"", \""punce\""]\n"",
    ""answer"": ""[[\""agrypnia\"", \""paginary\""], [\""april\"", \""parli\"", \""pilar\"", \""ripal\""], [\""bugi\"", \""guib\""], [\""cendre\"", \""cerned\"", \""decern\""], [\""diageotropism\"", \""geodiatropism\""], [\""encup\"", \""punce\""], [\""feminal\"", \""inflame\""], [\""nestor\"", \""noster\"", \""sterno\"", \""stoner\"", \""trones\""], [\""salvers\"", \""servals\"", \""slavers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 518,
        ""words"": [
            ""feminal"",
            ""inflame"",
            ""bugi"",
            ""guib"",
            ""trones"",
            ""stoner"",
            ""noster"",
            ""nestor"",
            ""sterno"",
            ""diageotropism"",
            ""geodiatropism"",
            ""agrypnia"",
            ""paginary"",
            ""cerned"",
            ""decern"",
            ""cendre"",
            ""salvers"",
            ""servals"",
            ""slavers"",
            ""ripal"",
            ""pilar"",
            ""april"",
            ""parli"",
            ""encup"",
            ""punce""
        ],
        ""solution"": [
            [
                ""agrypnia"",
                ""paginary""
            ],
            [
                ""april"",
                ""parli"",
                ""pilar"",
                ""ripal""
            ],
            [
                ""bugi"",
                ""guib""
            ],
            [
                ""cendre"",
                ""cerned"",
                ""decern""
            ],
            [
                ""diageotropism"",
                ""geodiatropism""
            ],
            [
                ""encup"",
                ""punce""
            ],
            [
                ""feminal"",
                ""inflame""
            ],
            [
                ""nestor"",
                ""noster"",
                ""sterno"",
                ""stoner"",
                ""trones""
            ],
            [
                ""salvers"",
                ""servals"",
                ""slavers""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
519,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lure"", ""rule"", ""momes"", ""memos"", ""shinty"", ""snithy"", ""reinfund"", ""unfriend"", ""retraces"", ""terraces"", ""secretar"", ""recaster"", ""acinic"", ""incaic"", ""underbed"", ""burdened"", ""celt"", ""lect"", ""dewing"", ""winged"", ""undon"", ""dunno""]
","[[""acinic"", ""incaic""], [""burdened"", ""underbed""], [""celt"", ""lect""], [""dewing"", ""winged""], [""dunno"", ""undon""], [""lure"", ""rule""], [""memos"", ""momes""], [""recaster"", ""retraces"", ""secretar"", ""terraces""], [""reinfund"", ""unfriend""], [""shinty"", ""snithy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lure\"", \""rule\"", \""momes\"", \""memos\"", \""shinty\"", \""snithy\"", \""reinfund\"", \""unfriend\"", \""retraces\"", \""terraces\"", \""secretar\"", \""recaster\"", \""acinic\"", \""incaic\"", \""underbed\"", \""burdened\"", \""celt\"", \""lect\"", \""dewing\"", \""winged\"", \""undon\"", \""dunno\""]\n"",
    ""answer"": ""[[\""acinic\"", \""incaic\""], [\""burdened\"", \""underbed\""], [\""celt\"", \""lect\""], [\""dewing\"", \""winged\""], [\""dunno\"", \""undon\""], [\""lure\"", \""rule\""], [\""memos\"", \""momes\""], [\""recaster\"", \""retraces\"", \""secretar\"", \""terraces\""], [\""reinfund\"", \""unfriend\""], [\""shinty\"", \""snithy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 519,
        ""words"": [
            ""lure"",
            ""rule"",
            ""momes"",
            ""memos"",
            ""shinty"",
            ""snithy"",
            ""reinfund"",
            ""unfriend"",
            ""retraces"",
            ""terraces"",
            ""secretar"",
            ""recaster"",
            ""acinic"",
            ""incaic"",
            ""underbed"",
            ""burdened"",
            ""celt"",
            ""lect"",
            ""dewing"",
            ""winged"",
            ""undon"",
            ""dunno""
        ],
        ""solution"": [
            [
                ""acinic"",
                ""incaic""
            ],
            [
                ""burdened"",
                ""underbed""
            ],
            [
                ""celt"",
                ""lect""
            ],
            [
                ""dewing"",
                ""winged""
            ],
            [
                ""dunno"",
                ""undon""
            ],
            [
                ""lure"",
                ""rule""
            ],
            [
                ""memos"",
                ""momes""
            ],
            [
                ""recaster"",
                ""retraces"",
                ""secretar"",
                ""terraces""
            ],
            [
                ""reinfund"",
                ""unfriend""
            ],
            [
                ""shinty"",
                ""snithy""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
520,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""prealter"", ""palterer"", ""platerer"", ""roadman"", ""monarda"", ""mandora"", ""anadrom"", ""madrona""]
","[[""anadrom"", ""madrona"", ""mandora"", ""monarda"", ""roadman""], [""palterer"", ""platerer"", ""prealter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""prealter\"", \""palterer\"", \""platerer\"", \""roadman\"", \""monarda\"", \""mandora\"", \""anadrom\"", \""madrona\""]\n"",
    ""answer"": ""[[\""anadrom\"", \""madrona\"", \""mandora\"", \""monarda\"", \""roadman\""], [\""palterer\"", \""platerer\"", \""prealter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 520,
        ""words"": [
            ""prealter"",
            ""palterer"",
            ""platerer"",
            ""roadman"",
            ""monarda"",
            ""mandora"",
            ""anadrom"",
            ""madrona""
        ],
        ""solution"": [
            [
                ""anadrom"",
                ""madrona"",
                ""mandora"",
                ""monarda"",
                ""roadman""
            ],
            [
                ""palterer"",
                ""platerer"",
                ""prealter""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
521,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""admirance"", ""cardamine"", ""estrays"", ""stayers"", ""ratty"", ""attry"", ""esprit"", ""pteris"", ""ripest"", ""priest"", ""adonizing"", ""anodizing"", ""heartly"", ""rathely"", ""displume"", ""impulsed"", ""pinons"", ""pinson"", ""strigiles"", ""grisliest""]
","[[""admirance"", ""cardamine""], [""adonizing"", ""anodizing""], [""attry"", ""ratty""], [""displume"", ""impulsed""], [""esprit"", ""priest"", ""pteris"", ""ripest""], [""estrays"", ""stayers""], [""grisliest"", ""strigiles""], [""heartly"", ""rathely""], [""pinons"", ""pinson""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""admirance\"", \""cardamine\"", \""estrays\"", \""stayers\"", \""ratty\"", \""attry\"", \""esprit\"", \""pteris\"", \""ripest\"", \""priest\"", \""adonizing\"", \""anodizing\"", \""heartly\"", \""rathely\"", \""displume\"", \""impulsed\"", \""pinons\"", \""pinson\"", \""strigiles\"", \""grisliest\""]\n"",
    ""answer"": ""[[\""admirance\"", \""cardamine\""], [\""adonizing\"", \""anodizing\""], [\""attry\"", \""ratty\""], [\""displume\"", \""impulsed\""], [\""esprit\"", \""priest\"", \""pteris\"", \""ripest\""], [\""estrays\"", \""stayers\""], [\""grisliest\"", \""strigiles\""], [\""heartly\"", \""rathely\""], [\""pinons\"", \""pinson\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 521,
        ""words"": [
            ""admirance"",
            ""cardamine"",
            ""estrays"",
            ""stayers"",
            ""ratty"",
            ""attry"",
            ""esprit"",
            ""pteris"",
            ""ripest"",
            ""priest"",
            ""adonizing"",
            ""anodizing"",
            ""heartly"",
            ""rathely"",
            ""displume"",
            ""impulsed"",
            ""pinons"",
            ""pinson"",
            ""strigiles"",
            ""grisliest""
        ],
        ""solution"": [
            [
                ""admirance"",
                ""cardamine""
            ],
            [
                ""adonizing"",
                ""anodizing""
            ],
            [
                ""attry"",
                ""ratty""
            ],
            [
                ""displume"",
                ""impulsed""
            ],
            [
                ""esprit"",
                ""priest"",
                ""pteris"",
                ""ripest""
            ],
            [
                ""estrays"",
                ""stayers""
            ],
            [
                ""grisliest"",
                ""strigiles""
            ],
            [
                ""heartly"",
                ""rathely""
            ],
            [
                ""pinons"",
                ""pinson""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
522,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""necked"", ""decken"", ""bergama"", ""megabar"", ""snooping"", ""spooning"", ""derails"", ""sadleir"", ""sideral"", ""dialers"", ""burying"", ""rubying"", ""ortalid"", ""dilator"", ""swag"", ""wags"", ""miler"", ""meril"", ""limer"", ""bakemeats"", ""makebates"", ""nebalia"", ""abelian""]
","[[""abelian"", ""nebalia""], [""bakemeats"", ""makebates""], [""bergama"", ""megabar""], [""burying"", ""rubying""], [""decken"", ""necked""], [""derails"", ""dialers"", ""sadleir"", ""sideral""], [""dilator"", ""ortalid""], [""limer"", ""meril"", ""miler""], [""snooping"", ""spooning""], [""swag"", ""wags""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""necked\"", \""decken\"", \""bergama\"", \""megabar\"", \""snooping\"", \""spooning\"", \""derails\"", \""sadleir\"", \""sideral\"", \""dialers\"", \""burying\"", \""rubying\"", \""ortalid\"", \""dilator\"", \""swag\"", \""wags\"", \""miler\"", \""meril\"", \""limer\"", \""bakemeats\"", \""makebates\"", \""nebalia\"", \""abelian\""]\n"",
    ""answer"": ""[[\""abelian\"", \""nebalia\""], [\""bakemeats\"", \""makebates\""], [\""bergama\"", \""megabar\""], [\""burying\"", \""rubying\""], [\""decken\"", \""necked\""], [\""derails\"", \""dialers\"", \""sadleir\"", \""sideral\""], [\""dilator\"", \""ortalid\""], [\""limer\"", \""meril\"", \""miler\""], [\""snooping\"", \""spooning\""], [\""swag\"", \""wags\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 522,
        ""words"": [
            ""necked"",
            ""decken"",
            ""bergama"",
            ""megabar"",
            ""snooping"",
            ""spooning"",
            ""derails"",
            ""sadleir"",
            ""sideral"",
            ""dialers"",
            ""burying"",
            ""rubying"",
            ""ortalid"",
            ""dilator"",
            ""swag"",
            ""wags"",
            ""miler"",
            ""meril"",
            ""limer"",
            ""bakemeats"",
            ""makebates"",
            ""nebalia"",
            ""abelian""
        ],
        ""solution"": [
            [
                ""abelian"",
                ""nebalia""
            ],
            [
                ""bakemeats"",
                ""makebates""
            ],
            [
                ""bergama"",
                ""megabar""
            ],
            [
                ""burying"",
                ""rubying""
            ],
            [
                ""decken"",
                ""necked""
            ],
            [
                ""derails"",
                ""dialers"",
                ""sadleir"",
                ""sideral""
            ],
            [
                ""dilator"",
                ""ortalid""
            ],
            [
                ""limer"",
                ""meril"",
                ""miler""
            ],
            [
                ""snooping"",
                ""spooning""
            ],
            [
                ""swag"",
                ""wags""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
523,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""estrich"", ""richest"", ""bawdry"", ""byward"", ""astarte"", ""statera"", ""ungirth"", ""unright"", ""nigrifies"", ""signifier""]
","[[""astarte"", ""statera""], [""bawdry"", ""byward""], [""estrich"", ""richest""], [""nigrifies"", ""signifier""], [""ungirth"", ""unright""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""estrich\"", \""richest\"", \""bawdry\"", \""byward\"", \""astarte\"", \""statera\"", \""ungirth\"", \""unright\"", \""nigrifies\"", \""signifier\""]\n"",
    ""answer"": ""[[\""astarte\"", \""statera\""], [\""bawdry\"", \""byward\""], [\""estrich\"", \""richest\""], [\""nigrifies\"", \""signifier\""], [\""ungirth\"", \""unright\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 523,
        ""words"": [
            ""estrich"",
            ""richest"",
            ""bawdry"",
            ""byward"",
            ""astarte"",
            ""statera"",
            ""ungirth"",
            ""unright"",
            ""nigrifies"",
            ""signifier""
        ],
        ""solution"": [
            [
                ""astarte"",
                ""statera""
            ],
            [
                ""bawdry"",
                ""byward""
            ],
            [
                ""estrich"",
                ""richest""
            ],
            [
                ""nigrifies"",
                ""signifier""
            ],
            [
                ""ungirth"",
                ""unright""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
524,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""blunge"", ""bungle"", ""laurus"", ""ursula"", ""pilmy"", ""imply"", ""nylast"", ""stanly"", ""pianistic"", ""sincipita"", ""facer"", ""farce"", ""seceders"", ""recessed"", ""synochal"", ""halcyons"", ""zeiss"", ""sizes""]
","[[""blunge"", ""bungle""], [""facer"", ""farce""], [""halcyons"", ""synochal""], [""imply"", ""pilmy""], [""laurus"", ""ursula""], [""nylast"", ""stanly""], [""pianistic"", ""sincipita""], [""recessed"", ""seceders""], [""sizes"", ""zeiss""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""blunge\"", \""bungle\"", \""laurus\"", \""ursula\"", \""pilmy\"", \""imply\"", \""nylast\"", \""stanly\"", \""pianistic\"", \""sincipita\"", \""facer\"", \""farce\"", \""seceders\"", \""recessed\"", \""synochal\"", \""halcyons\"", \""zeiss\"", \""sizes\""]\n"",
    ""answer"": ""[[\""blunge\"", \""bungle\""], [\""facer\"", \""farce\""], [\""halcyons\"", \""synochal\""], [\""imply\"", \""pilmy\""], [\""laurus\"", \""ursula\""], [\""nylast\"", \""stanly\""], [\""pianistic\"", \""sincipita\""], [\""recessed\"", \""seceders\""], [\""sizes\"", \""zeiss\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 524,
        ""words"": [
            ""blunge"",
            ""bungle"",
            ""laurus"",
            ""ursula"",
            ""pilmy"",
            ""imply"",
            ""nylast"",
            ""stanly"",
            ""pianistic"",
            ""sincipita"",
            ""facer"",
            ""farce"",
            ""seceders"",
            ""recessed"",
            ""synochal"",
            ""halcyons"",
            ""zeiss"",
            ""sizes""
        ],
        ""solution"": [
            [
                ""blunge"",
                ""bungle""
            ],
            [
                ""facer"",
                ""farce""
            ],
            [
                ""halcyons"",
                ""synochal""
            ],
            [
                ""imply"",
                ""pilmy""
            ],
            [
                ""laurus"",
                ""ursula""
            ],
            [
                ""nylast"",
                ""stanly""
            ],
            [
                ""pianistic"",
                ""sincipita""
            ],
            [
                ""recessed"",
                ""seceders""
            ],
            [
                ""sizes"",
                ""zeiss""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
525,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reaming"", ""mangier"", ""germain"", ""germina"", ""app"", ""ppa"", ""pap""]
","[[""app"", ""pap"", ""ppa""], [""germain"", ""germina"", ""mangier"", ""reaming""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reaming\"", \""mangier\"", \""germain\"", \""germina\"", \""app\"", \""ppa\"", \""pap\""]\n"",
    ""answer"": ""[[\""app\"", \""pap\"", \""ppa\""], [\""germain\"", \""germina\"", \""mangier\"", \""reaming\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 525,
        ""words"": [
            ""reaming"",
            ""mangier"",
            ""germain"",
            ""germina"",
            ""app"",
            ""ppa"",
            ""pap""
        ],
        ""solution"": [
            [
                ""app"",
                ""pap"",
                ""ppa""
            ],
            [
                ""germain"",
                ""germina"",
                ""mangier"",
                ""reaming""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
526,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""services"", ""scrieves"", ""cholecystoduodenostomy"", ""duodenocholecystostomy"", ""heroins"", ""inshore"", ""sarmatier"", ""airstream"", ""phonogramically"", ""monographically"", ""nomographically"", ""gramophonically"", ""mulita"", ""ultima"", ""adams"", ""damas"", ""wisewoman"", ""womanwise""]
","[[""adams"", ""damas""], [""airstream"", ""sarmatier""], [""cholecystoduodenostomy"", ""duodenocholecystostomy""], [""gramophonically"", ""monographically"", ""nomographically"", ""phonogramically""], [""heroins"", ""inshore""], [""mulita"", ""ultima""], [""scrieves"", ""services""], [""wisewoman"", ""womanwise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""services\"", \""scrieves\"", \""cholecystoduodenostomy\"", \""duodenocholecystostomy\"", \""heroins\"", \""inshore\"", \""sarmatier\"", \""airstream\"", \""phonogramically\"", \""monographically\"", \""nomographically\"", \""gramophonically\"", \""mulita\"", \""ultima\"", \""adams\"", \""damas\"", \""wisewoman\"", \""womanwise\""]\n"",
    ""answer"": ""[[\""adams\"", \""damas\""], [\""airstream\"", \""sarmatier\""], [\""cholecystoduodenostomy\"", \""duodenocholecystostomy\""], [\""gramophonically\"", \""monographically\"", \""nomographically\"", \""phonogramically\""], [\""heroins\"", \""inshore\""], [\""mulita\"", \""ultima\""], [\""scrieves\"", \""services\""], [\""wisewoman\"", \""womanwise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 526,
        ""words"": [
            ""services"",
            ""scrieves"",
            ""cholecystoduodenostomy"",
            ""duodenocholecystostomy"",
            ""heroins"",
            ""inshore"",
            ""sarmatier"",
            ""airstream"",
            ""phonogramically"",
            ""monographically"",
            ""nomographically"",
            ""gramophonically"",
            ""mulita"",
            ""ultima"",
            ""adams"",
            ""damas"",
            ""wisewoman"",
            ""womanwise""
        ],
        ""solution"": [
            [
                ""adams"",
                ""damas""
            ],
            [
                ""airstream"",
                ""sarmatier""
            ],
            [
                ""cholecystoduodenostomy"",
                ""duodenocholecystostomy""
            ],
            [
                ""gramophonically"",
                ""monographically"",
                ""nomographically"",
                ""phonogramically""
            ],
            [
                ""heroins"",
                ""inshore""
            ],
            [
                ""mulita"",
                ""ultima""
            ],
            [
                ""scrieves"",
                ""services""
            ],
            [
                ""wisewoman"",
                ""womanwise""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
527,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""kaska"", ""kakas"", ""undernote"", ""undertone"", ""unerodent""]
","[[""kakas"", ""kaska""], [""undernote"", ""undertone"", ""unerodent""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""kaska\"", \""kakas\"", \""undernote\"", \""undertone\"", \""unerodent\""]\n"",
    ""answer"": ""[[\""kakas\"", \""kaska\""], [\""undernote\"", \""undertone\"", \""unerodent\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 527,
        ""words"": [
            ""kaska"",
            ""kakas"",
            ""undernote"",
            ""undertone"",
            ""unerodent""
        ],
        ""solution"": [
            [
                ""kakas"",
                ""kaska""
            ],
            [
                ""undernote"",
                ""undertone"",
                ""unerodent""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
528,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fingerer"", ""refinger"", ""refringe"", ""pablo"", ""polab""]
","[[""fingerer"", ""refinger"", ""refringe""], [""pablo"", ""polab""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fingerer\"", \""refinger\"", \""refringe\"", \""pablo\"", \""polab\""]\n"",
    ""answer"": ""[[\""fingerer\"", \""refinger\"", \""refringe\""], [\""pablo\"", \""polab\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 528,
        ""words"": [
            ""fingerer"",
            ""refinger"",
            ""refringe"",
            ""pablo"",
            ""polab""
        ],
        ""solution"": [
            [
                ""fingerer"",
                ""refinger"",
                ""refringe""
            ],
            [
                ""pablo"",
                ""polab""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
529,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""boultel"", ""boutell"", ""bilobated"", ""bobtailed"", ""humorist"", ""thoriums"", ""coferment"", ""forcement"", ""brasilein"", ""liberians"", ""bromides"", ""bromised"", ""spartanic"", ""sacripant"", ""lacis"", ""laics"", ""salic"", ""dekametre"", ""dekameter"", ""peatman"", ""tapeman""]
","[[""bilobated"", ""bobtailed""], [""boultel"", ""boutell""], [""brasilein"", ""liberians""], [""bromides"", ""bromised""], [""coferment"", ""forcement""], [""dekameter"", ""dekametre""], [""humorist"", ""thoriums""], [""lacis"", ""laics"", ""salic""], [""peatman"", ""tapeman""], [""sacripant"", ""spartanic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""boultel\"", \""boutell\"", \""bilobated\"", \""bobtailed\"", \""humorist\"", \""thoriums\"", \""coferment\"", \""forcement\"", \""brasilein\"", \""liberians\"", \""bromides\"", \""bromised\"", \""spartanic\"", \""sacripant\"", \""lacis\"", \""laics\"", \""salic\"", \""dekametre\"", \""dekameter\"", \""peatman\"", \""tapeman\""]\n"",
    ""answer"": ""[[\""bilobated\"", \""bobtailed\""], [\""boultel\"", \""boutell\""], [\""brasilein\"", \""liberians\""], [\""bromides\"", \""bromised\""], [\""coferment\"", \""forcement\""], [\""dekameter\"", \""dekametre\""], [\""humorist\"", \""thoriums\""], [\""lacis\"", \""laics\"", \""salic\""], [\""peatman\"", \""tapeman\""], [\""sacripant\"", \""spartanic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 529,
        ""words"": [
            ""boultel"",
            ""boutell"",
            ""bilobated"",
            ""bobtailed"",
            ""humorist"",
            ""thoriums"",
            ""coferment"",
            ""forcement"",
            ""brasilein"",
            ""liberians"",
            ""bromides"",
            ""bromised"",
            ""spartanic"",
            ""sacripant"",
            ""lacis"",
            ""laics"",
            ""salic"",
            ""dekametre"",
            ""dekameter"",
            ""peatman"",
            ""tapeman""
        ],
        ""solution"": [
            [
                ""bilobated"",
                ""bobtailed""
            ],
            [
                ""boultel"",
                ""boutell""
            ],
            [
                ""brasilein"",
                ""liberians""
            ],
            [
                ""bromides"",
                ""bromised""
            ],
            [
                ""coferment"",
                ""forcement""
            ],
            [
                ""dekameter"",
                ""dekametre""
            ],
            [
                ""humorist"",
                ""thoriums""
            ],
            [
                ""lacis"",
                ""laics"",
                ""salic""
            ],
            [
                ""peatman"",
                ""tapeman""
            ],
            [
                ""sacripant"",
                ""spartanic""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
530,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""neossin"", ""sension"", ""sonnies"", ""ssp"", ""sps"", ""psalmodic"", ""plasmodic"", ""sutta"", ""tauts"", ""ruinating"", ""urinating"", ""artily"", ""traily"", ""allyl"", ""lally""]
","[[""allyl"", ""lally""], [""artily"", ""traily""], [""neossin"", ""sension"", ""sonnies""], [""plasmodic"", ""psalmodic""], [""ruinating"", ""urinating""], [""sps"", ""ssp""], [""sutta"", ""tauts""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""neossin\"", \""sension\"", \""sonnies\"", \""ssp\"", \""sps\"", \""psalmodic\"", \""plasmodic\"", \""sutta\"", \""tauts\"", \""ruinating\"", \""urinating\"", \""artily\"", \""traily\"", \""allyl\"", \""lally\""]\n"",
    ""answer"": ""[[\""allyl\"", \""lally\""], [\""artily\"", \""traily\""], [\""neossin\"", \""sension\"", \""sonnies\""], [\""plasmodic\"", \""psalmodic\""], [\""ruinating\"", \""urinating\""], [\""sps\"", \""ssp\""], [\""sutta\"", \""tauts\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 530,
        ""words"": [
            ""neossin"",
            ""sension"",
            ""sonnies"",
            ""ssp"",
            ""sps"",
            ""psalmodic"",
            ""plasmodic"",
            ""sutta"",
            ""tauts"",
            ""ruinating"",
            ""urinating"",
            ""artily"",
            ""traily"",
            ""allyl"",
            ""lally""
        ],
        ""solution"": [
            [
                ""allyl"",
                ""lally""
            ],
            [
                ""artily"",
                ""traily""
            ],
            [
                ""neossin"",
                ""sension"",
                ""sonnies""
            ],
            [
                ""plasmodic"",
                ""psalmodic""
            ],
            [
                ""ruinating"",
                ""urinating""
            ],
            [
                ""sps"",
                ""ssp""
            ],
            [
                ""sutta"",
                ""tauts""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
531,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""overmantle"", ""overmantel"", ""st"", ""ts"", ""rachel"", ""rechal"", ""recooks"", ""cookers"", ""swordlike"", ""lordswike"", ""abolitionism"", ""mobilisation"", ""boreiad"", ""beroida"", ""relevation"", ""revelation"", ""imago"", ""amigo"", ""wips"", ""wisp""]
","[[""abolitionism"", ""mobilisation""], [""amigo"", ""imago""], [""beroida"", ""boreiad""], [""cookers"", ""recooks""], [""lordswike"", ""swordlike""], [""overmantel"", ""overmantle""], [""rachel"", ""rechal""], [""relevation"", ""revelation""], [""st"", ""ts""], [""wips"", ""wisp""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""overmantle\"", \""overmantel\"", \""st\"", \""ts\"", \""rachel\"", \""rechal\"", \""recooks\"", \""cookers\"", \""swordlike\"", \""lordswike\"", \""abolitionism\"", \""mobilisation\"", \""boreiad\"", \""beroida\"", \""relevation\"", \""revelation\"", \""imago\"", \""amigo\"", \""wips\"", \""wisp\""]\n"",
    ""answer"": ""[[\""abolitionism\"", \""mobilisation\""], [\""amigo\"", \""imago\""], [\""beroida\"", \""boreiad\""], [\""cookers\"", \""recooks\""], [\""lordswike\"", \""swordlike\""], [\""overmantel\"", \""overmantle\""], [\""rachel\"", \""rechal\""], [\""relevation\"", \""revelation\""], [\""st\"", \""ts\""], [\""wips\"", \""wisp\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 531,
        ""words"": [
            ""overmantle"",
            ""overmantel"",
            ""st"",
            ""ts"",
            ""rachel"",
            ""rechal"",
            ""recooks"",
            ""cookers"",
            ""swordlike"",
            ""lordswike"",
            ""abolitionism"",
            ""mobilisation"",
            ""boreiad"",
            ""beroida"",
            ""relevation"",
            ""revelation"",
            ""imago"",
            ""amigo"",
            ""wips"",
            ""wisp""
        ],
        ""solution"": [
            [
                ""abolitionism"",
                ""mobilisation""
            ],
            [
                ""amigo"",
                ""imago""
            ],
            [
                ""beroida"",
                ""boreiad""
            ],
            [
                ""cookers"",
                ""recooks""
            ],
            [
                ""lordswike"",
                ""swordlike""
            ],
            [
                ""overmantel"",
                ""overmantle""
            ],
            [
                ""rachel"",
                ""rechal""
            ],
            [
                ""relevation"",
                ""revelation""
            ],
            [
                ""st"",
                ""ts""
            ],
            [
                ""wips"",
                ""wisp""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
532,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""robur"", ""bourr"", ""rubor"", ""burro"", ""snavel"", ""navels"", ""valens"", ""daysman"", ""mandyas"", ""malakin"", ""alkamin"", ""inclosure"", ""cornelius"", ""reclusion"", ""reengross"", ""engrosser""]
","[[""alkamin"", ""malakin""], [""bourr"", ""burro"", ""robur"", ""rubor""], [""cornelius"", ""inclosure"", ""reclusion""], [""daysman"", ""mandyas""], [""engrosser"", ""reengross""], [""navels"", ""snavel"", ""valens""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""robur\"", \""bourr\"", \""rubor\"", \""burro\"", \""snavel\"", \""navels\"", \""valens\"", \""daysman\"", \""mandyas\"", \""malakin\"", \""alkamin\"", \""inclosure\"", \""cornelius\"", \""reclusion\"", \""reengross\"", \""engrosser\""]\n"",
    ""answer"": ""[[\""alkamin\"", \""malakin\""], [\""bourr\"", \""burro\"", \""robur\"", \""rubor\""], [\""cornelius\"", \""inclosure\"", \""reclusion\""], [\""daysman\"", \""mandyas\""], [\""engrosser\"", \""reengross\""], [\""navels\"", \""snavel\"", \""valens\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 532,
        ""words"": [
            ""robur"",
            ""bourr"",
            ""rubor"",
            ""burro"",
            ""snavel"",
            ""navels"",
            ""valens"",
            ""daysman"",
            ""mandyas"",
            ""malakin"",
            ""alkamin"",
            ""inclosure"",
            ""cornelius"",
            ""reclusion"",
            ""reengross"",
            ""engrosser""
        ],
        ""solution"": [
            [
                ""alkamin"",
                ""malakin""
            ],
            [
                ""bourr"",
                ""burro"",
                ""robur"",
                ""rubor""
            ],
            [
                ""cornelius"",
                ""inclosure"",
                ""reclusion""
            ],
            [
                ""daysman"",
                ""mandyas""
            ],
            [
                ""engrosser"",
                ""reengross""
            ],
            [
                ""navels"",
                ""snavel"",
                ""valens""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
533,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""situp"", ""upsit"", ""curries"", ""cruiser"", ""sucrier"", ""kindly"", ""dinkly"", ""vespine"", ""pensive"", ""medicaid"", ""mediacid"", ""encharge"", ""rechange"", ""elatery"", ""tealery"", ""crawls"", ""scrawl"", ""bardily"", ""ridably"", ""rabidly""]
","[[""bardily"", ""rabidly"", ""ridably""], [""crawls"", ""scrawl""], [""cruiser"", ""curries"", ""sucrier""], [""dinkly"", ""kindly""], [""elatery"", ""tealery""], [""encharge"", ""rechange""], [""mediacid"", ""medicaid""], [""pensive"", ""vespine""], [""situp"", ""upsit""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""situp\"", \""upsit\"", \""curries\"", \""cruiser\"", \""sucrier\"", \""kindly\"", \""dinkly\"", \""vespine\"", \""pensive\"", \""medicaid\"", \""mediacid\"", \""encharge\"", \""rechange\"", \""elatery\"", \""tealery\"", \""crawls\"", \""scrawl\"", \""bardily\"", \""ridably\"", \""rabidly\""]\n"",
    ""answer"": ""[[\""bardily\"", \""rabidly\"", \""ridably\""], [\""crawls\"", \""scrawl\""], [\""cruiser\"", \""curries\"", \""sucrier\""], [\""dinkly\"", \""kindly\""], [\""elatery\"", \""tealery\""], [\""encharge\"", \""rechange\""], [\""mediacid\"", \""medicaid\""], [\""pensive\"", \""vespine\""], [\""situp\"", \""upsit\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 533,
        ""words"": [
            ""situp"",
            ""upsit"",
            ""curries"",
            ""cruiser"",
            ""sucrier"",
            ""kindly"",
            ""dinkly"",
            ""vespine"",
            ""pensive"",
            ""medicaid"",
            ""mediacid"",
            ""encharge"",
            ""rechange"",
            ""elatery"",
            ""tealery"",
            ""crawls"",
            ""scrawl"",
            ""bardily"",
            ""ridably"",
            ""rabidly""
        ],
        ""solution"": [
            [
                ""bardily"",
                ""rabidly"",
                ""ridably""
            ],
            [
                ""crawls"",
                ""scrawl""
            ],
            [
                ""cruiser"",
                ""curries"",
                ""sucrier""
            ],
            [
                ""dinkly"",
                ""kindly""
            ],
            [
                ""elatery"",
                ""tealery""
            ],
            [
                ""encharge"",
                ""rechange""
            ],
            [
                ""mediacid"",
                ""medicaid""
            ],
            [
                ""pensive"",
                ""vespine""
            ],
            [
                ""situp"",
                ""upsit""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
534,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""shorebush"", ""shoebrush"", ""presently"", ""serpently"", ""corpsman"", ""crampons"", ""venutian"", ""unnative"", ""unsomberly"", ""unsombrely"", ""astonies"", ""ossetian"", ""assiento"", ""engler"", ""lenger"", ""anchietin"", ""cathinine"", ""owd"", ""wod"", ""dow""]
","[[""anchietin"", ""cathinine""], [""assiento"", ""astonies"", ""ossetian""], [""corpsman"", ""crampons""], [""dow"", ""owd"", ""wod""], [""engler"", ""lenger""], [""presently"", ""serpently""], [""shoebrush"", ""shorebush""], [""unnative"", ""venutian""], [""unsomberly"", ""unsombrely""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""shorebush\"", \""shoebrush\"", \""presently\"", \""serpently\"", \""corpsman\"", \""crampons\"", \""venutian\"", \""unnative\"", \""unsomberly\"", \""unsombrely\"", \""astonies\"", \""ossetian\"", \""assiento\"", \""engler\"", \""lenger\"", \""anchietin\"", \""cathinine\"", \""owd\"", \""wod\"", \""dow\""]\n"",
    ""answer"": ""[[\""anchietin\"", \""cathinine\""], [\""assiento\"", \""astonies\"", \""ossetian\""], [\""corpsman\"", \""crampons\""], [\""dow\"", \""owd\"", \""wod\""], [\""engler\"", \""lenger\""], [\""presently\"", \""serpently\""], [\""shoebrush\"", \""shorebush\""], [\""unnative\"", \""venutian\""], [\""unsomberly\"", \""unsombrely\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 534,
        ""words"": [
            ""shorebush"",
            ""shoebrush"",
            ""presently"",
            ""serpently"",
            ""corpsman"",
            ""crampons"",
            ""venutian"",
            ""unnative"",
            ""unsomberly"",
            ""unsombrely"",
            ""astonies"",
            ""ossetian"",
            ""assiento"",
            ""engler"",
            ""lenger"",
            ""anchietin"",
            ""cathinine"",
            ""owd"",
            ""wod"",
            ""dow""
        ],
        ""solution"": [
            [
                ""anchietin"",
                ""cathinine""
            ],
            [
                ""assiento"",
                ""astonies"",
                ""ossetian""
            ],
            [
                ""corpsman"",
                ""crampons""
            ],
            [
                ""dow"",
                ""owd"",
                ""wod""
            ],
            [
                ""engler"",
                ""lenger""
            ],
            [
                ""presently"",
                ""serpently""
            ],
            [
                ""shoebrush"",
                ""shorebush""
            ],
            [
                ""unnative"",
                ""venutian""
            ],
            [
                ""unsomberly"",
                ""unsombrely""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
535,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""creme"", ""merce"", ""creem"", ""flite"", ""filet"", ""anhidrotic"", ""trachinoid"", ""snivey"", ""visney""]
","[[""anhidrotic"", ""trachinoid""], [""creem"", ""creme"", ""merce""], [""filet"", ""flite""], [""snivey"", ""visney""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""creme\"", \""merce\"", \""creem\"", \""flite\"", \""filet\"", \""anhidrotic\"", \""trachinoid\"", \""snivey\"", \""visney\""]\n"",
    ""answer"": ""[[\""anhidrotic\"", \""trachinoid\""], [\""creem\"", \""creme\"", \""merce\""], [\""filet\"", \""flite\""], [\""snivey\"", \""visney\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 535,
        ""words"": [
            ""creme"",
            ""merce"",
            ""creem"",
            ""flite"",
            ""filet"",
            ""anhidrotic"",
            ""trachinoid"",
            ""snivey"",
            ""visney""
        ],
        ""solution"": [
            [
                ""anhidrotic"",
                ""trachinoid""
            ],
            [
                ""creem"",
                ""creme"",
                ""merce""
            ],
            [
                ""filet"",
                ""flite""
            ],
            [
                ""snivey"",
                ""visney""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
536,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""agua"", ""agau"", ""thearchies"", ""hatcheries"", ""teacherish"", ""pseudoisometric"", ""pseudoeroticism""]
","[[""agau"", ""agua""], [""hatcheries"", ""teacherish"", ""thearchies""], [""pseudoeroticism"", ""pseudoisometric""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""agua\"", \""agau\"", \""thearchies\"", \""hatcheries\"", \""teacherish\"", \""pseudoisometric\"", \""pseudoeroticism\""]\n"",
    ""answer"": ""[[\""agau\"", \""agua\""], [\""hatcheries\"", \""teacherish\"", \""thearchies\""], [\""pseudoeroticism\"", \""pseudoisometric\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 536,
        ""words"": [
            ""agua"",
            ""agau"",
            ""thearchies"",
            ""hatcheries"",
            ""teacherish"",
            ""pseudoisometric"",
            ""pseudoeroticism""
        ],
        ""solution"": [
            [
                ""agau"",
                ""agua""
            ],
            [
                ""hatcheries"",
                ""teacherish"",
                ""thearchies""
            ],
            [
                ""pseudoeroticism"",
                ""pseudoisometric""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
537,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""almonds"", ""dolmans"", ""linda"", ""ladin"", ""danli"", ""nepal"", ""penal"", ""alpen"", ""plena"", ""dha"", ""had"", ""platinochloric"", ""chloroplatinic"", ""tritoma"", ""mattoir"", ""chondrolipoma"", ""lipochondroma"", ""snye"", ""yens"", ""preseasonal"", ""anapleroses"", ""marquesan"", ""squareman""]
","[[""almonds"", ""dolmans""], [""alpen"", ""nepal"", ""penal"", ""plena""], [""anapleroses"", ""preseasonal""], [""chloroplatinic"", ""platinochloric""], [""chondrolipoma"", ""lipochondroma""], [""danli"", ""ladin"", ""linda""], [""dha"", ""had""], [""marquesan"", ""squareman""], [""mattoir"", ""tritoma""], [""snye"", ""yens""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""almonds\"", \""dolmans\"", \""linda\"", \""ladin\"", \""danli\"", \""nepal\"", \""penal\"", \""alpen\"", \""plena\"", \""dha\"", \""had\"", \""platinochloric\"", \""chloroplatinic\"", \""tritoma\"", \""mattoir\"", \""chondrolipoma\"", \""lipochondroma\"", \""snye\"", \""yens\"", \""preseasonal\"", \""anapleroses\"", \""marquesan\"", \""squareman\""]\n"",
    ""answer"": ""[[\""almonds\"", \""dolmans\""], [\""alpen\"", \""nepal\"", \""penal\"", \""plena\""], [\""anapleroses\"", \""preseasonal\""], [\""chloroplatinic\"", \""platinochloric\""], [\""chondrolipoma\"", \""lipochondroma\""], [\""danli\"", \""ladin\"", \""linda\""], [\""dha\"", \""had\""], [\""marquesan\"", \""squareman\""], [\""mattoir\"", \""tritoma\""], [\""snye\"", \""yens\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 537,
        ""words"": [
            ""almonds"",
            ""dolmans"",
            ""linda"",
            ""ladin"",
            ""danli"",
            ""nepal"",
            ""penal"",
            ""alpen"",
            ""plena"",
            ""dha"",
            ""had"",
            ""platinochloric"",
            ""chloroplatinic"",
            ""tritoma"",
            ""mattoir"",
            ""chondrolipoma"",
            ""lipochondroma"",
            ""snye"",
            ""yens"",
            ""preseasonal"",
            ""anapleroses"",
            ""marquesan"",
            ""squareman""
        ],
        ""solution"": [
            [
                ""almonds"",
                ""dolmans""
            ],
            [
                ""alpen"",
                ""nepal"",
                ""penal"",
                ""plena""
            ],
            [
                ""anapleroses"",
                ""preseasonal""
            ],
            [
                ""chloroplatinic"",
                ""platinochloric""
            ],
            [
                ""chondrolipoma"",
                ""lipochondroma""
            ],
            [
                ""danli"",
                ""ladin"",
                ""linda""
            ],
            [
                ""dha"",
                ""had""
            ],
            [
                ""marquesan"",
                ""squareman""
            ],
            [
                ""mattoir"",
                ""tritoma""
            ],
            [
                ""snye"",
                ""yens""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
538,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""brome"", ""omber"", ""acidophilous"", ""aphidicolous"", ""lydia"", ""daily""]
","[[""acidophilous"", ""aphidicolous""], [""brome"", ""omber""], [""daily"", ""lydia""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""brome\"", \""omber\"", \""acidophilous\"", \""aphidicolous\"", \""lydia\"", \""daily\""]\n"",
    ""answer"": ""[[\""acidophilous\"", \""aphidicolous\""], [\""brome\"", \""omber\""], [\""daily\"", \""lydia\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 538,
        ""words"": [
            ""brome"",
            ""omber"",
            ""acidophilous"",
            ""aphidicolous"",
            ""lydia"",
            ""daily""
        ],
        ""solution"": [
            [
                ""acidophilous"",
                ""aphidicolous""
            ],
            [
                ""brome"",
                ""omber""
            ],
            [
                ""daily"",
                ""lydia""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
539,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""chelodina"", ""hedonical"", ""spald"", ""splad"", ""maror"", ""armor"", ""morra"", ""lacquerer"", ""relacquer""]
","[[""armor"", ""maror"", ""morra""], [""chelodina"", ""hedonical""], [""lacquerer"", ""relacquer""], [""spald"", ""splad""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""chelodina\"", \""hedonical\"", \""spald\"", \""splad\"", \""maror\"", \""armor\"", \""morra\"", \""lacquerer\"", \""relacquer\""]\n"",
    ""answer"": ""[[\""armor\"", \""maror\"", \""morra\""], [\""chelodina\"", \""hedonical\""], [\""lacquerer\"", \""relacquer\""], [\""spald\"", \""splad\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 539,
        ""words"": [
            ""chelodina"",
            ""hedonical"",
            ""spald"",
            ""splad"",
            ""maror"",
            ""armor"",
            ""morra"",
            ""lacquerer"",
            ""relacquer""
        ],
        ""solution"": [
            [
                ""armor"",
                ""maror"",
                ""morra""
            ],
            [
                ""chelodina"",
                ""hedonical""
            ],
            [
                ""lacquerer"",
                ""relacquer""
            ],
            [
                ""spald"",
                ""splad""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
540,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""welldoing"", ""dowelling"", ""warstle"", ""wrastle"", ""wastrel"", ""trochidae"", ""charioted"", ""turcois"", ""citrous"", ""kidders"", ""skidder""]
","[[""charioted"", ""trochidae""], [""citrous"", ""turcois""], [""dowelling"", ""welldoing""], [""kidders"", ""skidder""], [""warstle"", ""wastrel"", ""wrastle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""welldoing\"", \""dowelling\"", \""warstle\"", \""wrastle\"", \""wastrel\"", \""trochidae\"", \""charioted\"", \""turcois\"", \""citrous\"", \""kidders\"", \""skidder\""]\n"",
    ""answer"": ""[[\""charioted\"", \""trochidae\""], [\""citrous\"", \""turcois\""], [\""dowelling\"", \""welldoing\""], [\""kidders\"", \""skidder\""], [\""warstle\"", \""wastrel\"", \""wrastle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 540,
        ""words"": [
            ""welldoing"",
            ""dowelling"",
            ""warstle"",
            ""wrastle"",
            ""wastrel"",
            ""trochidae"",
            ""charioted"",
            ""turcois"",
            ""citrous"",
            ""kidders"",
            ""skidder""
        ],
        ""solution"": [
            [
                ""charioted"",
                ""trochidae""
            ],
            [
                ""citrous"",
                ""turcois""
            ],
            [
                ""dowelling"",
                ""welldoing""
            ],
            [
                ""kidders"",
                ""skidder""
            ],
            [
                ""warstle"",
                ""wastrel"",
                ""wrastle""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
541,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""capelan"", ""placean"", ""imbat"", ""ambit"", ""odist"", ""doits"", ""hosier"", ""hieros"", ""negus"", ""genus"", ""estivation"", ""novitiates""]
","[[""ambit"", ""imbat""], [""capelan"", ""placean""], [""doits"", ""odist""], [""estivation"", ""novitiates""], [""genus"", ""negus""], [""hieros"", ""hosier""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""capelan\"", \""placean\"", \""imbat\"", \""ambit\"", \""odist\"", \""doits\"", \""hosier\"", \""hieros\"", \""negus\"", \""genus\"", \""estivation\"", \""novitiates\""]\n"",
    ""answer"": ""[[\""ambit\"", \""imbat\""], [\""capelan\"", \""placean\""], [\""doits\"", \""odist\""], [\""estivation\"", \""novitiates\""], [\""genus\"", \""negus\""], [\""hieros\"", \""hosier\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 541,
        ""words"": [
            ""capelan"",
            ""placean"",
            ""imbat"",
            ""ambit"",
            ""odist"",
            ""doits"",
            ""hosier"",
            ""hieros"",
            ""negus"",
            ""genus"",
            ""estivation"",
            ""novitiates""
        ],
        ""solution"": [
            [
                ""ambit"",
                ""imbat""
            ],
            [
                ""capelan"",
                ""placean""
            ],
            [
                ""doits"",
                ""odist""
            ],
            [
                ""estivation"",
                ""novitiates""
            ],
            [
                ""genus"",
                ""negus""
            ],
            [
                ""hieros"",
                ""hosier""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
542,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""misplant"", ""implants"", ""hieros"", ""hosier"", ""peamouths"", ""aposthume"", ""prosectorial"", ""corporealist"", ""lorica"", ""caroli"", ""corial"", ""encircles"", ""licencers""]
","[[""aposthume"", ""peamouths""], [""caroli"", ""corial"", ""lorica""], [""corporealist"", ""prosectorial""], [""encircles"", ""licencers""], [""hieros"", ""hosier""], [""implants"", ""misplant""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""misplant\"", \""implants\"", \""hieros\"", \""hosier\"", \""peamouths\"", \""aposthume\"", \""prosectorial\"", \""corporealist\"", \""lorica\"", \""caroli\"", \""corial\"", \""encircles\"", \""licencers\""]\n"",
    ""answer"": ""[[\""aposthume\"", \""peamouths\""], [\""caroli\"", \""corial\"", \""lorica\""], [\""corporealist\"", \""prosectorial\""], [\""encircles\"", \""licencers\""], [\""hieros\"", \""hosier\""], [\""implants\"", \""misplant\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 542,
        ""words"": [
            ""misplant"",
            ""implants"",
            ""hieros"",
            ""hosier"",
            ""peamouths"",
            ""aposthume"",
            ""prosectorial"",
            ""corporealist"",
            ""lorica"",
            ""caroli"",
            ""corial"",
            ""encircles"",
            ""licencers""
        ],
        ""solution"": [
            [
                ""aposthume"",
                ""peamouths""
            ],
            [
                ""caroli"",
                ""corial"",
                ""lorica""
            ],
            [
                ""corporealist"",
                ""prosectorial""
            ],
            [
                ""encircles"",
                ""licencers""
            ],
            [
                ""hieros"",
                ""hosier""
            ],
            [
                ""implants"",
                ""misplant""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
543,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""soprani"", ""parison"", ""valiances"", ""valencias"", ""metropole"", ""melotrope"", ""quinta"", ""quanti"", ""quaint"", ""ria"", ""air"", ""ira"", ""drives"", ""divers""]
","[[""air"", ""ira"", ""ria""], [""divers"", ""drives""], [""melotrope"", ""metropole""], [""parison"", ""soprani""], [""quaint"", ""quanti"", ""quinta""], [""valencias"", ""valiances""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""soprani\"", \""parison\"", \""valiances\"", \""valencias\"", \""metropole\"", \""melotrope\"", \""quinta\"", \""quanti\"", \""quaint\"", \""ria\"", \""air\"", \""ira\"", \""drives\"", \""divers\""]\n"",
    ""answer"": ""[[\""air\"", \""ira\"", \""ria\""], [\""divers\"", \""drives\""], [\""melotrope\"", \""metropole\""], [\""parison\"", \""soprani\""], [\""quaint\"", \""quanti\"", \""quinta\""], [\""valencias\"", \""valiances\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 543,
        ""words"": [
            ""soprani"",
            ""parison"",
            ""valiances"",
            ""valencias"",
            ""metropole"",
            ""melotrope"",
            ""quinta"",
            ""quanti"",
            ""quaint"",
            ""ria"",
            ""air"",
            ""ira"",
            ""drives"",
            ""divers""
        ],
        ""solution"": [
            [
                ""air"",
                ""ira"",
                ""ria""
            ],
            [
                ""divers"",
                ""drives""
            ],
            [
                ""melotrope"",
                ""metropole""
            ],
            [
                ""parison"",
                ""soprani""
            ],
            [
                ""quaint"",
                ""quanti"",
                ""quinta""
            ],
            [
                ""valencias"",
                ""valiances""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
544,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""obes"", ""bose"", ""bailed"", ""abdiel"", ""diable"", ""baldie"", ""restriven"", ""inverters"", ""ungeuntarium"", ""unguentarium"", ""tilda"", ""dital"", ""datil"", ""tidal"", ""tripody"", ""dioptry"", ""tasbih"", ""habits"", ""unteam"", ""untame"", ""unmate"", ""atonalism"", ""anomalist""]
","[[""abdiel"", ""bailed"", ""baldie"", ""diable""], [""anomalist"", ""atonalism""], [""bose"", ""obes""], [""datil"", ""dital"", ""tidal"", ""tilda""], [""dioptry"", ""tripody""], [""habits"", ""tasbih""], [""inverters"", ""restriven""], [""ungeuntarium"", ""unguentarium""], [""unmate"", ""untame"", ""unteam""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""obes\"", \""bose\"", \""bailed\"", \""abdiel\"", \""diable\"", \""baldie\"", \""restriven\"", \""inverters\"", \""ungeuntarium\"", \""unguentarium\"", \""tilda\"", \""dital\"", \""datil\"", \""tidal\"", \""tripody\"", \""dioptry\"", \""tasbih\"", \""habits\"", \""unteam\"", \""untame\"", \""unmate\"", \""atonalism\"", \""anomalist\""]\n"",
    ""answer"": ""[[\""abdiel\"", \""bailed\"", \""baldie\"", \""diable\""], [\""anomalist\"", \""atonalism\""], [\""bose\"", \""obes\""], [\""datil\"", \""dital\"", \""tidal\"", \""tilda\""], [\""dioptry\"", \""tripody\""], [\""habits\"", \""tasbih\""], [\""inverters\"", \""restriven\""], [\""ungeuntarium\"", \""unguentarium\""], [\""unmate\"", \""untame\"", \""unteam\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 544,
        ""words"": [
            ""obes"",
            ""bose"",
            ""bailed"",
            ""abdiel"",
            ""diable"",
            ""baldie"",
            ""restriven"",
            ""inverters"",
            ""ungeuntarium"",
            ""unguentarium"",
            ""tilda"",
            ""dital"",
            ""datil"",
            ""tidal"",
            ""tripody"",
            ""dioptry"",
            ""tasbih"",
            ""habits"",
            ""unteam"",
            ""untame"",
            ""unmate"",
            ""atonalism"",
            ""anomalist""
        ],
        ""solution"": [
            [
                ""abdiel"",
                ""bailed"",
                ""baldie"",
                ""diable""
            ],
            [
                ""anomalist"",
                ""atonalism""
            ],
            [
                ""bose"",
                ""obes""
            ],
            [
                ""datil"",
                ""dital"",
                ""tidal"",
                ""tilda""
            ],
            [
                ""dioptry"",
                ""tripody""
            ],
            [
                ""habits"",
                ""tasbih""
            ],
            [
                ""inverters"",
                ""restriven""
            ],
            [
                ""ungeuntarium"",
                ""unguentarium""
            ],
            [
                ""unmate"",
                ""untame"",
                ""unteam""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
545,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""leaded"", ""delead"", ""usances"", ""neascus"", ""uncases"", ""sansei"", ""anises"", ""nematocidal"", ""declamation"", ""excerpta"", ""preexact"", ""eyed"", ""yede"", ""suberises"", ""subseries"", ""aphorized"", ""aphidozer""]
","[[""anises"", ""sansei""], [""aphidozer"", ""aphorized""], [""declamation"", ""nematocidal""], [""delead"", ""leaded""], [""excerpta"", ""preexact""], [""eyed"", ""yede""], [""neascus"", ""uncases"", ""usances""], [""suberises"", ""subseries""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""leaded\"", \""delead\"", \""usances\"", \""neascus\"", \""uncases\"", \""sansei\"", \""anises\"", \""nematocidal\"", \""declamation\"", \""excerpta\"", \""preexact\"", \""eyed\"", \""yede\"", \""suberises\"", \""subseries\"", \""aphorized\"", \""aphidozer\""]\n"",
    ""answer"": ""[[\""anises\"", \""sansei\""], [\""aphidozer\"", \""aphorized\""], [\""declamation\"", \""nematocidal\""], [\""delead\"", \""leaded\""], [\""excerpta\"", \""preexact\""], [\""eyed\"", \""yede\""], [\""neascus\"", \""uncases\"", \""usances\""], [\""suberises\"", \""subseries\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 545,
        ""words"": [
            ""leaded"",
            ""delead"",
            ""usances"",
            ""neascus"",
            ""uncases"",
            ""sansei"",
            ""anises"",
            ""nematocidal"",
            ""declamation"",
            ""excerpta"",
            ""preexact"",
            ""eyed"",
            ""yede"",
            ""suberises"",
            ""subseries"",
            ""aphorized"",
            ""aphidozer""
        ],
        ""solution"": [
            [
                ""anises"",
                ""sansei""
            ],
            [
                ""aphidozer"",
                ""aphorized""
            ],
            [
                ""declamation"",
                ""nematocidal""
            ],
            [
                ""delead"",
                ""leaded""
            ],
            [
                ""excerpta"",
                ""preexact""
            ],
            [
                ""eyed"",
                ""yede""
            ],
            [
                ""neascus"",
                ""uncases"",
                ""usances""
            ],
            [
                ""suberises"",
                ""subseries""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
546,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""betrace"", ""becater"", ""micell"", ""mellic"", ""permissibly"", ""impressibly"", ""replan"", ""parnel"", ""planer"", ""porphyrous"", ""pyrophorus"", ""dowery"", ""odwyer""]
","[[""becater"", ""betrace""], [""dowery"", ""odwyer""], [""impressibly"", ""permissibly""], [""mellic"", ""micell""], [""parnel"", ""planer"", ""replan""], [""porphyrous"", ""pyrophorus""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""betrace\"", \""becater\"", \""micell\"", \""mellic\"", \""permissibly\"", \""impressibly\"", \""replan\"", \""parnel\"", \""planer\"", \""porphyrous\"", \""pyrophorus\"", \""dowery\"", \""odwyer\""]\n"",
    ""answer"": ""[[\""becater\"", \""betrace\""], [\""dowery\"", \""odwyer\""], [\""impressibly\"", \""permissibly\""], [\""mellic\"", \""micell\""], [\""parnel\"", \""planer\"", \""replan\""], [\""porphyrous\"", \""pyrophorus\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 546,
        ""words"": [
            ""betrace"",
            ""becater"",
            ""micell"",
            ""mellic"",
            ""permissibly"",
            ""impressibly"",
            ""replan"",
            ""parnel"",
            ""planer"",
            ""porphyrous"",
            ""pyrophorus"",
            ""dowery"",
            ""odwyer""
        ],
        ""solution"": [
            [
                ""becater"",
                ""betrace""
            ],
            [
                ""dowery"",
                ""odwyer""
            ],
            [
                ""impressibly"",
                ""permissibly""
            ],
            [
                ""mellic"",
                ""micell""
            ],
            [
                ""parnel"",
                ""planer"",
                ""replan""
            ],
            [
                ""porphyrous"",
                ""pyrophorus""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
547,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""watershed"", ""drawsheet"", ""underdoes"", ""resounded"", ""psf"", ""fps"", ""soot"", ""oots"", ""avertin"", ""vitrean"", ""relower"", ""lowerer"", ""made"", ""emda"", ""mead"", ""edam""]
","[[""avertin"", ""vitrean""], [""drawsheet"", ""watershed""], [""edam"", ""emda"", ""made"", ""mead""], [""fps"", ""psf""], [""lowerer"", ""relower""], [""oots"", ""soot""], [""resounded"", ""underdoes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""watershed\"", \""drawsheet\"", \""underdoes\"", \""resounded\"", \""psf\"", \""fps\"", \""soot\"", \""oots\"", \""avertin\"", \""vitrean\"", \""relower\"", \""lowerer\"", \""made\"", \""emda\"", \""mead\"", \""edam\""]\n"",
    ""answer"": ""[[\""avertin\"", \""vitrean\""], [\""drawsheet\"", \""watershed\""], [\""edam\"", \""emda\"", \""made\"", \""mead\""], [\""fps\"", \""psf\""], [\""lowerer\"", \""relower\""], [\""oots\"", \""soot\""], [\""resounded\"", \""underdoes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 547,
        ""words"": [
            ""watershed"",
            ""drawsheet"",
            ""underdoes"",
            ""resounded"",
            ""psf"",
            ""fps"",
            ""soot"",
            ""oots"",
            ""avertin"",
            ""vitrean"",
            ""relower"",
            ""lowerer"",
            ""made"",
            ""emda"",
            ""mead"",
            ""edam""
        ],
        ""solution"": [
            [
                ""avertin"",
                ""vitrean""
            ],
            [
                ""drawsheet"",
                ""watershed""
            ],
            [
                ""edam"",
                ""emda"",
                ""made"",
                ""mead""
            ],
            [
                ""fps"",
                ""psf""
            ],
            [
                ""lowerer"",
                ""relower""
            ],
            [
                ""oots"",
                ""soot""
            ],
            [
                ""resounded"",
                ""underdoes""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
548,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nogging"", ""gonging"", ""complicate"", ""compactile"", ""wreaking"", ""rewaking"", ""loange"", ""engaol"", ""angelo"", ""syriasm"", ""missary"", ""logopedic"", ""pedologic"", ""sarcolemmic"", ""commercials"", ""recluse"", ""luceres"", ""bubal"", ""babul"", ""neology"", ""enology""]
","[[""angelo"", ""engaol"", ""loange""], [""babul"", ""bubal""], [""commercials"", ""sarcolemmic""], [""compactile"", ""complicate""], [""enology"", ""neology""], [""gonging"", ""nogging""], [""logopedic"", ""pedologic""], [""luceres"", ""recluse""], [""missary"", ""syriasm""], [""rewaking"", ""wreaking""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nogging\"", \""gonging\"", \""complicate\"", \""compactile\"", \""wreaking\"", \""rewaking\"", \""loange\"", \""engaol\"", \""angelo\"", \""syriasm\"", \""missary\"", \""logopedic\"", \""pedologic\"", \""sarcolemmic\"", \""commercials\"", \""recluse\"", \""luceres\"", \""bubal\"", \""babul\"", \""neology\"", \""enology\""]\n"",
    ""answer"": ""[[\""angelo\"", \""engaol\"", \""loange\""], [\""babul\"", \""bubal\""], [\""commercials\"", \""sarcolemmic\""], [\""compactile\"", \""complicate\""], [\""enology\"", \""neology\""], [\""gonging\"", \""nogging\""], [\""logopedic\"", \""pedologic\""], [\""luceres\"", \""recluse\""], [\""missary\"", \""syriasm\""], [\""rewaking\"", \""wreaking\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 548,
        ""words"": [
            ""nogging"",
            ""gonging"",
            ""complicate"",
            ""compactile"",
            ""wreaking"",
            ""rewaking"",
            ""loange"",
            ""engaol"",
            ""angelo"",
            ""syriasm"",
            ""missary"",
            ""logopedic"",
            ""pedologic"",
            ""sarcolemmic"",
            ""commercials"",
            ""recluse"",
            ""luceres"",
            ""bubal"",
            ""babul"",
            ""neology"",
            ""enology""
        ],
        ""solution"": [
            [
                ""angelo"",
                ""engaol"",
                ""loange""
            ],
            [
                ""babul"",
                ""bubal""
            ],
            [
                ""commercials"",
                ""sarcolemmic""
            ],
            [
                ""compactile"",
                ""complicate""
            ],
            [
                ""enology"",
                ""neology""
            ],
            [
                ""gonging"",
                ""nogging""
            ],
            [
                ""logopedic"",
                ""pedologic""
            ],
            [
                ""luceres"",
                ""recluse""
            ],
            [
                ""missary"",
                ""syriasm""
            ],
            [
                ""rewaking"",
                ""wreaking""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
549,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bryon"", ""byron"", ""scoff"", ""coffs""]
","[[""bryon"", ""byron""], [""coffs"", ""scoff""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bryon\"", \""byron\"", \""scoff\"", \""coffs\""]\n"",
    ""answer"": ""[[\""bryon\"", \""byron\""], [\""coffs\"", \""scoff\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 549,
        ""words"": [
            ""bryon"",
            ""byron"",
            ""scoff"",
            ""coffs""
        ],
        ""solution"": [
            [
                ""bryon"",
                ""byron""
            ],
            [
                ""coffs"",
                ""scoff""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
550,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""notour"", ""unroot"", ""trepan"", ""arpent"", ""sacbut"", ""subact"", ""carapine"", ""carpaine"", ""rever"", ""verre""]
","[[""arpent"", ""trepan""], [""carapine"", ""carpaine""], [""notour"", ""unroot""], [""rever"", ""verre""], [""sacbut"", ""subact""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""notour\"", \""unroot\"", \""trepan\"", \""arpent\"", \""sacbut\"", \""subact\"", \""carapine\"", \""carpaine\"", \""rever\"", \""verre\""]\n"",
    ""answer"": ""[[\""arpent\"", \""trepan\""], [\""carapine\"", \""carpaine\""], [\""notour\"", \""unroot\""], [\""rever\"", \""verre\""], [\""sacbut\"", \""subact\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 550,
        ""words"": [
            ""notour"",
            ""unroot"",
            ""trepan"",
            ""arpent"",
            ""sacbut"",
            ""subact"",
            ""carapine"",
            ""carpaine"",
            ""rever"",
            ""verre""
        ],
        ""solution"": [
            [
                ""arpent"",
                ""trepan""
            ],
            [
                ""carapine"",
                ""carpaine""
            ],
            [
                ""notour"",
                ""unroot""
            ],
            [
                ""rever"",
                ""verre""
            ],
            [
                ""sacbut"",
                ""subact""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
551,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""workup"", ""upwork"", ""fulmars"", ""armfuls"", ""armsful"", ""coffs"", ""scoff"", ""remuster"", ""musterer"", ""octave"", ""avocet"", ""vocate"", ""yeuks"", ""sukey"", ""pilin"", ""lipin"", ""kakas"", ""kaska"", ""commander"", ""recommand"", ""sorbing"", ""borings""]
","[[""armfuls"", ""armsful"", ""fulmars""], [""avocet"", ""octave"", ""vocate""], [""borings"", ""sorbing""], [""coffs"", ""scoff""], [""commander"", ""recommand""], [""kakas"", ""kaska""], [""lipin"", ""pilin""], [""musterer"", ""remuster""], [""sukey"", ""yeuks""], [""upwork"", ""workup""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""workup\"", \""upwork\"", \""fulmars\"", \""armfuls\"", \""armsful\"", \""coffs\"", \""scoff\"", \""remuster\"", \""musterer\"", \""octave\"", \""avocet\"", \""vocate\"", \""yeuks\"", \""sukey\"", \""pilin\"", \""lipin\"", \""kakas\"", \""kaska\"", \""commander\"", \""recommand\"", \""sorbing\"", \""borings\""]\n"",
    ""answer"": ""[[\""armfuls\"", \""armsful\"", \""fulmars\""], [\""avocet\"", \""octave\"", \""vocate\""], [\""borings\"", \""sorbing\""], [\""coffs\"", \""scoff\""], [\""commander\"", \""recommand\""], [\""kakas\"", \""kaska\""], [\""lipin\"", \""pilin\""], [\""musterer\"", \""remuster\""], [\""sukey\"", \""yeuks\""], [\""upwork\"", \""workup\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 551,
        ""words"": [
            ""workup"",
            ""upwork"",
            ""fulmars"",
            ""armfuls"",
            ""armsful"",
            ""coffs"",
            ""scoff"",
            ""remuster"",
            ""musterer"",
            ""octave"",
            ""avocet"",
            ""vocate"",
            ""yeuks"",
            ""sukey"",
            ""pilin"",
            ""lipin"",
            ""kakas"",
            ""kaska"",
            ""commander"",
            ""recommand"",
            ""sorbing"",
            ""borings""
        ],
        ""solution"": [
            [
                ""armfuls"",
                ""armsful"",
                ""fulmars""
            ],
            [
                ""avocet"",
                ""octave"",
                ""vocate""
            ],
            [
                ""borings"",
                ""sorbing""
            ],
            [
                ""coffs"",
                ""scoff""
            ],
            [
                ""commander"",
                ""recommand""
            ],
            [
                ""kakas"",
                ""kaska""
            ],
            [
                ""lipin"",
                ""pilin""
            ],
            [
                ""musterer"",
                ""remuster""
            ],
            [
                ""sukey"",
                ""yeuks""
            ],
            [
                ""upwork"",
                ""workup""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
552,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""axin"", ""xina"", ""anapnea"", ""napaean"", ""grassie"", ""graisse"", ""gassier"", ""concertion"", ""concretion"", ""lank"", ""klan"", ""chondroarthritis"", ""arthrochondritis""]
","[[""anapnea"", ""napaean""], [""arthrochondritis"", ""chondroarthritis""], [""axin"", ""xina""], [""concertion"", ""concretion""], [""gassier"", ""graisse"", ""grassie""], [""klan"", ""lank""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""axin\"", \""xina\"", \""anapnea\"", \""napaean\"", \""grassie\"", \""graisse\"", \""gassier\"", \""concertion\"", \""concretion\"", \""lank\"", \""klan\"", \""chondroarthritis\"", \""arthrochondritis\""]\n"",
    ""answer"": ""[[\""anapnea\"", \""napaean\""], [\""arthrochondritis\"", \""chondroarthritis\""], [\""axin\"", \""xina\""], [\""concertion\"", \""concretion\""], [\""gassier\"", \""graisse\"", \""grassie\""], [\""klan\"", \""lank\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 552,
        ""words"": [
            ""axin"",
            ""xina"",
            ""anapnea"",
            ""napaean"",
            ""grassie"",
            ""graisse"",
            ""gassier"",
            ""concertion"",
            ""concretion"",
            ""lank"",
            ""klan"",
            ""chondroarthritis"",
            ""arthrochondritis""
        ],
        ""solution"": [
            [
                ""anapnea"",
                ""napaean""
            ],
            [
                ""arthrochondritis"",
                ""chondroarthritis""
            ],
            [
                ""axin"",
                ""xina""
            ],
            [
                ""concertion"",
                ""concretion""
            ],
            [
                ""gassier"",
                ""graisse"",
                ""grassie""
            ],
            [
                ""klan"",
                ""lank""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
553,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ticunan"", ""tunican"", ""annicut"", ""oniomania"", ""oinomania""]
","[[""annicut"", ""ticunan"", ""tunican""], [""oinomania"", ""oniomania""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ticunan\"", \""tunican\"", \""annicut\"", \""oniomania\"", \""oinomania\""]\n"",
    ""answer"": ""[[\""annicut\"", \""ticunan\"", \""tunican\""], [\""oinomania\"", \""oniomania\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 553,
        ""words"": [
            ""ticunan"",
            ""tunican"",
            ""annicut"",
            ""oniomania"",
            ""oinomania""
        ],
        ""solution"": [
            [
                ""annicut"",
                ""ticunan"",
                ""tunican""
            ],
            [
                ""oinomania"",
                ""oniomania""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
554,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""arrondi"", ""randori"", ""ordinar"", ""perceptually"", ""preceptually"", ""kanagi"", ""kainga"", ""devaul"", ""valued"", ""cinemas"", ""amnesic"", ""nomarchy"", ""monarchy""]
","[[""amnesic"", ""cinemas""], [""arrondi"", ""ordinar"", ""randori""], [""devaul"", ""valued""], [""kainga"", ""kanagi""], [""monarchy"", ""nomarchy""], [""perceptually"", ""preceptually""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""arrondi\"", \""randori\"", \""ordinar\"", \""perceptually\"", \""preceptually\"", \""kanagi\"", \""kainga\"", \""devaul\"", \""valued\"", \""cinemas\"", \""amnesic\"", \""nomarchy\"", \""monarchy\""]\n"",
    ""answer"": ""[[\""amnesic\"", \""cinemas\""], [\""arrondi\"", \""ordinar\"", \""randori\""], [\""devaul\"", \""valued\""], [\""kainga\"", \""kanagi\""], [\""monarchy\"", \""nomarchy\""], [\""perceptually\"", \""preceptually\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 554,
        ""words"": [
            ""arrondi"",
            ""randori"",
            ""ordinar"",
            ""perceptually"",
            ""preceptually"",
            ""kanagi"",
            ""kainga"",
            ""devaul"",
            ""valued"",
            ""cinemas"",
            ""amnesic"",
            ""nomarchy"",
            ""monarchy""
        ],
        ""solution"": [
            [
                ""amnesic"",
                ""cinemas""
            ],
            [
                ""arrondi"",
                ""ordinar"",
                ""randori""
            ],
            [
                ""devaul"",
                ""valued""
            ],
            [
                ""kainga"",
                ""kanagi""
            ],
            [
                ""monarchy"",
                ""nomarchy""
            ],
            [
                ""perceptually"",
                ""preceptually""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
555,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""serials"", ""resails"", ""sailers"", ""airless"", ""serails"", ""unlimed"", ""lumined"", ""heptarchies"", ""teachership"", ""goupen"", ""gepoun"", ""hulled"", ""dehull"", ""tenet"", ""entte"", ""clistothcia"", ""catholicist""]
","[[""airless"", ""resails"", ""sailers"", ""serails"", ""serials""], [""catholicist"", ""clistothcia""], [""dehull"", ""hulled""], [""entte"", ""tenet""], [""gepoun"", ""goupen""], [""heptarchies"", ""teachership""], [""lumined"", ""unlimed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""serials\"", \""resails\"", \""sailers\"", \""airless\"", \""serails\"", \""unlimed\"", \""lumined\"", \""heptarchies\"", \""teachership\"", \""goupen\"", \""gepoun\"", \""hulled\"", \""dehull\"", \""tenet\"", \""entte\"", \""clistothcia\"", \""catholicist\""]\n"",
    ""answer"": ""[[\""airless\"", \""resails\"", \""sailers\"", \""serails\"", \""serials\""], [\""catholicist\"", \""clistothcia\""], [\""dehull\"", \""hulled\""], [\""entte\"", \""tenet\""], [\""gepoun\"", \""goupen\""], [\""heptarchies\"", \""teachership\""], [\""lumined\"", \""unlimed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 555,
        ""words"": [
            ""serials"",
            ""resails"",
            ""sailers"",
            ""airless"",
            ""serails"",
            ""unlimed"",
            ""lumined"",
            ""heptarchies"",
            ""teachership"",
            ""goupen"",
            ""gepoun"",
            ""hulled"",
            ""dehull"",
            ""tenet"",
            ""entte"",
            ""clistothcia"",
            ""catholicist""
        ],
        ""solution"": [
            [
                ""airless"",
                ""resails"",
                ""sailers"",
                ""serails"",
                ""serials""
            ],
            [
                ""catholicist"",
                ""clistothcia""
            ],
            [
                ""dehull"",
                ""hulled""
            ],
            [
                ""entte"",
                ""tenet""
            ],
            [
                ""gepoun"",
                ""goupen""
            ],
            [
                ""heptarchies"",
                ""teachership""
            ],
            [
                ""lumined"",
                ""unlimed""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
556,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""conatus"", ""toucans"", ""camias"", ""camisa"", ""admits"", ""datism"", ""amidst"", ""unhayed"", ""unheady"", ""cresolin"", ""incloser"", ""licensor"", ""wheal"", ""halwe"", ""rasion"", ""orians"", ""sonrai"", ""arsino"", ""norias"", ""staked"", ""tasked""]
","[[""admits"", ""amidst"", ""datism""], [""arsino"", ""norias"", ""orians"", ""rasion"", ""sonrai""], [""camias"", ""camisa""], [""conatus"", ""toucans""], [""cresolin"", ""incloser"", ""licensor""], [""halwe"", ""wheal""], [""staked"", ""tasked""], [""unhayed"", ""unheady""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""conatus\"", \""toucans\"", \""camias\"", \""camisa\"", \""admits\"", \""datism\"", \""amidst\"", \""unhayed\"", \""unheady\"", \""cresolin\"", \""incloser\"", \""licensor\"", \""wheal\"", \""halwe\"", \""rasion\"", \""orians\"", \""sonrai\"", \""arsino\"", \""norias\"", \""staked\"", \""tasked\""]\n"",
    ""answer"": ""[[\""admits\"", \""amidst\"", \""datism\""], [\""arsino\"", \""norias\"", \""orians\"", \""rasion\"", \""sonrai\""], [\""camias\"", \""camisa\""], [\""conatus\"", \""toucans\""], [\""cresolin\"", \""incloser\"", \""licensor\""], [\""halwe\"", \""wheal\""], [\""staked\"", \""tasked\""], [\""unhayed\"", \""unheady\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 556,
        ""words"": [
            ""conatus"",
            ""toucans"",
            ""camias"",
            ""camisa"",
            ""admits"",
            ""datism"",
            ""amidst"",
            ""unhayed"",
            ""unheady"",
            ""cresolin"",
            ""incloser"",
            ""licensor"",
            ""wheal"",
            ""halwe"",
            ""rasion"",
            ""orians"",
            ""sonrai"",
            ""arsino"",
            ""norias"",
            ""staked"",
            ""tasked""
        ],
        ""solution"": [
            [
                ""admits"",
                ""amidst"",
                ""datism""
            ],
            [
                ""arsino"",
                ""norias"",
                ""orians"",
                ""rasion"",
                ""sonrai""
            ],
            [
                ""camias"",
                ""camisa""
            ],
            [
                ""conatus"",
                ""toucans""
            ],
            [
                ""cresolin"",
                ""incloser"",
                ""licensor""
            ],
            [
                ""halwe"",
                ""wheal""
            ],
            [
                ""staked"",
                ""tasked""
            ],
            [
                ""unhayed"",
                ""unheady""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
557,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""waddy"", ""dawdy"", ""safrole"", ""loafers"", ""pacation"", ""copatain""]
","[[""copatain"", ""pacation""], [""dawdy"", ""waddy""], [""loafers"", ""safrole""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""waddy\"", \""dawdy\"", \""safrole\"", \""loafers\"", \""pacation\"", \""copatain\""]\n"",
    ""answer"": ""[[\""copatain\"", \""pacation\""], [\""dawdy\"", \""waddy\""], [\""loafers\"", \""safrole\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 557,
        ""words"": [
            ""waddy"",
            ""dawdy"",
            ""safrole"",
            ""loafers"",
            ""pacation"",
            ""copatain""
        ],
        ""solution"": [
            [
                ""copatain"",
                ""pacation""
            ],
            [
                ""dawdy"",
                ""waddy""
            ],
            [
                ""loafers"",
                ""safrole""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
558,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""almander"", ""malander"", ""alderman"", ""weakish"", ""hawkies""]
","[[""alderman"", ""almander"", ""malander""], [""hawkies"", ""weakish""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""almander\"", \""malander\"", \""alderman\"", \""weakish\"", \""hawkies\""]\n"",
    ""answer"": ""[[\""alderman\"", \""almander\"", \""malander\""], [\""hawkies\"", \""weakish\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 558,
        ""words"": [
            ""almander"",
            ""malander"",
            ""alderman"",
            ""weakish"",
            ""hawkies""
        ],
        ""solution"": [
            [
                ""alderman"",
                ""almander"",
                ""malander""
            ],
            [
                ""hawkies"",
                ""weakish""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
559,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dink"", ""kind"", ""gigantical"", ""glaciating"", ""aristas"", ""tarsias"", ""ipidae"", ""epidia"", ""wordily"", ""rowdily"", ""assisted"", ""disseats"", ""sanies"", ""anesis"", ""biatomic"", ""moabitic"", ""melanic"", ""cnemial"", ""theorbo"", ""boother""]
","[[""anesis"", ""sanies""], [""aristas"", ""tarsias""], [""assisted"", ""disseats""], [""biatomic"", ""moabitic""], [""boother"", ""theorbo""], [""cnemial"", ""melanic""], [""dink"", ""kind""], [""epidia"", ""ipidae""], [""gigantical"", ""glaciating""], [""rowdily"", ""wordily""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dink\"", \""kind\"", \""gigantical\"", \""glaciating\"", \""aristas\"", \""tarsias\"", \""ipidae\"", \""epidia\"", \""wordily\"", \""rowdily\"", \""assisted\"", \""disseats\"", \""sanies\"", \""anesis\"", \""biatomic\"", \""moabitic\"", \""melanic\"", \""cnemial\"", \""theorbo\"", \""boother\""]\n"",
    ""answer"": ""[[\""anesis\"", \""sanies\""], [\""aristas\"", \""tarsias\""], [\""assisted\"", \""disseats\""], [\""biatomic\"", \""moabitic\""], [\""boother\"", \""theorbo\""], [\""cnemial\"", \""melanic\""], [\""dink\"", \""kind\""], [\""epidia\"", \""ipidae\""], [\""gigantical\"", \""glaciating\""], [\""rowdily\"", \""wordily\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 559,
        ""words"": [
            ""dink"",
            ""kind"",
            ""gigantical"",
            ""glaciating"",
            ""aristas"",
            ""tarsias"",
            ""ipidae"",
            ""epidia"",
            ""wordily"",
            ""rowdily"",
            ""assisted"",
            ""disseats"",
            ""sanies"",
            ""anesis"",
            ""biatomic"",
            ""moabitic"",
            ""melanic"",
            ""cnemial"",
            ""theorbo"",
            ""boother""
        ],
        ""solution"": [
            [
                ""anesis"",
                ""sanies""
            ],
            [
                ""aristas"",
                ""tarsias""
            ],
            [
                ""assisted"",
                ""disseats""
            ],
            [
                ""biatomic"",
                ""moabitic""
            ],
            [
                ""boother"",
                ""theorbo""
            ],
            [
                ""cnemial"",
                ""melanic""
            ],
            [
                ""dink"",
                ""kind""
            ],
            [
                ""epidia"",
                ""ipidae""
            ],
            [
                ""gigantical"",
                ""glaciating""
            ],
            [
                ""rowdily"",
                ""wordily""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
560,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fastback"", ""fatbacks"", ""girths"", ""rights"", ""griths"", ""beld"", ""bdle"", ""bled""]
","[[""bdle"", ""beld"", ""bled""], [""fastback"", ""fatbacks""], [""girths"", ""griths"", ""rights""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fastback\"", \""fatbacks\"", \""girths\"", \""rights\"", \""griths\"", \""beld\"", \""bdle\"", \""bled\""]\n"",
    ""answer"": ""[[\""bdle\"", \""beld\"", \""bled\""], [\""fastback\"", \""fatbacks\""], [\""girths\"", \""griths\"", \""rights\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 560,
        ""words"": [
            ""fastback"",
            ""fatbacks"",
            ""girths"",
            ""rights"",
            ""griths"",
            ""beld"",
            ""bdle"",
            ""bled""
        ],
        ""solution"": [
            [
                ""bdle"",
                ""beld"",
                ""bled""
            ],
            [
                ""fastback"",
                ""fatbacks""
            ],
            [
                ""girths"",
                ""griths"",
                ""rights""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
561,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""intermede"", ""determine"", ""def"", ""fed"", ""makers"", ""remask"", ""masker"", ""primos"", ""porism"", ""anisettes"", ""tetanises"", ""semens"", ""semsen"", ""menses"", ""fp"", ""pf""]
","[[""anisettes"", ""tetanises""], [""def"", ""fed""], [""determine"", ""intermede""], [""fp"", ""pf""], [""makers"", ""masker"", ""remask""], [""menses"", ""semens"", ""semsen""], [""porism"", ""primos""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""intermede\"", \""determine\"", \""def\"", \""fed\"", \""makers\"", \""remask\"", \""masker\"", \""primos\"", \""porism\"", \""anisettes\"", \""tetanises\"", \""semens\"", \""semsen\"", \""menses\"", \""fp\"", \""pf\""]\n"",
    ""answer"": ""[[\""anisettes\"", \""tetanises\""], [\""def\"", \""fed\""], [\""determine\"", \""intermede\""], [\""fp\"", \""pf\""], [\""makers\"", \""masker\"", \""remask\""], [\""menses\"", \""semens\"", \""semsen\""], [\""porism\"", \""primos\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 561,
        ""words"": [
            ""intermede"",
            ""determine"",
            ""def"",
            ""fed"",
            ""makers"",
            ""remask"",
            ""masker"",
            ""primos"",
            ""porism"",
            ""anisettes"",
            ""tetanises"",
            ""semens"",
            ""semsen"",
            ""menses"",
            ""fp"",
            ""pf""
        ],
        ""solution"": [
            [
                ""anisettes"",
                ""tetanises""
            ],
            [
                ""def"",
                ""fed""
            ],
            [
                ""determine"",
                ""intermede""
            ],
            [
                ""fp"",
                ""pf""
            ],
            [
                ""makers"",
                ""masker"",
                ""remask""
            ],
            [
                ""menses"",
                ""semens"",
                ""semsen""
            ],
            [
                ""porism"",
                ""primos""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
562,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""faucet"", ""fucate"", ""misperform"", ""preformism"", ""langeel"", ""leelang"", ""boopis"", ""obispo""]
","[[""boopis"", ""obispo""], [""faucet"", ""fucate""], [""langeel"", ""leelang""], [""misperform"", ""preformism""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""faucet\"", \""fucate\"", \""misperform\"", \""preformism\"", \""langeel\"", \""leelang\"", \""boopis\"", \""obispo\""]\n"",
    ""answer"": ""[[\""boopis\"", \""obispo\""], [\""faucet\"", \""fucate\""], [\""langeel\"", \""leelang\""], [\""misperform\"", \""preformism\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 562,
        ""words"": [
            ""faucet"",
            ""fucate"",
            ""misperform"",
            ""preformism"",
            ""langeel"",
            ""leelang"",
            ""boopis"",
            ""obispo""
        ],
        ""solution"": [
            [
                ""boopis"",
                ""obispo""
            ],
            [
                ""faucet"",
                ""fucate""
            ],
            [
                ""langeel"",
                ""leelang""
            ],
            [
                ""misperform"",
                ""preformism""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
563,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gendered"", ""degender"", ""tritely"", ""littery"", ""gittern"", ""retting"", ""gritten"", ""urometer"", ""outremer"", ""eyen"", ""eyne"", ""caca"", ""acca"", ""centena"", ""canteen""]
","[[""acca"", ""caca""], [""canteen"", ""centena""], [""degender"", ""gendered""], [""eyen"", ""eyne""], [""gittern"", ""gritten"", ""retting""], [""littery"", ""tritely""], [""outremer"", ""urometer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gendered\"", \""degender\"", \""tritely\"", \""littery\"", \""gittern\"", \""retting\"", \""gritten\"", \""urometer\"", \""outremer\"", \""eyen\"", \""eyne\"", \""caca\"", \""acca\"", \""centena\"", \""canteen\""]\n"",
    ""answer"": ""[[\""acca\"", \""caca\""], [\""canteen\"", \""centena\""], [\""degender\"", \""gendered\""], [\""eyen\"", \""eyne\""], [\""gittern\"", \""gritten\"", \""retting\""], [\""littery\"", \""tritely\""], [\""outremer\"", \""urometer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 563,
        ""words"": [
            ""gendered"",
            ""degender"",
            ""tritely"",
            ""littery"",
            ""gittern"",
            ""retting"",
            ""gritten"",
            ""urometer"",
            ""outremer"",
            ""eyen"",
            ""eyne"",
            ""caca"",
            ""acca"",
            ""centena"",
            ""canteen""
        ],
        ""solution"": [
            [
                ""acca"",
                ""caca""
            ],
            [
                ""canteen"",
                ""centena""
            ],
            [
                ""degender"",
                ""gendered""
            ],
            [
                ""eyen"",
                ""eyne""
            ],
            [
                ""gittern"",
                ""gritten"",
                ""retting""
            ],
            [
                ""littery"",
                ""tritely""
            ],
            [
                ""outremer"",
                ""urometer""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
564,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""luba"", ""balu"", ""bual"", ""bootes"", ""besoot"", ""pickler"", ""prickle"", ""awn"", ""wan"", ""naw"", ""berated"", ""betread"", ""tabered"", ""rebated"", ""debater"", ""mentor"", ""metron"", ""montre"", ""tormen"", ""termon"", ""cleach"", ""calche"", ""paillard"", ""palliard""]
","[[""awn"", ""naw"", ""wan""], [""balu"", ""bual"", ""luba""], [""berated"", ""betread"", ""debater"", ""rebated"", ""tabered""], [""besoot"", ""bootes""], [""calche"", ""cleach""], [""mentor"", ""metron"", ""montre"", ""termon"", ""tormen""], [""paillard"", ""palliard""], [""pickler"", ""prickle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""luba\"", \""balu\"", \""bual\"", \""bootes\"", \""besoot\"", \""pickler\"", \""prickle\"", \""awn\"", \""wan\"", \""naw\"", \""berated\"", \""betread\"", \""tabered\"", \""rebated\"", \""debater\"", \""mentor\"", \""metron\"", \""montre\"", \""tormen\"", \""termon\"", \""cleach\"", \""calche\"", \""paillard\"", \""palliard\""]\n"",
    ""answer"": ""[[\""awn\"", \""naw\"", \""wan\""], [\""balu\"", \""bual\"", \""luba\""], [\""berated\"", \""betread\"", \""debater\"", \""rebated\"", \""tabered\""], [\""besoot\"", \""bootes\""], [\""calche\"", \""cleach\""], [\""mentor\"", \""metron\"", \""montre\"", \""termon\"", \""tormen\""], [\""paillard\"", \""palliard\""], [\""pickler\"", \""prickle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 564,
        ""words"": [
            ""luba"",
            ""balu"",
            ""bual"",
            ""bootes"",
            ""besoot"",
            ""pickler"",
            ""prickle"",
            ""awn"",
            ""wan"",
            ""naw"",
            ""berated"",
            ""betread"",
            ""tabered"",
            ""rebated"",
            ""debater"",
            ""mentor"",
            ""metron"",
            ""montre"",
            ""tormen"",
            ""termon"",
            ""cleach"",
            ""calche"",
            ""paillard"",
            ""palliard""
        ],
        ""solution"": [
            [
                ""awn"",
                ""naw"",
                ""wan""
            ],
            [
                ""balu"",
                ""bual"",
                ""luba""
            ],
            [
                ""berated"",
                ""betread"",
                ""debater"",
                ""rebated"",
                ""tabered""
            ],
            [
                ""besoot"",
                ""bootes""
            ],
            [
                ""calche"",
                ""cleach""
            ],
            [
                ""mentor"",
                ""metron"",
                ""montre"",
                ""termon"",
                ""tormen""
            ],
            [
                ""paillard"",
                ""palliard""
            ],
            [
                ""pickler"",
                ""prickle""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
565,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""braehead"", ""barehead"", ""epocha"", ""cheapo"", ""legume"", ""emulge""]
","[[""barehead"", ""braehead""], [""cheapo"", ""epocha""], [""emulge"", ""legume""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""braehead\"", \""barehead\"", \""epocha\"", \""cheapo\"", \""legume\"", \""emulge\""]\n"",
    ""answer"": ""[[\""barehead\"", \""braehead\""], [\""cheapo\"", \""epocha\""], [\""emulge\"", \""legume\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 565,
        ""words"": [
            ""braehead"",
            ""barehead"",
            ""epocha"",
            ""cheapo"",
            ""legume"",
            ""emulge""
        ],
        ""solution"": [
            [
                ""barehead"",
                ""braehead""
            ],
            [
                ""cheapo"",
                ""epocha""
            ],
            [
                ""emulge"",
                ""legume""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
566,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""trama"", ""matra"", ""puttoo"", ""outtop"", ""seq"", ""esq""]
","[[""esq"", ""seq""], [""matra"", ""trama""], [""outtop"", ""puttoo""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""trama\"", \""matra\"", \""puttoo\"", \""outtop\"", \""seq\"", \""esq\""]\n"",
    ""answer"": ""[[\""esq\"", \""seq\""], [\""matra\"", \""trama\""], [\""outtop\"", \""puttoo\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 566,
        ""words"": [
            ""trama"",
            ""matra"",
            ""puttoo"",
            ""outtop"",
            ""seq"",
            ""esq""
        ],
        ""solution"": [
            [
                ""esq"",
                ""seq""
            ],
            [
                ""matra"",
                ""trama""
            ],
            [
                ""outtop"",
                ""puttoo""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
567,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""declaimer"", ""demiracle"", ""reclaimed"", ""asop"", ""soap"", ""sapo"", ""paso""]
","[[""asop"", ""paso"", ""sapo"", ""soap""], [""declaimer"", ""demiracle"", ""reclaimed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""declaimer\"", \""demiracle\"", \""reclaimed\"", \""asop\"", \""soap\"", \""sapo\"", \""paso\""]\n"",
    ""answer"": ""[[\""asop\"", \""paso\"", \""sapo\"", \""soap\""], [\""declaimer\"", \""demiracle\"", \""reclaimed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 567,
        ""words"": [
            ""declaimer"",
            ""demiracle"",
            ""reclaimed"",
            ""asop"",
            ""soap"",
            ""sapo"",
            ""paso""
        ],
        ""solution"": [
            [
                ""asop"",
                ""paso"",
                ""sapo"",
                ""soap""
            ],
            [
                ""declaimer"",
                ""demiracle"",
                ""reclaimed""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
568,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pedetes"", ""steeped"", ""deepest"", ""sporule"", ""leprous"", ""tenophyte"", ""entophyte"", ""balded"", ""bladed"", ""jebus"", ""jubes"", ""apportioned"", ""preadoption""]
","[[""apportioned"", ""preadoption""], [""balded"", ""bladed""], [""deepest"", ""pedetes"", ""steeped""], [""entophyte"", ""tenophyte""], [""jebus"", ""jubes""], [""leprous"", ""sporule""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pedetes\"", \""steeped\"", \""deepest\"", \""sporule\"", \""leprous\"", \""tenophyte\"", \""entophyte\"", \""balded\"", \""bladed\"", \""jebus\"", \""jubes\"", \""apportioned\"", \""preadoption\""]\n"",
    ""answer"": ""[[\""apportioned\"", \""preadoption\""], [\""balded\"", \""bladed\""], [\""deepest\"", \""pedetes\"", \""steeped\""], [\""entophyte\"", \""tenophyte\""], [\""jebus\"", \""jubes\""], [\""leprous\"", \""sporule\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 568,
        ""words"": [
            ""pedetes"",
            ""steeped"",
            ""deepest"",
            ""sporule"",
            ""leprous"",
            ""tenophyte"",
            ""entophyte"",
            ""balded"",
            ""bladed"",
            ""jebus"",
            ""jubes"",
            ""apportioned"",
            ""preadoption""
        ],
        ""solution"": [
            [
                ""apportioned"",
                ""preadoption""
            ],
            [
                ""balded"",
                ""bladed""
            ],
            [
                ""deepest"",
                ""pedetes"",
                ""steeped""
            ],
            [
                ""entophyte"",
                ""tenophyte""
            ],
            [
                ""jebus"",
                ""jubes""
            ],
            [
                ""leprous"",
                ""sporule""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
569,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""thymol"", ""mythol"", ""ik"", ""ki"", ""pharisee"", ""hesperia"", ""overcare"", ""overrace"", ""iago"", ""agio""]
","[[""agio"", ""iago""], [""hesperia"", ""pharisee""], [""ik"", ""ki""], [""mythol"", ""thymol""], [""overcare"", ""overrace""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""thymol\"", \""mythol\"", \""ik\"", \""ki\"", \""pharisee\"", \""hesperia\"", \""overcare\"", \""overrace\"", \""iago\"", \""agio\""]\n"",
    ""answer"": ""[[\""agio\"", \""iago\""], [\""hesperia\"", \""pharisee\""], [\""ik\"", \""ki\""], [\""mythol\"", \""thymol\""], [\""overcare\"", \""overrace\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 569,
        ""words"": [
            ""thymol"",
            ""mythol"",
            ""ik"",
            ""ki"",
            ""pharisee"",
            ""hesperia"",
            ""overcare"",
            ""overrace"",
            ""iago"",
            ""agio""
        ],
        ""solution"": [
            [
                ""agio"",
                ""iago""
            ],
            [
                ""hesperia"",
                ""pharisee""
            ],
            [
                ""ik"",
                ""ki""
            ],
            [
                ""mythol"",
                ""thymol""
            ],
            [
                ""overcare"",
                ""overrace""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
570,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nobleman"", ""blennoma"", ""leadline"", ""danielle"", ""hailed"", ""halide"", ""overmean"", ""overname"", ""conspue"", ""pounces"", ""exocarp"", ""praecox"", ""oolites"", ""stoolie"", ""kaj"", ""jak""]
","[[""blennoma"", ""nobleman""], [""conspue"", ""pounces""], [""danielle"", ""leadline""], [""exocarp"", ""praecox""], [""hailed"", ""halide""], [""jak"", ""kaj""], [""oolites"", ""stoolie""], [""overmean"", ""overname""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nobleman\"", \""blennoma\"", \""leadline\"", \""danielle\"", \""hailed\"", \""halide\"", \""overmean\"", \""overname\"", \""conspue\"", \""pounces\"", \""exocarp\"", \""praecox\"", \""oolites\"", \""stoolie\"", \""kaj\"", \""jak\""]\n"",
    ""answer"": ""[[\""blennoma\"", \""nobleman\""], [\""conspue\"", \""pounces\""], [\""danielle\"", \""leadline\""], [\""exocarp\"", \""praecox\""], [\""hailed\"", \""halide\""], [\""jak\"", \""kaj\""], [\""oolites\"", \""stoolie\""], [\""overmean\"", \""overname\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 570,
        ""words"": [
            ""nobleman"",
            ""blennoma"",
            ""leadline"",
            ""danielle"",
            ""hailed"",
            ""halide"",
            ""overmean"",
            ""overname"",
            ""conspue"",
            ""pounces"",
            ""exocarp"",
            ""praecox"",
            ""oolites"",
            ""stoolie"",
            ""kaj"",
            ""jak""
        ],
        ""solution"": [
            [
                ""blennoma"",
                ""nobleman""
            ],
            [
                ""conspue"",
                ""pounces""
            ],
            [
                ""danielle"",
                ""leadline""
            ],
            [
                ""exocarp"",
                ""praecox""
            ],
            [
                ""hailed"",
                ""halide""
            ],
            [
                ""jak"",
                ""kaj""
            ],
            [
                ""oolites"",
                ""stoolie""
            ],
            [
                ""overmean"",
                ""overname""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
571,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hippus"", ""uppish"", ""immersible"", ""semilimber"", ""identical"", ""ctenidial"", ""eprise"", ""peiser"", ""espier""]
","[[""ctenidial"", ""identical""], [""eprise"", ""espier"", ""peiser""], [""hippus"", ""uppish""], [""immersible"", ""semilimber""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hippus\"", \""uppish\"", \""immersible\"", \""semilimber\"", \""identical\"", \""ctenidial\"", \""eprise\"", \""peiser\"", \""espier\""]\n"",
    ""answer"": ""[[\""ctenidial\"", \""identical\""], [\""eprise\"", \""espier\"", \""peiser\""], [\""hippus\"", \""uppish\""], [\""immersible\"", \""semilimber\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 571,
        ""words"": [
            ""hippus"",
            ""uppish"",
            ""immersible"",
            ""semilimber"",
            ""identical"",
            ""ctenidial"",
            ""eprise"",
            ""peiser"",
            ""espier""
        ],
        ""solution"": [
            [
                ""ctenidial"",
                ""identical""
            ],
            [
                ""eprise"",
                ""espier"",
                ""peiser""
            ],
            [
                ""hippus"",
                ""uppish""
            ],
            [
                ""immersible"",
                ""semilimber""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
572,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ombrometric"", ""bromometric"", ""upsent"", ""unstep"", ""spilled"", ""dispell""]
","[[""bromometric"", ""ombrometric""], [""dispell"", ""spilled""], [""unstep"", ""upsent""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ombrometric\"", \""bromometric\"", \""upsent\"", \""unstep\"", \""spilled\"", \""dispell\""]\n"",
    ""answer"": ""[[\""bromometric\"", \""ombrometric\""], [\""dispell\"", \""spilled\""], [\""unstep\"", \""upsent\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 572,
        ""words"": [
            ""ombrometric"",
            ""bromometric"",
            ""upsent"",
            ""unstep"",
            ""spilled"",
            ""dispell""
        ],
        ""solution"": [
            [
                ""bromometric"",
                ""ombrometric""
            ],
            [
                ""dispell"",
                ""spilled""
            ],
            [
                ""unstep"",
                ""upsent""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
573,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""swagger"", ""waggers"", ""incgrporate"", ""procreating"", ""neocyte"", ""enocyte"", ""thyreogenous"", ""heterogynous""]
","[[""enocyte"", ""neocyte""], [""heterogynous"", ""thyreogenous""], [""incgrporate"", ""procreating""], [""swagger"", ""waggers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""swagger\"", \""waggers\"", \""incgrporate\"", \""procreating\"", \""neocyte\"", \""enocyte\"", \""thyreogenous\"", \""heterogynous\""]\n"",
    ""answer"": ""[[\""enocyte\"", \""neocyte\""], [\""heterogynous\"", \""thyreogenous\""], [\""incgrporate\"", \""procreating\""], [\""swagger\"", \""waggers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 573,
        ""words"": [
            ""swagger"",
            ""waggers"",
            ""incgrporate"",
            ""procreating"",
            ""neocyte"",
            ""enocyte"",
            ""thyreogenous"",
            ""heterogynous""
        ],
        ""solution"": [
            [
                ""enocyte"",
                ""neocyte""
            ],
            [
                ""heterogynous"",
                ""thyreogenous""
            ],
            [
                ""incgrporate"",
                ""procreating""
            ],
            [
                ""swagger"",
                ""waggers""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
574,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sclerodermite"", ""dermosclerite"", ""samlets"", ""matless""]
","[[""dermosclerite"", ""sclerodermite""], [""matless"", ""samlets""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sclerodermite\"", \""dermosclerite\"", \""samlets\"", \""matless\""]\n"",
    ""answer"": ""[[\""dermosclerite\"", \""sclerodermite\""], [\""matless\"", \""samlets\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 574,
        ""words"": [
            ""sclerodermite"",
            ""dermosclerite"",
            ""samlets"",
            ""matless""
        ],
        ""solution"": [
            [
                ""dermosclerite"",
                ""sclerodermite""
            ],
            [
                ""matless"",
                ""samlets""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
575,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pein"", ""pine"", ""pien"", ""mustanger"", ""argentums"", ""podiatry"", ""atrypoid""]
","[[""argentums"", ""mustanger""], [""atrypoid"", ""podiatry""], [""pein"", ""pien"", ""pine""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pein\"", \""pine\"", \""pien\"", \""mustanger\"", \""argentums\"", \""podiatry\"", \""atrypoid\""]\n"",
    ""answer"": ""[[\""argentums\"", \""mustanger\""], [\""atrypoid\"", \""podiatry\""], [\""pein\"", \""pien\"", \""pine\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 575,
        ""words"": [
            ""pein"",
            ""pine"",
            ""pien"",
            ""mustanger"",
            ""argentums"",
            ""podiatry"",
            ""atrypoid""
        ],
        ""solution"": [
            [
                ""argentums"",
                ""mustanger""
            ],
            [
                ""atrypoid"",
                ""podiatry""
            ],
            [
                ""pein"",
                ""pien"",
                ""pine""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
576,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sma"", ""sam"", ""mas"", ""withers"", ""swither"", ""whister"", ""brush"", ""buhrs"", ""shrub"", ""resinous"", ""neurosis""]
","[[""brush"", ""buhrs"", ""shrub""], [""mas"", ""sam"", ""sma""], [""neurosis"", ""resinous""], [""swither"", ""whister"", ""withers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sma\"", \""sam\"", \""mas\"", \""withers\"", \""swither\"", \""whister\"", \""brush\"", \""buhrs\"", \""shrub\"", \""resinous\"", \""neurosis\""]\n"",
    ""answer"": ""[[\""brush\"", \""buhrs\"", \""shrub\""], [\""mas\"", \""sam\"", \""sma\""], [\""neurosis\"", \""resinous\""], [\""swither\"", \""whister\"", \""withers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 576,
        ""words"": [
            ""sma"",
            ""sam"",
            ""mas"",
            ""withers"",
            ""swither"",
            ""whister"",
            ""brush"",
            ""buhrs"",
            ""shrub"",
            ""resinous"",
            ""neurosis""
        ],
        ""solution"": [
            [
                ""brush"",
                ""buhrs"",
                ""shrub""
            ],
            [
                ""mas"",
                ""sam"",
                ""sma""
            ],
            [
                ""neurosis"",
                ""resinous""
            ],
            [
                ""swither"",
                ""whister"",
                ""withers""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
577,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mias"", ""aims"", ""siam"", ""boonies"", ""besonio"", ""pilm"", ""limp"", ""plim"", ""pinhole"", ""lophine"", ""cassino"", ""casinos"", ""carrie"", ""racier""]
","[[""aims"", ""mias"", ""siam""], [""besonio"", ""boonies""], [""carrie"", ""racier""], [""casinos"", ""cassino""], [""limp"", ""pilm"", ""plim""], [""lophine"", ""pinhole""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mias\"", \""aims\"", \""siam\"", \""boonies\"", \""besonio\"", \""pilm\"", \""limp\"", \""plim\"", \""pinhole\"", \""lophine\"", \""cassino\"", \""casinos\"", \""carrie\"", \""racier\""]\n"",
    ""answer"": ""[[\""aims\"", \""mias\"", \""siam\""], [\""besonio\"", \""boonies\""], [\""carrie\"", \""racier\""], [\""casinos\"", \""cassino\""], [\""limp\"", \""pilm\"", \""plim\""], [\""lophine\"", \""pinhole\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 577,
        ""words"": [
            ""mias"",
            ""aims"",
            ""siam"",
            ""boonies"",
            ""besonio"",
            ""pilm"",
            ""limp"",
            ""plim"",
            ""pinhole"",
            ""lophine"",
            ""cassino"",
            ""casinos"",
            ""carrie"",
            ""racier""
        ],
        ""solution"": [
            [
                ""aims"",
                ""mias"",
                ""siam""
            ],
            [
                ""besonio"",
                ""boonies""
            ],
            [
                ""carrie"",
                ""racier""
            ],
            [
                ""casinos"",
                ""cassino""
            ],
            [
                ""limp"",
                ""pilm"",
                ""plim""
            ],
            [
                ""lophine"",
                ""pinhole""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
578,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""duretto"", ""tutored"", ""cornein"", ""neronic"", ""corinne"", ""cockers"", ""recocks"", ""pervader"", ""depraver"", ""couture"", ""outcure"", ""orbing"", ""boring"", ""robing"", ""descent"", ""scented"", ""recurtain"", ""unerratic"", ""misers"", ""remiss""]
","[[""boring"", ""orbing"", ""robing""], [""cockers"", ""recocks""], [""corinne"", ""cornein"", ""neronic""], [""couture"", ""outcure""], [""depraver"", ""pervader""], [""descent"", ""scented""], [""duretto"", ""tutored""], [""misers"", ""remiss""], [""recurtain"", ""unerratic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""duretto\"", \""tutored\"", \""cornein\"", \""neronic\"", \""corinne\"", \""cockers\"", \""recocks\"", \""pervader\"", \""depraver\"", \""couture\"", \""outcure\"", \""orbing\"", \""boring\"", \""robing\"", \""descent\"", \""scented\"", \""recurtain\"", \""unerratic\"", \""misers\"", \""remiss\""]\n"",
    ""answer"": ""[[\""boring\"", \""orbing\"", \""robing\""], [\""cockers\"", \""recocks\""], [\""corinne\"", \""cornein\"", \""neronic\""], [\""couture\"", \""outcure\""], [\""depraver\"", \""pervader\""], [\""descent\"", \""scented\""], [\""duretto\"", \""tutored\""], [\""misers\"", \""remiss\""], [\""recurtain\"", \""unerratic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 578,
        ""words"": [
            ""duretto"",
            ""tutored"",
            ""cornein"",
            ""neronic"",
            ""corinne"",
            ""cockers"",
            ""recocks"",
            ""pervader"",
            ""depraver"",
            ""couture"",
            ""outcure"",
            ""orbing"",
            ""boring"",
            ""robing"",
            ""descent"",
            ""scented"",
            ""recurtain"",
            ""unerratic"",
            ""misers"",
            ""remiss""
        ],
        ""solution"": [
            [
                ""boring"",
                ""orbing"",
                ""robing""
            ],
            [
                ""cockers"",
                ""recocks""
            ],
            [
                ""corinne"",
                ""cornein"",
                ""neronic""
            ],
            [
                ""couture"",
                ""outcure""
            ],
            [
                ""depraver"",
                ""pervader""
            ],
            [
                ""descent"",
                ""scented""
            ],
            [
                ""duretto"",
                ""tutored""
            ],
            [
                ""misers"",
                ""remiss""
            ],
            [
                ""recurtain"",
                ""unerratic""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
579,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lodestar"", ""delators"", ""leotards"", ""ledol"", ""odell"", ""atticism"", ""mastitic"", ""lurdane"", ""rundale"", ""launder"", ""de"", ""ed"", ""hospitaler"", ""trophesial"", ""ahab"", ""haab"", ""raddle"", ""larded"", ""ladder"", ""executioner"", ""reexecution"", ""bostangi"", ""boatings"", ""boasting""]
","[[""ahab"", ""haab""], [""atticism"", ""mastitic""], [""boasting"", ""boatings"", ""bostangi""], [""de"", ""ed""], [""delators"", ""leotards"", ""lodestar""], [""executioner"", ""reexecution""], [""hospitaler"", ""trophesial""], [""ladder"", ""larded"", ""raddle""], [""launder"", ""lurdane"", ""rundale""], [""ledol"", ""odell""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lodestar\"", \""delators\"", \""leotards\"", \""ledol\"", \""odell\"", \""atticism\"", \""mastitic\"", \""lurdane\"", \""rundale\"", \""launder\"", \""de\"", \""ed\"", \""hospitaler\"", \""trophesial\"", \""ahab\"", \""haab\"", \""raddle\"", \""larded\"", \""ladder\"", \""executioner\"", \""reexecution\"", \""bostangi\"", \""boatings\"", \""boasting\""]\n"",
    ""answer"": ""[[\""ahab\"", \""haab\""], [\""atticism\"", \""mastitic\""], [\""boasting\"", \""boatings\"", \""bostangi\""], [\""de\"", \""ed\""], [\""delators\"", \""leotards\"", \""lodestar\""], [\""executioner\"", \""reexecution\""], [\""hospitaler\"", \""trophesial\""], [\""ladder\"", \""larded\"", \""raddle\""], [\""launder\"", \""lurdane\"", \""rundale\""], [\""ledol\"", \""odell\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 579,
        ""words"": [
            ""lodestar"",
            ""delators"",
            ""leotards"",
            ""ledol"",
            ""odell"",
            ""atticism"",
            ""mastitic"",
            ""lurdane"",
            ""rundale"",
            ""launder"",
            ""de"",
            ""ed"",
            ""hospitaler"",
            ""trophesial"",
            ""ahab"",
            ""haab"",
            ""raddle"",
            ""larded"",
            ""ladder"",
            ""executioner"",
            ""reexecution"",
            ""bostangi"",
            ""boatings"",
            ""boasting""
        ],
        ""solution"": [
            [
                ""ahab"",
                ""haab""
            ],
            [
                ""atticism"",
                ""mastitic""
            ],
            [
                ""boasting"",
                ""boatings"",
                ""bostangi""
            ],
            [
                ""de"",
                ""ed""
            ],
            [
                ""delators"",
                ""leotards"",
                ""lodestar""
            ],
            [
                ""executioner"",
                ""reexecution""
            ],
            [
                ""hospitaler"",
                ""trophesial""
            ],
            [
                ""ladder"",
                ""larded"",
                ""raddle""
            ],
            [
                ""launder"",
                ""lurdane"",
                ""rundale""
            ],
            [
                ""ledol"",
                ""odell""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
580,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cainism"", ""misniac"", ""pilous"", ""poilus"", ""shiite"", ""histie"", ""trijet"", ""jitter"", ""savouriness"", ""variousness""]
","[[""cainism"", ""misniac""], [""histie"", ""shiite""], [""jitter"", ""trijet""], [""pilous"", ""poilus""], [""savouriness"", ""variousness""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cainism\"", \""misniac\"", \""pilous\"", \""poilus\"", \""shiite\"", \""histie\"", \""trijet\"", \""jitter\"", \""savouriness\"", \""variousness\""]\n"",
    ""answer"": ""[[\""cainism\"", \""misniac\""], [\""histie\"", \""shiite\""], [\""jitter\"", \""trijet\""], [\""pilous\"", \""poilus\""], [\""savouriness\"", \""variousness\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 580,
        ""words"": [
            ""cainism"",
            ""misniac"",
            ""pilous"",
            ""poilus"",
            ""shiite"",
            ""histie"",
            ""trijet"",
            ""jitter"",
            ""savouriness"",
            ""variousness""
        ],
        ""solution"": [
            [
                ""cainism"",
                ""misniac""
            ],
            [
                ""histie"",
                ""shiite""
            ],
            [
                ""jitter"",
                ""trijet""
            ],
            [
                ""pilous"",
                ""poilus""
            ],
            [
                ""savouriness"",
                ""variousness""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
581,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""assisa"", ""assais"", ""thorpes"", ""strophe"", ""separates"", ""asperates"", ""piteous"", ""poustie"", ""pushing"", ""gunship"", ""neurectopia"", ""eucatropine""]
","[[""asperates"", ""separates""], [""assais"", ""assisa""], [""eucatropine"", ""neurectopia""], [""gunship"", ""pushing""], [""piteous"", ""poustie""], [""strophe"", ""thorpes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""assisa\"", \""assais\"", \""thorpes\"", \""strophe\"", \""separates\"", \""asperates\"", \""piteous\"", \""poustie\"", \""pushing\"", \""gunship\"", \""neurectopia\"", \""eucatropine\""]\n"",
    ""answer"": ""[[\""asperates\"", \""separates\""], [\""assais\"", \""assisa\""], [\""eucatropine\"", \""neurectopia\""], [\""gunship\"", \""pushing\""], [\""piteous\"", \""poustie\""], [\""strophe\"", \""thorpes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 581,
        ""words"": [
            ""assisa"",
            ""assais"",
            ""thorpes"",
            ""strophe"",
            ""separates"",
            ""asperates"",
            ""piteous"",
            ""poustie"",
            ""pushing"",
            ""gunship"",
            ""neurectopia"",
            ""eucatropine""
        ],
        ""solution"": [
            [
                ""asperates"",
                ""separates""
            ],
            [
                ""assais"",
                ""assisa""
            ],
            [
                ""eucatropine"",
                ""neurectopia""
            ],
            [
                ""gunship"",
                ""pushing""
            ],
            [
                ""piteous"",
                ""poustie""
            ],
            [
                ""strophe"",
                ""thorpes""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
582,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""decenary"", ""carneyed"", ""jane"", ""jean"", ""psellism"", ""misspell"", ""doorbell"", ""bordello"", ""osmanie"", ""osamine"", ""anomies"", ""monesia"", ""reinsist"", ""insister"", ""sinister"", ""sisterin""]
","[[""anomies"", ""monesia"", ""osamine"", ""osmanie""], [""bordello"", ""doorbell""], [""carneyed"", ""decenary""], [""insister"", ""reinsist"", ""sinister"", ""sisterin""], [""jane"", ""jean""], [""misspell"", ""psellism""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""decenary\"", \""carneyed\"", \""jane\"", \""jean\"", \""psellism\"", \""misspell\"", \""doorbell\"", \""bordello\"", \""osmanie\"", \""osamine\"", \""anomies\"", \""monesia\"", \""reinsist\"", \""insister\"", \""sinister\"", \""sisterin\""]\n"",
    ""answer"": ""[[\""anomies\"", \""monesia\"", \""osamine\"", \""osmanie\""], [\""bordello\"", \""doorbell\""], [\""carneyed\"", \""decenary\""], [\""insister\"", \""reinsist\"", \""sinister\"", \""sisterin\""], [\""jane\"", \""jean\""], [\""misspell\"", \""psellism\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 582,
        ""words"": [
            ""decenary"",
            ""carneyed"",
            ""jane"",
            ""jean"",
            ""psellism"",
            ""misspell"",
            ""doorbell"",
            ""bordello"",
            ""osmanie"",
            ""osamine"",
            ""anomies"",
            ""monesia"",
            ""reinsist"",
            ""insister"",
            ""sinister"",
            ""sisterin""
        ],
        ""solution"": [
            [
                ""anomies"",
                ""monesia"",
                ""osamine"",
                ""osmanie""
            ],
            [
                ""bordello"",
                ""doorbell""
            ],
            [
                ""carneyed"",
                ""decenary""
            ],
            [
                ""insister"",
                ""reinsist"",
                ""sinister"",
                ""sisterin""
            ],
            [
                ""jane"",
                ""jean""
            ],
            [
                ""misspell"",
                ""psellism""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
583,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""kidney"", ""dinkey"", ""anc"", ""can"", ""manitu"", ""tumain"", ""utinam"", ""presimian"", ""mainprise"", ""glibness"", ""blessing"", ""beslings""]
","[[""anc"", ""can""], [""beslings"", ""blessing"", ""glibness""], [""dinkey"", ""kidney""], [""mainprise"", ""presimian""], [""manitu"", ""tumain"", ""utinam""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""kidney\"", \""dinkey\"", \""anc\"", \""can\"", \""manitu\"", \""tumain\"", \""utinam\"", \""presimian\"", \""mainprise\"", \""glibness\"", \""blessing\"", \""beslings\""]\n"",
    ""answer"": ""[[\""anc\"", \""can\""], [\""beslings\"", \""blessing\"", \""glibness\""], [\""dinkey\"", \""kidney\""], [\""mainprise\"", \""presimian\""], [\""manitu\"", \""tumain\"", \""utinam\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 583,
        ""words"": [
            ""kidney"",
            ""dinkey"",
            ""anc"",
            ""can"",
            ""manitu"",
            ""tumain"",
            ""utinam"",
            ""presimian"",
            ""mainprise"",
            ""glibness"",
            ""blessing"",
            ""beslings""
        ],
        ""solution"": [
            [
                ""anc"",
                ""can""
            ],
            [
                ""beslings"",
                ""blessing"",
                ""glibness""
            ],
            [
                ""dinkey"",
                ""kidney""
            ],
            [
                ""mainprise"",
                ""presimian""
            ],
            [
                ""manitu"",
                ""tumain"",
                ""utinam""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
584,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""semitone"", ""monetise"", ""eryhtrism"", ""erythrism""]
","[[""eryhtrism"", ""erythrism""], [""monetise"", ""semitone""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""semitone\"", \""monetise\"", \""eryhtrism\"", \""erythrism\""]\n"",
    ""answer"": ""[[\""eryhtrism\"", \""erythrism\""], [\""monetise\"", \""semitone\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 584,
        ""words"": [
            ""semitone"",
            ""monetise"",
            ""eryhtrism"",
            ""erythrism""
        ],
        ""solution"": [
            [
                ""eryhtrism"",
                ""erythrism""
            ],
            [
                ""monetise"",
                ""semitone""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
585,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tensive"", ""estevin"", ""stythe"", ""stethy"", ""tythes"", ""tethys"", ""rechristens"", ""christeners"", ""metrics"", ""cretism"", ""relevator"", ""veratrole"", ""ashling"", ""anglish"", ""litigants"", ""stingtail"", ""diazine"", ""dizaine"", ""carinas"", ""acrasin"", ""arnicas"", ""sarcina""]
","[[""acrasin"", ""arnicas"", ""carinas"", ""sarcina""], [""anglish"", ""ashling""], [""christeners"", ""rechristens""], [""cretism"", ""metrics""], [""diazine"", ""dizaine""], [""estevin"", ""tensive""], [""litigants"", ""stingtail""], [""relevator"", ""veratrole""], [""stethy"", ""stythe"", ""tethys"", ""tythes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tensive\"", \""estevin\"", \""stythe\"", \""stethy\"", \""tythes\"", \""tethys\"", \""rechristens\"", \""christeners\"", \""metrics\"", \""cretism\"", \""relevator\"", \""veratrole\"", \""ashling\"", \""anglish\"", \""litigants\"", \""stingtail\"", \""diazine\"", \""dizaine\"", \""carinas\"", \""acrasin\"", \""arnicas\"", \""sarcina\""]\n"",
    ""answer"": ""[[\""acrasin\"", \""arnicas\"", \""carinas\"", \""sarcina\""], [\""anglish\"", \""ashling\""], [\""christeners\"", \""rechristens\""], [\""cretism\"", \""metrics\""], [\""diazine\"", \""dizaine\""], [\""estevin\"", \""tensive\""], [\""litigants\"", \""stingtail\""], [\""relevator\"", \""veratrole\""], [\""stethy\"", \""stythe\"", \""tethys\"", \""tythes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 585,
        ""words"": [
            ""tensive"",
            ""estevin"",
            ""stythe"",
            ""stethy"",
            ""tythes"",
            ""tethys"",
            ""rechristens"",
            ""christeners"",
            ""metrics"",
            ""cretism"",
            ""relevator"",
            ""veratrole"",
            ""ashling"",
            ""anglish"",
            ""litigants"",
            ""stingtail"",
            ""diazine"",
            ""dizaine"",
            ""carinas"",
            ""acrasin"",
            ""arnicas"",
            ""sarcina""
        ],
        ""solution"": [
            [
                ""acrasin"",
                ""arnicas"",
                ""carinas"",
                ""sarcina""
            ],
            [
                ""anglish"",
                ""ashling""
            ],
            [
                ""christeners"",
                ""rechristens""
            ],
            [
                ""cretism"",
                ""metrics""
            ],
            [
                ""diazine"",
                ""dizaine""
            ],
            [
                ""estevin"",
                ""tensive""
            ],
            [
                ""litigants"",
                ""stingtail""
            ],
            [
                ""relevator"",
                ""veratrole""
            ],
            [
                ""stethy"",
                ""stythe"",
                ""tethys"",
                ""tythes""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
586,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""meniscoid"", ""miscoined"", ""thersitical"", ""trachelitis"", ""birdstone"", ""stonebird"", ""brontides"", ""winned"", ""enwind"", ""aspersing"", ""preassign"", ""repassing"", ""overcall"", ""coverall"", ""vocaller"", ""morus"", ""mosur"", ""obsessor"", ""berossos"", ""sorboses"", ""stm"", ""mts""]
","[[""aspersing"", ""preassign"", ""repassing""], [""berossos"", ""obsessor"", ""sorboses""], [""birdstone"", ""brontides"", ""stonebird""], [""coverall"", ""overcall"", ""vocaller""], [""enwind"", ""winned""], [""meniscoid"", ""miscoined""], [""morus"", ""mosur""], [""mts"", ""stm""], [""thersitical"", ""trachelitis""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""meniscoid\"", \""miscoined\"", \""thersitical\"", \""trachelitis\"", \""birdstone\"", \""stonebird\"", \""brontides\"", \""winned\"", \""enwind\"", \""aspersing\"", \""preassign\"", \""repassing\"", \""overcall\"", \""coverall\"", \""vocaller\"", \""morus\"", \""mosur\"", \""obsessor\"", \""berossos\"", \""sorboses\"", \""stm\"", \""mts\""]\n"",
    ""answer"": ""[[\""aspersing\"", \""preassign\"", \""repassing\""], [\""berossos\"", \""obsessor\"", \""sorboses\""], [\""birdstone\"", \""brontides\"", \""stonebird\""], [\""coverall\"", \""overcall\"", \""vocaller\""], [\""enwind\"", \""winned\""], [\""meniscoid\"", \""miscoined\""], [\""morus\"", \""mosur\""], [\""mts\"", \""stm\""], [\""thersitical\"", \""trachelitis\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 586,
        ""words"": [
            ""meniscoid"",
            ""miscoined"",
            ""thersitical"",
            ""trachelitis"",
            ""birdstone"",
            ""stonebird"",
            ""brontides"",
            ""winned"",
            ""enwind"",
            ""aspersing"",
            ""preassign"",
            ""repassing"",
            ""overcall"",
            ""coverall"",
            ""vocaller"",
            ""morus"",
            ""mosur"",
            ""obsessor"",
            ""berossos"",
            ""sorboses"",
            ""stm"",
            ""mts""
        ],
        ""solution"": [
            [
                ""aspersing"",
                ""preassign"",
                ""repassing""
            ],
            [
                ""berossos"",
                ""obsessor"",
                ""sorboses""
            ],
            [
                ""birdstone"",
                ""brontides"",
                ""stonebird""
            ],
            [
                ""coverall"",
                ""overcall"",
                ""vocaller""
            ],
            [
                ""enwind"",
                ""winned""
            ],
            [
                ""meniscoid"",
                ""miscoined""
            ],
            [
                ""morus"",
                ""mosur""
            ],
            [
                ""mts"",
                ""stm""
            ],
            [
                ""thersitical"",
                ""trachelitis""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
587,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""veins"", ""visne"", ""vines"", ""barege"", ""abrege"", ""piache"", ""paiche"", ""tribase"", ""baister"", ""barites"", ""rebaits"", ""ferris"", ""firers"", ""friers"", ""loggin"", ""ogling"", ""drib"", ""bird"", ""weathered"", ""heartweed"", ""stamp"", ""tamps"", ""anchoretic"", ""acherontic""]
","[[""abrege"", ""barege""], [""acherontic"", ""anchoretic""], [""baister"", ""barites"", ""rebaits"", ""tribase""], [""bird"", ""drib""], [""ferris"", ""firers"", ""friers""], [""heartweed"", ""weathered""], [""loggin"", ""ogling""], [""paiche"", ""piache""], [""stamp"", ""tamps""], [""veins"", ""vines"", ""visne""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""veins\"", \""visne\"", \""vines\"", \""barege\"", \""abrege\"", \""piache\"", \""paiche\"", \""tribase\"", \""baister\"", \""barites\"", \""rebaits\"", \""ferris\"", \""firers\"", \""friers\"", \""loggin\"", \""ogling\"", \""drib\"", \""bird\"", \""weathered\"", \""heartweed\"", \""stamp\"", \""tamps\"", \""anchoretic\"", \""acherontic\""]\n"",
    ""answer"": ""[[\""abrege\"", \""barege\""], [\""acherontic\"", \""anchoretic\""], [\""baister\"", \""barites\"", \""rebaits\"", \""tribase\""], [\""bird\"", \""drib\""], [\""ferris\"", \""firers\"", \""friers\""], [\""heartweed\"", \""weathered\""], [\""loggin\"", \""ogling\""], [\""paiche\"", \""piache\""], [\""stamp\"", \""tamps\""], [\""veins\"", \""vines\"", \""visne\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 587,
        ""words"": [
            ""veins"",
            ""visne"",
            ""vines"",
            ""barege"",
            ""abrege"",
            ""piache"",
            ""paiche"",
            ""tribase"",
            ""baister"",
            ""barites"",
            ""rebaits"",
            ""ferris"",
            ""firers"",
            ""friers"",
            ""loggin"",
            ""ogling"",
            ""drib"",
            ""bird"",
            ""weathered"",
            ""heartweed"",
            ""stamp"",
            ""tamps"",
            ""anchoretic"",
            ""acherontic""
        ],
        ""solution"": [
            [
                ""abrege"",
                ""barege""
            ],
            [
                ""acherontic"",
                ""anchoretic""
            ],
            [
                ""baister"",
                ""barites"",
                ""rebaits"",
                ""tribase""
            ],
            [
                ""bird"",
                ""drib""
            ],
            [
                ""ferris"",
                ""firers"",
                ""friers""
            ],
            [
                ""heartweed"",
                ""weathered""
            ],
            [
                ""loggin"",
                ""ogling""
            ],
            [
                ""paiche"",
                ""piache""
            ],
            [
                ""stamp"",
                ""tamps""
            ],
            [
                ""veins"",
                ""vines"",
                ""visne""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
588,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nonrebel"", ""ennobler"", ""gynaecic"", ""gyneccia"", ""fatso"", ""softa"", ""keen"", ""knee"", ""interpale"", ""interpeal""]
","[[""ennobler"", ""nonrebel""], [""fatso"", ""softa""], [""gynaecic"", ""gyneccia""], [""interpale"", ""interpeal""], [""keen"", ""knee""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nonrebel\"", \""ennobler\"", \""gynaecic\"", \""gyneccia\"", \""fatso\"", \""softa\"", \""keen\"", \""knee\"", \""interpale\"", \""interpeal\""]\n"",
    ""answer"": ""[[\""ennobler\"", \""nonrebel\""], [\""fatso\"", \""softa\""], [\""gynaecic\"", \""gyneccia\""], [\""interpale\"", \""interpeal\""], [\""keen\"", \""knee\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 588,
        ""words"": [
            ""nonrebel"",
            ""ennobler"",
            ""gynaecic"",
            ""gyneccia"",
            ""fatso"",
            ""softa"",
            ""keen"",
            ""knee"",
            ""interpale"",
            ""interpeal""
        ],
        ""solution"": [
            [
                ""ennobler"",
                ""nonrebel""
            ],
            [
                ""fatso"",
                ""softa""
            ],
            [
                ""gynaecic"",
                ""gyneccia""
            ],
            [
                ""interpale"",
                ""interpeal""
            ],
            [
                ""keen"",
                ""knee""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
589,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""piker"", ""krepi"", ""pharyngolaryngeal"", ""laryngopharyngeal"", ""ogpu"", ""goup"", ""upgo"", ""departition"", ""trepidation"", ""partitioned"", ""plasticise"", ""specialist"", ""stavers"", ""starves"", ""fendered"", ""defender""]
","[[""defender"", ""fendered""], [""departition"", ""partitioned"", ""trepidation""], [""goup"", ""ogpu"", ""upgo""], [""krepi"", ""piker""], [""laryngopharyngeal"", ""pharyngolaryngeal""], [""plasticise"", ""specialist""], [""starves"", ""stavers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""piker\"", \""krepi\"", \""pharyngolaryngeal\"", \""laryngopharyngeal\"", \""ogpu\"", \""goup\"", \""upgo\"", \""departition\"", \""trepidation\"", \""partitioned\"", \""plasticise\"", \""specialist\"", \""stavers\"", \""starves\"", \""fendered\"", \""defender\""]\n"",
    ""answer"": ""[[\""defender\"", \""fendered\""], [\""departition\"", \""partitioned\"", \""trepidation\""], [\""goup\"", \""ogpu\"", \""upgo\""], [\""krepi\"", \""piker\""], [\""laryngopharyngeal\"", \""pharyngolaryngeal\""], [\""plasticise\"", \""specialist\""], [\""starves\"", \""stavers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 589,
        ""words"": [
            ""piker"",
            ""krepi"",
            ""pharyngolaryngeal"",
            ""laryngopharyngeal"",
            ""ogpu"",
            ""goup"",
            ""upgo"",
            ""departition"",
            ""trepidation"",
            ""partitioned"",
            ""plasticise"",
            ""specialist"",
            ""stavers"",
            ""starves"",
            ""fendered"",
            ""defender""
        ],
        ""solution"": [
            [
                ""defender"",
                ""fendered""
            ],
            [
                ""departition"",
                ""partitioned"",
                ""trepidation""
            ],
            [
                ""goup"",
                ""ogpu"",
                ""upgo""
            ],
            [
                ""krepi"",
                ""piker""
            ],
            [
                ""laryngopharyngeal"",
                ""pharyngolaryngeal""
            ],
            [
                ""plasticise"",
                ""specialist""
            ],
            [
                ""starves"",
                ""stavers""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
590,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""alogian"", ""logania"", ""pests"", ""steps"", ""septs"", ""nagged"", ""ganged"", ""lust"", ""slut"", ""pornerastic"", ""cotranspire"", ""aerical"", ""acieral""]
","[[""acieral"", ""aerical""], [""alogian"", ""logania""], [""cotranspire"", ""pornerastic""], [""ganged"", ""nagged""], [""lust"", ""slut""], [""pests"", ""septs"", ""steps""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""alogian\"", \""logania\"", \""pests\"", \""steps\"", \""septs\"", \""nagged\"", \""ganged\"", \""lust\"", \""slut\"", \""pornerastic\"", \""cotranspire\"", \""aerical\"", \""acieral\""]\n"",
    ""answer"": ""[[\""acieral\"", \""aerical\""], [\""alogian\"", \""logania\""], [\""cotranspire\"", \""pornerastic\""], [\""ganged\"", \""nagged\""], [\""lust\"", \""slut\""], [\""pests\"", \""septs\"", \""steps\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 590,
        ""words"": [
            ""alogian"",
            ""logania"",
            ""pests"",
            ""steps"",
            ""septs"",
            ""nagged"",
            ""ganged"",
            ""lust"",
            ""slut"",
            ""pornerastic"",
            ""cotranspire"",
            ""aerical"",
            ""acieral""
        ],
        ""solution"": [
            [
                ""acieral"",
                ""aerical""
            ],
            [
                ""alogian"",
                ""logania""
            ],
            [
                ""cotranspire"",
                ""pornerastic""
            ],
            [
                ""ganged"",
                ""nagged""
            ],
            [
                ""lust"",
                ""slut""
            ],
            [
                ""pests"",
                ""septs"",
                ""steps""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
591,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""windgall"", ""dingwall"", ""bemeal"", ""embale""]
","[[""bemeal"", ""embale""], [""dingwall"", ""windgall""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""windgall\"", \""dingwall\"", \""bemeal\"", \""embale\""]\n"",
    ""answer"": ""[[\""bemeal\"", \""embale\""], [\""dingwall\"", \""windgall\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 591,
        ""words"": [
            ""windgall"",
            ""dingwall"",
            ""bemeal"",
            ""embale""
        ],
        ""solution"": [
            [
                ""bemeal"",
                ""embale""
            ],
            [
                ""dingwall"",
                ""windgall""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
592,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unhackled"", ""unchalked"", ""haliotidae"", ""aethalioid"", ""sence"", ""scene"", ""cense"", ""scian"", ""cains"", ""canis"", ""comet"", ""comte""]
","[[""aethalioid"", ""haliotidae""], [""cains"", ""canis"", ""scian""], [""cense"", ""scene"", ""sence""], [""comet"", ""comte""], [""unchalked"", ""unhackled""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unhackled\"", \""unchalked\"", \""haliotidae\"", \""aethalioid\"", \""sence\"", \""scene\"", \""cense\"", \""scian\"", \""cains\"", \""canis\"", \""comet\"", \""comte\""]\n"",
    ""answer"": ""[[\""aethalioid\"", \""haliotidae\""], [\""cains\"", \""canis\"", \""scian\""], [\""cense\"", \""scene\"", \""sence\""], [\""comet\"", \""comte\""], [\""unchalked\"", \""unhackled\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 592,
        ""words"": [
            ""unhackled"",
            ""unchalked"",
            ""haliotidae"",
            ""aethalioid"",
            ""sence"",
            ""scene"",
            ""cense"",
            ""scian"",
            ""cains"",
            ""canis"",
            ""comet"",
            ""comte""
        ],
        ""solution"": [
            [
                ""aethalioid"",
                ""haliotidae""
            ],
            [
                ""cains"",
                ""canis"",
                ""scian""
            ],
            [
                ""cense"",
                ""scene"",
                ""sence""
            ],
            [
                ""comet"",
                ""comte""
            ],
            [
                ""unchalked"",
                ""unhackled""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
593,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""predetach"", ""chaptered"", ""isolable"", ""lobelias"", ""kashan"", ""sankha"", ""whitmanese"", ""anthemwise"", ""charming"", ""marching"", ""undeparted"", ""dunderpate"", ""tricerium"", ""criterium"", ""profit"", ""forpit""]
","[[""anthemwise"", ""whitmanese""], [""chaptered"", ""predetach""], [""charming"", ""marching""], [""criterium"", ""tricerium""], [""dunderpate"", ""undeparted""], [""forpit"", ""profit""], [""isolable"", ""lobelias""], [""kashan"", ""sankha""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""predetach\"", \""chaptered\"", \""isolable\"", \""lobelias\"", \""kashan\"", \""sankha\"", \""whitmanese\"", \""anthemwise\"", \""charming\"", \""marching\"", \""undeparted\"", \""dunderpate\"", \""tricerium\"", \""criterium\"", \""profit\"", \""forpit\""]\n"",
    ""answer"": ""[[\""anthemwise\"", \""whitmanese\""], [\""chaptered\"", \""predetach\""], [\""charming\"", \""marching\""], [\""criterium\"", \""tricerium\""], [\""dunderpate\"", \""undeparted\""], [\""forpit\"", \""profit\""], [\""isolable\"", \""lobelias\""], [\""kashan\"", \""sankha\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 593,
        ""words"": [
            ""predetach"",
            ""chaptered"",
            ""isolable"",
            ""lobelias"",
            ""kashan"",
            ""sankha"",
            ""whitmanese"",
            ""anthemwise"",
            ""charming"",
            ""marching"",
            ""undeparted"",
            ""dunderpate"",
            ""tricerium"",
            ""criterium"",
            ""profit"",
            ""forpit""
        ],
        ""solution"": [
            [
                ""anthemwise"",
                ""whitmanese""
            ],
            [
                ""chaptered"",
                ""predetach""
            ],
            [
                ""charming"",
                ""marching""
            ],
            [
                ""criterium"",
                ""tricerium""
            ],
            [
                ""dunderpate"",
                ""undeparted""
            ],
            [
                ""forpit"",
                ""profit""
            ],
            [
                ""isolable"",
                ""lobelias""
            ],
            [
                ""kashan"",
                ""sankha""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
594,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sniping"", ""pinings"", ""casus"", ""ascus"", ""snocat"", ""cantos"", ""octans"", ""cotans"", ""actomyosin"", ""inocystoma"", ""momes"", ""memos"", ""nattoria"", ""attainor"", ""letterset"", ""streetlet""]
","[[""actomyosin"", ""inocystoma""], [""ascus"", ""casus""], [""attainor"", ""nattoria""], [""cantos"", ""cotans"", ""octans"", ""snocat""], [""letterset"", ""streetlet""], [""memos"", ""momes""], [""pinings"", ""sniping""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sniping\"", \""pinings\"", \""casus\"", \""ascus\"", \""snocat\"", \""cantos\"", \""octans\"", \""cotans\"", \""actomyosin\"", \""inocystoma\"", \""momes\"", \""memos\"", \""nattoria\"", \""attainor\"", \""letterset\"", \""streetlet\""]\n"",
    ""answer"": ""[[\""actomyosin\"", \""inocystoma\""], [\""ascus\"", \""casus\""], [\""attainor\"", \""nattoria\""], [\""cantos\"", \""cotans\"", \""octans\"", \""snocat\""], [\""letterset\"", \""streetlet\""], [\""memos\"", \""momes\""], [\""pinings\"", \""sniping\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 594,
        ""words"": [
            ""sniping"",
            ""pinings"",
            ""casus"",
            ""ascus"",
            ""snocat"",
            ""cantos"",
            ""octans"",
            ""cotans"",
            ""actomyosin"",
            ""inocystoma"",
            ""momes"",
            ""memos"",
            ""nattoria"",
            ""attainor"",
            ""letterset"",
            ""streetlet""
        ],
        ""solution"": [
            [
                ""actomyosin"",
                ""inocystoma""
            ],
            [
                ""ascus"",
                ""casus""
            ],
            [
                ""attainor"",
                ""nattoria""
            ],
            [
                ""cantos"",
                ""cotans"",
                ""octans"",
                ""snocat""
            ],
            [
                ""letterset"",
                ""streetlet""
            ],
            [
                ""memos"",
                ""momes""
            ],
            [
                ""pinings"",
                ""sniping""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
595,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""outshoots"", ""shootouts"", ""intermittor"", ""intromitter"", ""chorale"", ""cholera"", ""archeol"", ""sarsenets"", ""senatress"", ""assenters"", ""postical"", ""coalpits"", ""caronic"", ""acronic""]
","[[""acronic"", ""caronic""], [""archeol"", ""cholera"", ""chorale""], [""assenters"", ""sarsenets"", ""senatress""], [""coalpits"", ""postical""], [""intermittor"", ""intromitter""], [""outshoots"", ""shootouts""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""outshoots\"", \""shootouts\"", \""intermittor\"", \""intromitter\"", \""chorale\"", \""cholera\"", \""archeol\"", \""sarsenets\"", \""senatress\"", \""assenters\"", \""postical\"", \""coalpits\"", \""caronic\"", \""acronic\""]\n"",
    ""answer"": ""[[\""acronic\"", \""caronic\""], [\""archeol\"", \""cholera\"", \""chorale\""], [\""assenters\"", \""sarsenets\"", \""senatress\""], [\""coalpits\"", \""postical\""], [\""intermittor\"", \""intromitter\""], [\""outshoots\"", \""shootouts\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 595,
        ""words"": [
            ""outshoots"",
            ""shootouts"",
            ""intermittor"",
            ""intromitter"",
            ""chorale"",
            ""cholera"",
            ""archeol"",
            ""sarsenets"",
            ""senatress"",
            ""assenters"",
            ""postical"",
            ""coalpits"",
            ""caronic"",
            ""acronic""
        ],
        ""solution"": [
            [
                ""acronic"",
                ""caronic""
            ],
            [
                ""archeol"",
                ""cholera"",
                ""chorale""
            ],
            [
                ""assenters"",
                ""sarsenets"",
                ""senatress""
            ],
            [
                ""coalpits"",
                ""postical""
            ],
            [
                ""intermittor"",
                ""intromitter""
            ],
            [
                ""outshoots"",
                ""shootouts""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
596,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""staning"", ""antings"", ""thisn"", ""thins"", ""hints"", ""phose"", ""hopes"", ""shope"", ""rousette"", ""outsteer"", ""rialtos"", ""ortalis"", ""aristol"", ""refashions"", ""fashioners"", ""awaiter"", ""reawait"", ""surrounder"", ""resurround""]
","[[""antings"", ""staning""], [""aristol"", ""ortalis"", ""rialtos""], [""awaiter"", ""reawait""], [""fashioners"", ""refashions""], [""hints"", ""thins"", ""thisn""], [""hopes"", ""phose"", ""shope""], [""outsteer"", ""rousette""], [""resurround"", ""surrounder""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""staning\"", \""antings\"", \""thisn\"", \""thins\"", \""hints\"", \""phose\"", \""hopes\"", \""shope\"", \""rousette\"", \""outsteer\"", \""rialtos\"", \""ortalis\"", \""aristol\"", \""refashions\"", \""fashioners\"", \""awaiter\"", \""reawait\"", \""surrounder\"", \""resurround\""]\n"",
    ""answer"": ""[[\""antings\"", \""staning\""], [\""aristol\"", \""ortalis\"", \""rialtos\""], [\""awaiter\"", \""reawait\""], [\""fashioners\"", \""refashions\""], [\""hints\"", \""thins\"", \""thisn\""], [\""hopes\"", \""phose\"", \""shope\""], [\""outsteer\"", \""rousette\""], [\""resurround\"", \""surrounder\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 596,
        ""words"": [
            ""staning"",
            ""antings"",
            ""thisn"",
            ""thins"",
            ""hints"",
            ""phose"",
            ""hopes"",
            ""shope"",
            ""rousette"",
            ""outsteer"",
            ""rialtos"",
            ""ortalis"",
            ""aristol"",
            ""refashions"",
            ""fashioners"",
            ""awaiter"",
            ""reawait"",
            ""surrounder"",
            ""resurround""
        ],
        ""solution"": [
            [
                ""antings"",
                ""staning""
            ],
            [
                ""aristol"",
                ""ortalis"",
                ""rialtos""
            ],
            [
                ""awaiter"",
                ""reawait""
            ],
            [
                ""fashioners"",
                ""refashions""
            ],
            [
                ""hints"",
                ""thins"",
                ""thisn""
            ],
            [
                ""hopes"",
                ""phose"",
                ""shope""
            ],
            [
                ""outsteer"",
                ""rousette""
            ],
            [
                ""resurround"",
                ""surrounder""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
597,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""recoup"", ""cuerpo"", ""rarify"", ""friary""]
","[[""cuerpo"", ""recoup""], [""friary"", ""rarify""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""recoup\"", \""cuerpo\"", \""rarify\"", \""friary\""]\n"",
    ""answer"": ""[[\""cuerpo\"", \""recoup\""], [\""friary\"", \""rarify\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 597,
        ""words"": [
            ""recoup"",
            ""cuerpo"",
            ""rarify"",
            ""friary""
        ],
        ""solution"": [
            [
                ""cuerpo"",
                ""recoup""
            ],
            [
                ""friary"",
                ""rarify""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
598,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""serdabs"", ""brassed"", ""bardess"", ""ghosty"", ""hogsty"", ""nenta"", ""annet"", ""anent"", ""kashers"", ""shakers"", ""destain"", ""satined"", ""instead"", ""sainted"", ""detains"", ""cacomistle"", ""cosmetical"", ""cheval"", ""chavel"", ""porcelain"", ""oliprance"", ""prebid"", ""bedrip""]
","[[""anent"", ""annet"", ""nenta""], [""bardess"", ""brassed"", ""serdabs""], [""bedrip"", ""prebid""], [""cacomistle"", ""cosmetical""], [""chavel"", ""cheval""], [""destain"", ""detains"", ""instead"", ""sainted"", ""satined""], [""ghosty"", ""hogsty""], [""kashers"", ""shakers""], [""oliprance"", ""porcelain""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""serdabs\"", \""brassed\"", \""bardess\"", \""ghosty\"", \""hogsty\"", \""nenta\"", \""annet\"", \""anent\"", \""kashers\"", \""shakers\"", \""destain\"", \""satined\"", \""instead\"", \""sainted\"", \""detains\"", \""cacomistle\"", \""cosmetical\"", \""cheval\"", \""chavel\"", \""porcelain\"", \""oliprance\"", \""prebid\"", \""bedrip\""]\n"",
    ""answer"": ""[[\""anent\"", \""annet\"", \""nenta\""], [\""bardess\"", \""brassed\"", \""serdabs\""], [\""bedrip\"", \""prebid\""], [\""cacomistle\"", \""cosmetical\""], [\""chavel\"", \""cheval\""], [\""destain\"", \""detains\"", \""instead\"", \""sainted\"", \""satined\""], [\""ghosty\"", \""hogsty\""], [\""kashers\"", \""shakers\""], [\""oliprance\"", \""porcelain\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 598,
        ""words"": [
            ""serdabs"",
            ""brassed"",
            ""bardess"",
            ""ghosty"",
            ""hogsty"",
            ""nenta"",
            ""annet"",
            ""anent"",
            ""kashers"",
            ""shakers"",
            ""destain"",
            ""satined"",
            ""instead"",
            ""sainted"",
            ""detains"",
            ""cacomistle"",
            ""cosmetical"",
            ""cheval"",
            ""chavel"",
            ""porcelain"",
            ""oliprance"",
            ""prebid"",
            ""bedrip""
        ],
        ""solution"": [
            [
                ""anent"",
                ""annet"",
                ""nenta""
            ],
            [
                ""bardess"",
                ""brassed"",
                ""serdabs""
            ],
            [
                ""bedrip"",
                ""prebid""
            ],
            [
                ""cacomistle"",
                ""cosmetical""
            ],
            [
                ""chavel"",
                ""cheval""
            ],
            [
                ""destain"",
                ""detains"",
                ""instead"",
                ""sainted"",
                ""satined""
            ],
            [
                ""ghosty"",
                ""hogsty""
            ],
            [
                ""kashers"",
                ""shakers""
            ],
            [
                ""oliprance"",
                ""porcelain""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
599,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""serenaded"", ""deadeners"", ""spectred"", ""sceptred"", ""subst"", ""busts"", ""bren"", ""bern"", ""itll"", ""till"", ""atroce"", ""recoat"", ""coater""]
","[[""atroce"", ""coater"", ""recoat""], [""bern"", ""bren""], [""busts"", ""subst""], [""deadeners"", ""serenaded""], [""itll"", ""till""], [""sceptred"", ""spectred""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""serenaded\"", \""deadeners\"", \""spectred\"", \""sceptred\"", \""subst\"", \""busts\"", \""bren\"", \""bern\"", \""itll\"", \""till\"", \""atroce\"", \""recoat\"", \""coater\""]\n"",
    ""answer"": ""[[\""atroce\"", \""coater\"", \""recoat\""], [\""bern\"", \""bren\""], [\""busts\"", \""subst\""], [\""deadeners\"", \""serenaded\""], [\""itll\"", \""till\""], [\""sceptred\"", \""spectred\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 599,
        ""words"": [
            ""serenaded"",
            ""deadeners"",
            ""spectred"",
            ""sceptred"",
            ""subst"",
            ""busts"",
            ""bren"",
            ""bern"",
            ""itll"",
            ""till"",
            ""atroce"",
            ""recoat"",
            ""coater""
        ],
        ""solution"": [
            [
                ""atroce"",
                ""coater"",
                ""recoat""
            ],
            [
                ""bern"",
                ""bren""
            ],
            [
                ""busts"",
                ""subst""
            ],
            [
                ""deadeners"",
                ""serenaded""
            ],
            [
                ""itll"",
                ""till""
            ],
            [
                ""sceptred"",
                ""spectred""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
600,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""carotenes"", ""censorate"", ""lathered"", ""threadle"", ""haltered"", ""agent"", ""etang"", ""sportive"", ""sorptive"", ""silicotungstate"", ""tungstosilicate"", ""abeigh"", ""abiegh"", ""contineu"", ""continue""]
","[[""abeigh"", ""abiegh""], [""agent"", ""etang""], [""carotenes"", ""censorate""], [""contineu"", ""continue""], [""haltered"", ""lathered"", ""threadle""], [""silicotungstate"", ""tungstosilicate""], [""sorptive"", ""sportive""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""carotenes\"", \""censorate\"", \""lathered\"", \""threadle\"", \""haltered\"", \""agent\"", \""etang\"", \""sportive\"", \""sorptive\"", \""silicotungstate\"", \""tungstosilicate\"", \""abeigh\"", \""abiegh\"", \""contineu\"", \""continue\""]\n"",
    ""answer"": ""[[\""abeigh\"", \""abiegh\""], [\""agent\"", \""etang\""], [\""carotenes\"", \""censorate\""], [\""contineu\"", \""continue\""], [\""haltered\"", \""lathered\"", \""threadle\""], [\""silicotungstate\"", \""tungstosilicate\""], [\""sorptive\"", \""sportive\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 600,
        ""words"": [
            ""carotenes"",
            ""censorate"",
            ""lathered"",
            ""threadle"",
            ""haltered"",
            ""agent"",
            ""etang"",
            ""sportive"",
            ""sorptive"",
            ""silicotungstate"",
            ""tungstosilicate"",
            ""abeigh"",
            ""abiegh"",
            ""contineu"",
            ""continue""
        ],
        ""solution"": [
            [
                ""abeigh"",
                ""abiegh""
            ],
            [
                ""agent"",
                ""etang""
            ],
            [
                ""carotenes"",
                ""censorate""
            ],
            [
                ""contineu"",
                ""continue""
            ],
            [
                ""haltered"",
                ""lathered"",
                ""threadle""
            ],
            [
                ""silicotungstate"",
                ""tungstosilicate""
            ],
            [
                ""sorptive"",
                ""sportive""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
601,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""showd"", ""dhows"", ""wiste"", ""wites""]
","[[""dhows"", ""showd""], [""wiste"", ""wites""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""showd\"", \""dhows\"", \""wiste\"", \""wites\""]\n"",
    ""answer"": ""[[\""dhows\"", \""showd\""], [\""wiste\"", \""wites\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 601,
        ""words"": [
            ""showd"",
            ""dhows"",
            ""wiste"",
            ""wites""
        ],
        ""solution"": [
            [
                ""dhows"",
                ""showd""
            ],
            [
                ""wiste"",
                ""wites""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
602,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""camelion"", ""manicole"", ""tolu"", ""ulto"", ""lout"", ""spillover"", ""overspill"", ""acidanthera"", ""cantharidae""]
","[[""acidanthera"", ""cantharidae""], [""camelion"", ""manicole""], [""lout"", ""tolu"", ""ulto""], [""overspill"", ""spillover""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""camelion\"", \""manicole\"", \""tolu\"", \""ulto\"", \""lout\"", \""spillover\"", \""overspill\"", \""acidanthera\"", \""cantharidae\""]\n"",
    ""answer"": ""[[\""acidanthera\"", \""cantharidae\""], [\""camelion\"", \""manicole\""], [\""lout\"", \""tolu\"", \""ulto\""], [\""overspill\"", \""spillover\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 602,
        ""words"": [
            ""camelion"",
            ""manicole"",
            ""tolu"",
            ""ulto"",
            ""lout"",
            ""spillover"",
            ""overspill"",
            ""acidanthera"",
            ""cantharidae""
        ],
        ""solution"": [
            [
                ""acidanthera"",
                ""cantharidae""
            ],
            [
                ""camelion"",
                ""manicole""
            ],
            [
                ""lout"",
                ""tolu"",
                ""ulto""
            ],
            [
                ""overspill"",
                ""spillover""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
603,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dees"", ""seed"", ""planetabler"", ""replantable"", ""reposing"", ""perigons"", ""spongier"", ""interlap"", ""repliant"", ""triplane"", ""safaried"", ""faradise"", ""endaortic"", ""recitando"", ""redaction"", ""citronade"", ""incuneation"", ""enunciation""]
","[[""citronade"", ""endaortic"", ""recitando"", ""redaction""], [""dees"", ""seed""], [""enunciation"", ""incuneation""], [""faradise"", ""safaried""], [""interlap"", ""repliant"", ""triplane""], [""perigons"", ""reposing"", ""spongier""], [""planetabler"", ""replantable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dees\"", \""seed\"", \""planetabler\"", \""replantable\"", \""reposing\"", \""perigons\"", \""spongier\"", \""interlap\"", \""repliant\"", \""triplane\"", \""safaried\"", \""faradise\"", \""endaortic\"", \""recitando\"", \""redaction\"", \""citronade\"", \""incuneation\"", \""enunciation\""]\n"",
    ""answer"": ""[[\""citronade\"", \""endaortic\"", \""recitando\"", \""redaction\""], [\""dees\"", \""seed\""], [\""enunciation\"", \""incuneation\""], [\""faradise\"", \""safaried\""], [\""interlap\"", \""repliant\"", \""triplane\""], [\""perigons\"", \""reposing\"", \""spongier\""], [\""planetabler\"", \""replantable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 603,
        ""words"": [
            ""dees"",
            ""seed"",
            ""planetabler"",
            ""replantable"",
            ""reposing"",
            ""perigons"",
            ""spongier"",
            ""interlap"",
            ""repliant"",
            ""triplane"",
            ""safaried"",
            ""faradise"",
            ""endaortic"",
            ""recitando"",
            ""redaction"",
            ""citronade"",
            ""incuneation"",
            ""enunciation""
        ],
        ""solution"": [
            [
                ""citronade"",
                ""endaortic"",
                ""recitando"",
                ""redaction""
            ],
            [
                ""dees"",
                ""seed""
            ],
            [
                ""enunciation"",
                ""incuneation""
            ],
            [
                ""faradise"",
                ""safaried""
            ],
            [
                ""interlap"",
                ""repliant"",
                ""triplane""
            ],
            [
                ""perigons"",
                ""reposing"",
                ""spongier""
            ],
            [
                ""planetabler"",
                ""replantable""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
604,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""thwite"", ""tewhit"", ""sirian"", ""raisin"", ""bal"", ""lab"", ""bessel"", ""blesse"", ""mytilus"", ""simulty"", ""mustily""]
","[[""bal"", ""lab""], [""bessel"", ""blesse""], [""mustily"", ""mytilus"", ""simulty""], [""raisin"", ""sirian""], [""tewhit"", ""thwite""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""thwite\"", \""tewhit\"", \""sirian\"", \""raisin\"", \""bal\"", \""lab\"", \""bessel\"", \""blesse\"", \""mytilus\"", \""simulty\"", \""mustily\""]\n"",
    ""answer"": ""[[\""bal\"", \""lab\""], [\""bessel\"", \""blesse\""], [\""mustily\"", \""mytilus\"", \""simulty\""], [\""raisin\"", \""sirian\""], [\""tewhit\"", \""thwite\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 604,
        ""words"": [
            ""thwite"",
            ""tewhit"",
            ""sirian"",
            ""raisin"",
            ""bal"",
            ""lab"",
            ""bessel"",
            ""blesse"",
            ""mytilus"",
            ""simulty"",
            ""mustily""
        ],
        ""solution"": [
            [
                ""bal"",
                ""lab""
            ],
            [
                ""bessel"",
                ""blesse""
            ],
            [
                ""mustily"",
                ""mytilus"",
                ""simulty""
            ],
            [
                ""raisin"",
                ""sirian""
            ],
            [
                ""tewhit"",
                ""thwite""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
605,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""branchiopoda"", ""podobranchia"", ""ochrous"", ""chorous"", ""tasting"", ""stating"", ""baedeker"", ""debeaker"", ""alienation"", ""alineation"", ""seminess"", ""messines"", ""dreegh"", ""hedger"", ""micell"", ""mellic"", ""amdahl"", ""hamald""]
","[[""alienation"", ""alineation""], [""amdahl"", ""hamald""], [""baedeker"", ""debeaker""], [""branchiopoda"", ""podobranchia""], [""chorous"", ""ochrous""], [""dreegh"", ""hedger""], [""mellic"", ""micell""], [""messines"", ""seminess""], [""stating"", ""tasting""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""branchiopoda\"", \""podobranchia\"", \""ochrous\"", \""chorous\"", \""tasting\"", \""stating\"", \""baedeker\"", \""debeaker\"", \""alienation\"", \""alineation\"", \""seminess\"", \""messines\"", \""dreegh\"", \""hedger\"", \""micell\"", \""mellic\"", \""amdahl\"", \""hamald\""]\n"",
    ""answer"": ""[[\""alienation\"", \""alineation\""], [\""amdahl\"", \""hamald\""], [\""baedeker\"", \""debeaker\""], [\""branchiopoda\"", \""podobranchia\""], [\""chorous\"", \""ochrous\""], [\""dreegh\"", \""hedger\""], [\""mellic\"", \""micell\""], [\""messines\"", \""seminess\""], [\""stating\"", \""tasting\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 605,
        ""words"": [
            ""branchiopoda"",
            ""podobranchia"",
            ""ochrous"",
            ""chorous"",
            ""tasting"",
            ""stating"",
            ""baedeker"",
            ""debeaker"",
            ""alienation"",
            ""alineation"",
            ""seminess"",
            ""messines"",
            ""dreegh"",
            ""hedger"",
            ""micell"",
            ""mellic"",
            ""amdahl"",
            ""hamald""
        ],
        ""solution"": [
            [
                ""alienation"",
                ""alineation""
            ],
            [
                ""amdahl"",
                ""hamald""
            ],
            [
                ""baedeker"",
                ""debeaker""
            ],
            [
                ""branchiopoda"",
                ""podobranchia""
            ],
            [
                ""chorous"",
                ""ochrous""
            ],
            [
                ""dreegh"",
                ""hedger""
            ],
            [
                ""mellic"",
                ""micell""
            ],
            [
                ""messines"",
                ""seminess""
            ],
            [
                ""stating"",
                ""tasting""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
606,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lucifer"", ""ferulic"", ""rhopalic"", ""orphical"", ""diener"", ""nereid"", ""reined"", ""denier"", ""owleries"", ""orlewise"", ""dipteraceous"", ""epiceratodus""]
","[[""denier"", ""diener"", ""nereid"", ""reined""], [""dipteraceous"", ""epiceratodus""], [""ferulic"", ""lucifer""], [""orlewise"", ""owleries""], [""orphical"", ""rhopalic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lucifer\"", \""ferulic\"", \""rhopalic\"", \""orphical\"", \""diener\"", \""nereid\"", \""reined\"", \""denier\"", \""owleries\"", \""orlewise\"", \""dipteraceous\"", \""epiceratodus\""]\n"",
    ""answer"": ""[[\""denier\"", \""diener\"", \""nereid\"", \""reined\""], [\""dipteraceous\"", \""epiceratodus\""], [\""ferulic\"", \""lucifer\""], [\""orlewise\"", \""owleries\""], [\""orphical\"", \""rhopalic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 606,
        ""words"": [
            ""lucifer"",
            ""ferulic"",
            ""rhopalic"",
            ""orphical"",
            ""diener"",
            ""nereid"",
            ""reined"",
            ""denier"",
            ""owleries"",
            ""orlewise"",
            ""dipteraceous"",
            ""epiceratodus""
        ],
        ""solution"": [
            [
                ""denier"",
                ""diener"",
                ""nereid"",
                ""reined""
            ],
            [
                ""dipteraceous"",
                ""epiceratodus""
            ],
            [
                ""ferulic"",
                ""lucifer""
            ],
            [
                ""orlewise"",
                ""owleries""
            ],
            [
                ""orphical"",
                ""rhopalic""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
607,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""syriasm"", ""missary"", ""lunary"", ""uranyl"", ""bacterin"", ""centibar"", ""despose"", ""deposes"", ""admirer"", ""madrier"", ""ng"", ""gn"", ""degrain"", ""deringa"", ""deraign"", ""baniva"", ""bavian""]
","[[""admirer"", ""madrier""], [""bacterin"", ""centibar""], [""baniva"", ""bavian""], [""degrain"", ""deraign"", ""deringa""], [""deposes"", ""despose""], [""gn"", ""ng""], [""lunary"", ""uranyl""], [""missary"", ""syriasm""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""syriasm\"", \""missary\"", \""lunary\"", \""uranyl\"", \""bacterin\"", \""centibar\"", \""despose\"", \""deposes\"", \""admirer\"", \""madrier\"", \""ng\"", \""gn\"", \""degrain\"", \""deringa\"", \""deraign\"", \""baniva\"", \""bavian\""]\n"",
    ""answer"": ""[[\""admirer\"", \""madrier\""], [\""bacterin\"", \""centibar\""], [\""baniva\"", \""bavian\""], [\""degrain\"", \""deraign\"", \""deringa\""], [\""deposes\"", \""despose\""], [\""gn\"", \""ng\""], [\""lunary\"", \""uranyl\""], [\""missary\"", \""syriasm\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 607,
        ""words"": [
            ""syriasm"",
            ""missary"",
            ""lunary"",
            ""uranyl"",
            ""bacterin"",
            ""centibar"",
            ""despose"",
            ""deposes"",
            ""admirer"",
            ""madrier"",
            ""ng"",
            ""gn"",
            ""degrain"",
            ""deringa"",
            ""deraign"",
            ""baniva"",
            ""bavian""
        ],
        ""solution"": [
            [
                ""admirer"",
                ""madrier""
            ],
            [
                ""bacterin"",
                ""centibar""
            ],
            [
                ""baniva"",
                ""bavian""
            ],
            [
                ""degrain"",
                ""deraign"",
                ""deringa""
            ],
            [
                ""deposes"",
                ""despose""
            ],
            [
                ""gn"",
                ""ng""
            ],
            [
                ""lunary"",
                ""uranyl""
            ],
            [
                ""missary"",
                ""syriasm""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
608,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""marts"", ""smart"", ""trams"", ""settima"", ""etatism""]
","[[""etatism"", ""settima""], [""marts"", ""smart"", ""trams""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""marts\"", \""smart\"", \""trams\"", \""settima\"", \""etatism\""]\n"",
    ""answer"": ""[[\""etatism\"", \""settima\""], [\""marts\"", \""smart\"", \""trams\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 608,
        ""words"": [
            ""marts"",
            ""smart"",
            ""trams"",
            ""settima"",
            ""etatism""
        ],
        ""solution"": [
            [
                ""etatism"",
                ""settima""
            ],
            [
                ""marts"",
                ""smart"",
                ""trams""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
609,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""acetone"", ""oceanet"", ""noils"", ""lions"", ""loins"", ""linos"", ""insol"", ""morate"", ""amoret"", ""tormae"", ""encrust"", ""uncrest"", ""sips"", ""piss"", ""resaying"", ""synergia"", ""perisome"", ""promisee"", ""reimpose"", ""lidded"", ""diddle""]
","[[""acetone"", ""oceanet""], [""amoret"", ""morate"", ""tormae""], [""diddle"", ""lidded""], [""encrust"", ""uncrest""], [""insol"", ""linos"", ""lions"", ""loins"", ""noils""], [""perisome"", ""promisee"", ""reimpose""], [""piss"", ""sips""], [""resaying"", ""synergia""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""acetone\"", \""oceanet\"", \""noils\"", \""lions\"", \""loins\"", \""linos\"", \""insol\"", \""morate\"", \""amoret\"", \""tormae\"", \""encrust\"", \""uncrest\"", \""sips\"", \""piss\"", \""resaying\"", \""synergia\"", \""perisome\"", \""promisee\"", \""reimpose\"", \""lidded\"", \""diddle\""]\n"",
    ""answer"": ""[[\""acetone\"", \""oceanet\""], [\""amoret\"", \""morate\"", \""tormae\""], [\""diddle\"", \""lidded\""], [\""encrust\"", \""uncrest\""], [\""insol\"", \""linos\"", \""lions\"", \""loins\"", \""noils\""], [\""perisome\"", \""promisee\"", \""reimpose\""], [\""piss\"", \""sips\""], [\""resaying\"", \""synergia\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 609,
        ""words"": [
            ""acetone"",
            ""oceanet"",
            ""noils"",
            ""lions"",
            ""loins"",
            ""linos"",
            ""insol"",
            ""morate"",
            ""amoret"",
            ""tormae"",
            ""encrust"",
            ""uncrest"",
            ""sips"",
            ""piss"",
            ""resaying"",
            ""synergia"",
            ""perisome"",
            ""promisee"",
            ""reimpose"",
            ""lidded"",
            ""diddle""
        ],
        ""solution"": [
            [
                ""acetone"",
                ""oceanet""
            ],
            [
                ""amoret"",
                ""morate"",
                ""tormae""
            ],
            [
                ""diddle"",
                ""lidded""
            ],
            [
                ""encrust"",
                ""uncrest""
            ],
            [
                ""insol"",
                ""linos"",
                ""lions"",
                ""loins"",
                ""noils""
            ],
            [
                ""perisome"",
                ""promisee"",
                ""reimpose""
            ],
            [
                ""piss"",
                ""sips""
            ],
            [
                ""resaying"",
                ""synergia""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
610,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""strobes"", ""sorbets"", ""electroed"", ""electrode"", ""steamering"", ""germinates"", ""magnetiser"", ""menagerist"", ""sunspot"", ""unstops"", ""involucre"", ""volucrine"", ""ferity"", ""freity""]
","[[""electrode"", ""electroed""], [""ferity"", ""freity""], [""germinates"", ""magnetiser"", ""menagerist"", ""steamering""], [""involucre"", ""volucrine""], [""sorbets"", ""strobes""], [""sunspot"", ""unstops""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""strobes\"", \""sorbets\"", \""electroed\"", \""electrode\"", \""steamering\"", \""germinates\"", \""magnetiser\"", \""menagerist\"", \""sunspot\"", \""unstops\"", \""involucre\"", \""volucrine\"", \""ferity\"", \""freity\""]\n"",
    ""answer"": ""[[\""electrode\"", \""electroed\""], [\""ferity\"", \""freity\""], [\""germinates\"", \""magnetiser\"", \""menagerist\"", \""steamering\""], [\""involucre\"", \""volucrine\""], [\""sorbets\"", \""strobes\""], [\""sunspot\"", \""unstops\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 610,
        ""words"": [
            ""strobes"",
            ""sorbets"",
            ""electroed"",
            ""electrode"",
            ""steamering"",
            ""germinates"",
            ""magnetiser"",
            ""menagerist"",
            ""sunspot"",
            ""unstops"",
            ""involucre"",
            ""volucrine"",
            ""ferity"",
            ""freity""
        ],
        ""solution"": [
            [
                ""electrode"",
                ""electroed""
            ],
            [
                ""ferity"",
                ""freity""
            ],
            [
                ""germinates"",
                ""magnetiser"",
                ""menagerist"",
                ""steamering""
            ],
            [
                ""involucre"",
                ""volucrine""
            ],
            [
                ""sorbets"",
                ""strobes""
            ],
            [
                ""sunspot"",
                ""unstops""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
611,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dit"", ""itd"", ""tid"", ""prem"", ""perm"", ""glover"", ""grovel"", ""scanted"", ""decants"", ""descant"", ""groped"", ""podger"", ""braille"", ""liberal"", ""tanbur"", ""turban"", ""anthesis"", ""sheitans"", ""scions"", ""coisns"", ""cosins"", ""certainest"", ""intercaste""]
","[[""anthesis"", ""sheitans""], [""braille"", ""liberal""], [""certainest"", ""intercaste""], [""coisns"", ""cosins"", ""scions""], [""decants"", ""descant"", ""scanted""], [""dit"", ""itd"", ""tid""], [""glover"", ""grovel""], [""groped"", ""podger""], [""perm"", ""prem""], [""tanbur"", ""turban""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dit\"", \""itd\"", \""tid\"", \""prem\"", \""perm\"", \""glover\"", \""grovel\"", \""scanted\"", \""decants\"", \""descant\"", \""groped\"", \""podger\"", \""braille\"", \""liberal\"", \""tanbur\"", \""turban\"", \""anthesis\"", \""sheitans\"", \""scions\"", \""coisns\"", \""cosins\"", \""certainest\"", \""intercaste\""]\n"",
    ""answer"": ""[[\""anthesis\"", \""sheitans\""], [\""braille\"", \""liberal\""], [\""certainest\"", \""intercaste\""], [\""coisns\"", \""cosins\"", \""scions\""], [\""decants\"", \""descant\"", \""scanted\""], [\""dit\"", \""itd\"", \""tid\""], [\""glover\"", \""grovel\""], [\""groped\"", \""podger\""], [\""perm\"", \""prem\""], [\""tanbur\"", \""turban\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 611,
        ""words"": [
            ""dit"",
            ""itd"",
            ""tid"",
            ""prem"",
            ""perm"",
            ""glover"",
            ""grovel"",
            ""scanted"",
            ""decants"",
            ""descant"",
            ""groped"",
            ""podger"",
            ""braille"",
            ""liberal"",
            ""tanbur"",
            ""turban"",
            ""anthesis"",
            ""sheitans"",
            ""scions"",
            ""coisns"",
            ""cosins"",
            ""certainest"",
            ""intercaste""
        ],
        ""solution"": [
            [
                ""anthesis"",
                ""sheitans""
            ],
            [
                ""braille"",
                ""liberal""
            ],
            [
                ""certainest"",
                ""intercaste""
            ],
            [
                ""coisns"",
                ""cosins"",
                ""scions""
            ],
            [
                ""decants"",
                ""descant"",
                ""scanted""
            ],
            [
                ""dit"",
                ""itd"",
                ""tid""
            ],
            [
                ""glover"",
                ""grovel""
            ],
            [
                ""groped"",
                ""podger""
            ],
            [
                ""perm"",
                ""prem""
            ],
            [
                ""tanbur"",
                ""turban""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
612,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""crapulous"", ""opuscular"", ""venerates"", ""enervates"", ""what"", ""thaw"", ""wath"", ""arbuscle"", ""buscarle"", ""knute"", ""unket"", ""espied"", ""peised"", ""tenovaginitis"", ""investigation"", ""weirless"", ""wireless"", ""unadroitly"", ""undilatory""]
","[[""arbuscle"", ""buscarle""], [""crapulous"", ""opuscular""], [""enervates"", ""venerates""], [""espied"", ""peised""], [""investigation"", ""tenovaginitis""], [""knute"", ""unket""], [""thaw"", ""wath"", ""what""], [""unadroitly"", ""undilatory""], [""weirless"", ""wireless""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""crapulous\"", \""opuscular\"", \""venerates\"", \""enervates\"", \""what\"", \""thaw\"", \""wath\"", \""arbuscle\"", \""buscarle\"", \""knute\"", \""unket\"", \""espied\"", \""peised\"", \""tenovaginitis\"", \""investigation\"", \""weirless\"", \""wireless\"", \""unadroitly\"", \""undilatory\""]\n"",
    ""answer"": ""[[\""arbuscle\"", \""buscarle\""], [\""crapulous\"", \""opuscular\""], [\""enervates\"", \""venerates\""], [\""espied\"", \""peised\""], [\""investigation\"", \""tenovaginitis\""], [\""knute\"", \""unket\""], [\""thaw\"", \""wath\"", \""what\""], [\""unadroitly\"", \""undilatory\""], [\""weirless\"", \""wireless\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 612,
        ""words"": [
            ""crapulous"",
            ""opuscular"",
            ""venerates"",
            ""enervates"",
            ""what"",
            ""thaw"",
            ""wath"",
            ""arbuscle"",
            ""buscarle"",
            ""knute"",
            ""unket"",
            ""espied"",
            ""peised"",
            ""tenovaginitis"",
            ""investigation"",
            ""weirless"",
            ""wireless"",
            ""unadroitly"",
            ""undilatory""
        ],
        ""solution"": [
            [
                ""arbuscle"",
                ""buscarle""
            ],
            [
                ""crapulous"",
                ""opuscular""
            ],
            [
                ""enervates"",
                ""venerates""
            ],
            [
                ""espied"",
                ""peised""
            ],
            [
                ""investigation"",
                ""tenovaginitis""
            ],
            [
                ""knute"",
                ""unket""
            ],
            [
                ""thaw"",
                ""wath"",
                ""what""
            ],
            [
                ""unadroitly"",
                ""undilatory""
            ],
            [
                ""weirless"",
                ""wireless""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
613,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""laniard"", ""nadiral"", ""bondar"", ""roband"", ""bandor"", ""salometer"", ""elastomer"", ""pirssonite"", ""trispinose"", ""radiale"", ""ardelia""]
","[[""ardelia"", ""radiale""], [""bandor"", ""bondar"", ""roband""], [""elastomer"", ""salometer""], [""laniard"", ""nadiral""], [""pirssonite"", ""trispinose""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""laniard\"", \""nadiral\"", \""bondar\"", \""roband\"", \""bandor\"", \""salometer\"", \""elastomer\"", \""pirssonite\"", \""trispinose\"", \""radiale\"", \""ardelia\""]\n"",
    ""answer"": ""[[\""ardelia\"", \""radiale\""], [\""bandor\"", \""bondar\"", \""roband\""], [\""elastomer\"", \""salometer\""], [\""laniard\"", \""nadiral\""], [\""pirssonite\"", \""trispinose\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 613,
        ""words"": [
            ""laniard"",
            ""nadiral"",
            ""bondar"",
            ""roband"",
            ""bandor"",
            ""salometer"",
            ""elastomer"",
            ""pirssonite"",
            ""trispinose"",
            ""radiale"",
            ""ardelia""
        ],
        ""solution"": [
            [
                ""ardelia"",
                ""radiale""
            ],
            [
                ""bandor"",
                ""bondar"",
                ""roband""
            ],
            [
                ""elastomer"",
                ""salometer""
            ],
            [
                ""laniard"",
                ""nadiral""
            ],
            [
                ""pirssonite"",
                ""trispinose""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
614,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ragouted"", ""outraged"", ""juang"", ""gunja"", ""kogai"", ""kogia"", ""nebrodi"", ""broiden"", ""thereonto"", ""notothere"", ""olepy"", ""poley"", ""topcast"", ""postact""]
","[[""broiden"", ""nebrodi""], [""gunja"", ""juang""], [""kogai"", ""kogia""], [""notothere"", ""thereonto""], [""olepy"", ""poley""], [""outraged"", ""ragouted""], [""postact"", ""topcast""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ragouted\"", \""outraged\"", \""juang\"", \""gunja\"", \""kogai\"", \""kogia\"", \""nebrodi\"", \""broiden\"", \""thereonto\"", \""notothere\"", \""olepy\"", \""poley\"", \""topcast\"", \""postact\""]\n"",
    ""answer"": ""[[\""broiden\"", \""nebrodi\""], [\""gunja\"", \""juang\""], [\""kogai\"", \""kogia\""], [\""notothere\"", \""thereonto\""], [\""olepy\"", \""poley\""], [\""outraged\"", \""ragouted\""], [\""postact\"", \""topcast\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 614,
        ""words"": [
            ""ragouted"",
            ""outraged"",
            ""juang"",
            ""gunja"",
            ""kogai"",
            ""kogia"",
            ""nebrodi"",
            ""broiden"",
            ""thereonto"",
            ""notothere"",
            ""olepy"",
            ""poley"",
            ""topcast"",
            ""postact""
        ],
        ""solution"": [
            [
                ""broiden"",
                ""nebrodi""
            ],
            [
                ""gunja"",
                ""juang""
            ],
            [
                ""kogai"",
                ""kogia""
            ],
            [
                ""notothere"",
                ""thereonto""
            ],
            [
                ""olepy"",
                ""poley""
            ],
            [
                ""outraged"",
                ""ragouted""
            ],
            [
                ""postact"",
                ""topcast""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
615,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""defterdar"", ""redrafted"", ""lours"", ""slour"", ""amlacra"", ""calamar"", ""supplanter"", ""superplant"", ""doctrinairism"", ""discriminator"", ""energetistic"", ""energeticist"", ""tiepins"", ""penitis"", ""piniest"", ""pinites"", ""cuvies"", ""suevic"", ""antiracer"", ""interacra"", ""episedia"", ""sepiidae""]
","[[""amlacra"", ""calamar""], [""antiracer"", ""interacra""], [""cuvies"", ""suevic""], [""defterdar"", ""redrafted""], [""discriminator"", ""doctrinairism""], [""energeticist"", ""energetistic""], [""episedia"", ""sepiidae""], [""lours"", ""slour""], [""penitis"", ""piniest"", ""pinites"", ""tiepins""], [""superplant"", ""supplanter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""defterdar\"", \""redrafted\"", \""lours\"", \""slour\"", \""amlacra\"", \""calamar\"", \""supplanter\"", \""superplant\"", \""doctrinairism\"", \""discriminator\"", \""energetistic\"", \""energeticist\"", \""tiepins\"", \""penitis\"", \""piniest\"", \""pinites\"", \""cuvies\"", \""suevic\"", \""antiracer\"", \""interacra\"", \""episedia\"", \""sepiidae\""]\n"",
    ""answer"": ""[[\""amlacra\"", \""calamar\""], [\""antiracer\"", \""interacra\""], [\""cuvies\"", \""suevic\""], [\""defterdar\"", \""redrafted\""], [\""discriminator\"", \""doctrinairism\""], [\""energeticist\"", \""energetistic\""], [\""episedia\"", \""sepiidae\""], [\""lours\"", \""slour\""], [\""penitis\"", \""piniest\"", \""pinites\"", \""tiepins\""], [\""superplant\"", \""supplanter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 615,
        ""words"": [
            ""defterdar"",
            ""redrafted"",
            ""lours"",
            ""slour"",
            ""amlacra"",
            ""calamar"",
            ""supplanter"",
            ""superplant"",
            ""doctrinairism"",
            ""discriminator"",
            ""energetistic"",
            ""energeticist"",
            ""tiepins"",
            ""penitis"",
            ""piniest"",
            ""pinites"",
            ""cuvies"",
            ""suevic"",
            ""antiracer"",
            ""interacra"",
            ""episedia"",
            ""sepiidae""
        ],
        ""solution"": [
            [
                ""amlacra"",
                ""calamar""
            ],
            [
                ""antiracer"",
                ""interacra""
            ],
            [
                ""cuvies"",
                ""suevic""
            ],
            [
                ""defterdar"",
                ""redrafted""
            ],
            [
                ""discriminator"",
                ""doctrinairism""
            ],
            [
                ""energeticist"",
                ""energetistic""
            ],
            [
                ""episedia"",
                ""sepiidae""
            ],
            [
                ""lours"",
                ""slour""
            ],
            [
                ""penitis"",
                ""piniest"",
                ""pinites"",
                ""tiepins""
            ],
            [
                ""superplant"",
                ""supplanter""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
616,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""impenetrable"", ""intemperable"", ""incarnate"", ""nectarian"", ""cratinean"", ""holidays"", ""hyaloids"", ""phocaenine"", ""phoenicean""]
","[[""cratinean"", ""incarnate"", ""nectarian""], [""holidays"", ""hyaloids""], [""impenetrable"", ""intemperable""], [""phocaenine"", ""phoenicean""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""impenetrable\"", \""intemperable\"", \""incarnate\"", \""nectarian\"", \""cratinean\"", \""holidays\"", \""hyaloids\"", \""phocaenine\"", \""phoenicean\""]\n"",
    ""answer"": ""[[\""cratinean\"", \""incarnate\"", \""nectarian\""], [\""holidays\"", \""hyaloids\""], [\""impenetrable\"", \""intemperable\""], [\""phocaenine\"", \""phoenicean\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 616,
        ""words"": [
            ""impenetrable"",
            ""intemperable"",
            ""incarnate"",
            ""nectarian"",
            ""cratinean"",
            ""holidays"",
            ""hyaloids"",
            ""phocaenine"",
            ""phoenicean""
        ],
        ""solution"": [
            [
                ""cratinean"",
                ""incarnate"",
                ""nectarian""
            ],
            [
                ""holidays"",
                ""hyaloids""
            ],
            [
                ""impenetrable"",
                ""intemperable""
            ],
            [
                ""phocaenine"",
                ""phoenicean""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
617,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""capes"", ""paces"", ""scape"", ""space"", ""unarticled"", ""denticular"", ""euclase"", ""escuela"", ""loave"", ""laevo"", ""itoism"", ""omitis"", ""rawness"", ""answers"", ""meter"", ""remet""]
","[[""answers"", ""rawness""], [""capes"", ""paces"", ""scape"", ""space""], [""denticular"", ""unarticled""], [""escuela"", ""euclase""], [""itoism"", ""omitis""], [""laevo"", ""loave""], [""meter"", ""remet""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""capes\"", \""paces\"", \""scape\"", \""space\"", \""unarticled\"", \""denticular\"", \""euclase\"", \""escuela\"", \""loave\"", \""laevo\"", \""itoism\"", \""omitis\"", \""rawness\"", \""answers\"", \""meter\"", \""remet\""]\n"",
    ""answer"": ""[[\""answers\"", \""rawness\""], [\""capes\"", \""paces\"", \""scape\"", \""space\""], [\""denticular\"", \""unarticled\""], [\""escuela\"", \""euclase\""], [\""itoism\"", \""omitis\""], [\""laevo\"", \""loave\""], [\""meter\"", \""remet\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 617,
        ""words"": [
            ""capes"",
            ""paces"",
            ""scape"",
            ""space"",
            ""unarticled"",
            ""denticular"",
            ""euclase"",
            ""escuela"",
            ""loave"",
            ""laevo"",
            ""itoism"",
            ""omitis"",
            ""rawness"",
            ""answers"",
            ""meter"",
            ""remet""
        ],
        ""solution"": [
            [
                ""answers"",
                ""rawness""
            ],
            [
                ""capes"",
                ""paces"",
                ""scape"",
                ""space""
            ],
            [
                ""denticular"",
                ""unarticled""
            ],
            [
                ""escuela"",
                ""euclase""
            ],
            [
                ""itoism"",
                ""omitis""
            ],
            [
                ""laevo"",
                ""loave""
            ],
            [
                ""meter"",
                ""remet""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
618,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""masculist"", ""simulcast"", ""misrepresenter"", ""remisrepresent"", ""belabor"", ""borable"", ""ufs"", ""suf"", ""laund"", ""dunal"", ""ulnad"", ""serenes"", ""ernesse"", ""entortill"", ""intertoll""]
","[[""belabor"", ""borable""], [""dunal"", ""laund"", ""ulnad""], [""entortill"", ""intertoll""], [""ernesse"", ""serenes""], [""masculist"", ""simulcast""], [""misrepresenter"", ""remisrepresent""], [""suf"", ""ufs""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""masculist\"", \""simulcast\"", \""misrepresenter\"", \""remisrepresent\"", \""belabor\"", \""borable\"", \""ufs\"", \""suf\"", \""laund\"", \""dunal\"", \""ulnad\"", \""serenes\"", \""ernesse\"", \""entortill\"", \""intertoll\""]\n"",
    ""answer"": ""[[\""belabor\"", \""borable\""], [\""dunal\"", \""laund\"", \""ulnad\""], [\""entortill\"", \""intertoll\""], [\""ernesse\"", \""serenes\""], [\""masculist\"", \""simulcast\""], [\""misrepresenter\"", \""remisrepresent\""], [\""suf\"", \""ufs\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 618,
        ""words"": [
            ""masculist"",
            ""simulcast"",
            ""misrepresenter"",
            ""remisrepresent"",
            ""belabor"",
            ""borable"",
            ""ufs"",
            ""suf"",
            ""laund"",
            ""dunal"",
            ""ulnad"",
            ""serenes"",
            ""ernesse"",
            ""entortill"",
            ""intertoll""
        ],
        ""solution"": [
            [
                ""belabor"",
                ""borable""
            ],
            [
                ""dunal"",
                ""laund"",
                ""ulnad""
            ],
            [
                ""entortill"",
                ""intertoll""
            ],
            [
                ""ernesse"",
                ""serenes""
            ],
            [
                ""masculist"",
                ""simulcast""
            ],
            [
                ""misrepresenter"",
                ""remisrepresent""
            ],
            [
                ""suf"",
                ""ufs""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
619,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reuniters"", ""turneries"", ""yardwork"", ""workyard""]
","[[""reuniters"", ""turneries""], [""workyard"", ""yardwork""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reuniters\"", \""turneries\"", \""yardwork\"", \""workyard\""]\n"",
    ""answer"": ""[[\""reuniters\"", \""turneries\""], [\""workyard\"", \""yardwork\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 619,
        ""words"": [
            ""reuniters"",
            ""turneries"",
            ""yardwork"",
            ""workyard""
        ],
        ""solution"": [
            [
                ""reuniters"",
                ""turneries""
            ],
            [
                ""workyard"",
                ""yardwork""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
620,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""guineaman"", ""guanamine"", ""ingathers"", ""nearsight"", ""showered"", ""reshowed"", ""halicot"", ""tachiol""]
","[[""guanamine"", ""guineaman""], [""halicot"", ""tachiol""], [""ingathers"", ""nearsight""], [""reshowed"", ""showered""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""guineaman\"", \""guanamine\"", \""ingathers\"", \""nearsight\"", \""showered\"", \""reshowed\"", \""halicot\"", \""tachiol\""]\n"",
    ""answer"": ""[[\""guanamine\"", \""guineaman\""], [\""halicot\"", \""tachiol\""], [\""ingathers\"", \""nearsight\""], [\""reshowed\"", \""showered\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 620,
        ""words"": [
            ""guineaman"",
            ""guanamine"",
            ""ingathers"",
            ""nearsight"",
            ""showered"",
            ""reshowed"",
            ""halicot"",
            ""tachiol""
        ],
        ""solution"": [
            [
                ""guanamine"",
                ""guineaman""
            ],
            [
                ""halicot"",
                ""tachiol""
            ],
            [
                ""ingathers"",
                ""nearsight""
            ],
            [
                ""reshowed"",
                ""showered""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
621,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""subet"", ""tubes"", ""stube"", ""ink"", ""kin"", ""blague"", ""beluga"", ""ganner"", ""nanger"", ""splendor"", ""speldron"", ""laced"", ""clead"", ""decal"", ""clade"", ""pesah"", ""ephas"", ""ns"", ""sn"", ""prebridal"", ""pearlbird""]
","[[""beluga"", ""blague""], [""clade"", ""clead"", ""decal"", ""laced""], [""ephas"", ""pesah""], [""ganner"", ""nanger""], [""ink"", ""kin""], [""ns"", ""sn""], [""pearlbird"", ""prebridal""], [""speldron"", ""splendor""], [""stube"", ""subet"", ""tubes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""subet\"", \""tubes\"", \""stube\"", \""ink\"", \""kin\"", \""blague\"", \""beluga\"", \""ganner\"", \""nanger\"", \""splendor\"", \""speldron\"", \""laced\"", \""clead\"", \""decal\"", \""clade\"", \""pesah\"", \""ephas\"", \""ns\"", \""sn\"", \""prebridal\"", \""pearlbird\""]\n"",
    ""answer"": ""[[\""beluga\"", \""blague\""], [\""clade\"", \""clead\"", \""decal\"", \""laced\""], [\""ephas\"", \""pesah\""], [\""ganner\"", \""nanger\""], [\""ink\"", \""kin\""], [\""ns\"", \""sn\""], [\""pearlbird\"", \""prebridal\""], [\""speldron\"", \""splendor\""], [\""stube\"", \""subet\"", \""tubes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 621,
        ""words"": [
            ""subet"",
            ""tubes"",
            ""stube"",
            ""ink"",
            ""kin"",
            ""blague"",
            ""beluga"",
            ""ganner"",
            ""nanger"",
            ""splendor"",
            ""speldron"",
            ""laced"",
            ""clead"",
            ""decal"",
            ""clade"",
            ""pesah"",
            ""ephas"",
            ""ns"",
            ""sn"",
            ""prebridal"",
            ""pearlbird""
        ],
        ""solution"": [
            [
                ""beluga"",
                ""blague""
            ],
            [
                ""clade"",
                ""clead"",
                ""decal"",
                ""laced""
            ],
            [
                ""ephas"",
                ""pesah""
            ],
            [
                ""ganner"",
                ""nanger""
            ],
            [
                ""ink"",
                ""kin""
            ],
            [
                ""ns"",
                ""sn""
            ],
            [
                ""pearlbird"",
                ""prebridal""
            ],
            [
                ""speldron"",
                ""splendor""
            ],
            [
                ""stube"",
                ""subet"",
                ""tubes""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
622,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ulaula"", ""laulau"", ""slipcover"", ""coverslip"", ""outfeel"", ""outflee"", ""riles"", ""liers"", ""riels"", ""sammel"", ""lemmas"", ""tropaia"", ""atropia"", ""kames"", ""makes"", ""samek"", ""epilatory"", ""petiolary""]
","[[""atropia"", ""tropaia""], [""coverslip"", ""slipcover""], [""epilatory"", ""petiolary""], [""kames"", ""makes"", ""samek""], [""laulau"", ""ulaula""], [""lemmas"", ""sammel""], [""liers"", ""riels"", ""riles""], [""outfeel"", ""outflee""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ulaula\"", \""laulau\"", \""slipcover\"", \""coverslip\"", \""outfeel\"", \""outflee\"", \""riles\"", \""liers\"", \""riels\"", \""sammel\"", \""lemmas\"", \""tropaia\"", \""atropia\"", \""kames\"", \""makes\"", \""samek\"", \""epilatory\"", \""petiolary\""]\n"",
    ""answer"": ""[[\""atropia\"", \""tropaia\""], [\""coverslip\"", \""slipcover\""], [\""epilatory\"", \""petiolary\""], [\""kames\"", \""makes\"", \""samek\""], [\""laulau\"", \""ulaula\""], [\""lemmas\"", \""sammel\""], [\""liers\"", \""riels\"", \""riles\""], [\""outfeel\"", \""outflee\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 622,
        ""words"": [
            ""ulaula"",
            ""laulau"",
            ""slipcover"",
            ""coverslip"",
            ""outfeel"",
            ""outflee"",
            ""riles"",
            ""liers"",
            ""riels"",
            ""sammel"",
            ""lemmas"",
            ""tropaia"",
            ""atropia"",
            ""kames"",
            ""makes"",
            ""samek"",
            ""epilatory"",
            ""petiolary""
        ],
        ""solution"": [
            [
                ""atropia"",
                ""tropaia""
            ],
            [
                ""coverslip"",
                ""slipcover""
            ],
            [
                ""epilatory"",
                ""petiolary""
            ],
            [
                ""kames"",
                ""makes"",
                ""samek""
            ],
            [
                ""laulau"",
                ""ulaula""
            ],
            [
                ""lemmas"",
                ""sammel""
            ],
            [
                ""liers"",
                ""riels"",
                ""riles""
            ],
            [
                ""outfeel"",
                ""outflee""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
623,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""boardly"", ""broadly"", ""codomain"", ""damonico"", ""monoacid""]
","[[""boardly"", ""broadly""], [""codomain"", ""damonico"", ""monoacid""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""boardly\"", \""broadly\"", \""codomain\"", \""damonico\"", \""monoacid\""]\n"",
    ""answer"": ""[[\""boardly\"", \""broadly\""], [\""codomain\"", \""damonico\"", \""monoacid\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 623,
        ""words"": [
            ""boardly"",
            ""broadly"",
            ""codomain"",
            ""damonico"",
            ""monoacid""
        ],
        ""solution"": [
            [
                ""boardly"",
                ""broadly""
            ],
            [
                ""codomain"",
                ""damonico"",
                ""monoacid""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
624,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""impenitent"", ""pentimenti"", ""ardennite"", ""entrained"", ""alc"", ""lac"", ""neatherdess"", ""heartedness"", ""feer"", ""free"", ""amenta"", ""amante"", ""teaman"", ""godlier"", ""gloried"", ""kiluba"", ""kabuli"", ""hydrosulphate"", ""sulphohydrate""]
","[[""alc"", ""lac""], [""amante"", ""amenta"", ""teaman""], [""ardennite"", ""entrained""], [""feer"", ""free""], [""gloried"", ""godlier""], [""heartedness"", ""neatherdess""], [""hydrosulphate"", ""sulphohydrate""], [""impenitent"", ""pentimenti""], [""kabuli"", ""kiluba""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""impenitent\"", \""pentimenti\"", \""ardennite\"", \""entrained\"", \""alc\"", \""lac\"", \""neatherdess\"", \""heartedness\"", \""feer\"", \""free\"", \""amenta\"", \""amante\"", \""teaman\"", \""godlier\"", \""gloried\"", \""kiluba\"", \""kabuli\"", \""hydrosulphate\"", \""sulphohydrate\""]\n"",
    ""answer"": ""[[\""alc\"", \""lac\""], [\""amante\"", \""amenta\"", \""teaman\""], [\""ardennite\"", \""entrained\""], [\""feer\"", \""free\""], [\""gloried\"", \""godlier\""], [\""heartedness\"", \""neatherdess\""], [\""hydrosulphate\"", \""sulphohydrate\""], [\""impenitent\"", \""pentimenti\""], [\""kabuli\"", \""kiluba\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 624,
        ""words"": [
            ""impenitent"",
            ""pentimenti"",
            ""ardennite"",
            ""entrained"",
            ""alc"",
            ""lac"",
            ""neatherdess"",
            ""heartedness"",
            ""feer"",
            ""free"",
            ""amenta"",
            ""amante"",
            ""teaman"",
            ""godlier"",
            ""gloried"",
            ""kiluba"",
            ""kabuli"",
            ""hydrosulphate"",
            ""sulphohydrate""
        ],
        ""solution"": [
            [
                ""alc"",
                ""lac""
            ],
            [
                ""amante"",
                ""amenta"",
                ""teaman""
            ],
            [
                ""ardennite"",
                ""entrained""
            ],
            [
                ""feer"",
                ""free""
            ],
            [
                ""gloried"",
                ""godlier""
            ],
            [
                ""heartedness"",
                ""neatherdess""
            ],
            [
                ""hydrosulphate"",
                ""sulphohydrate""
            ],
            [
                ""impenitent"",
                ""pentimenti""
            ],
            [
                ""kabuli"",
                ""kiluba""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
625,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""uncope"", ""pounce"", ""hackling"", ""chalking"", ""crayoned"", ""deaconry"", ""chantress"", ""stanchers"", ""tilled"", ""lilted"", ""upcoiled"", ""clupeiod"", ""clupeoid"", ""ignorance"", ""enorganic""]
","[[""chalking"", ""hackling""], [""chantress"", ""stanchers""], [""clupeiod"", ""clupeoid"", ""upcoiled""], [""crayoned"", ""deaconry""], [""enorganic"", ""ignorance""], [""lilted"", ""tilled""], [""pounce"", ""uncope""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""uncope\"", \""pounce\"", \""hackling\"", \""chalking\"", \""crayoned\"", \""deaconry\"", \""chantress\"", \""stanchers\"", \""tilled\"", \""lilted\"", \""upcoiled\"", \""clupeiod\"", \""clupeoid\"", \""ignorance\"", \""enorganic\""]\n"",
    ""answer"": ""[[\""chalking\"", \""hackling\""], [\""chantress\"", \""stanchers\""], [\""clupeiod\"", \""clupeoid\"", \""upcoiled\""], [\""crayoned\"", \""deaconry\""], [\""enorganic\"", \""ignorance\""], [\""lilted\"", \""tilled\""], [\""pounce\"", \""uncope\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 625,
        ""words"": [
            ""uncope"",
            ""pounce"",
            ""hackling"",
            ""chalking"",
            ""crayoned"",
            ""deaconry"",
            ""chantress"",
            ""stanchers"",
            ""tilled"",
            ""lilted"",
            ""upcoiled"",
            ""clupeiod"",
            ""clupeoid"",
            ""ignorance"",
            ""enorganic""
        ],
        ""solution"": [
            [
                ""chalking"",
                ""hackling""
            ],
            [
                ""chantress"",
                ""stanchers""
            ],
            [
                ""clupeiod"",
                ""clupeoid"",
                ""upcoiled""
            ],
            [
                ""crayoned"",
                ""deaconry""
            ],
            [
                ""enorganic"",
                ""ignorance""
            ],
            [
                ""lilted"",
                ""tilled""
            ],
            [
                ""pounce"",
                ""uncope""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
626,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""clupein"", ""clupien"", ""alveus"", ""values"", ""avulse"", ""nl"", ""ln"", ""grama"", ""marga""]
","[[""alveus"", ""avulse"", ""values""], [""clupein"", ""clupien""], [""grama"", ""marga""], [""ln"", ""nl""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""clupein\"", \""clupien\"", \""alveus\"", \""values\"", \""avulse\"", \""nl\"", \""ln\"", \""grama\"", \""marga\""]\n"",
    ""answer"": ""[[\""alveus\"", \""avulse\"", \""values\""], [\""clupein\"", \""clupien\""], [\""grama\"", \""marga\""], [\""ln\"", \""nl\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 626,
        ""words"": [
            ""clupein"",
            ""clupien"",
            ""alveus"",
            ""values"",
            ""avulse"",
            ""nl"",
            ""ln"",
            ""grama"",
            ""marga""
        ],
        ""solution"": [
            [
                ""alveus"",
                ""avulse"",
                ""values""
            ],
            [
                ""clupein"",
                ""clupien""
            ],
            [
                ""grama"",
                ""marga""
            ],
            [
                ""ln"",
                ""nl""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
627,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""viperous"", ""previous"", ""pervious"", ""herself"", ""flesher"", ""rober"", ""rerob"", ""haemic"", ""achime"", ""peracidity"", ""preacidity"", ""bescours"", ""obscures""]
","[[""achime"", ""haemic""], [""bescours"", ""obscures""], [""flesher"", ""herself""], [""peracidity"", ""preacidity""], [""pervious"", ""previous"", ""viperous""], [""rerob"", ""rober""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""viperous\"", \""previous\"", \""pervious\"", \""herself\"", \""flesher\"", \""rober\"", \""rerob\"", \""haemic\"", \""achime\"", \""peracidity\"", \""preacidity\"", \""bescours\"", \""obscures\""]\n"",
    ""answer"": ""[[\""achime\"", \""haemic\""], [\""bescours\"", \""obscures\""], [\""flesher\"", \""herself\""], [\""peracidity\"", \""preacidity\""], [\""pervious\"", \""previous\"", \""viperous\""], [\""rerob\"", \""rober\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 627,
        ""words"": [
            ""viperous"",
            ""previous"",
            ""pervious"",
            ""herself"",
            ""flesher"",
            ""rober"",
            ""rerob"",
            ""haemic"",
            ""achime"",
            ""peracidity"",
            ""preacidity"",
            ""bescours"",
            ""obscures""
        ],
        ""solution"": [
            [
                ""achime"",
                ""haemic""
            ],
            [
                ""bescours"",
                ""obscures""
            ],
            [
                ""flesher"",
                ""herself""
            ],
            [
                ""peracidity"",
                ""preacidity""
            ],
            [
                ""pervious"",
                ""previous"",
                ""viperous""
            ],
            [
                ""rerob"",
                ""rober""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
628,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""minestrone"", ""mentioners"", ""lipomyxoma"", ""myxolipoma""]
","[[""lipomyxoma"", ""myxolipoma""], [""mentioners"", ""minestrone""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""minestrone\"", \""mentioners\"", \""lipomyxoma\"", \""myxolipoma\""]\n"",
    ""answer"": ""[[\""lipomyxoma\"", \""myxolipoma\""], [\""mentioners\"", \""minestrone\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 628,
        ""words"": [
            ""minestrone"",
            ""mentioners"",
            ""lipomyxoma"",
            ""myxolipoma""
        ],
        ""solution"": [
            [
                ""lipomyxoma"",
                ""myxolipoma""
            ],
            [
                ""mentioners"",
                ""minestrone""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
629,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""stabulate"", ""tabulates"", ""yeses"", ""eyess"", ""secco"", ""cosec"", ""roti"", ""roit""]
","[[""cosec"", ""secco""], [""eyess"", ""yeses""], [""roit"", ""roti""], [""stabulate"", ""tabulates""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""stabulate\"", \""tabulates\"", \""yeses\"", \""eyess\"", \""secco\"", \""cosec\"", \""roti\"", \""roit\""]\n"",
    ""answer"": ""[[\""cosec\"", \""secco\""], [\""eyess\"", \""yeses\""], [\""roit\"", \""roti\""], [\""stabulate\"", \""tabulates\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 629,
        ""words"": [
            ""stabulate"",
            ""tabulates"",
            ""yeses"",
            ""eyess"",
            ""secco"",
            ""cosec"",
            ""roti"",
            ""roit""
        ],
        ""solution"": [
            [
                ""cosec"",
                ""secco""
            ],
            [
                ""eyess"",
                ""yeses""
            ],
            [
                ""roit"",
                ""roti""
            ],
            [
                ""stabulate"",
                ""tabulates""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
630,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gradino"", ""idorgan"", ""adoring"", ""roading"", ""recusation"", ""nectarious"", ""cautioners"", ""ceratinous"", ""recompounds"", ""compounders""]
","[[""adoring"", ""gradino"", ""idorgan"", ""roading""], [""cautioners"", ""ceratinous"", ""nectarious"", ""recusation""], [""compounders"", ""recompounds""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gradino\"", \""idorgan\"", \""adoring\"", \""roading\"", \""recusation\"", \""nectarious\"", \""cautioners\"", \""ceratinous\"", \""recompounds\"", \""compounders\""]\n"",
    ""answer"": ""[[\""adoring\"", \""gradino\"", \""idorgan\"", \""roading\""], [\""cautioners\"", \""ceratinous\"", \""nectarious\"", \""recusation\""], [\""compounders\"", \""recompounds\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 630,
        ""words"": [
            ""gradino"",
            ""idorgan"",
            ""adoring"",
            ""roading"",
            ""recusation"",
            ""nectarious"",
            ""cautioners"",
            ""ceratinous"",
            ""recompounds"",
            ""compounders""
        ],
        ""solution"": [
            [
                ""adoring"",
                ""gradino"",
                ""idorgan"",
                ""roading""
            ],
            [
                ""cautioners"",
                ""ceratinous"",
                ""nectarious"",
                ""recusation""
            ],
            [
                ""compounders"",
                ""recompounds""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
631,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""epacrid"", ""peracid"", ""preacid"", ""peamouths"", ""aposthume"", ""pietose"", ""poetise""]
","[[""aposthume"", ""peamouths""], [""epacrid"", ""peracid"", ""preacid""], [""pietose"", ""poetise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""epacrid\"", \""peracid\"", \""preacid\"", \""peamouths\"", \""aposthume\"", \""pietose\"", \""poetise\""]\n"",
    ""answer"": ""[[\""aposthume\"", \""peamouths\""], [\""epacrid\"", \""peracid\"", \""preacid\""], [\""pietose\"", \""poetise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 631,
        ""words"": [
            ""epacrid"",
            ""peracid"",
            ""preacid"",
            ""peamouths"",
            ""aposthume"",
            ""pietose"",
            ""poetise""
        ],
        ""solution"": [
            [
                ""aposthume"",
                ""peamouths""
            ],
            [
                ""epacrid"",
                ""peracid"",
                ""preacid""
            ],
            [
                ""pietose"",
                ""poetise""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
632,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fealty"", ""featly"", ""leeser"", ""reesle"", ""pantry"", ""trypan"", ""ingnue"", ""inguen"", ""ingenu"", ""sulidae"", ""audiles"", ""neocosmic"", ""economics"", ""ellick"", ""illeck"", ""trollopian"", ""pollinator"", ""asserting"", ""astringes"", ""drone"", ""ronde""]
","[[""asserting"", ""astringes""], [""audiles"", ""sulidae""], [""drone"", ""ronde""], [""economics"", ""neocosmic""], [""ellick"", ""illeck""], [""fealty"", ""featly""], [""ingenu"", ""ingnue"", ""inguen""], [""leeser"", ""reesle""], [""pantry"", ""trypan""], [""pollinator"", ""trollopian""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fealty\"", \""featly\"", \""leeser\"", \""reesle\"", \""pantry\"", \""trypan\"", \""ingnue\"", \""inguen\"", \""ingenu\"", \""sulidae\"", \""audiles\"", \""neocosmic\"", \""economics\"", \""ellick\"", \""illeck\"", \""trollopian\"", \""pollinator\"", \""asserting\"", \""astringes\"", \""drone\"", \""ronde\""]\n"",
    ""answer"": ""[[\""asserting\"", \""astringes\""], [\""audiles\"", \""sulidae\""], [\""drone\"", \""ronde\""], [\""economics\"", \""neocosmic\""], [\""ellick\"", \""illeck\""], [\""fealty\"", \""featly\""], [\""ingenu\"", \""ingnue\"", \""inguen\""], [\""leeser\"", \""reesle\""], [\""pantry\"", \""trypan\""], [\""pollinator\"", \""trollopian\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 632,
        ""words"": [
            ""fealty"",
            ""featly"",
            ""leeser"",
            ""reesle"",
            ""pantry"",
            ""trypan"",
            ""ingnue"",
            ""inguen"",
            ""ingenu"",
            ""sulidae"",
            ""audiles"",
            ""neocosmic"",
            ""economics"",
            ""ellick"",
            ""illeck"",
            ""trollopian"",
            ""pollinator"",
            ""asserting"",
            ""astringes"",
            ""drone"",
            ""ronde""
        ],
        ""solution"": [
            [
                ""asserting"",
                ""astringes""
            ],
            [
                ""audiles"",
                ""sulidae""
            ],
            [
                ""drone"",
                ""ronde""
            ],
            [
                ""economics"",
                ""neocosmic""
            ],
            [
                ""ellick"",
                ""illeck""
            ],
            [
                ""fealty"",
                ""featly""
            ],
            [
                ""ingenu"",
                ""ingnue"",
                ""inguen""
            ],
            [
                ""leeser"",
                ""reesle""
            ],
            [
                ""pantry"",
                ""trypan""
            ],
            [
                ""pollinator"",
                ""trollopian""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
633,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""salic"", ""laics"", ""lacis"", ""cappier"", ""epicarp"", ""crappie"", ""grungiest"", ""gesturing"", ""epitrachelia"", ""perichaetial"", ""dyed"", ""eddy"", ""capnoides"", ""caponised"", ""leasings"", ""gainless"", ""glassine"", ""cheat"", ""tache"", ""twiers"", ""wister"", ""writes"", ""angka"", ""kanga""]
","[[""angka"", ""kanga""], [""capnoides"", ""caponised""], [""cappier"", ""crappie"", ""epicarp""], [""cheat"", ""tache""], [""dyed"", ""eddy""], [""epitrachelia"", ""perichaetial""], [""gainless"", ""glassine"", ""leasings""], [""gesturing"", ""grungiest""], [""lacis"", ""laics"", ""salic""], [""twiers"", ""wister"", ""writes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""salic\"", \""laics\"", \""lacis\"", \""cappier\"", \""epicarp\"", \""crappie\"", \""grungiest\"", \""gesturing\"", \""epitrachelia\"", \""perichaetial\"", \""dyed\"", \""eddy\"", \""capnoides\"", \""caponised\"", \""leasings\"", \""gainless\"", \""glassine\"", \""cheat\"", \""tache\"", \""twiers\"", \""wister\"", \""writes\"", \""angka\"", \""kanga\""]\n"",
    ""answer"": ""[[\""angka\"", \""kanga\""], [\""capnoides\"", \""caponised\""], [\""cappier\"", \""crappie\"", \""epicarp\""], [\""cheat\"", \""tache\""], [\""dyed\"", \""eddy\""], [\""epitrachelia\"", \""perichaetial\""], [\""gainless\"", \""glassine\"", \""leasings\""], [\""gesturing\"", \""grungiest\""], [\""lacis\"", \""laics\"", \""salic\""], [\""twiers\"", \""wister\"", \""writes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 633,
        ""words"": [
            ""salic"",
            ""laics"",
            ""lacis"",
            ""cappier"",
            ""epicarp"",
            ""crappie"",
            ""grungiest"",
            ""gesturing"",
            ""epitrachelia"",
            ""perichaetial"",
            ""dyed"",
            ""eddy"",
            ""capnoides"",
            ""caponised"",
            ""leasings"",
            ""gainless"",
            ""glassine"",
            ""cheat"",
            ""tache"",
            ""twiers"",
            ""wister"",
            ""writes"",
            ""angka"",
            ""kanga""
        ],
        ""solution"": [
            [
                ""angka"",
                ""kanga""
            ],
            [
                ""capnoides"",
                ""caponised""
            ],
            [
                ""cappier"",
                ""crappie"",
                ""epicarp""
            ],
            [
                ""cheat"",
                ""tache""
            ],
            [
                ""dyed"",
                ""eddy""
            ],
            [
                ""epitrachelia"",
                ""perichaetial""
            ],
            [
                ""gainless"",
                ""glassine"",
                ""leasings""
            ],
            [
                ""gesturing"",
                ""grungiest""
            ],
            [
                ""lacis"",
                ""laics"",
                ""salic""
            ],
            [
                ""twiers"",
                ""wister"",
                ""writes""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
634,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""underlegate"", ""unrelegated"", ""snider"", ""sinder"", ""rinsed"", ""enlure"", ""unreel"", ""renule"", ""cultch"", ""clutch"", ""gregge"", ""gegger"", ""thecal"", ""thecla"", ""achtel"", ""chalet"", ""ravelings"", ""slavering"", ""ichth"", ""hicht"", ""holdout"", ""outhold""]
","[[""achtel"", ""chalet"", ""thecal"", ""thecla""], [""clutch"", ""cultch""], [""enlure"", ""renule"", ""unreel""], [""gegger"", ""gregge""], [""hicht"", ""ichth""], [""holdout"", ""outhold""], [""ravelings"", ""slavering""], [""rinsed"", ""sinder"", ""snider""], [""underlegate"", ""unrelegated""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""underlegate\"", \""unrelegated\"", \""snider\"", \""sinder\"", \""rinsed\"", \""enlure\"", \""unreel\"", \""renule\"", \""cultch\"", \""clutch\"", \""gregge\"", \""gegger\"", \""thecal\"", \""thecla\"", \""achtel\"", \""chalet\"", \""ravelings\"", \""slavering\"", \""ichth\"", \""hicht\"", \""holdout\"", \""outhold\""]\n"",
    ""answer"": ""[[\""achtel\"", \""chalet\"", \""thecal\"", \""thecla\""], [\""clutch\"", \""cultch\""], [\""enlure\"", \""renule\"", \""unreel\""], [\""gegger\"", \""gregge\""], [\""hicht\"", \""ichth\""], [\""holdout\"", \""outhold\""], [\""ravelings\"", \""slavering\""], [\""rinsed\"", \""sinder\"", \""snider\""], [\""underlegate\"", \""unrelegated\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 634,
        ""words"": [
            ""underlegate"",
            ""unrelegated"",
            ""snider"",
            ""sinder"",
            ""rinsed"",
            ""enlure"",
            ""unreel"",
            ""renule"",
            ""cultch"",
            ""clutch"",
            ""gregge"",
            ""gegger"",
            ""thecal"",
            ""thecla"",
            ""achtel"",
            ""chalet"",
            ""ravelings"",
            ""slavering"",
            ""ichth"",
            ""hicht"",
            ""holdout"",
            ""outhold""
        ],
        ""solution"": [
            [
                ""achtel"",
                ""chalet"",
                ""thecal"",
                ""thecla""
            ],
            [
                ""clutch"",
                ""cultch""
            ],
            [
                ""enlure"",
                ""renule"",
                ""unreel""
            ],
            [
                ""gegger"",
                ""gregge""
            ],
            [
                ""hicht"",
                ""ichth""
            ],
            [
                ""holdout"",
                ""outhold""
            ],
            [
                ""ravelings"",
                ""slavering""
            ],
            [
                ""rinsed"",
                ""sinder"",
                ""snider""
            ],
            [
                ""underlegate"",
                ""unrelegated""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
635,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rohun"", ""huron"", ""enlure"", ""unreel"", ""renule"", ""wardsman"", ""manwards""]
","[[""enlure"", ""renule"", ""unreel""], [""huron"", ""rohun""], [""manwards"", ""wardsman""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rohun\"", \""huron\"", \""enlure\"", \""unreel\"", \""renule\"", \""wardsman\"", \""manwards\""]\n"",
    ""answer"": ""[[\""enlure\"", \""renule\"", \""unreel\""], [\""huron\"", \""rohun\""], [\""manwards\"", \""wardsman\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 635,
        ""words"": [
            ""rohun"",
            ""huron"",
            ""enlure"",
            ""unreel"",
            ""renule"",
            ""wardsman"",
            ""manwards""
        ],
        ""solution"": [
            [
                ""enlure"",
                ""renule"",
                ""unreel""
            ],
            [
                ""huron"",
                ""rohun""
            ],
            [
                ""manwards"",
                ""wardsman""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
636,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sebastine"", ""asbestine"", ""cleopatra"", ""acropetal"", ""enaluron"", ""neuronal"", ""browden"", ""browned"", ""bedrown"", ""gaga"", ""agag"", ""bowless"", ""blowess"", ""sulphohydrate"", ""hydrosulphate"", ""unmailed"", ""adlumine"", ""reeveland"", ""landreeve""]
","[[""acropetal"", ""cleopatra""], [""adlumine"", ""unmailed""], [""agag"", ""gaga""], [""asbestine"", ""sebastine""], [""bedrown"", ""browden"", ""browned""], [""blowess"", ""bowless""], [""enaluron"", ""neuronal""], [""hydrosulphate"", ""sulphohydrate""], [""landreeve"", ""reeveland""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sebastine\"", \""asbestine\"", \""cleopatra\"", \""acropetal\"", \""enaluron\"", \""neuronal\"", \""browden\"", \""browned\"", \""bedrown\"", \""gaga\"", \""agag\"", \""bowless\"", \""blowess\"", \""sulphohydrate\"", \""hydrosulphate\"", \""unmailed\"", \""adlumine\"", \""reeveland\"", \""landreeve\""]\n"",
    ""answer"": ""[[\""acropetal\"", \""cleopatra\""], [\""adlumine\"", \""unmailed\""], [\""agag\"", \""gaga\""], [\""asbestine\"", \""sebastine\""], [\""bedrown\"", \""browden\"", \""browned\""], [\""blowess\"", \""bowless\""], [\""enaluron\"", \""neuronal\""], [\""hydrosulphate\"", \""sulphohydrate\""], [\""landreeve\"", \""reeveland\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 636,
        ""words"": [
            ""sebastine"",
            ""asbestine"",
            ""cleopatra"",
            ""acropetal"",
            ""enaluron"",
            ""neuronal"",
            ""browden"",
            ""browned"",
            ""bedrown"",
            ""gaga"",
            ""agag"",
            ""bowless"",
            ""blowess"",
            ""sulphohydrate"",
            ""hydrosulphate"",
            ""unmailed"",
            ""adlumine"",
            ""reeveland"",
            ""landreeve""
        ],
        ""solution"": [
            [
                ""acropetal"",
                ""cleopatra""
            ],
            [
                ""adlumine"",
                ""unmailed""
            ],
            [
                ""agag"",
                ""gaga""
            ],
            [
                ""asbestine"",
                ""sebastine""
            ],
            [
                ""bedrown"",
                ""browden"",
                ""browned""
            ],
            [
                ""blowess"",
                ""bowless""
            ],
            [
                ""enaluron"",
                ""neuronal""
            ],
            [
                ""hydrosulphate"",
                ""sulphohydrate""
            ],
            [
                ""landreeve"",
                ""reeveland""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
637,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""omitis"", ""itoism"", ""thrang"", ""granth"", ""ganevs"", ""vegans"", ""loaning"", ""loganin"", ""brod"", ""bord"", ""oncost"", ""nostoc"", ""contos""]
","[[""bord"", ""brod""], [""contos"", ""nostoc"", ""oncost""], [""ganevs"", ""vegans""], [""granth"", ""thrang""], [""itoism"", ""omitis""], [""loaning"", ""loganin""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""omitis\"", \""itoism\"", \""thrang\"", \""granth\"", \""ganevs\"", \""vegans\"", \""loaning\"", \""loganin\"", \""brod\"", \""bord\"", \""oncost\"", \""nostoc\"", \""contos\""]\n"",
    ""answer"": ""[[\""bord\"", \""brod\""], [\""contos\"", \""nostoc\"", \""oncost\""], [\""ganevs\"", \""vegans\""], [\""granth\"", \""thrang\""], [\""itoism\"", \""omitis\""], [\""loaning\"", \""loganin\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 637,
        ""words"": [
            ""omitis"",
            ""itoism"",
            ""thrang"",
            ""granth"",
            ""ganevs"",
            ""vegans"",
            ""loaning"",
            ""loganin"",
            ""brod"",
            ""bord"",
            ""oncost"",
            ""nostoc"",
            ""contos""
        ],
        ""solution"": [
            [
                ""bord"",
                ""brod""
            ],
            [
                ""contos"",
                ""nostoc"",
                ""oncost""
            ],
            [
                ""ganevs"",
                ""vegans""
            ],
            [
                ""granth"",
                ""thrang""
            ],
            [
                ""itoism"",
                ""omitis""
            ],
            [
                ""loaning"",
                ""loganin""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
638,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""thwartover"", ""overthwart"", ""bon"", ""nob"", ""greaseless"", ""eelgrasses"", ""atwist"", ""wattis"", ""donis"", ""dinos"", ""lairds"", ""drails"", ""lidars"", ""liards"", ""thence"", ""techne"", ""chenet""]
","[[""atwist"", ""wattis""], [""bon"", ""nob""], [""chenet"", ""techne"", ""thence""], [""dinos"", ""donis""], [""drails"", ""lairds"", ""liards"", ""lidars""], [""eelgrasses"", ""greaseless""], [""overthwart"", ""thwartover""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""thwartover\"", \""overthwart\"", \""bon\"", \""nob\"", \""greaseless\"", \""eelgrasses\"", \""atwist\"", \""wattis\"", \""donis\"", \""dinos\"", \""lairds\"", \""drails\"", \""lidars\"", \""liards\"", \""thence\"", \""techne\"", \""chenet\""]\n"",
    ""answer"": ""[[\""atwist\"", \""wattis\""], [\""bon\"", \""nob\""], [\""chenet\"", \""techne\"", \""thence\""], [\""dinos\"", \""donis\""], [\""drails\"", \""lairds\"", \""liards\"", \""lidars\""], [\""eelgrasses\"", \""greaseless\""], [\""overthwart\"", \""thwartover\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 638,
        ""words"": [
            ""thwartover"",
            ""overthwart"",
            ""bon"",
            ""nob"",
            ""greaseless"",
            ""eelgrasses"",
            ""atwist"",
            ""wattis"",
            ""donis"",
            ""dinos"",
            ""lairds"",
            ""drails"",
            ""lidars"",
            ""liards"",
            ""thence"",
            ""techne"",
            ""chenet""
        ],
        ""solution"": [
            [
                ""atwist"",
                ""wattis""
            ],
            [
                ""bon"",
                ""nob""
            ],
            [
                ""chenet"",
                ""techne"",
                ""thence""
            ],
            [
                ""dinos"",
                ""donis""
            ],
            [
                ""drails"",
                ""lairds"",
                ""liards"",
                ""lidars""
            ],
            [
                ""eelgrasses"",
                ""greaseless""
            ],
            [
                ""overthwart"",
                ""thwartover""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
639,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""torchier"", ""rhetoric"", ""discurre"", ""scurried"", ""roomage"", ""moorage"", ""markets"", ""estmark""]
","[[""discurre"", ""scurried""], [""estmark"", ""markets""], [""moorage"", ""roomage""], [""rhetoric"", ""torchier""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""torchier\"", \""rhetoric\"", \""discurre\"", \""scurried\"", \""roomage\"", \""moorage\"", \""markets\"", \""estmark\""]\n"",
    ""answer"": ""[[\""discurre\"", \""scurried\""], [\""estmark\"", \""markets\""], [\""moorage\"", \""roomage\""], [\""rhetoric\"", \""torchier\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 639,
        ""words"": [
            ""torchier"",
            ""rhetoric"",
            ""discurre"",
            ""scurried"",
            ""roomage"",
            ""moorage"",
            ""markets"",
            ""estmark""
        ],
        ""solution"": [
            [
                ""discurre"",
                ""scurried""
            ],
            [
                ""estmark"",
                ""markets""
            ],
            [
                ""moorage"",
                ""roomage""
            ],
            [
                ""rhetoric"",
                ""torchier""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
640,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""carane"", ""arcane"", ""cairn"", ""crain"", ""naric""]
","[[""arcane"", ""carane""], [""cairn"", ""crain"", ""naric""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""carane\"", \""arcane\"", \""cairn\"", \""crain\"", \""naric\""]\n"",
    ""answer"": ""[[\""arcane\"", \""carane\""], [\""cairn\"", \""crain\"", \""naric\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 640,
        ""words"": [
            ""carane"",
            ""arcane"",
            ""cairn"",
            ""crain"",
            ""naric""
        ],
        ""solution"": [
            [
                ""arcane"",
                ""carane""
            ],
            [
                ""cairn"",
                ""crain"",
                ""naric""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
641,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""depolish"", ""polished"", ""merice"", ""eremic"", ""discernment"", ""rescindment"", ""coeloblastic"", ""blastocoelic"", ""dissave"", ""advises"", ""postless"", ""stopless"", ""spotless"", ""dialister"", ""trailside"", ""deflea"", ""leafed"", ""dipteral"", ""tripedal"", ""monophote"", ""motophone""]
","[[""advises"", ""dissave""], [""blastocoelic"", ""coeloblastic""], [""deflea"", ""leafed""], [""depolish"", ""polished""], [""dialister"", ""trailside""], [""dipteral"", ""tripedal""], [""discernment"", ""rescindment""], [""eremic"", ""merice""], [""monophote"", ""motophone""], [""postless"", ""spotless"", ""stopless""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""depolish\"", \""polished\"", \""merice\"", \""eremic\"", \""discernment\"", \""rescindment\"", \""coeloblastic\"", \""blastocoelic\"", \""dissave\"", \""advises\"", \""postless\"", \""stopless\"", \""spotless\"", \""dialister\"", \""trailside\"", \""deflea\"", \""leafed\"", \""dipteral\"", \""tripedal\"", \""monophote\"", \""motophone\""]\n"",
    ""answer"": ""[[\""advises\"", \""dissave\""], [\""blastocoelic\"", \""coeloblastic\""], [\""deflea\"", \""leafed\""], [\""depolish\"", \""polished\""], [\""dialister\"", \""trailside\""], [\""dipteral\"", \""tripedal\""], [\""discernment\"", \""rescindment\""], [\""eremic\"", \""merice\""], [\""monophote\"", \""motophone\""], [\""postless\"", \""spotless\"", \""stopless\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 641,
        ""words"": [
            ""depolish"",
            ""polished"",
            ""merice"",
            ""eremic"",
            ""discernment"",
            ""rescindment"",
            ""coeloblastic"",
            ""blastocoelic"",
            ""dissave"",
            ""advises"",
            ""postless"",
            ""stopless"",
            ""spotless"",
            ""dialister"",
            ""trailside"",
            ""deflea"",
            ""leafed"",
            ""dipteral"",
            ""tripedal"",
            ""monophote"",
            ""motophone""
        ],
        ""solution"": [
            [
                ""advises"",
                ""dissave""
            ],
            [
                ""blastocoelic"",
                ""coeloblastic""
            ],
            [
                ""deflea"",
                ""leafed""
            ],
            [
                ""depolish"",
                ""polished""
            ],
            [
                ""dialister"",
                ""trailside""
            ],
            [
                ""dipteral"",
                ""tripedal""
            ],
            [
                ""discernment"",
                ""rescindment""
            ],
            [
                ""eremic"",
                ""merice""
            ],
            [
                ""monophote"",
                ""motophone""
            ],
            [
                ""postless"",
                ""spotless"",
                ""stopless""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
642,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""animable"", ""maniable"", ""gelasian"", ""anglaise"", ""galianes"", ""vinelike"", ""veinlike"", ""outrave"", ""avouter"", ""orbitelar"", ""liberator"", ""slivers"", ""silvers"", ""bridles"", ""bilders"", ""concessionaires"", ""concessionaries""]
","[[""anglaise"", ""galianes"", ""gelasian""], [""animable"", ""maniable""], [""avouter"", ""outrave""], [""bilders"", ""bridles""], [""concessionaires"", ""concessionaries""], [""liberator"", ""orbitelar""], [""silvers"", ""slivers""], [""veinlike"", ""vinelike""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""animable\"", \""maniable\"", \""gelasian\"", \""anglaise\"", \""galianes\"", \""vinelike\"", \""veinlike\"", \""outrave\"", \""avouter\"", \""orbitelar\"", \""liberator\"", \""slivers\"", \""silvers\"", \""bridles\"", \""bilders\"", \""concessionaires\"", \""concessionaries\""]\n"",
    ""answer"": ""[[\""anglaise\"", \""galianes\"", \""gelasian\""], [\""animable\"", \""maniable\""], [\""avouter\"", \""outrave\""], [\""bilders\"", \""bridles\""], [\""concessionaires\"", \""concessionaries\""], [\""liberator\"", \""orbitelar\""], [\""silvers\"", \""slivers\""], [\""veinlike\"", \""vinelike\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 642,
        ""words"": [
            ""animable"",
            ""maniable"",
            ""gelasian"",
            ""anglaise"",
            ""galianes"",
            ""vinelike"",
            ""veinlike"",
            ""outrave"",
            ""avouter"",
            ""orbitelar"",
            ""liberator"",
            ""slivers"",
            ""silvers"",
            ""bridles"",
            ""bilders"",
            ""concessionaires"",
            ""concessionaries""
        ],
        ""solution"": [
            [
                ""anglaise"",
                ""galianes"",
                ""gelasian""
            ],
            [
                ""animable"",
                ""maniable""
            ],
            [
                ""avouter"",
                ""outrave""
            ],
            [
                ""bilders"",
                ""bridles""
            ],
            [
                ""concessionaires"",
                ""concessionaries""
            ],
            [
                ""liberator"",
                ""orbitelar""
            ],
            [
                ""silvers"",
                ""slivers""
            ],
            [
                ""veinlike"",
                ""vinelike""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
643,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""roquets"", ""quoters"", ""torques"", ""questor"", ""defet"", ""feted"", ""urled"", ""ruled"", ""duler"", ""lured"", ""pedants"", ""pentads"", ""lecturn"", ""clunter""]
","[[""clunter"", ""lecturn""], [""defet"", ""feted""], [""duler"", ""lured"", ""ruled"", ""urled""], [""pedants"", ""pentads""], [""questor"", ""quoters"", ""roquets"", ""torques""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""roquets\"", \""quoters\"", \""torques\"", \""questor\"", \""defet\"", \""feted\"", \""urled\"", \""ruled\"", \""duler\"", \""lured\"", \""pedants\"", \""pentads\"", \""lecturn\"", \""clunter\""]\n"",
    ""answer"": ""[[\""clunter\"", \""lecturn\""], [\""defet\"", \""feted\""], [\""duler\"", \""lured\"", \""ruled\"", \""urled\""], [\""pedants\"", \""pentads\""], [\""questor\"", \""quoters\"", \""roquets\"", \""torques\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 643,
        ""words"": [
            ""roquets"",
            ""quoters"",
            ""torques"",
            ""questor"",
            ""defet"",
            ""feted"",
            ""urled"",
            ""ruled"",
            ""duler"",
            ""lured"",
            ""pedants"",
            ""pentads"",
            ""lecturn"",
            ""clunter""
        ],
        ""solution"": [
            [
                ""clunter"",
                ""lecturn""
            ],
            [
                ""defet"",
                ""feted""
            ],
            [
                ""duler"",
                ""lured"",
                ""ruled"",
                ""urled""
            ],
            [
                ""pedants"",
                ""pentads""
            ],
            [
                ""questor"",
                ""quoters"",
                ""roquets"",
                ""torques""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
644,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reversing"", ""reserving"", ""tiderip"", ""riptide""]
","[[""reserving"", ""reversing""], [""riptide"", ""tiderip""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reversing\"", \""reserving\"", \""tiderip\"", \""riptide\""]\n"",
    ""answer"": ""[[\""reserving\"", \""reversing\""], [\""riptide\"", \""tiderip\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 644,
        ""words"": [
            ""reversing"",
            ""reserving"",
            ""tiderip"",
            ""riptide""
        ],
        ""solution"": [
            [
                ""reserving"",
                ""reversing""
            ],
            [
                ""riptide"",
                ""tiderip""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
645,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""zila"", ""liza"", ""tambreet"", ""ambrette"", ""monteros"", ""mesotron""]
","[[""ambrette"", ""tambreet""], [""liza"", ""zila""], [""mesotron"", ""monteros""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""zila\"", \""liza\"", \""tambreet\"", \""ambrette\"", \""monteros\"", \""mesotron\""]\n"",
    ""answer"": ""[[\""ambrette\"", \""tambreet\""], [\""liza\"", \""zila\""], [\""mesotron\"", \""monteros\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 645,
        ""words"": [
            ""zila"",
            ""liza"",
            ""tambreet"",
            ""ambrette"",
            ""monteros"",
            ""mesotron""
        ],
        ""solution"": [
            [
                ""ambrette"",
                ""tambreet""
            ],
            [
                ""liza"",
                ""zila""
            ],
            [
                ""mesotron"",
                ""monteros""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
646,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tardo"", ""troad"", ""creeshes"", ""secesher"", ""abby"", ""baby""]
","[[""abby"", ""baby""], [""creeshes"", ""secesher""], [""tardo"", ""troad""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tardo\"", \""troad\"", \""creeshes\"", \""secesher\"", \""abby\"", \""baby\""]\n"",
    ""answer"": ""[[\""abby\"", \""baby\""], [\""creeshes\"", \""secesher\""], [\""tardo\"", \""troad\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 646,
        ""words"": [
            ""tardo"",
            ""troad"",
            ""creeshes"",
            ""secesher"",
            ""abby"",
            ""baby""
        ],
        ""solution"": [
            [
                ""abby"",
                ""baby""
            ],
            [
                ""creeshes"",
                ""secesher""
            ],
            [
                ""tardo"",
                ""troad""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
647,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sestiad"", ""disseat"", ""reconnoiter"", ""reconnoitre"", ""semoted"", ""demotes"", ""anthol"", ""nothal"", ""mirdaha"", ""hadarim"", ""lapp"", ""plap"", ""palp"", ""thiamines"", ""histamine"", ""semihiant"", ""redisable"", ""desirable"", ""callers"", ""scleral"", ""thrashel"", ""threshal""]
","[[""anthol"", ""nothal""], [""callers"", ""scleral""], [""demotes"", ""semoted""], [""desirable"", ""redisable""], [""disseat"", ""sestiad""], [""hadarim"", ""mirdaha""], [""histamine"", ""semihiant"", ""thiamines""], [""lapp"", ""palp"", ""plap""], [""reconnoiter"", ""reconnoitre""], [""thrashel"", ""threshal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sestiad\"", \""disseat\"", \""reconnoiter\"", \""reconnoitre\"", \""semoted\"", \""demotes\"", \""anthol\"", \""nothal\"", \""mirdaha\"", \""hadarim\"", \""lapp\"", \""plap\"", \""palp\"", \""thiamines\"", \""histamine\"", \""semihiant\"", \""redisable\"", \""desirable\"", \""callers\"", \""scleral\"", \""thrashel\"", \""threshal\""]\n"",
    ""answer"": ""[[\""anthol\"", \""nothal\""], [\""callers\"", \""scleral\""], [\""demotes\"", \""semoted\""], [\""desirable\"", \""redisable\""], [\""disseat\"", \""sestiad\""], [\""hadarim\"", \""mirdaha\""], [\""histamine\"", \""semihiant\"", \""thiamines\""], [\""lapp\"", \""palp\"", \""plap\""], [\""reconnoiter\"", \""reconnoitre\""], [\""thrashel\"", \""threshal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 647,
        ""words"": [
            ""sestiad"",
            ""disseat"",
            ""reconnoiter"",
            ""reconnoitre"",
            ""semoted"",
            ""demotes"",
            ""anthol"",
            ""nothal"",
            ""mirdaha"",
            ""hadarim"",
            ""lapp"",
            ""plap"",
            ""palp"",
            ""thiamines"",
            ""histamine"",
            ""semihiant"",
            ""redisable"",
            ""desirable"",
            ""callers"",
            ""scleral"",
            ""thrashel"",
            ""threshal""
        ],
        ""solution"": [
            [
                ""anthol"",
                ""nothal""
            ],
            [
                ""callers"",
                ""scleral""
            ],
            [
                ""demotes"",
                ""semoted""
            ],
            [
                ""desirable"",
                ""redisable""
            ],
            [
                ""disseat"",
                ""sestiad""
            ],
            [
                ""hadarim"",
                ""mirdaha""
            ],
            [
                ""histamine"",
                ""semihiant"",
                ""thiamines""
            ],
            [
                ""lapp"",
                ""palp"",
                ""plap""
            ],
            [
                ""reconnoiter"",
                ""reconnoitre""
            ],
            [
                ""thrashel"",
                ""threshal""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
648,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""spiraeas"", ""serapias"", ""reincentive"", ""internecive"", ""teared"", ""redate"", ""derate"", ""atrede"", ""tarting"", ""ratting"", ""pronto"", ""proton"", ""teerer"", ""retree"", ""glirine"", ""lingier"", ""sacrificator"", ""scarificator"", ""heraldic"", ""heraclid""]
","[[""atrede"", ""derate"", ""redate"", ""teared""], [""glirine"", ""lingier""], [""heraclid"", ""heraldic""], [""internecive"", ""reincentive""], [""pronto"", ""proton""], [""ratting"", ""tarting""], [""retree"", ""teerer""], [""sacrificator"", ""scarificator""], [""serapias"", ""spiraeas""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""spiraeas\"", \""serapias\"", \""reincentive\"", \""internecive\"", \""teared\"", \""redate\"", \""derate\"", \""atrede\"", \""tarting\"", \""ratting\"", \""pronto\"", \""proton\"", \""teerer\"", \""retree\"", \""glirine\"", \""lingier\"", \""sacrificator\"", \""scarificator\"", \""heraldic\"", \""heraclid\""]\n"",
    ""answer"": ""[[\""atrede\"", \""derate\"", \""redate\"", \""teared\""], [\""glirine\"", \""lingier\""], [\""heraclid\"", \""heraldic\""], [\""internecive\"", \""reincentive\""], [\""pronto\"", \""proton\""], [\""ratting\"", \""tarting\""], [\""retree\"", \""teerer\""], [\""sacrificator\"", \""scarificator\""], [\""serapias\"", \""spiraeas\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 648,
        ""words"": [
            ""spiraeas"",
            ""serapias"",
            ""reincentive"",
            ""internecive"",
            ""teared"",
            ""redate"",
            ""derate"",
            ""atrede"",
            ""tarting"",
            ""ratting"",
            ""pronto"",
            ""proton"",
            ""teerer"",
            ""retree"",
            ""glirine"",
            ""lingier"",
            ""sacrificator"",
            ""scarificator"",
            ""heraldic"",
            ""heraclid""
        ],
        ""solution"": [
            [
                ""atrede"",
                ""derate"",
                ""redate"",
                ""teared""
            ],
            [
                ""glirine"",
                ""lingier""
            ],
            [
                ""heraclid"",
                ""heraldic""
            ],
            [
                ""internecive"",
                ""reincentive""
            ],
            [
                ""pronto"",
                ""proton""
            ],
            [
                ""ratting"",
                ""tarting""
            ],
            [
                ""retree"",
                ""teerer""
            ],
            [
                ""sacrificator"",
                ""scarificator""
            ],
            [
                ""serapias"",
                ""spiraeas""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
649,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""skhian"", ""naskhi"", ""pic"", ""cpi"", ""ariidae"", ""raiidae"", ""weaselskin"", ""weakliness"", ""flayer"", ""farley"", ""plasmodic"", ""psalmodic"", ""disfen"", ""fiends"", ""aldermanry"", ""marylander""]
","[[""aldermanry"", ""marylander""], [""ariidae"", ""raiidae""], [""cpi"", ""pic""], [""disfen"", ""fiends""], [""farley"", ""flayer""], [""naskhi"", ""skhian""], [""plasmodic"", ""psalmodic""], [""weakliness"", ""weaselskin""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""skhian\"", \""naskhi\"", \""pic\"", \""cpi\"", \""ariidae\"", \""raiidae\"", \""weaselskin\"", \""weakliness\"", \""flayer\"", \""farley\"", \""plasmodic\"", \""psalmodic\"", \""disfen\"", \""fiends\"", \""aldermanry\"", \""marylander\""]\n"",
    ""answer"": ""[[\""aldermanry\"", \""marylander\""], [\""ariidae\"", \""raiidae\""], [\""cpi\"", \""pic\""], [\""disfen\"", \""fiends\""], [\""farley\"", \""flayer\""], [\""naskhi\"", \""skhian\""], [\""plasmodic\"", \""psalmodic\""], [\""weakliness\"", \""weaselskin\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 649,
        ""words"": [
            ""skhian"",
            ""naskhi"",
            ""pic"",
            ""cpi"",
            ""ariidae"",
            ""raiidae"",
            ""weaselskin"",
            ""weakliness"",
            ""flayer"",
            ""farley"",
            ""plasmodic"",
            ""psalmodic"",
            ""disfen"",
            ""fiends"",
            ""aldermanry"",
            ""marylander""
        ],
        ""solution"": [
            [
                ""aldermanry"",
                ""marylander""
            ],
            [
                ""ariidae"",
                ""raiidae""
            ],
            [
                ""cpi"",
                ""pic""
            ],
            [
                ""disfen"",
                ""fiends""
            ],
            [
                ""farley"",
                ""flayer""
            ],
            [
                ""naskhi"",
                ""skhian""
            ],
            [
                ""plasmodic"",
                ""psalmodic""
            ],
            [
                ""weakliness"",
                ""weaselskin""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
650,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""trocars"", ""carrots"", ""breakstone"", ""stonebreak"", ""invinate"", ""innative"", ""galeid"", ""algedi"", ""dosers"", ""dosser"", ""marbleization"", ""marbelization"", ""phoenicean"", ""phocaenine"", ""trespass"", ""sparsest"", ""straighten"", ""shattering"", ""inpours"", ""prionus""]
","[[""algedi"", ""galeid""], [""breakstone"", ""stonebreak""], [""carrots"", ""trocars""], [""dosers"", ""dosser""], [""innative"", ""invinate""], [""inpours"", ""prionus""], [""marbelization"", ""marbleization""], [""phocaenine"", ""phoenicean""], [""shattering"", ""straighten""], [""sparsest"", ""trespass""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""trocars\"", \""carrots\"", \""breakstone\"", \""stonebreak\"", \""invinate\"", \""innative\"", \""galeid\"", \""algedi\"", \""dosers\"", \""dosser\"", \""marbleization\"", \""marbelization\"", \""phoenicean\"", \""phocaenine\"", \""trespass\"", \""sparsest\"", \""straighten\"", \""shattering\"", \""inpours\"", \""prionus\""]\n"",
    ""answer"": ""[[\""algedi\"", \""galeid\""], [\""breakstone\"", \""stonebreak\""], [\""carrots\"", \""trocars\""], [\""dosers\"", \""dosser\""], [\""innative\"", \""invinate\""], [\""inpours\"", \""prionus\""], [\""marbelization\"", \""marbleization\""], [\""phocaenine\"", \""phoenicean\""], [\""shattering\"", \""straighten\""], [\""sparsest\"", \""trespass\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 650,
        ""words"": [
            ""trocars"",
            ""carrots"",
            ""breakstone"",
            ""stonebreak"",
            ""invinate"",
            ""innative"",
            ""galeid"",
            ""algedi"",
            ""dosers"",
            ""dosser"",
            ""marbleization"",
            ""marbelization"",
            ""phoenicean"",
            ""phocaenine"",
            ""trespass"",
            ""sparsest"",
            ""straighten"",
            ""shattering"",
            ""inpours"",
            ""prionus""
        ],
        ""solution"": [
            [
                ""algedi"",
                ""galeid""
            ],
            [
                ""breakstone"",
                ""stonebreak""
            ],
            [
                ""carrots"",
                ""trocars""
            ],
            [
                ""dosers"",
                ""dosser""
            ],
            [
                ""innative"",
                ""invinate""
            ],
            [
                ""inpours"",
                ""prionus""
            ],
            [
                ""marbelization"",
                ""marbleization""
            ],
            [
                ""phocaenine"",
                ""phoenicean""
            ],
            [
                ""shattering"",
                ""straighten""
            ],
            [
                ""sparsest"",
                ""trespass""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
651,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""paw"", ""wap"", ""trumpets"", ""strumpet"", ""wrothy"", ""worthy"", ""affy"", ""yaff"", ""clarities"", ""eristical"", ""realistic"", ""gibsons"", ""bossing"", ""stoppel"", ""topples"", ""timaua"", ""atuami""]
","[[""affy"", ""yaff""], [""atuami"", ""timaua""], [""bossing"", ""gibsons""], [""clarities"", ""eristical"", ""realistic""], [""paw"", ""wap""], [""stoppel"", ""topples""], [""strumpet"", ""trumpets""], [""worthy"", ""wrothy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""paw\"", \""wap\"", \""trumpets\"", \""strumpet\"", \""wrothy\"", \""worthy\"", \""affy\"", \""yaff\"", \""clarities\"", \""eristical\"", \""realistic\"", \""gibsons\"", \""bossing\"", \""stoppel\"", \""topples\"", \""timaua\"", \""atuami\""]\n"",
    ""answer"": ""[[\""affy\"", \""yaff\""], [\""atuami\"", \""timaua\""], [\""bossing\"", \""gibsons\""], [\""clarities\"", \""eristical\"", \""realistic\""], [\""paw\"", \""wap\""], [\""stoppel\"", \""topples\""], [\""strumpet\"", \""trumpets\""], [\""worthy\"", \""wrothy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 651,
        ""words"": [
            ""paw"",
            ""wap"",
            ""trumpets"",
            ""strumpet"",
            ""wrothy"",
            ""worthy"",
            ""affy"",
            ""yaff"",
            ""clarities"",
            ""eristical"",
            ""realistic"",
            ""gibsons"",
            ""bossing"",
            ""stoppel"",
            ""topples"",
            ""timaua"",
            ""atuami""
        ],
        ""solution"": [
            [
                ""affy"",
                ""yaff""
            ],
            [
                ""atuami"",
                ""timaua""
            ],
            [
                ""bossing"",
                ""gibsons""
            ],
            [
                ""clarities"",
                ""eristical"",
                ""realistic""
            ],
            [
                ""paw"",
                ""wap""
            ],
            [
                ""stoppel"",
                ""topples""
            ],
            [
                ""strumpet"",
                ""trumpets""
            ],
            [
                ""worthy"",
                ""wrothy""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
652,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""manuevers"", ""maneuvers"", ""journeyer"", ""rejourney"", ""enrobing"", ""ringbone"", ""sangir"", ""grains"", ""grasni"", ""headstrongness"", ""strongheadness"", ""subrace"", ""rubaces"", ""esperanto"", ""personate"", ""osteometry"", ""stereotomy""]
","[[""enrobing"", ""ringbone""], [""esperanto"", ""personate""], [""grains"", ""grasni"", ""sangir""], [""headstrongness"", ""strongheadness""], [""journeyer"", ""rejourney""], [""maneuvers"", ""manuevers""], [""osteometry"", ""stereotomy""], [""rubaces"", ""subrace""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""manuevers\"", \""maneuvers\"", \""journeyer\"", \""rejourney\"", \""enrobing\"", \""ringbone\"", \""sangir\"", \""grains\"", \""grasni\"", \""headstrongness\"", \""strongheadness\"", \""subrace\"", \""rubaces\"", \""esperanto\"", \""personate\"", \""osteometry\"", \""stereotomy\""]\n"",
    ""answer"": ""[[\""enrobing\"", \""ringbone\""], [\""esperanto\"", \""personate\""], [\""grains\"", \""grasni\"", \""sangir\""], [\""headstrongness\"", \""strongheadness\""], [\""journeyer\"", \""rejourney\""], [\""maneuvers\"", \""manuevers\""], [\""osteometry\"", \""stereotomy\""], [\""rubaces\"", \""subrace\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 652,
        ""words"": [
            ""manuevers"",
            ""maneuvers"",
            ""journeyer"",
            ""rejourney"",
            ""enrobing"",
            ""ringbone"",
            ""sangir"",
            ""grains"",
            ""grasni"",
            ""headstrongness"",
            ""strongheadness"",
            ""subrace"",
            ""rubaces"",
            ""esperanto"",
            ""personate"",
            ""osteometry"",
            ""stereotomy""
        ],
        ""solution"": [
            [
                ""enrobing"",
                ""ringbone""
            ],
            [
                ""esperanto"",
                ""personate""
            ],
            [
                ""grains"",
                ""grasni"",
                ""sangir""
            ],
            [
                ""headstrongness"",
                ""strongheadness""
            ],
            [
                ""journeyer"",
                ""rejourney""
            ],
            [
                ""maneuvers"",
                ""manuevers""
            ],
            [
                ""osteometry"",
                ""stereotomy""
            ],
            [
                ""rubaces"",
                ""subrace""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
653,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rationalizes"", ""realizations"", ""anights"", ""hasting"", ""centiares"", ""iterances"", ""cisternae"", ""nectaries"", ""baby"", ""abby"", ""constitutioner"", ""reconstitution"", ""jeffery"", ""jeffrey""]
","[[""abby"", ""baby""], [""anights"", ""hasting""], [""centiares"", ""cisternae"", ""iterances"", ""nectaries""], [""constitutioner"", ""reconstitution""], [""jeffery"", ""jeffrey""], [""rationalizes"", ""realizations""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rationalizes\"", \""realizations\"", \""anights\"", \""hasting\"", \""centiares\"", \""iterances\"", \""cisternae\"", \""nectaries\"", \""baby\"", \""abby\"", \""constitutioner\"", \""reconstitution\"", \""jeffery\"", \""jeffrey\""]\n"",
    ""answer"": ""[[\""abby\"", \""baby\""], [\""anights\"", \""hasting\""], [\""centiares\"", \""cisternae\"", \""iterances\"", \""nectaries\""], [\""constitutioner\"", \""reconstitution\""], [\""jeffery\"", \""jeffrey\""], [\""rationalizes\"", \""realizations\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 653,
        ""words"": [
            ""rationalizes"",
            ""realizations"",
            ""anights"",
            ""hasting"",
            ""centiares"",
            ""iterances"",
            ""cisternae"",
            ""nectaries"",
            ""baby"",
            ""abby"",
            ""constitutioner"",
            ""reconstitution"",
            ""jeffery"",
            ""jeffrey""
        ],
        ""solution"": [
            [
                ""abby"",
                ""baby""
            ],
            [
                ""anights"",
                ""hasting""
            ],
            [
                ""centiares"",
                ""cisternae"",
                ""iterances"",
                ""nectaries""
            ],
            [
                ""constitutioner"",
                ""reconstitution""
            ],
            [
                ""jeffery"",
                ""jeffrey""
            ],
            [
                ""rationalizes"",
                ""realizations""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
654,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hylidae"", ""headily"", ""comities"", ""semiotic"", ""recomfort"", ""comforter"", ""myristin"", ""ministry"", ""trundle"", ""rundlet"", ""amita"", ""amati"", ""matai"", ""discoid"", ""disodic"", ""enmoss"", ""mesons"", ""repossession"", ""possessioner"", ""malemiut"", ""malemuit""]
","[[""amati"", ""amita"", ""matai""], [""comforter"", ""recomfort""], [""comities"", ""semiotic""], [""discoid"", ""disodic""], [""enmoss"", ""mesons""], [""headily"", ""hylidae""], [""malemiut"", ""malemuit""], [""ministry"", ""myristin""], [""possessioner"", ""repossession""], [""rundlet"", ""trundle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hylidae\"", \""headily\"", \""comities\"", \""semiotic\"", \""recomfort\"", \""comforter\"", \""myristin\"", \""ministry\"", \""trundle\"", \""rundlet\"", \""amita\"", \""amati\"", \""matai\"", \""discoid\"", \""disodic\"", \""enmoss\"", \""mesons\"", \""repossession\"", \""possessioner\"", \""malemiut\"", \""malemuit\""]\n"",
    ""answer"": ""[[\""amati\"", \""amita\"", \""matai\""], [\""comforter\"", \""recomfort\""], [\""comities\"", \""semiotic\""], [\""discoid\"", \""disodic\""], [\""enmoss\"", \""mesons\""], [\""headily\"", \""hylidae\""], [\""malemiut\"", \""malemuit\""], [\""ministry\"", \""myristin\""], [\""possessioner\"", \""repossession\""], [\""rundlet\"", \""trundle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 654,
        ""words"": [
            ""hylidae"",
            ""headily"",
            ""comities"",
            ""semiotic"",
            ""recomfort"",
            ""comforter"",
            ""myristin"",
            ""ministry"",
            ""trundle"",
            ""rundlet"",
            ""amita"",
            ""amati"",
            ""matai"",
            ""discoid"",
            ""disodic"",
            ""enmoss"",
            ""mesons"",
            ""repossession"",
            ""possessioner"",
            ""malemiut"",
            ""malemuit""
        ],
        ""solution"": [
            [
                ""amati"",
                ""amita"",
                ""matai""
            ],
            [
                ""comforter"",
                ""recomfort""
            ],
            [
                ""comities"",
                ""semiotic""
            ],
            [
                ""discoid"",
                ""disodic""
            ],
            [
                ""enmoss"",
                ""mesons""
            ],
            [
                ""headily"",
                ""hylidae""
            ],
            [
                ""malemiut"",
                ""malemuit""
            ],
            [
                ""ministry"",
                ""myristin""
            ],
            [
                ""possessioner"",
                ""repossession""
            ],
            [
                ""rundlet"",
                ""trundle""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
655,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""auryl"", ""laury"", ""sliverer"", ""revilers"", ""kiel"", ""like"", ""tyrannies"", ""tyrannise"", ""unfielded"", ""undefiled"", ""phytic"", ""pitchy"", ""pythic"", ""typhic"", ""flow"", ""wolf"", ""fowl"", ""leap"", ""plea""]
","[[""auryl"", ""laury""], [""flow"", ""fowl"", ""wolf""], [""kiel"", ""like""], [""leap"", ""plea""], [""phytic"", ""pitchy"", ""pythic"", ""typhic""], [""revilers"", ""sliverer""], [""tyrannies"", ""tyrannise""], [""undefiled"", ""unfielded""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""auryl\"", \""laury\"", \""sliverer\"", \""revilers\"", \""kiel\"", \""like\"", \""tyrannies\"", \""tyrannise\"", \""unfielded\"", \""undefiled\"", \""phytic\"", \""pitchy\"", \""pythic\"", \""typhic\"", \""flow\"", \""wolf\"", \""fowl\"", \""leap\"", \""plea\""]\n"",
    ""answer"": ""[[\""auryl\"", \""laury\""], [\""flow\"", \""fowl\"", \""wolf\""], [\""kiel\"", \""like\""], [\""leap\"", \""plea\""], [\""phytic\"", \""pitchy\"", \""pythic\"", \""typhic\""], [\""revilers\"", \""sliverer\""], [\""tyrannies\"", \""tyrannise\""], [\""undefiled\"", \""unfielded\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 655,
        ""words"": [
            ""auryl"",
            ""laury"",
            ""sliverer"",
            ""revilers"",
            ""kiel"",
            ""like"",
            ""tyrannies"",
            ""tyrannise"",
            ""unfielded"",
            ""undefiled"",
            ""phytic"",
            ""pitchy"",
            ""pythic"",
            ""typhic"",
            ""flow"",
            ""wolf"",
            ""fowl"",
            ""leap"",
            ""plea""
        ],
        ""solution"": [
            [
                ""auryl"",
                ""laury""
            ],
            [
                ""flow"",
                ""fowl"",
                ""wolf""
            ],
            [
                ""kiel"",
                ""like""
            ],
            [
                ""leap"",
                ""plea""
            ],
            [
                ""phytic"",
                ""pitchy"",
                ""pythic"",
                ""typhic""
            ],
            [
                ""revilers"",
                ""sliverer""
            ],
            [
                ""tyrannies"",
                ""tyrannise""
            ],
            [
                ""undefiled"",
                ""unfielded""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
656,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""decrown"", ""crowned"", ""dopes"", ""posed"", ""cessing"", ""gnessic"", ""gritten"", ""retting"", ""gittern"", ""muon"", ""moun"", ""plethora"", ""traphole""]
","[[""cessing"", ""gnessic""], [""crowned"", ""decrown""], [""dopes"", ""posed""], [""gittern"", ""gritten"", ""retting""], [""moun"", ""muon""], [""plethora"", ""traphole""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""decrown\"", \""crowned\"", \""dopes\"", \""posed\"", \""cessing\"", \""gnessic\"", \""gritten\"", \""retting\"", \""gittern\"", \""muon\"", \""moun\"", \""plethora\"", \""traphole\""]\n"",
    ""answer"": ""[[\""cessing\"", \""gnessic\""], [\""crowned\"", \""decrown\""], [\""dopes\"", \""posed\""], [\""gittern\"", \""gritten\"", \""retting\""], [\""moun\"", \""muon\""], [\""plethora\"", \""traphole\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 656,
        ""words"": [
            ""decrown"",
            ""crowned"",
            ""dopes"",
            ""posed"",
            ""cessing"",
            ""gnessic"",
            ""gritten"",
            ""retting"",
            ""gittern"",
            ""muon"",
            ""moun"",
            ""plethora"",
            ""traphole""
        ],
        ""solution"": [
            [
                ""cessing"",
                ""gnessic""
            ],
            [
                ""crowned"",
                ""decrown""
            ],
            [
                ""dopes"",
                ""posed""
            ],
            [
                ""gittern"",
                ""gritten"",
                ""retting""
            ],
            [
                ""moun"",
                ""muon""
            ],
            [
                ""plethora"",
                ""traphole""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
657,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sostenuti"", ""snoutiest"", ""dalle"", ""della"", ""abators"", ""rabatos"", ""unpooled"", ""unlooped""]
","[[""abators"", ""rabatos""], [""dalle"", ""della""], [""snoutiest"", ""sostenuti""], [""unlooped"", ""unpooled""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sostenuti\"", \""snoutiest\"", \""dalle\"", \""della\"", \""abators\"", \""rabatos\"", \""unpooled\"", \""unlooped\""]\n"",
    ""answer"": ""[[\""abators\"", \""rabatos\""], [\""dalle\"", \""della\""], [\""snoutiest\"", \""sostenuti\""], [\""unlooped\"", \""unpooled\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 657,
        ""words"": [
            ""sostenuti"",
            ""snoutiest"",
            ""dalle"",
            ""della"",
            ""abators"",
            ""rabatos"",
            ""unpooled"",
            ""unlooped""
        ],
        ""solution"": [
            [
                ""abators"",
                ""rabatos""
            ],
            [
                ""dalle"",
                ""della""
            ],
            [
                ""snoutiest"",
                ""sostenuti""
            ],
            [
                ""unlooped"",
                ""unpooled""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
658,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""violette"", ""olivette"", ""extras"", ""taxers"", ""sextar"", ""dogbite"", ""bigoted"", ""ferry"", ""refry"", ""fryer"", ""oilcups"", ""upcoils"", ""trapt"", ""pratt"", ""beam"", ""bema"", ""ambe""]
","[[""ambe"", ""beam"", ""bema""], [""bigoted"", ""dogbite""], [""extras"", ""sextar"", ""taxers""], [""ferry"", ""fryer"", ""refry""], [""oilcups"", ""upcoils""], [""olivette"", ""violette""], [""pratt"", ""trapt""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""violette\"", \""olivette\"", \""extras\"", \""taxers\"", \""sextar\"", \""dogbite\"", \""bigoted\"", \""ferry\"", \""refry\"", \""fryer\"", \""oilcups\"", \""upcoils\"", \""trapt\"", \""pratt\"", \""beam\"", \""bema\"", \""ambe\""]\n"",
    ""answer"": ""[[\""ambe\"", \""beam\"", \""bema\""], [\""bigoted\"", \""dogbite\""], [\""extras\"", \""sextar\"", \""taxers\""], [\""ferry\"", \""fryer\"", \""refry\""], [\""oilcups\"", \""upcoils\""], [\""olivette\"", \""violette\""], [\""pratt\"", \""trapt\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 658,
        ""words"": [
            ""violette"",
            ""olivette"",
            ""extras"",
            ""taxers"",
            ""sextar"",
            ""dogbite"",
            ""bigoted"",
            ""ferry"",
            ""refry"",
            ""fryer"",
            ""oilcups"",
            ""upcoils"",
            ""trapt"",
            ""pratt"",
            ""beam"",
            ""bema"",
            ""ambe""
        ],
        ""solution"": [
            [
                ""ambe"",
                ""beam"",
                ""bema""
            ],
            [
                ""bigoted"",
                ""dogbite""
            ],
            [
                ""extras"",
                ""sextar"",
                ""taxers""
            ],
            [
                ""ferry"",
                ""fryer"",
                ""refry""
            ],
            [
                ""oilcups"",
                ""upcoils""
            ],
            [
                ""olivette"",
                ""violette""
            ],
            [
                ""pratt"",
                ""trapt""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
659,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""astrally"", ""stallary"", ""aptate"", ""tapeta"", ""epicier"", ""epeiric"", ""cognatical"", ""galactonic""]
","[[""aptate"", ""tapeta""], [""astrally"", ""stallary""], [""cognatical"", ""galactonic""], [""epeiric"", ""epicier""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""astrally\"", \""stallary\"", \""aptate\"", \""tapeta\"", \""epicier\"", \""epeiric\"", \""cognatical\"", \""galactonic\""]\n"",
    ""answer"": ""[[\""aptate\"", \""tapeta\""], [\""astrally\"", \""stallary\""], [\""cognatical\"", \""galactonic\""], [\""epeiric\"", \""epicier\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 659,
        ""words"": [
            ""astrally"",
            ""stallary"",
            ""aptate"",
            ""tapeta"",
            ""epicier"",
            ""epeiric"",
            ""cognatical"",
            ""galactonic""
        ],
        ""solution"": [
            [
                ""aptate"",
                ""tapeta""
            ],
            [
                ""astrally"",
                ""stallary""
            ],
            [
                ""cognatical"",
                ""galactonic""
            ],
            [
                ""epeiric"",
                ""epicier""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
660,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lolium"", ""mouill"", ""astute"", ""statue""]
","[[""astute"", ""statue""], [""lolium"", ""mouill""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lolium\"", \""mouill\"", \""astute\"", \""statue\""]\n"",
    ""answer"": ""[[\""astute\"", \""statue\""], [\""lolium\"", \""mouill\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 660,
        ""words"": [
            ""lolium"",
            ""mouill"",
            ""astute"",
            ""statue""
        ],
        ""solution"": [
            [
                ""astute"",
                ""statue""
            ],
            [
                ""lolium"",
                ""mouill""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
661,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cawk"", ""wack"", ""quinacrine"", ""inquirance"", ""manuevered"", ""maneuvered"", ""viruscide"", ""virucides"", ""inked"", ""deink"", ""bearfoot"", ""barefoot"", ""relicted"", ""derelict"", ""acierage"", ""agacerie"", ""cancerin"", ""cancrine""]
","[[""acierage"", ""agacerie""], [""barefoot"", ""bearfoot""], [""cancerin"", ""cancrine""], [""cawk"", ""wack""], [""deink"", ""inked""], [""derelict"", ""relicted""], [""inquirance"", ""quinacrine""], [""maneuvered"", ""manuevered""], [""virucides"", ""viruscide""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cawk\"", \""wack\"", \""quinacrine\"", \""inquirance\"", \""manuevered\"", \""maneuvered\"", \""viruscide\"", \""virucides\"", \""inked\"", \""deink\"", \""bearfoot\"", \""barefoot\"", \""relicted\"", \""derelict\"", \""acierage\"", \""agacerie\"", \""cancerin\"", \""cancrine\""]\n"",
    ""answer"": ""[[\""acierage\"", \""agacerie\""], [\""barefoot\"", \""bearfoot\""], [\""cancerin\"", \""cancrine\""], [\""cawk\"", \""wack\""], [\""deink\"", \""inked\""], [\""derelict\"", \""relicted\""], [\""inquirance\"", \""quinacrine\""], [\""maneuvered\"", \""manuevered\""], [\""virucides\"", \""viruscide\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 661,
        ""words"": [
            ""cawk"",
            ""wack"",
            ""quinacrine"",
            ""inquirance"",
            ""manuevered"",
            ""maneuvered"",
            ""viruscide"",
            ""virucides"",
            ""inked"",
            ""deink"",
            ""bearfoot"",
            ""barefoot"",
            ""relicted"",
            ""derelict"",
            ""acierage"",
            ""agacerie"",
            ""cancerin"",
            ""cancrine""
        ],
        ""solution"": [
            [
                ""acierage"",
                ""agacerie""
            ],
            [
                ""barefoot"",
                ""bearfoot""
            ],
            [
                ""cancerin"",
                ""cancrine""
            ],
            [
                ""cawk"",
                ""wack""
            ],
            [
                ""deink"",
                ""inked""
            ],
            [
                ""derelict"",
                ""relicted""
            ],
            [
                ""inquirance"",
                ""quinacrine""
            ],
            [
                ""maneuvered"",
                ""manuevered""
            ],
            [
                ""virucides"",
                ""viruscide""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
662,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sidesway"", ""waysides"", ""sideways"", ""cleech"", ""cleche"", ""photoradio"", ""radiophoto"", ""mts"", ""stm"", ""aprosopous"", ""aposporous"", ""pectose"", ""escopet"", ""restacking"", ""stackering"", ""emm"", ""mem"", ""melaconite"", ""colemanite""]
","[[""aposporous"", ""aprosopous""], [""cleche"", ""cleech""], [""colemanite"", ""melaconite""], [""emm"", ""mem""], [""escopet"", ""pectose""], [""mts"", ""stm""], [""photoradio"", ""radiophoto""], [""restacking"", ""stackering""], [""sidesway"", ""sideways"", ""waysides""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sidesway\"", \""waysides\"", \""sideways\"", \""cleech\"", \""cleche\"", \""photoradio\"", \""radiophoto\"", \""mts\"", \""stm\"", \""aprosopous\"", \""aposporous\"", \""pectose\"", \""escopet\"", \""restacking\"", \""stackering\"", \""emm\"", \""mem\"", \""melaconite\"", \""colemanite\""]\n"",
    ""answer"": ""[[\""aposporous\"", \""aprosopous\""], [\""cleche\"", \""cleech\""], [\""colemanite\"", \""melaconite\""], [\""emm\"", \""mem\""], [\""escopet\"", \""pectose\""], [\""mts\"", \""stm\""], [\""photoradio\"", \""radiophoto\""], [\""restacking\"", \""stackering\""], [\""sidesway\"", \""sideways\"", \""waysides\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 662,
        ""words"": [
            ""sidesway"",
            ""waysides"",
            ""sideways"",
            ""cleech"",
            ""cleche"",
            ""photoradio"",
            ""radiophoto"",
            ""mts"",
            ""stm"",
            ""aprosopous"",
            ""aposporous"",
            ""pectose"",
            ""escopet"",
            ""restacking"",
            ""stackering"",
            ""emm"",
            ""mem"",
            ""melaconite"",
            ""colemanite""
        ],
        ""solution"": [
            [
                ""aposporous"",
                ""aprosopous""
            ],
            [
                ""cleche"",
                ""cleech""
            ],
            [
                ""colemanite"",
                ""melaconite""
            ],
            [
                ""emm"",
                ""mem""
            ],
            [
                ""escopet"",
                ""pectose""
            ],
            [
                ""mts"",
                ""stm""
            ],
            [
                ""photoradio"",
                ""radiophoto""
            ],
            [
                ""restacking"",
                ""stackering""
            ],
            [
                ""sidesway"",
                ""sideways"",
                ""waysides""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
663,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sought"", ""oughts"", ""toughs"", ""coenocyte"", ""ceonocyte"", ""totchka"", ""hattock"", ""slirt"", ""tirls"", ""saved"", ""devas"", ""sulfohydrate"", ""hydrosulfate"", ""em"", ""me""]
","[[""ceonocyte"", ""coenocyte""], [""devas"", ""saved""], [""em"", ""me""], [""hattock"", ""totchka""], [""hydrosulfate"", ""sulfohydrate""], [""oughts"", ""sought"", ""toughs""], [""slirt"", ""tirls""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sought\"", \""oughts\"", \""toughs\"", \""coenocyte\"", \""ceonocyte\"", \""totchka\"", \""hattock\"", \""slirt\"", \""tirls\"", \""saved\"", \""devas\"", \""sulfohydrate\"", \""hydrosulfate\"", \""em\"", \""me\""]\n"",
    ""answer"": ""[[\""ceonocyte\"", \""coenocyte\""], [\""devas\"", \""saved\""], [\""em\"", \""me\""], [\""hattock\"", \""totchka\""], [\""hydrosulfate\"", \""sulfohydrate\""], [\""oughts\"", \""sought\"", \""toughs\""], [\""slirt\"", \""tirls\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 663,
        ""words"": [
            ""sought"",
            ""oughts"",
            ""toughs"",
            ""coenocyte"",
            ""ceonocyte"",
            ""totchka"",
            ""hattock"",
            ""slirt"",
            ""tirls"",
            ""saved"",
            ""devas"",
            ""sulfohydrate"",
            ""hydrosulfate"",
            ""em"",
            ""me""
        ],
        ""solution"": [
            [
                ""ceonocyte"",
                ""coenocyte""
            ],
            [
                ""devas"",
                ""saved""
            ],
            [
                ""em"",
                ""me""
            ],
            [
                ""hattock"",
                ""totchka""
            ],
            [
                ""hydrosulfate"",
                ""sulfohydrate""
            ],
            [
                ""oughts"",
                ""sought"",
                ""toughs""
            ],
            [
                ""slirt"",
                ""tirls""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
664,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rowdiest"", ""wordiest"", ""chasers"", ""eschars"", ""crashes"", ""cashers"", ""preworship"", ""worshipper"", ""errants"", ""ranters""]
","[[""cashers"", ""chasers"", ""crashes"", ""eschars""], [""errants"", ""ranters""], [""preworship"", ""worshipper""], [""rowdiest"", ""wordiest""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rowdiest\"", \""wordiest\"", \""chasers\"", \""eschars\"", \""crashes\"", \""cashers\"", \""preworship\"", \""worshipper\"", \""errants\"", \""ranters\""]\n"",
    ""answer"": ""[[\""cashers\"", \""chasers\"", \""crashes\"", \""eschars\""], [\""errants\"", \""ranters\""], [\""preworship\"", \""worshipper\""], [\""rowdiest\"", \""wordiest\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 664,
        ""words"": [
            ""rowdiest"",
            ""wordiest"",
            ""chasers"",
            ""eschars"",
            ""crashes"",
            ""cashers"",
            ""preworship"",
            ""worshipper"",
            ""errants"",
            ""ranters""
        ],
        ""solution"": [
            [
                ""cashers"",
                ""chasers"",
                ""crashes"",
                ""eschars""
            ],
            [
                ""errants"",
                ""ranters""
            ],
            [
                ""preworship"",
                ""worshipper""
            ],
            [
                ""rowdiest"",
                ""wordiest""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
665,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sophy"", ""hypos"", ""allah"", ""halal"", ""chored"", ""ochred"", ""pylagore"", ""playgoer""]
","[[""allah"", ""halal""], [""chored"", ""ochred""], [""hypos"", ""sophy""], [""playgoer"", ""pylagore""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sophy\"", \""hypos\"", \""allah\"", \""halal\"", \""chored\"", \""ochred\"", \""pylagore\"", \""playgoer\""]\n"",
    ""answer"": ""[[\""allah\"", \""halal\""], [\""chored\"", \""ochred\""], [\""hypos\"", \""sophy\""], [\""playgoer\"", \""pylagore\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 665,
        ""words"": [
            ""sophy"",
            ""hypos"",
            ""allah"",
            ""halal"",
            ""chored"",
            ""ochred"",
            ""pylagore"",
            ""playgoer""
        ],
        ""solution"": [
            [
                ""allah"",
                ""halal""
            ],
            [
                ""chored"",
                ""ochred""
            ],
            [
                ""hypos"",
                ""sophy""
            ],
            [
                ""playgoer"",
                ""pylagore""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
666,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""oofless"", ""fooless"", ""wanely"", ""weanly"", ""nimbed"", ""embind"", ""tern"", ""rent"", ""entr"", ""transigence"", ""astringence"", ""harateen"", ""theraean"", ""noahic"", ""chinoa""]
","[[""astringence"", ""transigence""], [""chinoa"", ""noahic""], [""embind"", ""nimbed""], [""entr"", ""rent"", ""tern""], [""fooless"", ""oofless""], [""harateen"", ""theraean""], [""wanely"", ""weanly""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""oofless\"", \""fooless\"", \""wanely\"", \""weanly\"", \""nimbed\"", \""embind\"", \""tern\"", \""rent\"", \""entr\"", \""transigence\"", \""astringence\"", \""harateen\"", \""theraean\"", \""noahic\"", \""chinoa\""]\n"",
    ""answer"": ""[[\""astringence\"", \""transigence\""], [\""chinoa\"", \""noahic\""], [\""embind\"", \""nimbed\""], [\""entr\"", \""rent\"", \""tern\""], [\""fooless\"", \""oofless\""], [\""harateen\"", \""theraean\""], [\""wanely\"", \""weanly\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 666,
        ""words"": [
            ""oofless"",
            ""fooless"",
            ""wanely"",
            ""weanly"",
            ""nimbed"",
            ""embind"",
            ""tern"",
            ""rent"",
            ""entr"",
            ""transigence"",
            ""astringence"",
            ""harateen"",
            ""theraean"",
            ""noahic"",
            ""chinoa""
        ],
        ""solution"": [
            [
                ""astringence"",
                ""transigence""
            ],
            [
                ""chinoa"",
                ""noahic""
            ],
            [
                ""embind"",
                ""nimbed""
            ],
            [
                ""entr"",
                ""rent"",
                ""tern""
            ],
            [
                ""fooless"",
                ""oofless""
            ],
            [
                ""harateen"",
                ""theraean""
            ],
            [
                ""wanely"",
                ""weanly""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
667,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cavils"", ""slavic"", ""clavis"", ""unsued"", ""unused"", ""polynesic"", ""polynices"", ""liza"", ""zila"", ""alcantarines"", ""lancasterian"", ""rheumatic"", ""hematuric"", ""nomismata"", ""anatomism""]
","[[""alcantarines"", ""lancasterian""], [""anatomism"", ""nomismata""], [""cavils"", ""clavis"", ""slavic""], [""hematuric"", ""rheumatic""], [""liza"", ""zila""], [""polynesic"", ""polynices""], [""unsued"", ""unused""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cavils\"", \""slavic\"", \""clavis\"", \""unsued\"", \""unused\"", \""polynesic\"", \""polynices\"", \""liza\"", \""zila\"", \""alcantarines\"", \""lancasterian\"", \""rheumatic\"", \""hematuric\"", \""nomismata\"", \""anatomism\""]\n"",
    ""answer"": ""[[\""alcantarines\"", \""lancasterian\""], [\""anatomism\"", \""nomismata\""], [\""cavils\"", \""clavis\"", \""slavic\""], [\""hematuric\"", \""rheumatic\""], [\""liza\"", \""zila\""], [\""polynesic\"", \""polynices\""], [\""unsued\"", \""unused\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 667,
        ""words"": [
            ""cavils"",
            ""slavic"",
            ""clavis"",
            ""unsued"",
            ""unused"",
            ""polynesic"",
            ""polynices"",
            ""liza"",
            ""zila"",
            ""alcantarines"",
            ""lancasterian"",
            ""rheumatic"",
            ""hematuric"",
            ""nomismata"",
            ""anatomism""
        ],
        ""solution"": [
            [
                ""alcantarines"",
                ""lancasterian""
            ],
            [
                ""anatomism"",
                ""nomismata""
            ],
            [
                ""cavils"",
                ""clavis"",
                ""slavic""
            ],
            [
                ""hematuric"",
                ""rheumatic""
            ],
            [
                ""liza"",
                ""zila""
            ],
            [
                ""polynesic"",
                ""polynices""
            ],
            [
                ""unsued"",
                ""unused""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
668,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""undershrub"", ""underbrush"", ""bombers"", ""mobbers"", ""groynes"", ""eryngos"", ""sailsman"", ""nasalism""]
","[[""bombers"", ""mobbers""], [""eryngos"", ""groynes""], [""nasalism"", ""sailsman""], [""underbrush"", ""undershrub""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""undershrub\"", \""underbrush\"", \""bombers\"", \""mobbers\"", \""groynes\"", \""eryngos\"", \""sailsman\"", \""nasalism\""]\n"",
    ""answer"": ""[[\""bombers\"", \""mobbers\""], [\""eryngos\"", \""groynes\""], [\""nasalism\"", \""sailsman\""], [\""underbrush\"", \""undershrub\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 668,
        ""words"": [
            ""undershrub"",
            ""underbrush"",
            ""bombers"",
            ""mobbers"",
            ""groynes"",
            ""eryngos"",
            ""sailsman"",
            ""nasalism""
        ],
        ""solution"": [
            [
                ""bombers"",
                ""mobbers""
            ],
            [
                ""eryngos"",
                ""groynes""
            ],
            [
                ""nasalism"",
                ""sailsman""
            ],
            [
                ""underbrush"",
                ""undershrub""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
669,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gatter"", ""target"", ""capitare"", ""apricate"", ""arginines"", ""nigerians"", ""ptosis"", ""stipos"", ""nithing"", ""hinting"", ""inst"", ""nist"", ""isnt"", ""snit""]
","[[""apricate"", ""capitare""], [""arginines"", ""nigerians""], [""gatter"", ""target""], [""hinting"", ""nithing""], [""inst"", ""isnt"", ""nist"", ""snit""], [""ptosis"", ""stipos""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gatter\"", \""target\"", \""capitare\"", \""apricate\"", \""arginines\"", \""nigerians\"", \""ptosis\"", \""stipos\"", \""nithing\"", \""hinting\"", \""inst\"", \""nist\"", \""isnt\"", \""snit\""]\n"",
    ""answer"": ""[[\""apricate\"", \""capitare\""], [\""arginines\"", \""nigerians\""], [\""gatter\"", \""target\""], [\""hinting\"", \""nithing\""], [\""inst\"", \""isnt\"", \""nist\"", \""snit\""], [\""ptosis\"", \""stipos\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 669,
        ""words"": [
            ""gatter"",
            ""target"",
            ""capitare"",
            ""apricate"",
            ""arginines"",
            ""nigerians"",
            ""ptosis"",
            ""stipos"",
            ""nithing"",
            ""hinting"",
            ""inst"",
            ""nist"",
            ""isnt"",
            ""snit""
        ],
        ""solution"": [
            [
                ""apricate"",
                ""capitare""
            ],
            [
                ""arginines"",
                ""nigerians""
            ],
            [
                ""gatter"",
                ""target""
            ],
            [
                ""hinting"",
                ""nithing""
            ],
            [
                ""inst"",
                ""isnt"",
                ""nist"",
                ""snit""
            ],
            [
                ""ptosis"",
                ""stipos""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
670,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""aubretias"", ""aubrietas"", ""daze"", ""adze"", ""tipula"", ""tulipa""]
","[[""adze"", ""daze""], [""aubretias"", ""aubrietas""], [""tipula"", ""tulipa""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""aubretias\"", \""aubrietas\"", \""daze\"", \""adze\"", \""tipula\"", \""tulipa\""]\n"",
    ""answer"": ""[[\""adze\"", \""daze\""], [\""aubretias\"", \""aubrietas\""], [\""tipula\"", \""tulipa\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 670,
        ""words"": [
            ""aubretias"",
            ""aubrietas"",
            ""daze"",
            ""adze"",
            ""tipula"",
            ""tulipa""
        ],
        ""solution"": [
            [
                ""adze"",
                ""daze""
            ],
            [
                ""aubretias"",
                ""aubrietas""
            ],
            [
                ""tipula"",
                ""tulipa""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
671,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""receder"", ""credere"", ""decreer"", ""caballer"", ""barcella""]
","[[""barcella"", ""caballer""], [""credere"", ""decreer"", ""receder""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""receder\"", \""credere\"", \""decreer\"", \""caballer\"", \""barcella\""]\n"",
    ""answer"": ""[[\""barcella\"", \""caballer\""], [\""credere\"", \""decreer\"", \""receder\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 671,
        ""words"": [
            ""receder"",
            ""credere"",
            ""decreer"",
            ""caballer"",
            ""barcella""
        ],
        ""solution"": [
            [
                ""barcella"",
                ""caballer""
            ],
            [
                ""credere"",
                ""decreer"",
                ""receder""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
672,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ramona"", ""romana"", ""oarman"", ""paillasse"", ""palliasse"", ""ignitor"", ""rioting"", ""porc"", ""crop"", ""rewager"", ""wagerer"", ""dronish"", ""dishorn"", ""oillet"", ""elliot""]
","[[""crop"", ""porc""], [""dishorn"", ""dronish""], [""elliot"", ""oillet""], [""ignitor"", ""rioting""], [""oarman"", ""ramona"", ""romana""], [""paillasse"", ""palliasse""], [""rewager"", ""wagerer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ramona\"", \""romana\"", \""oarman\"", \""paillasse\"", \""palliasse\"", \""ignitor\"", \""rioting\"", \""porc\"", \""crop\"", \""rewager\"", \""wagerer\"", \""dronish\"", \""dishorn\"", \""oillet\"", \""elliot\""]\n"",
    ""answer"": ""[[\""crop\"", \""porc\""], [\""dishorn\"", \""dronish\""], [\""elliot\"", \""oillet\""], [\""ignitor\"", \""rioting\""], [\""oarman\"", \""ramona\"", \""romana\""], [\""paillasse\"", \""palliasse\""], [\""rewager\"", \""wagerer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 672,
        ""words"": [
            ""ramona"",
            ""romana"",
            ""oarman"",
            ""paillasse"",
            ""palliasse"",
            ""ignitor"",
            ""rioting"",
            ""porc"",
            ""crop"",
            ""rewager"",
            ""wagerer"",
            ""dronish"",
            ""dishorn"",
            ""oillet"",
            ""elliot""
        ],
        ""solution"": [
            [
                ""crop"",
                ""porc""
            ],
            [
                ""dishorn"",
                ""dronish""
            ],
            [
                ""elliot"",
                ""oillet""
            ],
            [
                ""ignitor"",
                ""rioting""
            ],
            [
                ""oarman"",
                ""ramona"",
                ""romana""
            ],
            [
                ""paillasse"",
                ""palliasse""
            ],
            [
                ""rewager"",
                ""wagerer""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
673,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""abstrude"", ""subtread"", ""daubster"", ""compounded"", ""decompound"", ""cottoner"", ""cornetto"", ""misreason"", ""masonries"", ""softener"", ""resoften"", ""enforest"", ""unflat"", ""flaunt""]
","[[""abstrude"", ""daubster"", ""subtread""], [""compounded"", ""decompound""], [""cornetto"", ""cottoner""], [""enforest"", ""resoften"", ""softener""], [""flaunt"", ""unflat""], [""masonries"", ""misreason""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""abstrude\"", \""subtread\"", \""daubster\"", \""compounded\"", \""decompound\"", \""cottoner\"", \""cornetto\"", \""misreason\"", \""masonries\"", \""softener\"", \""resoften\"", \""enforest\"", \""unflat\"", \""flaunt\""]\n"",
    ""answer"": ""[[\""abstrude\"", \""daubster\"", \""subtread\""], [\""compounded\"", \""decompound\""], [\""cornetto\"", \""cottoner\""], [\""enforest\"", \""resoften\"", \""softener\""], [\""flaunt\"", \""unflat\""], [\""masonries\"", \""misreason\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 673,
        ""words"": [
            ""abstrude"",
            ""subtread"",
            ""daubster"",
            ""compounded"",
            ""decompound"",
            ""cottoner"",
            ""cornetto"",
            ""misreason"",
            ""masonries"",
            ""softener"",
            ""resoften"",
            ""enforest"",
            ""unflat"",
            ""flaunt""
        ],
        ""solution"": [
            [
                ""abstrude"",
                ""daubster"",
                ""subtread""
            ],
            [
                ""compounded"",
                ""decompound""
            ],
            [
                ""cornetto"",
                ""cottoner""
            ],
            [
                ""enforest"",
                ""resoften"",
                ""softener""
            ],
            [
                ""flaunt"",
                ""unflat""
            ],
            [
                ""masonries"",
                ""misreason""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
674,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""maronian"", ""romanian"", ""numa"", ""maun"", ""overmerit"", ""overtimer"", ""generalised"", ""legendaries"", ""mismingle"", ""immingles"", ""ihs"", ""his"", ""shi"", ""ish"", ""hsi""]
","[[""generalised"", ""legendaries""], [""his"", ""hsi"", ""ihs"", ""ish"", ""shi""], [""immingles"", ""mismingle""], [""maronian"", ""romanian""], [""maun"", ""numa""], [""overmerit"", ""overtimer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""maronian\"", \""romanian\"", \""numa\"", \""maun\"", \""overmerit\"", \""overtimer\"", \""generalised\"", \""legendaries\"", \""mismingle\"", \""immingles\"", \""ihs\"", \""his\"", \""shi\"", \""ish\"", \""hsi\""]\n"",
    ""answer"": ""[[\""generalised\"", \""legendaries\""], [\""his\"", \""hsi\"", \""ihs\"", \""ish\"", \""shi\""], [\""immingles\"", \""mismingle\""], [\""maronian\"", \""romanian\""], [\""maun\"", \""numa\""], [\""overmerit\"", \""overtimer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 674,
        ""words"": [
            ""maronian"",
            ""romanian"",
            ""numa"",
            ""maun"",
            ""overmerit"",
            ""overtimer"",
            ""generalised"",
            ""legendaries"",
            ""mismingle"",
            ""immingles"",
            ""ihs"",
            ""his"",
            ""shi"",
            ""ish"",
            ""hsi""
        ],
        ""solution"": [
            [
                ""generalised"",
                ""legendaries""
            ],
            [
                ""his"",
                ""hsi"",
                ""ihs"",
                ""ish"",
                ""shi""
            ],
            [
                ""immingles"",
                ""mismingle""
            ],
            [
                ""maronian"",
                ""romanian""
            ],
            [
                ""maun"",
                ""numa""
            ],
            [
                ""overmerit"",
                ""overtimer""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
675,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""panak"", ""kanap"", ""ler"", ""rel"", ""rle""]
","[[""kanap"", ""panak""], [""ler"", ""rel"", ""rle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""panak\"", \""kanap\"", \""ler\"", \""rel\"", \""rle\""]\n"",
    ""answer"": ""[[\""kanap\"", \""panak\""], [\""ler\"", \""rel\"", \""rle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 675,
        ""words"": [
            ""panak"",
            ""kanap"",
            ""ler"",
            ""rel"",
            ""rle""
        ],
        ""solution"": [
            [
                ""kanap"",
                ""panak""
            ],
            [
                ""ler"",
                ""rel"",
                ""rle""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
676,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""steeliness"", ""sleetiness"", ""satiny"", ""sanity"", ""papolatry"", ""palpatory""]
","[[""palpatory"", ""papolatry""], [""sanity"", ""satiny""], [""sleetiness"", ""steeliness""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""steeliness\"", \""sleetiness\"", \""satiny\"", \""sanity\"", \""papolatry\"", \""palpatory\""]\n"",
    ""answer"": ""[[\""palpatory\"", \""papolatry\""], [\""sanity\"", \""satiny\""], [\""sleetiness\"", \""steeliness\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 676,
        ""words"": [
            ""steeliness"",
            ""sleetiness"",
            ""satiny"",
            ""sanity"",
            ""papolatry"",
            ""palpatory""
        ],
        ""solution"": [
            [
                ""palpatory"",
                ""papolatry""
            ],
            [
                ""sanity"",
                ""satiny""
            ],
            [
                ""sleetiness"",
                ""steeliness""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
677,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""motet"", ""motte"", ""teuchit"", ""chuttie"", ""reginal"", ""aligner"", ""nargile"", ""engrail"", ""ceroplasty"", ""coreplasty"", ""archlute"", ""trauchle"", ""bereason"", ""seaborne"", ""asperating"", ""separating"", ""gantline"", ""latening"", ""dinomic"", ""dominic"", ""prelumbar"", ""prelabrum""]
","[[""aligner"", ""engrail"", ""nargile"", ""reginal""], [""archlute"", ""trauchle""], [""asperating"", ""separating""], [""bereason"", ""seaborne""], [""ceroplasty"", ""coreplasty""], [""chuttie"", ""teuchit""], [""dinomic"", ""dominic""], [""gantline"", ""latening""], [""motet"", ""motte""], [""prelabrum"", ""prelumbar""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""motet\"", \""motte\"", \""teuchit\"", \""chuttie\"", \""reginal\"", \""aligner\"", \""nargile\"", \""engrail\"", \""ceroplasty\"", \""coreplasty\"", \""archlute\"", \""trauchle\"", \""bereason\"", \""seaborne\"", \""asperating\"", \""separating\"", \""gantline\"", \""latening\"", \""dinomic\"", \""dominic\"", \""prelumbar\"", \""prelabrum\""]\n"",
    ""answer"": ""[[\""aligner\"", \""engrail\"", \""nargile\"", \""reginal\""], [\""archlute\"", \""trauchle\""], [\""asperating\"", \""separating\""], [\""bereason\"", \""seaborne\""], [\""ceroplasty\"", \""coreplasty\""], [\""chuttie\"", \""teuchit\""], [\""dinomic\"", \""dominic\""], [\""gantline\"", \""latening\""], [\""motet\"", \""motte\""], [\""prelabrum\"", \""prelumbar\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 677,
        ""words"": [
            ""motet"",
            ""motte"",
            ""teuchit"",
            ""chuttie"",
            ""reginal"",
            ""aligner"",
            ""nargile"",
            ""engrail"",
            ""ceroplasty"",
            ""coreplasty"",
            ""archlute"",
            ""trauchle"",
            ""bereason"",
            ""seaborne"",
            ""asperating"",
            ""separating"",
            ""gantline"",
            ""latening"",
            ""dinomic"",
            ""dominic"",
            ""prelumbar"",
            ""prelabrum""
        ],
        ""solution"": [
            [
                ""aligner"",
                ""engrail"",
                ""nargile"",
                ""reginal""
            ],
            [
                ""archlute"",
                ""trauchle""
            ],
            [
                ""asperating"",
                ""separating""
            ],
            [
                ""bereason"",
                ""seaborne""
            ],
            [
                ""ceroplasty"",
                ""coreplasty""
            ],
            [
                ""chuttie"",
                ""teuchit""
            ],
            [
                ""dinomic"",
                ""dominic""
            ],
            [
                ""gantline"",
                ""latening""
            ],
            [
                ""motet"",
                ""motte""
            ],
            [
                ""prelabrum"",
                ""prelumbar""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
678,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""titmen"", ""mitten"", ""ophis"", ""hopis"", ""ericetal"", ""relictae"", ""tomorrow"", ""wormroot"", ""calfs"", ""scalf"", ""ozonate"", ""entozoa"", ""concertised"", ""crescentoid"", ""halloo"", ""holloa""]
","[[""calfs"", ""scalf""], [""concertised"", ""crescentoid""], [""entozoa"", ""ozonate""], [""ericetal"", ""relictae""], [""halloo"", ""holloa""], [""hopis"", ""ophis""], [""mitten"", ""titmen""], [""tomorrow"", ""wormroot""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""titmen\"", \""mitten\"", \""ophis\"", \""hopis\"", \""ericetal\"", \""relictae\"", \""tomorrow\"", \""wormroot\"", \""calfs\"", \""scalf\"", \""ozonate\"", \""entozoa\"", \""concertised\"", \""crescentoid\"", \""halloo\"", \""holloa\""]\n"",
    ""answer"": ""[[\""calfs\"", \""scalf\""], [\""concertised\"", \""crescentoid\""], [\""entozoa\"", \""ozonate\""], [\""ericetal\"", \""relictae\""], [\""halloo\"", \""holloa\""], [\""hopis\"", \""ophis\""], [\""mitten\"", \""titmen\""], [\""tomorrow\"", \""wormroot\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 678,
        ""words"": [
            ""titmen"",
            ""mitten"",
            ""ophis"",
            ""hopis"",
            ""ericetal"",
            ""relictae"",
            ""tomorrow"",
            ""wormroot"",
            ""calfs"",
            ""scalf"",
            ""ozonate"",
            ""entozoa"",
            ""concertised"",
            ""crescentoid"",
            ""halloo"",
            ""holloa""
        ],
        ""solution"": [
            [
                ""calfs"",
                ""scalf""
            ],
            [
                ""concertised"",
                ""crescentoid""
            ],
            [
                ""entozoa"",
                ""ozonate""
            ],
            [
                ""ericetal"",
                ""relictae""
            ],
            [
                ""halloo"",
                ""holloa""
            ],
            [
                ""hopis"",
                ""ophis""
            ],
            [
                ""mitten"",
                ""titmen""
            ],
            [
                ""tomorrow"",
                ""wormroot""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
679,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nongod"", ""dongon"", ""nairobi"", ""robinia"", ""emperil"", ""reimpel"", ""demast"", ""masted"", ""capot"", ""coapt"", ""picosecond"", ""endoscopic"", ""stockers"", ""restocks"", ""ceratiid"", ""raticide"", ""canepin"", ""pinnace""]
","[[""canepin"", ""pinnace""], [""capot"", ""coapt""], [""ceratiid"", ""raticide""], [""demast"", ""masted""], [""dongon"", ""nongod""], [""emperil"", ""reimpel""], [""endoscopic"", ""picosecond""], [""nairobi"", ""robinia""], [""restocks"", ""stockers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nongod\"", \""dongon\"", \""nairobi\"", \""robinia\"", \""emperil\"", \""reimpel\"", \""demast\"", \""masted\"", \""capot\"", \""coapt\"", \""picosecond\"", \""endoscopic\"", \""stockers\"", \""restocks\"", \""ceratiid\"", \""raticide\"", \""canepin\"", \""pinnace\""]\n"",
    ""answer"": ""[[\""canepin\"", \""pinnace\""], [\""capot\"", \""coapt\""], [\""ceratiid\"", \""raticide\""], [\""demast\"", \""masted\""], [\""dongon\"", \""nongod\""], [\""emperil\"", \""reimpel\""], [\""endoscopic\"", \""picosecond\""], [\""nairobi\"", \""robinia\""], [\""restocks\"", \""stockers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 679,
        ""words"": [
            ""nongod"",
            ""dongon"",
            ""nairobi"",
            ""robinia"",
            ""emperil"",
            ""reimpel"",
            ""demast"",
            ""masted"",
            ""capot"",
            ""coapt"",
            ""picosecond"",
            ""endoscopic"",
            ""stockers"",
            ""restocks"",
            ""ceratiid"",
            ""raticide"",
            ""canepin"",
            ""pinnace""
        ],
        ""solution"": [
            [
                ""canepin"",
                ""pinnace""
            ],
            [
                ""capot"",
                ""coapt""
            ],
            [
                ""ceratiid"",
                ""raticide""
            ],
            [
                ""demast"",
                ""masted""
            ],
            [
                ""dongon"",
                ""nongod""
            ],
            [
                ""emperil"",
                ""reimpel""
            ],
            [
                ""endoscopic"",
                ""picosecond""
            ],
            [
                ""nairobi"",
                ""robinia""
            ],
            [
                ""restocks"",
                ""stockers""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
680,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lanista"", ""saliant"", ""santali"", ""nilgau"", ""gaulin"", ""lingua"", ""furoin"", ""funori"", ""ramisection"", ""anisometric"", ""molars"", ""morals"", ""morsal"", ""empties"", ""septime""]
","[[""anisometric"", ""ramisection""], [""empties"", ""septime""], [""funori"", ""furoin""], [""gaulin"", ""lingua"", ""nilgau""], [""lanista"", ""saliant"", ""santali""], [""molars"", ""morals"", ""morsal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lanista\"", \""saliant\"", \""santali\"", \""nilgau\"", \""gaulin\"", \""lingua\"", \""furoin\"", \""funori\"", \""ramisection\"", \""anisometric\"", \""molars\"", \""morals\"", \""morsal\"", \""empties\"", \""septime\""]\n"",
    ""answer"": ""[[\""anisometric\"", \""ramisection\""], [\""empties\"", \""septime\""], [\""funori\"", \""furoin\""], [\""gaulin\"", \""lingua\"", \""nilgau\""], [\""lanista\"", \""saliant\"", \""santali\""], [\""molars\"", \""morals\"", \""morsal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 680,
        ""words"": [
            ""lanista"",
            ""saliant"",
            ""santali"",
            ""nilgau"",
            ""gaulin"",
            ""lingua"",
            ""furoin"",
            ""funori"",
            ""ramisection"",
            ""anisometric"",
            ""molars"",
            ""morals"",
            ""morsal"",
            ""empties"",
            ""septime""
        ],
        ""solution"": [
            [
                ""anisometric"",
                ""ramisection""
            ],
            [
                ""empties"",
                ""septime""
            ],
            [
                ""funori"",
                ""furoin""
            ],
            [
                ""gaulin"",
                ""lingua"",
                ""nilgau""
            ],
            [
                ""lanista"",
                ""saliant"",
                ""santali""
            ],
            [
                ""molars"",
                ""morals"",
                ""morsal""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
681,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""linings"", ""lignins"", ""coagent"", ""cognate"", ""repraised"", ""despairer"", ""draperies"", ""flaughts"", ""ghastful"", ""misty"", ""stimy"", ""dross"", ""sords"", ""moray"", ""mayor"", ""amanitins"", ""maintains""]
","[[""amanitins"", ""maintains""], [""coagent"", ""cognate""], [""despairer"", ""draperies"", ""repraised""], [""dross"", ""sords""], [""flaughts"", ""ghastful""], [""lignins"", ""linings""], [""mayor"", ""moray""], [""misty"", ""stimy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""linings\"", \""lignins\"", \""coagent\"", \""cognate\"", \""repraised\"", \""despairer\"", \""draperies\"", \""flaughts\"", \""ghastful\"", \""misty\"", \""stimy\"", \""dross\"", \""sords\"", \""moray\"", \""mayor\"", \""amanitins\"", \""maintains\""]\n"",
    ""answer"": ""[[\""amanitins\"", \""maintains\""], [\""coagent\"", \""cognate\""], [\""despairer\"", \""draperies\"", \""repraised\""], [\""dross\"", \""sords\""], [\""flaughts\"", \""ghastful\""], [\""lignins\"", \""linings\""], [\""mayor\"", \""moray\""], [\""misty\"", \""stimy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 681,
        ""words"": [
            ""linings"",
            ""lignins"",
            ""coagent"",
            ""cognate"",
            ""repraised"",
            ""despairer"",
            ""draperies"",
            ""flaughts"",
            ""ghastful"",
            ""misty"",
            ""stimy"",
            ""dross"",
            ""sords"",
            ""moray"",
            ""mayor"",
            ""amanitins"",
            ""maintains""
        ],
        ""solution"": [
            [
                ""amanitins"",
                ""maintains""
            ],
            [
                ""coagent"",
                ""cognate""
            ],
            [
                ""despairer"",
                ""draperies"",
                ""repraised""
            ],
            [
                ""dross"",
                ""sords""
            ],
            [
                ""flaughts"",
                ""ghastful""
            ],
            [
                ""lignins"",
                ""linings""
            ],
            [
                ""mayor"",
                ""moray""
            ],
            [
                ""misty"",
                ""stimy""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
682,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ixiama"", ""amixia"", ""cretism"", ""metrics"", ""mishear"", ""asherim"", ""meharis""]
","[[""amixia"", ""ixiama""], [""asherim"", ""meharis"", ""mishear""], [""cretism"", ""metrics""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ixiama\"", \""amixia\"", \""cretism\"", \""metrics\"", \""mishear\"", \""asherim\"", \""meharis\""]\n"",
    ""answer"": ""[[\""amixia\"", \""ixiama\""], [\""asherim\"", \""meharis\"", \""mishear\""], [\""cretism\"", \""metrics\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 682,
        ""words"": [
            ""ixiama"",
            ""amixia"",
            ""cretism"",
            ""metrics"",
            ""mishear"",
            ""asherim"",
            ""meharis""
        ],
        ""solution"": [
            [
                ""amixia"",
                ""ixiama""
            ],
            [
                ""asherim"",
                ""meharis"",
                ""mishear""
            ],
            [
                ""cretism"",
                ""metrics""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
683,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""anabasse"", ""anabases"", ""beakhead"", ""bakehead"", ""shearsman"", ""sharesman"", ""predonate"", ""ponderate"", ""cumar"", ""carum"", ""antiaris"", ""arianist"", ""intarsia"", ""nailing"", ""alining"", ""knees"", ""keens"", ""skeen"", ""atwist"", ""wattis"", ""demotes"", ""semoted""]
","[[""alining"", ""nailing""], [""anabases"", ""anabasse""], [""antiaris"", ""arianist"", ""intarsia""], [""atwist"", ""wattis""], [""bakehead"", ""beakhead""], [""carum"", ""cumar""], [""demotes"", ""semoted""], [""keens"", ""knees"", ""skeen""], [""ponderate"", ""predonate""], [""sharesman"", ""shearsman""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""anabasse\"", \""anabases\"", \""beakhead\"", \""bakehead\"", \""shearsman\"", \""sharesman\"", \""predonate\"", \""ponderate\"", \""cumar\"", \""carum\"", \""antiaris\"", \""arianist\"", \""intarsia\"", \""nailing\"", \""alining\"", \""knees\"", \""keens\"", \""skeen\"", \""atwist\"", \""wattis\"", \""demotes\"", \""semoted\""]\n"",
    ""answer"": ""[[\""alining\"", \""nailing\""], [\""anabases\"", \""anabasse\""], [\""antiaris\"", \""arianist\"", \""intarsia\""], [\""atwist\"", \""wattis\""], [\""bakehead\"", \""beakhead\""], [\""carum\"", \""cumar\""], [\""demotes\"", \""semoted\""], [\""keens\"", \""knees\"", \""skeen\""], [\""ponderate\"", \""predonate\""], [\""sharesman\"", \""shearsman\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 683,
        ""words"": [
            ""anabasse"",
            ""anabases"",
            ""beakhead"",
            ""bakehead"",
            ""shearsman"",
            ""sharesman"",
            ""predonate"",
            ""ponderate"",
            ""cumar"",
            ""carum"",
            ""antiaris"",
            ""arianist"",
            ""intarsia"",
            ""nailing"",
            ""alining"",
            ""knees"",
            ""keens"",
            ""skeen"",
            ""atwist"",
            ""wattis"",
            ""demotes"",
            ""semoted""
        ],
        ""solution"": [
            [
                ""alining"",
                ""nailing""
            ],
            [
                ""anabases"",
                ""anabasse""
            ],
            [
                ""antiaris"",
                ""arianist"",
                ""intarsia""
            ],
            [
                ""atwist"",
                ""wattis""
            ],
            [
                ""bakehead"",
                ""beakhead""
            ],
            [
                ""carum"",
                ""cumar""
            ],
            [
                ""demotes"",
                ""semoted""
            ],
            [
                ""keens"",
                ""knees"",
                ""skeen""
            ],
            [
                ""ponderate"",
                ""predonate""
            ],
            [
                ""sharesman"",
                ""shearsman""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
684,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""farcies"", ""fiacres"", ""petalling"", ""palleting"", ""poisoned"", ""poseidon"", ""cosseted"", ""cestodes""]
","[[""cestodes"", ""cosseted""], [""farcies"", ""fiacres""], [""palleting"", ""petalling""], [""poisoned"", ""poseidon""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""farcies\"", \""fiacres\"", \""petalling\"", \""palleting\"", \""poisoned\"", \""poseidon\"", \""cosseted\"", \""cestodes\""]\n"",
    ""answer"": ""[[\""cestodes\"", \""cosseted\""], [\""farcies\"", \""fiacres\""], [\""palleting\"", \""petalling\""], [\""poisoned\"", \""poseidon\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 684,
        ""words"": [
            ""farcies"",
            ""fiacres"",
            ""petalling"",
            ""palleting"",
            ""poisoned"",
            ""poseidon"",
            ""cosseted"",
            ""cestodes""
        ],
        ""solution"": [
            [
                ""cestodes"",
                ""cosseted""
            ],
            [
                ""farcies"",
                ""fiacres""
            ],
            [
                ""palleting"",
                ""petalling""
            ],
            [
                ""poisoned"",
                ""poseidon""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
685,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""misspaced"", ""midspaces"", ""bandster"", ""bartends"", ""teachless"", ""tacheless"", ""somnopathy"", ""phytomonas"", ""oiliest"", ""iolites""]
","[[""bandster"", ""bartends""], [""iolites"", ""oiliest""], [""midspaces"", ""misspaced""], [""phytomonas"", ""somnopathy""], [""tacheless"", ""teachless""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""misspaced\"", \""midspaces\"", \""bandster\"", \""bartends\"", \""teachless\"", \""tacheless\"", \""somnopathy\"", \""phytomonas\"", \""oiliest\"", \""iolites\""]\n"",
    ""answer"": ""[[\""bandster\"", \""bartends\""], [\""iolites\"", \""oiliest\""], [\""midspaces\"", \""misspaced\""], [\""phytomonas\"", \""somnopathy\""], [\""tacheless\"", \""teachless\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 685,
        ""words"": [
            ""misspaced"",
            ""midspaces"",
            ""bandster"",
            ""bartends"",
            ""teachless"",
            ""tacheless"",
            ""somnopathy"",
            ""phytomonas"",
            ""oiliest"",
            ""iolites""
        ],
        ""solution"": [
            [
                ""bandster"",
                ""bartends""
            ],
            [
                ""iolites"",
                ""oiliest""
            ],
            [
                ""midspaces"",
                ""misspaced""
            ],
            [
                ""phytomonas"",
                ""somnopathy""
            ],
            [
                ""tacheless"",
                ""teachless""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
686,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""speuchan"", ""paunches"", ""melam"", ""lemma"", ""cratons"", ""cartons"", ""cantors"", ""sump"", ""umps"", ""padfoot"", ""footpad"", ""enrough"", ""roughen""]
","[[""cantors"", ""cartons"", ""cratons""], [""enrough"", ""roughen""], [""footpad"", ""padfoot""], [""lemma"", ""melam""], [""paunches"", ""speuchan""], [""sump"", ""umps""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""speuchan\"", \""paunches\"", \""melam\"", \""lemma\"", \""cratons\"", \""cartons\"", \""cantors\"", \""sump\"", \""umps\"", \""padfoot\"", \""footpad\"", \""enrough\"", \""roughen\""]\n"",
    ""answer"": ""[[\""cantors\"", \""cartons\"", \""cratons\""], [\""enrough\"", \""roughen\""], [\""footpad\"", \""padfoot\""], [\""lemma\"", \""melam\""], [\""paunches\"", \""speuchan\""], [\""sump\"", \""umps\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 686,
        ""words"": [
            ""speuchan"",
            ""paunches"",
            ""melam"",
            ""lemma"",
            ""cratons"",
            ""cartons"",
            ""cantors"",
            ""sump"",
            ""umps"",
            ""padfoot"",
            ""footpad"",
            ""enrough"",
            ""roughen""
        ],
        ""solution"": [
            [
                ""cantors"",
                ""cartons"",
                ""cratons""
            ],
            [
                ""enrough"",
                ""roughen""
            ],
            [
                ""footpad"",
                ""padfoot""
            ],
            [
                ""lemma"",
                ""melam""
            ],
            [
                ""paunches"",
                ""speuchan""
            ],
            [
                ""sump"",
                ""umps""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
687,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nieveta"", ""naivete"", ""tagaur"", ""arguta"", ""miens"", ""mines"", ""siblings"", ""bislings"", ""gingerol"", ""gringole"", ""clod"", ""cold""]
","[[""arguta"", ""tagaur""], [""bislings"", ""siblings""], [""clod"", ""cold""], [""gingerol"", ""gringole""], [""miens"", ""mines""], [""naivete"", ""nieveta""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nieveta\"", \""naivete\"", \""tagaur\"", \""arguta\"", \""miens\"", \""mines\"", \""siblings\"", \""bislings\"", \""gingerol\"", \""gringole\"", \""clod\"", \""cold\""]\n"",
    ""answer"": ""[[\""arguta\"", \""tagaur\""], [\""bislings\"", \""siblings\""], [\""clod\"", \""cold\""], [\""gingerol\"", \""gringole\""], [\""miens\"", \""mines\""], [\""naivete\"", \""nieveta\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 687,
        ""words"": [
            ""nieveta"",
            ""naivete"",
            ""tagaur"",
            ""arguta"",
            ""miens"",
            ""mines"",
            ""siblings"",
            ""bislings"",
            ""gingerol"",
            ""gringole"",
            ""clod"",
            ""cold""
        ],
        ""solution"": [
            [
                ""arguta"",
                ""tagaur""
            ],
            [
                ""bislings"",
                ""siblings""
            ],
            [
                ""clod"",
                ""cold""
            ],
            [
                ""gingerol"",
                ""gringole""
            ],
            [
                ""miens"",
                ""mines""
            ],
            [
                ""naivete"",
                ""nieveta""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
688,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""notecase"", ""acetones"", ""parosela"", ""psoralea"", ""ogboni"", ""booing"", ""stilty"", ""slitty""]
","[[""acetones"", ""notecase""], [""booing"", ""ogboni""], [""parosela"", ""psoralea""], [""slitty"", ""stilty""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""notecase\"", \""acetones\"", \""parosela\"", \""psoralea\"", \""ogboni\"", \""booing\"", \""stilty\"", \""slitty\""]\n"",
    ""answer"": ""[[\""acetones\"", \""notecase\""], [\""booing\"", \""ogboni\""], [\""parosela\"", \""psoralea\""], [\""slitty\"", \""stilty\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 688,
        ""words"": [
            ""notecase"",
            ""acetones"",
            ""parosela"",
            ""psoralea"",
            ""ogboni"",
            ""booing"",
            ""stilty"",
            ""slitty""
        ],
        ""solution"": [
            [
                ""acetones"",
                ""notecase""
            ],
            [
                ""booing"",
                ""ogboni""
            ],
            [
                ""parosela"",
                ""psoralea""
            ],
            [
                ""slitty"",
                ""stilty""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
689,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""outribbing"", ""outbribing"", ""eyer"", ""yere"", ""eery"", ""eyre"", ""blast"", ""blats"", ""procuress"", ""percussor""]
","[[""blast"", ""blats""], [""eery"", ""eyer"", ""eyre"", ""yere""], [""outbribing"", ""outribbing""], [""percussor"", ""procuress""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""outribbing\"", \""outbribing\"", \""eyer\"", \""yere\"", \""eery\"", \""eyre\"", \""blast\"", \""blats\"", \""procuress\"", \""percussor\""]\n"",
    ""answer"": ""[[\""blast\"", \""blats\""], [\""eery\"", \""eyer\"", \""eyre\"", \""yere\""], [\""outbribing\"", \""outribbing\""], [\""percussor\"", \""procuress\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 689,
        ""words"": [
            ""outribbing"",
            ""outbribing"",
            ""eyer"",
            ""yere"",
            ""eery"",
            ""eyre"",
            ""blast"",
            ""blats"",
            ""procuress"",
            ""percussor""
        ],
        ""solution"": [
            [
                ""blast"",
                ""blats""
            ],
            [
                ""eery"",
                ""eyer"",
                ""eyre"",
                ""yere""
            ],
            [
                ""outbribing"",
                ""outribbing""
            ],
            [
                ""percussor"",
                ""procuress""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
690,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""brattier"", ""birretta"", ""copied"", ""epodic"", ""thionyls"", ""tonishly"", ""hammocks"", ""shammock""]
","[[""birretta"", ""brattier""], [""copied"", ""epodic""], [""hammocks"", ""shammock""], [""thionyls"", ""tonishly""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""brattier\"", \""birretta\"", \""copied\"", \""epodic\"", \""thionyls\"", \""tonishly\"", \""hammocks\"", \""shammock\""]\n"",
    ""answer"": ""[[\""birretta\"", \""brattier\""], [\""copied\"", \""epodic\""], [\""hammocks\"", \""shammock\""], [\""thionyls\"", \""tonishly\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 690,
        ""words"": [
            ""brattier"",
            ""birretta"",
            ""copied"",
            ""epodic"",
            ""thionyls"",
            ""tonishly"",
            ""hammocks"",
            ""shammock""
        ],
        ""solution"": [
            [
                ""birretta"",
                ""brattier""
            ],
            [
                ""copied"",
                ""epodic""
            ],
            [
                ""hammocks"",
                ""shammock""
            ],
            [
                ""thionyls"",
                ""tonishly""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
691,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bestrews"", ""websters"", ""brushfires"", ""burrfishes"", ""chromite"", ""hormetic"", ""trichome"", ""reboots"", ""booster"", ""paltering"", ""replating"", ""charnu"", ""unarch"", ""clinics"", ""cinclis"", ""peritonism"", ""permistion"", ""infarctions"", ""infractions"", ""backflash"", ""halfbacks""]
","[[""backflash"", ""halfbacks""], [""bestrews"", ""websters""], [""booster"", ""reboots""], [""brushfires"", ""burrfishes""], [""charnu"", ""unarch""], [""chromite"", ""hormetic"", ""trichome""], [""cinclis"", ""clinics""], [""infarctions"", ""infractions""], [""paltering"", ""replating""], [""peritonism"", ""permistion""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bestrews\"", \""websters\"", \""brushfires\"", \""burrfishes\"", \""chromite\"", \""hormetic\"", \""trichome\"", \""reboots\"", \""booster\"", \""paltering\"", \""replating\"", \""charnu\"", \""unarch\"", \""clinics\"", \""cinclis\"", \""peritonism\"", \""permistion\"", \""infarctions\"", \""infractions\"", \""backflash\"", \""halfbacks\""]\n"",
    ""answer"": ""[[\""backflash\"", \""halfbacks\""], [\""bestrews\"", \""websters\""], [\""booster\"", \""reboots\""], [\""brushfires\"", \""burrfishes\""], [\""charnu\"", \""unarch\""], [\""chromite\"", \""hormetic\"", \""trichome\""], [\""cinclis\"", \""clinics\""], [\""infarctions\"", \""infractions\""], [\""paltering\"", \""replating\""], [\""peritonism\"", \""permistion\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 691,
        ""words"": [
            ""bestrews"",
            ""websters"",
            ""brushfires"",
            ""burrfishes"",
            ""chromite"",
            ""hormetic"",
            ""trichome"",
            ""reboots"",
            ""booster"",
            ""paltering"",
            ""replating"",
            ""charnu"",
            ""unarch"",
            ""clinics"",
            ""cinclis"",
            ""peritonism"",
            ""permistion"",
            ""infarctions"",
            ""infractions"",
            ""backflash"",
            ""halfbacks""
        ],
        ""solution"": [
            [
                ""backflash"",
                ""halfbacks""
            ],
            [
                ""bestrews"",
                ""websters""
            ],
            [
                ""booster"",
                ""reboots""
            ],
            [
                ""brushfires"",
                ""burrfishes""
            ],
            [
                ""charnu"",
                ""unarch""
            ],
            [
                ""chromite"",
                ""hormetic"",
                ""trichome""
            ],
            [
                ""cinclis"",
                ""clinics""
            ],
            [
                ""infarctions"",
                ""infractions""
            ],
            [
                ""paltering"",
                ""replating""
            ],
            [
                ""peritonism"",
                ""permistion""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
692,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tempean"", ""peteman"", ""peatmen"", ""rissoa"", ""aissor"", ""sun"", ""uns"", ""nus"", ""genisaro"", ""organise"", ""argosine"", ""merchandiser"", ""merchandrise"", ""colluding"", ""cloudling""]
","[[""aissor"", ""rissoa""], [""argosine"", ""genisaro"", ""organise""], [""cloudling"", ""colluding""], [""merchandiser"", ""merchandrise""], [""nus"", ""sun"", ""uns""], [""peatmen"", ""peteman"", ""tempean""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tempean\"", \""peteman\"", \""peatmen\"", \""rissoa\"", \""aissor\"", \""sun\"", \""uns\"", \""nus\"", \""genisaro\"", \""organise\"", \""argosine\"", \""merchandiser\"", \""merchandrise\"", \""colluding\"", \""cloudling\""]\n"",
    ""answer"": ""[[\""aissor\"", \""rissoa\""], [\""argosine\"", \""genisaro\"", \""organise\""], [\""cloudling\"", \""colluding\""], [\""merchandiser\"", \""merchandrise\""], [\""nus\"", \""sun\"", \""uns\""], [\""peatmen\"", \""peteman\"", \""tempean\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 692,
        ""words"": [
            ""tempean"",
            ""peteman"",
            ""peatmen"",
            ""rissoa"",
            ""aissor"",
            ""sun"",
            ""uns"",
            ""nus"",
            ""genisaro"",
            ""organise"",
            ""argosine"",
            ""merchandiser"",
            ""merchandrise"",
            ""colluding"",
            ""cloudling""
        ],
        ""solution"": [
            [
                ""aissor"",
                ""rissoa""
            ],
            [
                ""argosine"",
                ""genisaro"",
                ""organise""
            ],
            [
                ""cloudling"",
                ""colluding""
            ],
            [
                ""merchandiser"",
                ""merchandrise""
            ],
            [
                ""nus"",
                ""sun"",
                ""uns""
            ],
            [
                ""peatmen"",
                ""peteman"",
                ""tempean""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
693,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""orgeats"", ""storage"", ""garotes"", ""tagsore"", ""lande"", ""naled"", ""alden"", ""abd"", ""dab"", ""bad""]
","[[""abd"", ""bad"", ""dab""], [""alden"", ""lande"", ""naled""], [""garotes"", ""orgeats"", ""storage"", ""tagsore""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""orgeats\"", \""storage\"", \""garotes\"", \""tagsore\"", \""lande\"", \""naled\"", \""alden\"", \""abd\"", \""dab\"", \""bad\""]\n"",
    ""answer"": ""[[\""abd\"", \""bad\"", \""dab\""], [\""alden\"", \""lande\"", \""naled\""], [\""garotes\"", \""orgeats\"", \""storage\"", \""tagsore\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 693,
        ""words"": [
            ""orgeats"",
            ""storage"",
            ""garotes"",
            ""tagsore"",
            ""lande"",
            ""naled"",
            ""alden"",
            ""abd"",
            ""dab"",
            ""bad""
        ],
        ""solution"": [
            [
                ""abd"",
                ""bad"",
                ""dab""
            ],
            [
                ""alden"",
                ""lande"",
                ""naled""
            ],
            [
                ""garotes"",
                ""orgeats"",
                ""storage"",
                ""tagsore""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
694,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pavidity"", ""vapidity"", ""dentation"", ""intonated"", ""rodsman"", ""randoms"", ""leakier"", ""earlike"", ""nana"", ""anna"", ""anan"", ""wrathed"", ""thrawed""]
","[[""anan"", ""anna"", ""nana""], [""dentation"", ""intonated""], [""earlike"", ""leakier""], [""pavidity"", ""vapidity""], [""randoms"", ""rodsman""], [""thrawed"", ""wrathed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pavidity\"", \""vapidity\"", \""dentation\"", \""intonated\"", \""rodsman\"", \""randoms\"", \""leakier\"", \""earlike\"", \""nana\"", \""anna\"", \""anan\"", \""wrathed\"", \""thrawed\""]\n"",
    ""answer"": ""[[\""anan\"", \""anna\"", \""nana\""], [\""dentation\"", \""intonated\""], [\""earlike\"", \""leakier\""], [\""pavidity\"", \""vapidity\""], [\""randoms\"", \""rodsman\""], [\""thrawed\"", \""wrathed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 694,
        ""words"": [
            ""pavidity"",
            ""vapidity"",
            ""dentation"",
            ""intonated"",
            ""rodsman"",
            ""randoms"",
            ""leakier"",
            ""earlike"",
            ""nana"",
            ""anna"",
            ""anan"",
            ""wrathed"",
            ""thrawed""
        ],
        ""solution"": [
            [
                ""anan"",
                ""anna"",
                ""nana""
            ],
            [
                ""dentation"",
                ""intonated""
            ],
            [
                ""earlike"",
                ""leakier""
            ],
            [
                ""pavidity"",
                ""vapidity""
            ],
            [
                ""randoms"",
                ""rodsman""
            ],
            [
                ""thrawed"",
                ""wrathed""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
695,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sleb"", ""bels"", ""meagre"", ""graeme"", ""meager"", ""allocute"", ""loculate"", ""muns"", ""snum"", ""metacentre"", ""metacenter"", ""unsilicated"", ""undeistical"", ""feetless"", ""feteless"", ""bashers"", ""brashes"", ""tristive"", ""veritist"", ""kente"", ""keten""]
","[[""allocute"", ""loculate""], [""bashers"", ""brashes""], [""bels"", ""sleb""], [""feetless"", ""feteless""], [""graeme"", ""meager"", ""meagre""], [""kente"", ""keten""], [""metacenter"", ""metacentre""], [""muns"", ""snum""], [""tristive"", ""veritist""], [""undeistical"", ""unsilicated""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sleb\"", \""bels\"", \""meagre\"", \""graeme\"", \""meager\"", \""allocute\"", \""loculate\"", \""muns\"", \""snum\"", \""metacentre\"", \""metacenter\"", \""unsilicated\"", \""undeistical\"", \""feetless\"", \""feteless\"", \""bashers\"", \""brashes\"", \""tristive\"", \""veritist\"", \""kente\"", \""keten\""]\n"",
    ""answer"": ""[[\""allocute\"", \""loculate\""], [\""bashers\"", \""brashes\""], [\""bels\"", \""sleb\""], [\""feetless\"", \""feteless\""], [\""graeme\"", \""meager\"", \""meagre\""], [\""kente\"", \""keten\""], [\""metacenter\"", \""metacentre\""], [\""muns\"", \""snum\""], [\""tristive\"", \""veritist\""], [\""undeistical\"", \""unsilicated\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 695,
        ""words"": [
            ""sleb"",
            ""bels"",
            ""meagre"",
            ""graeme"",
            ""meager"",
            ""allocute"",
            ""loculate"",
            ""muns"",
            ""snum"",
            ""metacentre"",
            ""metacenter"",
            ""unsilicated"",
            ""undeistical"",
            ""feetless"",
            ""feteless"",
            ""bashers"",
            ""brashes"",
            ""tristive"",
            ""veritist"",
            ""kente"",
            ""keten""
        ],
        ""solution"": [
            [
                ""allocute"",
                ""loculate""
            ],
            [
                ""bashers"",
                ""brashes""
            ],
            [
                ""bels"",
                ""sleb""
            ],
            [
                ""feetless"",
                ""feteless""
            ],
            [
                ""graeme"",
                ""meager"",
                ""meagre""
            ],
            [
                ""kente"",
                ""keten""
            ],
            [
                ""metacenter"",
                ""metacentre""
            ],
            [
                ""muns"",
                ""snum""
            ],
            [
                ""tristive"",
                ""veritist""
            ],
            [
                ""undeistical"",
                ""unsilicated""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
696,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""entwisted"", ""twistened"", ""stoush"", ""shouts"", ""souths""]
","[[""entwisted"", ""twistened""], [""shouts"", ""souths"", ""stoush""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""entwisted\"", \""twistened\"", \""stoush\"", \""shouts\"", \""souths\""]\n"",
    ""answer"": ""[[\""entwisted\"", \""twistened\""], [\""shouts\"", \""souths\"", \""stoush\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 696,
        ""words"": [
            ""entwisted"",
            ""twistened"",
            ""stoush"",
            ""shouts"",
            ""souths""
        ],
        ""solution"": [
            [
                ""entwisted"",
                ""twistened""
            ],
            [
                ""shouts"",
                ""souths"",
                ""stoush""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
697,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tooters"", ""stooter"", ""corm"", ""crom"", ""reliiant"", ""inertial"", ""linarite"", ""miltiest"", ""mistitle"", ""satoris"", ""aorists"", ""aristos"", ""versette"", ""servette"", ""pisolite"", ""polities""]
","[[""aorists"", ""aristos"", ""satoris""], [""corm"", ""crom""], [""inertial"", ""linarite"", ""reliiant""], [""miltiest"", ""mistitle""], [""pisolite"", ""polities""], [""servette"", ""versette""], [""stooter"", ""tooters""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tooters\"", \""stooter\"", \""corm\"", \""crom\"", \""reliiant\"", \""inertial\"", \""linarite\"", \""miltiest\"", \""mistitle\"", \""satoris\"", \""aorists\"", \""aristos\"", \""versette\"", \""servette\"", \""pisolite\"", \""polities\""]\n"",
    ""answer"": ""[[\""aorists\"", \""aristos\"", \""satoris\""], [\""corm\"", \""crom\""], [\""inertial\"", \""linarite\"", \""reliiant\""], [\""miltiest\"", \""mistitle\""], [\""pisolite\"", \""polities\""], [\""servette\"", \""versette\""], [\""stooter\"", \""tooters\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 697,
        ""words"": [
            ""tooters"",
            ""stooter"",
            ""corm"",
            ""crom"",
            ""reliiant"",
            ""inertial"",
            ""linarite"",
            ""miltiest"",
            ""mistitle"",
            ""satoris"",
            ""aorists"",
            ""aristos"",
            ""versette"",
            ""servette"",
            ""pisolite"",
            ""polities""
        ],
        ""solution"": [
            [
                ""aorists"",
                ""aristos"",
                ""satoris""
            ],
            [
                ""corm"",
                ""crom""
            ],
            [
                ""inertial"",
                ""linarite"",
                ""reliiant""
            ],
            [
                ""miltiest"",
                ""mistitle""
            ],
            [
                ""pisolite"",
                ""polities""
            ],
            [
                ""servette"",
                ""versette""
            ],
            [
                ""stooter"",
                ""tooters""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
698,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""haets"", ""sheat"", ""haste"", ""heats"", ""ashet"", ""labourer"", ""rubeolar"", ""coinferred"", ""reinforced"", ""insectean"", ""tenancies"", ""splasher"", ""plashers"", ""harpless"", ""slicht"", ""lichts""]
","[[""ashet"", ""haets"", ""haste"", ""heats"", ""sheat""], [""coinferred"", ""reinforced""], [""harpless"", ""plashers"", ""splasher""], [""insectean"", ""tenancies""], [""labourer"", ""rubeolar""], [""lichts"", ""slicht""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""haets\"", \""sheat\"", \""haste\"", \""heats\"", \""ashet\"", \""labourer\"", \""rubeolar\"", \""coinferred\"", \""reinforced\"", \""insectean\"", \""tenancies\"", \""splasher\"", \""plashers\"", \""harpless\"", \""slicht\"", \""lichts\""]\n"",
    ""answer"": ""[[\""ashet\"", \""haets\"", \""haste\"", \""heats\"", \""sheat\""], [\""coinferred\"", \""reinforced\""], [\""harpless\"", \""plashers\"", \""splasher\""], [\""insectean\"", \""tenancies\""], [\""labourer\"", \""rubeolar\""], [\""lichts\"", \""slicht\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 698,
        ""words"": [
            ""haets"",
            ""sheat"",
            ""haste"",
            ""heats"",
            ""ashet"",
            ""labourer"",
            ""rubeolar"",
            ""coinferred"",
            ""reinforced"",
            ""insectean"",
            ""tenancies"",
            ""splasher"",
            ""plashers"",
            ""harpless"",
            ""slicht"",
            ""lichts""
        ],
        ""solution"": [
            [
                ""ashet"",
                ""haets"",
                ""haste"",
                ""heats"",
                ""sheat""
            ],
            [
                ""coinferred"",
                ""reinforced""
            ],
            [
                ""harpless"",
                ""plashers"",
                ""splasher""
            ],
            [
                ""insectean"",
                ""tenancies""
            ],
            [
                ""labourer"",
                ""rubeolar""
            ],
            [
                ""lichts"",
                ""slicht""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
699,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""naives"", ""navies"", ""harmonies"", ""harmonise"", ""witter"", ""triwet""]
","[[""harmonies"", ""harmonise""], [""naives"", ""navies""], [""triwet"", ""witter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""naives\"", \""navies\"", \""harmonies\"", \""harmonise\"", \""witter\"", \""triwet\""]\n"",
    ""answer"": ""[[\""harmonies\"", \""harmonise\""], [\""naives\"", \""navies\""], [\""triwet\"", \""witter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 699,
        ""words"": [
            ""naives"",
            ""navies"",
            ""harmonies"",
            ""harmonise"",
            ""witter"",
            ""triwet""
        ],
        ""solution"": [
            [
                ""harmonies"",
                ""harmonise""
            ],
            [
                ""naives"",
                ""navies""
            ],
            [
                ""triwet"",
                ""witter""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
700,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""syconoid"", ""syodicon"", ""disrespect"", ""dissceptre"", ""disscepter"", ""valour"", ""louvar"", ""ovular""]
","[[""disrespect"", ""disscepter"", ""dissceptre""], [""louvar"", ""ovular"", ""valour""], [""syconoid"", ""syodicon""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""syconoid\"", \""syodicon\"", \""disrespect\"", \""dissceptre\"", \""disscepter\"", \""valour\"", \""louvar\"", \""ovular\""]\n"",
    ""answer"": ""[[\""disrespect\"", \""disscepter\"", \""dissceptre\""], [\""louvar\"", \""ovular\"", \""valour\""], [\""syconoid\"", \""syodicon\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 700,
        ""words"": [
            ""syconoid"",
            ""syodicon"",
            ""disrespect"",
            ""dissceptre"",
            ""disscepter"",
            ""valour"",
            ""louvar"",
            ""ovular""
        ],
        ""solution"": [
            [
                ""disrespect"",
                ""disscepter"",
                ""dissceptre""
            ],
            [
                ""louvar"",
                ""ovular"",
                ""valour""
            ],
            [
                ""syconoid"",
                ""syodicon""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
701,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unlit"", ""until"", ""lying"", ""lingy"", ""euskaldun"", ""eskualdun"", ""avengers"", ""engraves"", ""pterylographical"", ""petrographically"", ""heptace"", ""tepache"", ""banshies"", ""banishes"", ""wiltshire"", ""whirliest""]
","[[""avengers"", ""engraves""], [""banishes"", ""banshies""], [""eskualdun"", ""euskaldun""], [""heptace"", ""tepache""], [""lingy"", ""lying""], [""petrographically"", ""pterylographical""], [""unlit"", ""until""], [""whirliest"", ""wiltshire""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unlit\"", \""until\"", \""lying\"", \""lingy\"", \""euskaldun\"", \""eskualdun\"", \""avengers\"", \""engraves\"", \""pterylographical\"", \""petrographically\"", \""heptace\"", \""tepache\"", \""banshies\"", \""banishes\"", \""wiltshire\"", \""whirliest\""]\n"",
    ""answer"": ""[[\""avengers\"", \""engraves\""], [\""banishes\"", \""banshies\""], [\""eskualdun\"", \""euskaldun\""], [\""heptace\"", \""tepache\""], [\""lingy\"", \""lying\""], [\""petrographically\"", \""pterylographical\""], [\""unlit\"", \""until\""], [\""whirliest\"", \""wiltshire\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 701,
        ""words"": [
            ""unlit"",
            ""until"",
            ""lying"",
            ""lingy"",
            ""euskaldun"",
            ""eskualdun"",
            ""avengers"",
            ""engraves"",
            ""pterylographical"",
            ""petrographically"",
            ""heptace"",
            ""tepache"",
            ""banshies"",
            ""banishes"",
            ""wiltshire"",
            ""whirliest""
        ],
        ""solution"": [
            [
                ""avengers"",
                ""engraves""
            ],
            [
                ""banishes"",
                ""banshies""
            ],
            [
                ""eskualdun"",
                ""euskaldun""
            ],
            [
                ""heptace"",
                ""tepache""
            ],
            [
                ""lingy"",
                ""lying""
            ],
            [
                ""petrographically"",
                ""pterylographical""
            ],
            [
                ""unlit"",
                ""until""
            ],
            [
                ""whirliest"",
                ""wiltshire""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
702,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""postured"", ""proudest"", ""sprouted"", ""chint"", ""nitch"", ""meteoritics"", ""meteoristic"", ""pointes"", ""pintoes"", ""straps"", ""sprats"", ""hedonism"", ""monished"", ""demonish"", ""nighed"", ""hinged""]
","[[""chint"", ""nitch""], [""demonish"", ""hedonism"", ""monished""], [""hinged"", ""nighed""], [""meteoristic"", ""meteoritics""], [""pintoes"", ""pointes""], [""postured"", ""proudest"", ""sprouted""], [""sprats"", ""straps""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""postured\"", \""proudest\"", \""sprouted\"", \""chint\"", \""nitch\"", \""meteoritics\"", \""meteoristic\"", \""pointes\"", \""pintoes\"", \""straps\"", \""sprats\"", \""hedonism\"", \""monished\"", \""demonish\"", \""nighed\"", \""hinged\""]\n"",
    ""answer"": ""[[\""chint\"", \""nitch\""], [\""demonish\"", \""hedonism\"", \""monished\""], [\""hinged\"", \""nighed\""], [\""meteoristic\"", \""meteoritics\""], [\""pintoes\"", \""pointes\""], [\""postured\"", \""proudest\"", \""sprouted\""], [\""sprats\"", \""straps\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 702,
        ""words"": [
            ""postured"",
            ""proudest"",
            ""sprouted"",
            ""chint"",
            ""nitch"",
            ""meteoritics"",
            ""meteoristic"",
            ""pointes"",
            ""pintoes"",
            ""straps"",
            ""sprats"",
            ""hedonism"",
            ""monished"",
            ""demonish"",
            ""nighed"",
            ""hinged""
        ],
        ""solution"": [
            [
                ""chint"",
                ""nitch""
            ],
            [
                ""demonish"",
                ""hedonism"",
                ""monished""
            ],
            [
                ""hinged"",
                ""nighed""
            ],
            [
                ""meteoristic"",
                ""meteoritics""
            ],
            [
                ""pintoes"",
                ""pointes""
            ],
            [
                ""postured"",
                ""proudest"",
                ""sprouted""
            ],
            [
                ""sprats"",
                ""straps""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
703,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""proclaimer"", ""reproclaim"", ""aways"", ""asway"", ""medea"", ""ameed"", ""edema"", ""heptylic"", ""phyletic"", ""whyfor"", ""forwhy"", ""aluminosilicate"", ""silicoaluminate"", ""rebozo"", ""boozer"", ""trainable"", ""albertina""]
","[[""albertina"", ""trainable""], [""aluminosilicate"", ""silicoaluminate""], [""ameed"", ""edema"", ""medea""], [""asway"", ""aways""], [""boozer"", ""rebozo""], [""forwhy"", ""whyfor""], [""heptylic"", ""phyletic""], [""proclaimer"", ""reproclaim""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""proclaimer\"", \""reproclaim\"", \""aways\"", \""asway\"", \""medea\"", \""ameed\"", \""edema\"", \""heptylic\"", \""phyletic\"", \""whyfor\"", \""forwhy\"", \""aluminosilicate\"", \""silicoaluminate\"", \""rebozo\"", \""boozer\"", \""trainable\"", \""albertina\""]\n"",
    ""answer"": ""[[\""albertina\"", \""trainable\""], [\""aluminosilicate\"", \""silicoaluminate\""], [\""ameed\"", \""edema\"", \""medea\""], [\""asway\"", \""aways\""], [\""boozer\"", \""rebozo\""], [\""forwhy\"", \""whyfor\""], [\""heptylic\"", \""phyletic\""], [\""proclaimer\"", \""reproclaim\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 703,
        ""words"": [
            ""proclaimer"",
            ""reproclaim"",
            ""aways"",
            ""asway"",
            ""medea"",
            ""ameed"",
            ""edema"",
            ""heptylic"",
            ""phyletic"",
            ""whyfor"",
            ""forwhy"",
            ""aluminosilicate"",
            ""silicoaluminate"",
            ""rebozo"",
            ""boozer"",
            ""trainable"",
            ""albertina""
        ],
        ""solution"": [
            [
                ""albertina"",
                ""trainable""
            ],
            [
                ""aluminosilicate"",
                ""silicoaluminate""
            ],
            [
                ""ameed"",
                ""edema"",
                ""medea""
            ],
            [
                ""asway"",
                ""aways""
            ],
            [
                ""boozer"",
                ""rebozo""
            ],
            [
                ""forwhy"",
                ""whyfor""
            ],
            [
                ""heptylic"",
                ""phyletic""
            ],
            [
                ""proclaimer"",
                ""reproclaim""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
704,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""amissness"", ""massiness"", ""misatone"", ""masonite"", ""amniotes"", ""agos"", ""sago"", ""soga"", ""goas"", ""warranties"", ""warrantise"", ""gangway"", ""waygang"", ""patana"", ""apatan""]
","[[""agos"", ""goas"", ""sago"", ""soga""], [""amissness"", ""massiness""], [""amniotes"", ""masonite"", ""misatone""], [""apatan"", ""patana""], [""gangway"", ""waygang""], [""warranties"", ""warrantise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""amissness\"", \""massiness\"", \""misatone\"", \""masonite\"", \""amniotes\"", \""agos\"", \""sago\"", \""soga\"", \""goas\"", \""warranties\"", \""warrantise\"", \""gangway\"", \""waygang\"", \""patana\"", \""apatan\""]\n"",
    ""answer"": ""[[\""agos\"", \""goas\"", \""sago\"", \""soga\""], [\""amissness\"", \""massiness\""], [\""amniotes\"", \""masonite\"", \""misatone\""], [\""apatan\"", \""patana\""], [\""gangway\"", \""waygang\""], [\""warranties\"", \""warrantise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 704,
        ""words"": [
            ""amissness"",
            ""massiness"",
            ""misatone"",
            ""masonite"",
            ""amniotes"",
            ""agos"",
            ""sago"",
            ""soga"",
            ""goas"",
            ""warranties"",
            ""warrantise"",
            ""gangway"",
            ""waygang"",
            ""patana"",
            ""apatan""
        ],
        ""solution"": [
            [
                ""agos"",
                ""goas"",
                ""sago"",
                ""soga""
            ],
            [
                ""amissness"",
                ""massiness""
            ],
            [
                ""amniotes"",
                ""masonite"",
                ""misatone""
            ],
            [
                ""apatan"",
                ""patana""
            ],
            [
                ""gangway"",
                ""waygang""
            ],
            [
                ""warranties"",
                ""warrantise""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
705,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""impositions"", ""misposition"", ""cob"", ""boc""]
","[[""boc"", ""cob""], [""impositions"", ""misposition""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""impositions\"", \""misposition\"", \""cob\"", \""boc\""]\n"",
    ""answer"": ""[[\""boc\"", \""cob\""], [\""impositions\"", \""misposition\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 705,
        ""words"": [
            ""impositions"",
            ""misposition"",
            ""cob"",
            ""boc""
        ],
        ""solution"": [
            [
                ""boc"",
                ""cob""
            ],
            [
                ""impositions"",
                ""misposition""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
706,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""inalimental"", ""antimallein"", ""encroach"", ""charneco"", ""overheld"", ""verdelho"", ""sebastian"", ""bassanite""]
","[[""antimallein"", ""inalimental""], [""bassanite"", ""sebastian""], [""charneco"", ""encroach""], [""overheld"", ""verdelho""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""inalimental\"", \""antimallein\"", \""encroach\"", \""charneco\"", \""overheld\"", \""verdelho\"", \""sebastian\"", \""bassanite\""]\n"",
    ""answer"": ""[[\""antimallein\"", \""inalimental\""], [\""bassanite\"", \""sebastian\""], [\""charneco\"", \""encroach\""], [\""overheld\"", \""verdelho\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 706,
        ""words"": [
            ""inalimental"",
            ""antimallein"",
            ""encroach"",
            ""charneco"",
            ""overheld"",
            ""verdelho"",
            ""sebastian"",
            ""bassanite""
        ],
        ""solution"": [
            [
                ""antimallein"",
                ""inalimental""
            ],
            [
                ""bassanite"",
                ""sebastian""
            ],
            [
                ""charneco"",
                ""encroach""
            ],
            [
                ""overheld"",
                ""verdelho""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
707,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""panman"", ""pannam"", ""unmorbidly"", ""moribundly"", ""demerol"", ""modeler"", ""remodel"", ""frontalis"", ""flatirons"", ""inflators"", ""pian"", ""pani"", ""pain"", ""nipa""]
","[[""demerol"", ""modeler"", ""remodel""], [""flatirons"", ""frontalis"", ""inflators""], [""moribundly"", ""unmorbidly""], [""nipa"", ""pain"", ""pani"", ""pian""], [""panman"", ""pannam""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""panman\"", \""pannam\"", \""unmorbidly\"", \""moribundly\"", \""demerol\"", \""modeler\"", \""remodel\"", \""frontalis\"", \""flatirons\"", \""inflators\"", \""pian\"", \""pani\"", \""pain\"", \""nipa\""]\n"",
    ""answer"": ""[[\""demerol\"", \""modeler\"", \""remodel\""], [\""flatirons\"", \""frontalis\"", \""inflators\""], [\""moribundly\"", \""unmorbidly\""], [\""nipa\"", \""pain\"", \""pani\"", \""pian\""], [\""panman\"", \""pannam\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 707,
        ""words"": [
            ""panman"",
            ""pannam"",
            ""unmorbidly"",
            ""moribundly"",
            ""demerol"",
            ""modeler"",
            ""remodel"",
            ""frontalis"",
            ""flatirons"",
            ""inflators"",
            ""pian"",
            ""pani"",
            ""pain"",
            ""nipa""
        ],
        ""solution"": [
            [
                ""demerol"",
                ""modeler"",
                ""remodel""
            ],
            [
                ""flatirons"",
                ""frontalis"",
                ""inflators""
            ],
            [
                ""moribundly"",
                ""unmorbidly""
            ],
            [
                ""nipa"",
                ""pain"",
                ""pani"",
                ""pian""
            ],
            [
                ""panman"",
                ""pannam""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
708,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sakti"", ""sitka"", ""salivas"", ""salvias""]
","[[""sakti"", ""sitka""], [""salivas"", ""salvias""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sakti\"", \""sitka\"", \""salivas\"", \""salvias\""]\n"",
    ""answer"": ""[[\""sakti\"", \""sitka\""], [\""salivas\"", \""salvias\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 708,
        ""words"": [
            ""sakti"",
            ""sitka"",
            ""salivas"",
            ""salvias""
        ],
        ""solution"": [
            [
                ""sakti"",
                ""sitka""
            ],
            [
                ""salivas"",
                ""salvias""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
709,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""worker"", ""rework"", ""guy"", ""yug"", ""orangebird"", ""reboarding"", ""actuals"", ""scatula"", ""elmier"", ""emeril"", ""meiler"", ""relime""]
","[[""actuals"", ""scatula""], [""elmier"", ""emeril"", ""meiler"", ""relime""], [""guy"", ""yug""], [""orangebird"", ""reboarding""], [""rework"", ""worker""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""worker\"", \""rework\"", \""guy\"", \""yug\"", \""orangebird\"", \""reboarding\"", \""actuals\"", \""scatula\"", \""elmier\"", \""emeril\"", \""meiler\"", \""relime\""]\n"",
    ""answer"": ""[[\""actuals\"", \""scatula\""], [\""elmier\"", \""emeril\"", \""meiler\"", \""relime\""], [\""guy\"", \""yug\""], [\""orangebird\"", \""reboarding\""], [\""rework\"", \""worker\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 709,
        ""words"": [
            ""worker"",
            ""rework"",
            ""guy"",
            ""yug"",
            ""orangebird"",
            ""reboarding"",
            ""actuals"",
            ""scatula"",
            ""elmier"",
            ""emeril"",
            ""meiler"",
            ""relime""
        ],
        ""solution"": [
            [
                ""actuals"",
                ""scatula""
            ],
            [
                ""elmier"",
                ""emeril"",
                ""meiler"",
                ""relime""
            ],
            [
                ""guy"",
                ""yug""
            ],
            [
                ""orangebird"",
                ""reboarding""
            ],
            [
                ""rework"",
                ""worker""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
710,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""otc"", ""cot"", ""eluate"", ""aulete"", ""insculps"", ""sculpins"", ""haras"", ""raash"", ""haars"", ""oration"", ""ontario"", ""tubes"", ""subet"", ""stube"", ""ionomers"", ""moonrise"", ""stow"", ""twos"", ""tows"", ""swot""]
","[[""aulete"", ""eluate""], [""cot"", ""otc""], [""haars"", ""haras"", ""raash""], [""insculps"", ""sculpins""], [""ionomers"", ""moonrise""], [""ontario"", ""oration""], [""stow"", ""swot"", ""tows"", ""twos""], [""stube"", ""subet"", ""tubes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""otc\"", \""cot\"", \""eluate\"", \""aulete\"", \""insculps\"", \""sculpins\"", \""haras\"", \""raash\"", \""haars\"", \""oration\"", \""ontario\"", \""tubes\"", \""subet\"", \""stube\"", \""ionomers\"", \""moonrise\"", \""stow\"", \""twos\"", \""tows\"", \""swot\""]\n"",
    ""answer"": ""[[\""aulete\"", \""eluate\""], [\""cot\"", \""otc\""], [\""haars\"", \""haras\"", \""raash\""], [\""insculps\"", \""sculpins\""], [\""ionomers\"", \""moonrise\""], [\""ontario\"", \""oration\""], [\""stow\"", \""swot\"", \""tows\"", \""twos\""], [\""stube\"", \""subet\"", \""tubes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 710,
        ""words"": [
            ""otc"",
            ""cot"",
            ""eluate"",
            ""aulete"",
            ""insculps"",
            ""sculpins"",
            ""haras"",
            ""raash"",
            ""haars"",
            ""oration"",
            ""ontario"",
            ""tubes"",
            ""subet"",
            ""stube"",
            ""ionomers"",
            ""moonrise"",
            ""stow"",
            ""twos"",
            ""tows"",
            ""swot""
        ],
        ""solution"": [
            [
                ""aulete"",
                ""eluate""
            ],
            [
                ""cot"",
                ""otc""
            ],
            [
                ""haars"",
                ""haras"",
                ""raash""
            ],
            [
                ""insculps"",
                ""sculpins""
            ],
            [
                ""ionomers"",
                ""moonrise""
            ],
            [
                ""ontario"",
                ""oration""
            ],
            [
                ""stow"",
                ""swot"",
                ""tows"",
                ""twos""
            ],
            [
                ""stube"",
                ""subet"",
                ""tubes""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
711,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""senti"", ""snite"", ""tines"", ""stein"", ""aidance"", ""canidae"", ""spated"", ""adepts"", ""pasted"", ""spode"", ""posed"", ""emmets"", ""semmet"", ""rubato"", ""tabour"", ""outbar""]
","[[""adepts"", ""pasted"", ""spated""], [""aidance"", ""canidae""], [""emmets"", ""semmet""], [""outbar"", ""rubato"", ""tabour""], [""posed"", ""spode""], [""senti"", ""snite"", ""stein"", ""tines""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""senti\"", \""snite\"", \""tines\"", \""stein\"", \""aidance\"", \""canidae\"", \""spated\"", \""adepts\"", \""pasted\"", \""spode\"", \""posed\"", \""emmets\"", \""semmet\"", \""rubato\"", \""tabour\"", \""outbar\""]\n"",
    ""answer"": ""[[\""adepts\"", \""pasted\"", \""spated\""], [\""aidance\"", \""canidae\""], [\""emmets\"", \""semmet\""], [\""outbar\"", \""rubato\"", \""tabour\""], [\""posed\"", \""spode\""], [\""senti\"", \""snite\"", \""stein\"", \""tines\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 711,
        ""words"": [
            ""senti"",
            ""snite"",
            ""tines"",
            ""stein"",
            ""aidance"",
            ""canidae"",
            ""spated"",
            ""adepts"",
            ""pasted"",
            ""spode"",
            ""posed"",
            ""emmets"",
            ""semmet"",
            ""rubato"",
            ""tabour"",
            ""outbar""
        ],
        ""solution"": [
            [
                ""adepts"",
                ""pasted"",
                ""spated""
            ],
            [
                ""aidance"",
                ""canidae""
            ],
            [
                ""emmets"",
                ""semmet""
            ],
            [
                ""outbar"",
                ""rubato"",
                ""tabour""
            ],
            [
                ""posed"",
                ""spode""
            ],
            [
                ""senti"",
                ""snite"",
                ""stein"",
                ""tines""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
712,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""porella"", ""pollera"", ""snathes"", ""thaness"", ""hastens"", ""riever"", ""reiver"", ""verier"", ""darkle"", ""larked"", ""krang"", ""grank"", ""apocryph"", ""hypocarp""]
","[[""apocryph"", ""hypocarp""], [""darkle"", ""larked""], [""grank"", ""krang""], [""hastens"", ""snathes"", ""thaness""], [""pollera"", ""porella""], [""reiver"", ""riever"", ""verier""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""porella\"", \""pollera\"", \""snathes\"", \""thaness\"", \""hastens\"", \""riever\"", \""reiver\"", \""verier\"", \""darkle\"", \""larked\"", \""krang\"", \""grank\"", \""apocryph\"", \""hypocarp\""]\n"",
    ""answer"": ""[[\""apocryph\"", \""hypocarp\""], [\""darkle\"", \""larked\""], [\""grank\"", \""krang\""], [\""hastens\"", \""snathes\"", \""thaness\""], [\""pollera\"", \""porella\""], [\""reiver\"", \""riever\"", \""verier\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 712,
        ""words"": [
            ""porella"",
            ""pollera"",
            ""snathes"",
            ""thaness"",
            ""hastens"",
            ""riever"",
            ""reiver"",
            ""verier"",
            ""darkle"",
            ""larked"",
            ""krang"",
            ""grank"",
            ""apocryph"",
            ""hypocarp""
        ],
        ""solution"": [
            [
                ""apocryph"",
                ""hypocarp""
            ],
            [
                ""darkle"",
                ""larked""
            ],
            [
                ""grank"",
                ""krang""
            ],
            [
                ""hastens"",
                ""snathes"",
                ""thaness""
            ],
            [
                ""pollera"",
                ""porella""
            ],
            [
                ""reiver"",
                ""riever"",
                ""verier""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
713,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""moreover"", ""overmore"", ""svamin"", ""mavins"", ""hydromotor"", ""orthodromy"", ""detrainment"", ""determinant"", ""unenviable"", ""unveniable""]
","[[""determinant"", ""detrainment""], [""hydromotor"", ""orthodromy""], [""mavins"", ""svamin""], [""moreover"", ""overmore""], [""unenviable"", ""unveniable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""moreover\"", \""overmore\"", \""svamin\"", \""mavins\"", \""hydromotor\"", \""orthodromy\"", \""detrainment\"", \""determinant\"", \""unenviable\"", \""unveniable\""]\n"",
    ""answer"": ""[[\""determinant\"", \""detrainment\""], [\""hydromotor\"", \""orthodromy\""], [\""mavins\"", \""svamin\""], [\""moreover\"", \""overmore\""], [\""unenviable\"", \""unveniable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 713,
        ""words"": [
            ""moreover"",
            ""overmore"",
            ""svamin"",
            ""mavins"",
            ""hydromotor"",
            ""orthodromy"",
            ""detrainment"",
            ""determinant"",
            ""unenviable"",
            ""unveniable""
        ],
        ""solution"": [
            [
                ""determinant"",
                ""detrainment""
            ],
            [
                ""hydromotor"",
                ""orthodromy""
            ],
            [
                ""mavins"",
                ""svamin""
            ],
            [
                ""moreover"",
                ""overmore""
            ],
            [
                ""unenviable"",
                ""unveniable""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
714,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gavel"", ""glave"", ""batterer"", ""barrette"", ""berretta"", ""violated"", ""dovetail"", ""trapfall"", ""pratfall"", ""oximes"", ""moxies"", ""exomis"", ""riled"", ""idler"", ""oversale"", ""overseal"", ""genistin"", ""gentisin"", ""ginniest""]
","[[""barrette"", ""batterer"", ""berretta""], [""dovetail"", ""violated""], [""exomis"", ""moxies"", ""oximes""], [""gavel"", ""glave""], [""genistin"", ""gentisin"", ""ginniest""], [""idler"", ""riled""], [""oversale"", ""overseal""], [""pratfall"", ""trapfall""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gavel\"", \""glave\"", \""batterer\"", \""barrette\"", \""berretta\"", \""violated\"", \""dovetail\"", \""trapfall\"", \""pratfall\"", \""oximes\"", \""moxies\"", \""exomis\"", \""riled\"", \""idler\"", \""oversale\"", \""overseal\"", \""genistin\"", \""gentisin\"", \""ginniest\""]\n"",
    ""answer"": ""[[\""barrette\"", \""batterer\"", \""berretta\""], [\""dovetail\"", \""violated\""], [\""exomis\"", \""moxies\"", \""oximes\""], [\""gavel\"", \""glave\""], [\""genistin\"", \""gentisin\"", \""ginniest\""], [\""idler\"", \""riled\""], [\""oversale\"", \""overseal\""], [\""pratfall\"", \""trapfall\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 714,
        ""words"": [
            ""gavel"",
            ""glave"",
            ""batterer"",
            ""barrette"",
            ""berretta"",
            ""violated"",
            ""dovetail"",
            ""trapfall"",
            ""pratfall"",
            ""oximes"",
            ""moxies"",
            ""exomis"",
            ""riled"",
            ""idler"",
            ""oversale"",
            ""overseal"",
            ""genistin"",
            ""gentisin"",
            ""ginniest""
        ],
        ""solution"": [
            [
                ""barrette"",
                ""batterer"",
                ""berretta""
            ],
            [
                ""dovetail"",
                ""violated""
            ],
            [
                ""exomis"",
                ""moxies"",
                ""oximes""
            ],
            [
                ""gavel"",
                ""glave""
            ],
            [
                ""genistin"",
                ""gentisin"",
                ""ginniest""
            ],
            [
                ""idler"",
                ""riled""
            ],
            [
                ""oversale"",
                ""overseal""
            ],
            [
                ""pratfall"",
                ""trapfall""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
715,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""leadout"", ""outlead"", ""smartie"", ""maestri"", ""plinkers"", ""sprinkle"", ""regions"", ""ignores"", ""eringos"", ""signore"", ""discern"", ""rescind"", ""coying"", ""coigny""]
","[[""coigny"", ""coying""], [""discern"", ""rescind""], [""eringos"", ""ignores"", ""regions"", ""signore""], [""leadout"", ""outlead""], [""maestri"", ""smartie""], [""plinkers"", ""sprinkle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""leadout\"", \""outlead\"", \""smartie\"", \""maestri\"", \""plinkers\"", \""sprinkle\"", \""regions\"", \""ignores\"", \""eringos\"", \""signore\"", \""discern\"", \""rescind\"", \""coying\"", \""coigny\""]\n"",
    ""answer"": ""[[\""coigny\"", \""coying\""], [\""discern\"", \""rescind\""], [\""eringos\"", \""ignores\"", \""regions\"", \""signore\""], [\""leadout\"", \""outlead\""], [\""maestri\"", \""smartie\""], [\""plinkers\"", \""sprinkle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 715,
        ""words"": [
            ""leadout"",
            ""outlead"",
            ""smartie"",
            ""maestri"",
            ""plinkers"",
            ""sprinkle"",
            ""regions"",
            ""ignores"",
            ""eringos"",
            ""signore"",
            ""discern"",
            ""rescind"",
            ""coying"",
            ""coigny""
        ],
        ""solution"": [
            [
                ""coigny"",
                ""coying""
            ],
            [
                ""discern"",
                ""rescind""
            ],
            [
                ""eringos"",
                ""ignores"",
                ""regions"",
                ""signore""
            ],
            [
                ""leadout"",
                ""outlead""
            ],
            [
                ""maestri"",
                ""smartie""
            ],
            [
                ""plinkers"",
                ""sprinkle""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
716,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bionic"", ""niobic"", ""crusted"", ""crudest"", ""picong"", ""coping""]
","[[""bionic"", ""niobic""], [""coping"", ""picong""], [""crudest"", ""crusted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bionic\"", \""niobic\"", \""crusted\"", \""crudest\"", \""picong\"", \""coping\""]\n"",
    ""answer"": ""[[\""bionic\"", \""niobic\""], [\""coping\"", \""picong\""], [\""crudest\"", \""crusted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 716,
        ""words"": [
            ""bionic"",
            ""niobic"",
            ""crusted"",
            ""crudest"",
            ""picong"",
            ""coping""
        ],
        ""solution"": [
            [
                ""bionic"",
                ""niobic""
            ],
            [
                ""coping"",
                ""picong""
            ],
            [
                ""crudest"",
                ""crusted""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
717,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""triseme"", ""retimes"", ""ritualize"", ""uralitize"", ""erato"", ""oater"", ""orate"", ""pecunious"", ""puniceous"", ""lipomyoma"", ""myolipoma"", ""bepaste"", ""bespate"", ""enervates"", ""venerates"", ""cracksman"", ""crackmans"", ""moyener"", ""moneyer""]
","[[""bepaste"", ""bespate""], [""crackmans"", ""cracksman""], [""enervates"", ""venerates""], [""erato"", ""oater"", ""orate""], [""lipomyoma"", ""myolipoma""], [""moneyer"", ""moyener""], [""pecunious"", ""puniceous""], [""retimes"", ""triseme""], [""ritualize"", ""uralitize""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""triseme\"", \""retimes\"", \""ritualize\"", \""uralitize\"", \""erato\"", \""oater\"", \""orate\"", \""pecunious\"", \""puniceous\"", \""lipomyoma\"", \""myolipoma\"", \""bepaste\"", \""bespate\"", \""enervates\"", \""venerates\"", \""cracksman\"", \""crackmans\"", \""moyener\"", \""moneyer\""]\n"",
    ""answer"": ""[[\""bepaste\"", \""bespate\""], [\""crackmans\"", \""cracksman\""], [\""enervates\"", \""venerates\""], [\""erato\"", \""oater\"", \""orate\""], [\""lipomyoma\"", \""myolipoma\""], [\""moneyer\"", \""moyener\""], [\""pecunious\"", \""puniceous\""], [\""retimes\"", \""triseme\""], [\""ritualize\"", \""uralitize\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 717,
        ""words"": [
            ""triseme"",
            ""retimes"",
            ""ritualize"",
            ""uralitize"",
            ""erato"",
            ""oater"",
            ""orate"",
            ""pecunious"",
            ""puniceous"",
            ""lipomyoma"",
            ""myolipoma"",
            ""bepaste"",
            ""bespate"",
            ""enervates"",
            ""venerates"",
            ""cracksman"",
            ""crackmans"",
            ""moyener"",
            ""moneyer""
        ],
        ""solution"": [
            [
                ""bepaste"",
                ""bespate""
            ],
            [
                ""crackmans"",
                ""cracksman""
            ],
            [
                ""enervates"",
                ""venerates""
            ],
            [
                ""erato"",
                ""oater"",
                ""orate""
            ],
            [
                ""lipomyoma"",
                ""myolipoma""
            ],
            [
                ""moneyer"",
                ""moyener""
            ],
            [
                ""pecunious"",
                ""puniceous""
            ],
            [
                ""retimes"",
                ""triseme""
            ],
            [
                ""ritualize"",
                ""uralitize""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
718,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""enation"", ""etonian"", ""garnitures"", ""austringer"", ""treasuring"", ""creed"", ""ceder"", ""cedre"", ""cered"", ""falk"", ""flak"", ""inguen"", ""ingnue"", ""ingenu"", ""spicate"", ""aseptic"", ""unhalsed"", ""unshaled"", ""unlashed""]
","[[""aseptic"", ""spicate""], [""austringer"", ""garnitures"", ""treasuring""], [""ceder"", ""cedre"", ""cered"", ""creed""], [""enation"", ""etonian""], [""falk"", ""flak""], [""ingenu"", ""ingnue"", ""inguen""], [""unhalsed"", ""unlashed"", ""unshaled""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""enation\"", \""etonian\"", \""garnitures\"", \""austringer\"", \""treasuring\"", \""creed\"", \""ceder\"", \""cedre\"", \""cered\"", \""falk\"", \""flak\"", \""inguen\"", \""ingnue\"", \""ingenu\"", \""spicate\"", \""aseptic\"", \""unhalsed\"", \""unshaled\"", \""unlashed\""]\n"",
    ""answer"": ""[[\""aseptic\"", \""spicate\""], [\""austringer\"", \""garnitures\"", \""treasuring\""], [\""ceder\"", \""cedre\"", \""cered\"", \""creed\""], [\""enation\"", \""etonian\""], [\""falk\"", \""flak\""], [\""ingenu\"", \""ingnue\"", \""inguen\""], [\""unhalsed\"", \""unlashed\"", \""unshaled\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 718,
        ""words"": [
            ""enation"",
            ""etonian"",
            ""garnitures"",
            ""austringer"",
            ""treasuring"",
            ""creed"",
            ""ceder"",
            ""cedre"",
            ""cered"",
            ""falk"",
            ""flak"",
            ""inguen"",
            ""ingnue"",
            ""ingenu"",
            ""spicate"",
            ""aseptic"",
            ""unhalsed"",
            ""unshaled"",
            ""unlashed""
        ],
        ""solution"": [
            [
                ""aseptic"",
                ""spicate""
            ],
            [
                ""austringer"",
                ""garnitures"",
                ""treasuring""
            ],
            [
                ""ceder"",
                ""cedre"",
                ""cered"",
                ""creed""
            ],
            [
                ""enation"",
                ""etonian""
            ],
            [
                ""falk"",
                ""flak""
            ],
            [
                ""ingenu"",
                ""ingnue"",
                ""inguen""
            ],
            [
                ""unhalsed"",
                ""unlashed"",
                ""unshaled""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
719,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""arisen"", ""arsine"", ""prospice"", ""croppies"", ""energises"", ""regenesis"", ""hydriote"", ""thyreoid"", ""petallike"", ""platelike"", ""seabeds"", ""debases"", ""hematosin"", ""thomasine"", ""charbon"", ""brochan"", ""siphonate"", ""pantihose"", ""wisted"", ""widest""]
","[[""arisen"", ""arsine""], [""brochan"", ""charbon""], [""croppies"", ""prospice""], [""debases"", ""seabeds""], [""energises"", ""regenesis""], [""hematosin"", ""thomasine""], [""hydriote"", ""thyreoid""], [""pantihose"", ""siphonate""], [""petallike"", ""platelike""], [""widest"", ""wisted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""arisen\"", \""arsine\"", \""prospice\"", \""croppies\"", \""energises\"", \""regenesis\"", \""hydriote\"", \""thyreoid\"", \""petallike\"", \""platelike\"", \""seabeds\"", \""debases\"", \""hematosin\"", \""thomasine\"", \""charbon\"", \""brochan\"", \""siphonate\"", \""pantihose\"", \""wisted\"", \""widest\""]\n"",
    ""answer"": ""[[\""arisen\"", \""arsine\""], [\""brochan\"", \""charbon\""], [\""croppies\"", \""prospice\""], [\""debases\"", \""seabeds\""], [\""energises\"", \""regenesis\""], [\""hematosin\"", \""thomasine\""], [\""hydriote\"", \""thyreoid\""], [\""pantihose\"", \""siphonate\""], [\""petallike\"", \""platelike\""], [\""widest\"", \""wisted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 719,
        ""words"": [
            ""arisen"",
            ""arsine"",
            ""prospice"",
            ""croppies"",
            ""energises"",
            ""regenesis"",
            ""hydriote"",
            ""thyreoid"",
            ""petallike"",
            ""platelike"",
            ""seabeds"",
            ""debases"",
            ""hematosin"",
            ""thomasine"",
            ""charbon"",
            ""brochan"",
            ""siphonate"",
            ""pantihose"",
            ""wisted"",
            ""widest""
        ],
        ""solution"": [
            [
                ""arisen"",
                ""arsine""
            ],
            [
                ""brochan"",
                ""charbon""
            ],
            [
                ""croppies"",
                ""prospice""
            ],
            [
                ""debases"",
                ""seabeds""
            ],
            [
                ""energises"",
                ""regenesis""
            ],
            [
                ""hematosin"",
                ""thomasine""
            ],
            [
                ""hydriote"",
                ""thyreoid""
            ],
            [
                ""pantihose"",
                ""siphonate""
            ],
            [
                ""petallike"",
                ""platelike""
            ],
            [
                ""widest"",
                ""wisted""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
720,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pamlico"", ""oilcamp"", ""gar"", ""gra"", ""unroyalist"", ""unsolitary"", ""datsuns"", ""sandust"", ""doorless"", ""odorless"", ""lordoses"", ""reanswer"", ""answerer"", ""lunets"", ""sunlet"", ""po"", ""op"", ""outlining"", ""untoiling"", ""cochairmen"", ""chiromance""]
","[[""answerer"", ""reanswer""], [""chiromance"", ""cochairmen""], [""datsuns"", ""sandust""], [""doorless"", ""lordoses"", ""odorless""], [""gar"", ""gra""], [""lunets"", ""sunlet""], [""oilcamp"", ""pamlico""], [""op"", ""po""], [""outlining"", ""untoiling""], [""unroyalist"", ""unsolitary""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pamlico\"", \""oilcamp\"", \""gar\"", \""gra\"", \""unroyalist\"", \""unsolitary\"", \""datsuns\"", \""sandust\"", \""doorless\"", \""odorless\"", \""lordoses\"", \""reanswer\"", \""answerer\"", \""lunets\"", \""sunlet\"", \""po\"", \""op\"", \""outlining\"", \""untoiling\"", \""cochairmen\"", \""chiromance\""]\n"",
    ""answer"": ""[[\""answerer\"", \""reanswer\""], [\""chiromance\"", \""cochairmen\""], [\""datsuns\"", \""sandust\""], [\""doorless\"", \""lordoses\"", \""odorless\""], [\""gar\"", \""gra\""], [\""lunets\"", \""sunlet\""], [\""oilcamp\"", \""pamlico\""], [\""op\"", \""po\""], [\""outlining\"", \""untoiling\""], [\""unroyalist\"", \""unsolitary\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 720,
        ""words"": [
            ""pamlico"",
            ""oilcamp"",
            ""gar"",
            ""gra"",
            ""unroyalist"",
            ""unsolitary"",
            ""datsuns"",
            ""sandust"",
            ""doorless"",
            ""odorless"",
            ""lordoses"",
            ""reanswer"",
            ""answerer"",
            ""lunets"",
            ""sunlet"",
            ""po"",
            ""op"",
            ""outlining"",
            ""untoiling"",
            ""cochairmen"",
            ""chiromance""
        ],
        ""solution"": [
            [
                ""answerer"",
                ""reanswer""
            ],
            [
                ""chiromance"",
                ""cochairmen""
            ],
            [
                ""datsuns"",
                ""sandust""
            ],
            [
                ""doorless"",
                ""lordoses"",
                ""odorless""
            ],
            [
                ""gar"",
                ""gra""
            ],
            [
                ""lunets"",
                ""sunlet""
            ],
            [
                ""oilcamp"",
                ""pamlico""
            ],
            [
                ""op"",
                ""po""
            ],
            [
                ""outlining"",
                ""untoiling""
            ],
            [
                ""unroyalist"",
                ""unsolitary""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
721,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""armenoid"", ""radiomen"", ""wireways"", ""waywiser"", ""swinestone"", ""sonnetwise"", ""crimpers"", ""scrimper"", ""martiality"", ""maritality"", ""based"", ""sabed"", ""beads"", ""akebi"", ""bakie""]
","[[""akebi"", ""bakie""], [""armenoid"", ""radiomen""], [""based"", ""beads"", ""sabed""], [""crimpers"", ""scrimper""], [""maritality"", ""martiality""], [""sonnetwise"", ""swinestone""], [""waywiser"", ""wireways""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""armenoid\"", \""radiomen\"", \""wireways\"", \""waywiser\"", \""swinestone\"", \""sonnetwise\"", \""crimpers\"", \""scrimper\"", \""martiality\"", \""maritality\"", \""based\"", \""sabed\"", \""beads\"", \""akebi\"", \""bakie\""]\n"",
    ""answer"": ""[[\""akebi\"", \""bakie\""], [\""armenoid\"", \""radiomen\""], [\""based\"", \""beads\"", \""sabed\""], [\""crimpers\"", \""scrimper\""], [\""maritality\"", \""martiality\""], [\""sonnetwise\"", \""swinestone\""], [\""waywiser\"", \""wireways\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 721,
        ""words"": [
            ""armenoid"",
            ""radiomen"",
            ""wireways"",
            ""waywiser"",
            ""swinestone"",
            ""sonnetwise"",
            ""crimpers"",
            ""scrimper"",
            ""martiality"",
            ""maritality"",
            ""based"",
            ""sabed"",
            ""beads"",
            ""akebi"",
            ""bakie""
        ],
        ""solution"": [
            [
                ""akebi"",
                ""bakie""
            ],
            [
                ""armenoid"",
                ""radiomen""
            ],
            [
                ""based"",
                ""beads"",
                ""sabed""
            ],
            [
                ""crimpers"",
                ""scrimper""
            ],
            [
                ""maritality"",
                ""martiality""
            ],
            [
                ""sonnetwise"",
                ""swinestone""
            ],
            [
                ""waywiser"",
                ""wireways""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
722,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pandle"", ""planed"", ""garlion"", ""orignal"", ""tartnesses"", ""tesserants"", ""thioureas"", ""authorise""]
","[[""authorise"", ""thioureas""], [""garlion"", ""orignal""], [""pandle"", ""planed""], [""tartnesses"", ""tesserants""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pandle\"", \""planed\"", \""garlion\"", \""orignal\"", \""tartnesses\"", \""tesserants\"", \""thioureas\"", \""authorise\""]\n"",
    ""answer"": ""[[\""authorise\"", \""thioureas\""], [\""garlion\"", \""orignal\""], [\""pandle\"", \""planed\""], [\""tartnesses\"", \""tesserants\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 722,
        ""words"": [
            ""pandle"",
            ""planed"",
            ""garlion"",
            ""orignal"",
            ""tartnesses"",
            ""tesserants"",
            ""thioureas"",
            ""authorise""
        ],
        ""solution"": [
            [
                ""authorise"",
                ""thioureas""
            ],
            [
                ""garlion"",
                ""orignal""
            ],
            [
                ""pandle"",
                ""planed""
            ],
            [
                ""tartnesses"",
                ""tesserants""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
723,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""redrill"", ""driller"", ""triad"", ""dairt"", ""emplecton"", ""contemple"", ""somateria"", ""osmateria"", ""aromatise"", ""condemner"", ""recondemn"", ""isocheims"", ""isochimes"", ""strayed"", ""dyaster"", ""preceder"", ""precreed"", ""caissoned"", ""diocesans"", ""deixis"", ""dixies""]
","[[""aromatise"", ""osmateria"", ""somateria""], [""caissoned"", ""diocesans""], [""condemner"", ""recondemn""], [""contemple"", ""emplecton""], [""dairt"", ""triad""], [""deixis"", ""dixies""], [""driller"", ""redrill""], [""dyaster"", ""strayed""], [""isocheims"", ""isochimes""], [""preceder"", ""precreed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""redrill\"", \""driller\"", \""triad\"", \""dairt\"", \""emplecton\"", \""contemple\"", \""somateria\"", \""osmateria\"", \""aromatise\"", \""condemner\"", \""recondemn\"", \""isocheims\"", \""isochimes\"", \""strayed\"", \""dyaster\"", \""preceder\"", \""precreed\"", \""caissoned\"", \""diocesans\"", \""deixis\"", \""dixies\""]\n"",
    ""answer"": ""[[\""aromatise\"", \""osmateria\"", \""somateria\""], [\""caissoned\"", \""diocesans\""], [\""condemner\"", \""recondemn\""], [\""contemple\"", \""emplecton\""], [\""dairt\"", \""triad\""], [\""deixis\"", \""dixies\""], [\""driller\"", \""redrill\""], [\""dyaster\"", \""strayed\""], [\""isocheims\"", \""isochimes\""], [\""preceder\"", \""precreed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 723,
        ""words"": [
            ""redrill"",
            ""driller"",
            ""triad"",
            ""dairt"",
            ""emplecton"",
            ""contemple"",
            ""somateria"",
            ""osmateria"",
            ""aromatise"",
            ""condemner"",
            ""recondemn"",
            ""isocheims"",
            ""isochimes"",
            ""strayed"",
            ""dyaster"",
            ""preceder"",
            ""precreed"",
            ""caissoned"",
            ""diocesans"",
            ""deixis"",
            ""dixies""
        ],
        ""solution"": [
            [
                ""aromatise"",
                ""osmateria"",
                ""somateria""
            ],
            [
                ""caissoned"",
                ""diocesans""
            ],
            [
                ""condemner"",
                ""recondemn""
            ],
            [
                ""contemple"",
                ""emplecton""
            ],
            [
                ""dairt"",
                ""triad""
            ],
            [
                ""deixis"",
                ""dixies""
            ],
            [
                ""driller"",
                ""redrill""
            ],
            [
                ""dyaster"",
                ""strayed""
            ],
            [
                ""isocheims"",
                ""isochimes""
            ],
            [
                ""preceder"",
                ""precreed""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
724,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""stalk"", ""talks"", ""cineasts"", ""scanties"", ""sancties"", ""scaling"", ""lacings"", ""sours"", ""sorus"", ""peak"", ""keap"", ""digitalein"", ""diligentia"", ""soup"", ""opus"", ""appels"", ""apples"", ""aperies"", ""aspiree""]
","[[""aperies"", ""aspiree""], [""appels"", ""apples""], [""cineasts"", ""sancties"", ""scanties""], [""digitalein"", ""diligentia""], [""keap"", ""peak""], [""lacings"", ""scaling""], [""opus"", ""soup""], [""sorus"", ""sours""], [""stalk"", ""talks""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""stalk\"", \""talks\"", \""cineasts\"", \""scanties\"", \""sancties\"", \""scaling\"", \""lacings\"", \""sours\"", \""sorus\"", \""peak\"", \""keap\"", \""digitalein\"", \""diligentia\"", \""soup\"", \""opus\"", \""appels\"", \""apples\"", \""aperies\"", \""aspiree\""]\n"",
    ""answer"": ""[[\""aperies\"", \""aspiree\""], [\""appels\"", \""apples\""], [\""cineasts\"", \""sancties\"", \""scanties\""], [\""digitalein\"", \""diligentia\""], [\""keap\"", \""peak\""], [\""lacings\"", \""scaling\""], [\""opus\"", \""soup\""], [\""sorus\"", \""sours\""], [\""stalk\"", \""talks\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 724,
        ""words"": [
            ""stalk"",
            ""talks"",
            ""cineasts"",
            ""scanties"",
            ""sancties"",
            ""scaling"",
            ""lacings"",
            ""sours"",
            ""sorus"",
            ""peak"",
            ""keap"",
            ""digitalein"",
            ""diligentia"",
            ""soup"",
            ""opus"",
            ""appels"",
            ""apples"",
            ""aperies"",
            ""aspiree""
        ],
        ""solution"": [
            [
                ""aperies"",
                ""aspiree""
            ],
            [
                ""appels"",
                ""apples""
            ],
            [
                ""cineasts"",
                ""sancties"",
                ""scanties""
            ],
            [
                ""digitalein"",
                ""diligentia""
            ],
            [
                ""keap"",
                ""peak""
            ],
            [
                ""lacings"",
                ""scaling""
            ],
            [
                ""opus"",
                ""soup""
            ],
            [
                ""sorus"",
                ""sours""
            ],
            [
                ""stalk"",
                ""talks""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
725,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hamli"", ""milha"", ""meatballs"", ""blastemal"", ""ethologic"", ""theologic"", ""robe"", ""bore"", ""boer"", ""peeries"", ""seepier"", ""espeire"", ""recorders"", ""rerecords"", ""incohering"", ""coinhering"", ""resupposition"", ""superposition""]
","[[""blastemal"", ""meatballs""], [""boer"", ""bore"", ""robe""], [""coinhering"", ""incohering""], [""espeire"", ""peeries"", ""seepier""], [""ethologic"", ""theologic""], [""hamli"", ""milha""], [""recorders"", ""rerecords""], [""resupposition"", ""superposition""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hamli\"", \""milha\"", \""meatballs\"", \""blastemal\"", \""ethologic\"", \""theologic\"", \""robe\"", \""bore\"", \""boer\"", \""peeries\"", \""seepier\"", \""espeire\"", \""recorders\"", \""rerecords\"", \""incohering\"", \""coinhering\"", \""resupposition\"", \""superposition\""]\n"",
    ""answer"": ""[[\""blastemal\"", \""meatballs\""], [\""boer\"", \""bore\"", \""robe\""], [\""coinhering\"", \""incohering\""], [\""espeire\"", \""peeries\"", \""seepier\""], [\""ethologic\"", \""theologic\""], [\""hamli\"", \""milha\""], [\""recorders\"", \""rerecords\""], [\""resupposition\"", \""superposition\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 725,
        ""words"": [
            ""hamli"",
            ""milha"",
            ""meatballs"",
            ""blastemal"",
            ""ethologic"",
            ""theologic"",
            ""robe"",
            ""bore"",
            ""boer"",
            ""peeries"",
            ""seepier"",
            ""espeire"",
            ""recorders"",
            ""rerecords"",
            ""incohering"",
            ""coinhering"",
            ""resupposition"",
            ""superposition""
        ],
        ""solution"": [
            [
                ""blastemal"",
                ""meatballs""
            ],
            [
                ""boer"",
                ""bore"",
                ""robe""
            ],
            [
                ""coinhering"",
                ""incohering""
            ],
            [
                ""espeire"",
                ""peeries"",
                ""seepier""
            ],
            [
                ""ethologic"",
                ""theologic""
            ],
            [
                ""hamli"",
                ""milha""
            ],
            [
                ""recorders"",
                ""rerecords""
            ],
            [
                ""resupposition"",
                ""superposition""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
726,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""halva"", ""alvah"", ""unerratic"", ""recurtain"", ""radars"", ""sardar"", ""halke"", ""lekha"", ""repleteness"", ""terpeneless"", ""unmiter"", ""minuter"", ""unteaches"", ""chanteuse""]
","[[""alvah"", ""halva""], [""chanteuse"", ""unteaches""], [""halke"", ""lekha""], [""minuter"", ""unmiter""], [""radars"", ""sardar""], [""recurtain"", ""unerratic""], [""repleteness"", ""terpeneless""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""halva\"", \""alvah\"", \""unerratic\"", \""recurtain\"", \""radars\"", \""sardar\"", \""halke\"", \""lekha\"", \""repleteness\"", \""terpeneless\"", \""unmiter\"", \""minuter\"", \""unteaches\"", \""chanteuse\""]\n"",
    ""answer"": ""[[\""alvah\"", \""halva\""], [\""chanteuse\"", \""unteaches\""], [\""halke\"", \""lekha\""], [\""minuter\"", \""unmiter\""], [\""radars\"", \""sardar\""], [\""recurtain\"", \""unerratic\""], [\""repleteness\"", \""terpeneless\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 726,
        ""words"": [
            ""halva"",
            ""alvah"",
            ""unerratic"",
            ""recurtain"",
            ""radars"",
            ""sardar"",
            ""halke"",
            ""lekha"",
            ""repleteness"",
            ""terpeneless"",
            ""unmiter"",
            ""minuter"",
            ""unteaches"",
            ""chanteuse""
        ],
        ""solution"": [
            [
                ""alvah"",
                ""halva""
            ],
            [
                ""chanteuse"",
                ""unteaches""
            ],
            [
                ""halke"",
                ""lekha""
            ],
            [
                ""minuter"",
                ""unmiter""
            ],
            [
                ""radars"",
                ""sardar""
            ],
            [
                ""recurtain"",
                ""unerratic""
            ],
            [
                ""repleteness"",
                ""terpeneless""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
727,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""haunted"", ""unhated"", ""captation"", ""anaptotic""]
","[[""anaptotic"", ""captation""], [""haunted"", ""unhated""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""haunted\"", \""unhated\"", \""captation\"", \""anaptotic\""]\n"",
    ""answer"": ""[[\""anaptotic\"", \""captation\""], [\""haunted\"", \""unhated\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 727,
        ""words"": [
            ""haunted"",
            ""unhated"",
            ""captation"",
            ""anaptotic""
        ],
        ""solution"": [
            [
                ""anaptotic"",
                ""captation""
            ],
            [
                ""haunted"",
                ""unhated""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
728,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""arab"", ""arba"", ""baar"", ""waspily"", ""slipway"", ""datiscoside"", ""dissociated"", ""armida"", ""aramid""]
","[[""arab"", ""arba"", ""baar""], [""aramid"", ""armida""], [""datiscoside"", ""dissociated""], [""slipway"", ""waspily""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""arab\"", \""arba\"", \""baar\"", \""waspily\"", \""slipway\"", \""datiscoside\"", \""dissociated\"", \""armida\"", \""aramid\""]\n"",
    ""answer"": ""[[\""arab\"", \""arba\"", \""baar\""], [\""aramid\"", \""armida\""], [\""datiscoside\"", \""dissociated\""], [\""slipway\"", \""waspily\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 728,
        ""words"": [
            ""arab"",
            ""arba"",
            ""baar"",
            ""waspily"",
            ""slipway"",
            ""datiscoside"",
            ""dissociated"",
            ""armida"",
            ""aramid""
        ],
        ""solution"": [
            [
                ""arab"",
                ""arba"",
                ""baar""
            ],
            [
                ""aramid"",
                ""armida""
            ],
            [
                ""datiscoside"",
                ""dissociated""
            ],
            [
                ""slipway"",
                ""waspily""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
729,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tonk"", ""knot"", ""plunderer"", ""replunder"", ""triseme"", ""reemits"", ""canaigre"", ""graecian"", ""racinage"", ""lampist"", ""palmist""]
","[[""canaigre"", ""graecian"", ""racinage""], [""knot"", ""tonk""], [""lampist"", ""palmist""], [""plunderer"", ""replunder""], [""reemits"", ""triseme""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tonk\"", \""knot\"", \""plunderer\"", \""replunder\"", \""triseme\"", \""reemits\"", \""canaigre\"", \""graecian\"", \""racinage\"", \""lampist\"", \""palmist\""]\n"",
    ""answer"": ""[[\""canaigre\"", \""graecian\"", \""racinage\""], [\""knot\"", \""tonk\""], [\""lampist\"", \""palmist\""], [\""plunderer\"", \""replunder\""], [\""reemits\"", \""triseme\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 729,
        ""words"": [
            ""tonk"",
            ""knot"",
            ""plunderer"",
            ""replunder"",
            ""triseme"",
            ""reemits"",
            ""canaigre"",
            ""graecian"",
            ""racinage"",
            ""lampist"",
            ""palmist""
        ],
        ""solution"": [
            [
                ""canaigre"",
                ""graecian"",
                ""racinage""
            ],
            [
                ""knot"",
                ""tonk""
            ],
            [
                ""lampist"",
                ""palmist""
            ],
            [
                ""plunderer"",
                ""replunder""
            ],
            [
                ""reemits"",
                ""triseme""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
730,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bascules"", ""subscale"", ""dodman"", ""oddman"", ""cesiums"", ""miscues"", ""pilikia"", ""pilikai"", ""anthesis"", ""sheitans"", ""shanties"", ""sthenias"", ""hankered"", ""dakerhen"", ""harkened"", ""calendarial"", ""dalecarlian""]
","[[""anthesis"", ""shanties"", ""sheitans"", ""sthenias""], [""bascules"", ""subscale""], [""calendarial"", ""dalecarlian""], [""cesiums"", ""miscues""], [""dakerhen"", ""hankered"", ""harkened""], [""dodman"", ""oddman""], [""pilikai"", ""pilikia""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bascules\"", \""subscale\"", \""dodman\"", \""oddman\"", \""cesiums\"", \""miscues\"", \""pilikia\"", \""pilikai\"", \""anthesis\"", \""sheitans\"", \""shanties\"", \""sthenias\"", \""hankered\"", \""dakerhen\"", \""harkened\"", \""calendarial\"", \""dalecarlian\""]\n"",
    ""answer"": ""[[\""anthesis\"", \""shanties\"", \""sheitans\"", \""sthenias\""], [\""bascules\"", \""subscale\""], [\""calendarial\"", \""dalecarlian\""], [\""cesiums\"", \""miscues\""], [\""dakerhen\"", \""hankered\"", \""harkened\""], [\""dodman\"", \""oddman\""], [\""pilikai\"", \""pilikia\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 730,
        ""words"": [
            ""bascules"",
            ""subscale"",
            ""dodman"",
            ""oddman"",
            ""cesiums"",
            ""miscues"",
            ""pilikia"",
            ""pilikai"",
            ""anthesis"",
            ""sheitans"",
            ""shanties"",
            ""sthenias"",
            ""hankered"",
            ""dakerhen"",
            ""harkened"",
            ""calendarial"",
            ""dalecarlian""
        ],
        ""solution"": [
            [
                ""anthesis"",
                ""shanties"",
                ""sheitans"",
                ""sthenias""
            ],
            [
                ""bascules"",
                ""subscale""
            ],
            [
                ""calendarial"",
                ""dalecarlian""
            ],
            [
                ""cesiums"",
                ""miscues""
            ],
            [
                ""dakerhen"",
                ""hankered"",
                ""harkened""
            ],
            [
                ""dodman"",
                ""oddman""
            ],
            [
                ""pilikai"",
                ""pilikia""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
731,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ganymede"", ""megadyne"", ""satara"", ""asarta"", ""atsara""]
","[[""asarta"", ""atsara"", ""satara""], [""ganymede"", ""megadyne""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ganymede\"", \""megadyne\"", \""satara\"", \""asarta\"", \""atsara\""]\n"",
    ""answer"": ""[[\""asarta\"", \""atsara\"", \""satara\""], [\""ganymede\"", \""megadyne\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 731,
        ""words"": [
            ""ganymede"",
            ""megadyne"",
            ""satara"",
            ""asarta"",
            ""atsara""
        ],
        ""solution"": [
            [
                ""asarta"",
                ""atsara"",
                ""satara""
            ],
            [
                ""ganymede"",
                ""megadyne""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
732,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ampelitic"", ""implicate"", ""unspilt"", ""unsplit"", ""trowths"", ""throwst"", ""yarer"", ""eyrar""]
","[[""ampelitic"", ""implicate""], [""eyrar"", ""yarer""], [""throwst"", ""trowths""], [""unspilt"", ""unsplit""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ampelitic\"", \""implicate\"", \""unspilt\"", \""unsplit\"", \""trowths\"", \""throwst\"", \""yarer\"", \""eyrar\""]\n"",
    ""answer"": ""[[\""ampelitic\"", \""implicate\""], [\""eyrar\"", \""yarer\""], [\""throwst\"", \""trowths\""], [\""unspilt\"", \""unsplit\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 732,
        ""words"": [
            ""ampelitic"",
            ""implicate"",
            ""unspilt"",
            ""unsplit"",
            ""trowths"",
            ""throwst"",
            ""yarer"",
            ""eyrar""
        ],
        ""solution"": [
            [
                ""ampelitic"",
                ""implicate""
            ],
            [
                ""eyrar"",
                ""yarer""
            ],
            [
                ""throwst"",
                ""trowths""
            ],
            [
                ""unspilt"",
                ""unsplit""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
733,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""frontalis"", ""flatirons"", ""inflators"", ""centimes"", ""tenesmic""]
","[[""centimes"", ""tenesmic""], [""flatirons"", ""frontalis"", ""inflators""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""frontalis\"", \""flatirons\"", \""inflators\"", \""centimes\"", \""tenesmic\""]\n"",
    ""answer"": ""[[\""centimes\"", \""tenesmic\""], [\""flatirons\"", \""frontalis\"", \""inflators\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 733,
        ""words"": [
            ""frontalis"",
            ""flatirons"",
            ""inflators"",
            ""centimes"",
            ""tenesmic""
        ],
        ""solution"": [
            [
                ""centimes"",
                ""tenesmic""
            ],
            [
                ""flatirons"",
                ""frontalis"",
                ""inflators""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
734,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""swarmer"", ""warmers"", ""reswarm"", ""soprano"", ""pronaos"", ""neckar"", ""canker"", ""dyes"", ""deys"", ""syed"", ""clast"", ""scalt"", ""talcs"", ""sclat"", ""della"", ""ladle"", ""dalle""]
","[[""canker"", ""neckar""], [""clast"", ""scalt"", ""sclat"", ""talcs""], [""dalle"", ""della"", ""ladle""], [""deys"", ""dyes"", ""syed""], [""pronaos"", ""soprano""], [""reswarm"", ""swarmer"", ""warmers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""swarmer\"", \""warmers\"", \""reswarm\"", \""soprano\"", \""pronaos\"", \""neckar\"", \""canker\"", \""dyes\"", \""deys\"", \""syed\"", \""clast\"", \""scalt\"", \""talcs\"", \""sclat\"", \""della\"", \""ladle\"", \""dalle\""]\n"",
    ""answer"": ""[[\""canker\"", \""neckar\""], [\""clast\"", \""scalt\"", \""sclat\"", \""talcs\""], [\""dalle\"", \""della\"", \""ladle\""], [\""deys\"", \""dyes\"", \""syed\""], [\""pronaos\"", \""soprano\""], [\""reswarm\"", \""swarmer\"", \""warmers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 734,
        ""words"": [
            ""swarmer"",
            ""warmers"",
            ""reswarm"",
            ""soprano"",
            ""pronaos"",
            ""neckar"",
            ""canker"",
            ""dyes"",
            ""deys"",
            ""syed"",
            ""clast"",
            ""scalt"",
            ""talcs"",
            ""sclat"",
            ""della"",
            ""ladle"",
            ""dalle""
        ],
        ""solution"": [
            [
                ""canker"",
                ""neckar""
            ],
            [
                ""clast"",
                ""scalt"",
                ""sclat"",
                ""talcs""
            ],
            [
                ""dalle"",
                ""della"",
                ""ladle""
            ],
            [
                ""deys"",
                ""dyes"",
                ""syed""
            ],
            [
                ""pronaos"",
                ""soprano""
            ],
            [
                ""reswarm"",
                ""swarmer"",
                ""warmers""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
735,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""carlish"", ""archils"", ""regulate"", ""legature"", ""fumaria"", ""fiumara""]
","[[""archils"", ""carlish""], [""fiumara"", ""fumaria""], [""legature"", ""regulate""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""carlish\"", \""archils\"", \""regulate\"", \""legature\"", \""fumaria\"", \""fiumara\""]\n"",
    ""answer"": ""[[\""archils\"", \""carlish\""], [\""fiumara\"", \""fumaria\""], [\""legature\"", \""regulate\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 735,
        ""words"": [
            ""carlish"",
            ""archils"",
            ""regulate"",
            ""legature"",
            ""fumaria"",
            ""fiumara""
        ],
        ""solution"": [
            [
                ""archils"",
                ""carlish""
            ],
            [
                ""fiumara"",
                ""fumaria""
            ],
            [
                ""legature"",
                ""regulate""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
736,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""opisthorchis"", ""chirosophist"", ""peitho"", ""ethiop"", ""gallicole"", ""collegial""]
","[[""chirosophist"", ""opisthorchis""], [""collegial"", ""gallicole""], [""ethiop"", ""peitho""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""opisthorchis\"", \""chirosophist\"", \""peitho\"", \""ethiop\"", \""gallicole\"", \""collegial\""]\n"",
    ""answer"": ""[[\""chirosophist\"", \""opisthorchis\""], [\""collegial\"", \""gallicole\""], [\""ethiop\"", \""peitho\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 736,
        ""words"": [
            ""opisthorchis"",
            ""chirosophist"",
            ""peitho"",
            ""ethiop"",
            ""gallicole"",
            ""collegial""
        ],
        ""solution"": [
            [
                ""chirosophist"",
                ""opisthorchis""
            ],
            [
                ""collegial"",
                ""gallicole""
            ],
            [
                ""ethiop"",
                ""peitho""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
737,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""crambe"", ""camber"", ""ketupa"", ""uptake""]
","[[""camber"", ""crambe""], [""ketupa"", ""uptake""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""crambe\"", \""camber\"", \""ketupa\"", \""uptake\""]\n"",
    ""answer"": ""[[\""camber\"", \""crambe\""], [\""ketupa\"", \""uptake\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 737,
        ""words"": [
            ""crambe"",
            ""camber"",
            ""ketupa"",
            ""uptake""
        ],
        ""solution"": [
            [
                ""camber"",
                ""crambe""
            ],
            [
                ""ketupa"",
                ""uptake""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
738,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ib"", ""bi"", ""untithable"", ""unhittable"", ""sepsis"", ""speiss"", ""pisses"", ""esperanto"", ""personate"", ""sika"", ""siak"", ""saki"", ""wipes"", ""swipe"", ""pillowcases"", ""scallopwise"", ""yaps"", ""pays"", ""pyas"", ""spay"", ""aspy""]
","[[""aspy"", ""pays"", ""pyas"", ""spay"", ""yaps""], [""bi"", ""ib""], [""esperanto"", ""personate""], [""pillowcases"", ""scallopwise""], [""pisses"", ""sepsis"", ""speiss""], [""saki"", ""siak"", ""sika""], [""swipe"", ""wipes""], [""unhittable"", ""untithable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ib\"", \""bi\"", \""untithable\"", \""unhittable\"", \""sepsis\"", \""speiss\"", \""pisses\"", \""esperanto\"", \""personate\"", \""sika\"", \""siak\"", \""saki\"", \""wipes\"", \""swipe\"", \""pillowcases\"", \""scallopwise\"", \""yaps\"", \""pays\"", \""pyas\"", \""spay\"", \""aspy\""]\n"",
    ""answer"": ""[[\""aspy\"", \""pays\"", \""pyas\"", \""spay\"", \""yaps\""], [\""bi\"", \""ib\""], [\""esperanto\"", \""personate\""], [\""pillowcases\"", \""scallopwise\""], [\""pisses\"", \""sepsis\"", \""speiss\""], [\""saki\"", \""siak\"", \""sika\""], [\""swipe\"", \""wipes\""], [\""unhittable\"", \""untithable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 738,
        ""words"": [
            ""ib"",
            ""bi"",
            ""untithable"",
            ""unhittable"",
            ""sepsis"",
            ""speiss"",
            ""pisses"",
            ""esperanto"",
            ""personate"",
            ""sika"",
            ""siak"",
            ""saki"",
            ""wipes"",
            ""swipe"",
            ""pillowcases"",
            ""scallopwise"",
            ""yaps"",
            ""pays"",
            ""pyas"",
            ""spay"",
            ""aspy""
        ],
        ""solution"": [
            [
                ""aspy"",
                ""pays"",
                ""pyas"",
                ""spay"",
                ""yaps""
            ],
            [
                ""bi"",
                ""ib""
            ],
            [
                ""esperanto"",
                ""personate""
            ],
            [
                ""pillowcases"",
                ""scallopwise""
            ],
            [
                ""pisses"",
                ""sepsis"",
                ""speiss""
            ],
            [
                ""saki"",
                ""siak"",
                ""sika""
            ],
            [
                ""swipe"",
                ""wipes""
            ],
            [
                ""unhittable"",
                ""untithable""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
739,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rebanish"", ""banisher"", ""bestrut"", ""butters"", ""faithless"", ""flashiest"", ""locustid"", ""disclout"", ""semicanal"", ""calamines"", ""analcimes"", ""cpo"", ""cop"", ""contraster"", ""recontrast"", ""impressable"", ""permissable"", ""premissable""]
","[[""analcimes"", ""calamines"", ""semicanal""], [""banisher"", ""rebanish""], [""bestrut"", ""butters""], [""contraster"", ""recontrast""], [""cop"", ""cpo""], [""disclout"", ""locustid""], [""faithless"", ""flashiest""], [""impressable"", ""permissable"", ""premissable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rebanish\"", \""banisher\"", \""bestrut\"", \""butters\"", \""faithless\"", \""flashiest\"", \""locustid\"", \""disclout\"", \""semicanal\"", \""calamines\"", \""analcimes\"", \""cpo\"", \""cop\"", \""contraster\"", \""recontrast\"", \""impressable\"", \""permissable\"", \""premissable\""]\n"",
    ""answer"": ""[[\""analcimes\"", \""calamines\"", \""semicanal\""], [\""banisher\"", \""rebanish\""], [\""bestrut\"", \""butters\""], [\""contraster\"", \""recontrast\""], [\""cop\"", \""cpo\""], [\""disclout\"", \""locustid\""], [\""faithless\"", \""flashiest\""], [\""impressable\"", \""permissable\"", \""premissable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 739,
        ""words"": [
            ""rebanish"",
            ""banisher"",
            ""bestrut"",
            ""butters"",
            ""faithless"",
            ""flashiest"",
            ""locustid"",
            ""disclout"",
            ""semicanal"",
            ""calamines"",
            ""analcimes"",
            ""cpo"",
            ""cop"",
            ""contraster"",
            ""recontrast"",
            ""impressable"",
            ""permissable"",
            ""premissable""
        ],
        ""solution"": [
            [
                ""analcimes"",
                ""calamines"",
                ""semicanal""
            ],
            [
                ""banisher"",
                ""rebanish""
            ],
            [
                ""bestrut"",
                ""butters""
            ],
            [
                ""contraster"",
                ""recontrast""
            ],
            [
                ""cop"",
                ""cpo""
            ],
            [
                ""disclout"",
                ""locustid""
            ],
            [
                ""faithless"",
                ""flashiest""
            ],
            [
                ""impressable"",
                ""permissable"",
                ""premissable""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
740,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""suttin"", ""tunist"", ""tempter"", ""retempt"", ""homeliest"", ""lithesome""]
","[[""homeliest"", ""lithesome""], [""retempt"", ""tempter""], [""suttin"", ""tunist""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""suttin\"", \""tunist\"", \""tempter\"", \""retempt\"", \""homeliest\"", \""lithesome\""]\n"",
    ""answer"": ""[[\""homeliest\"", \""lithesome\""], [\""retempt\"", \""tempter\""], [\""suttin\"", \""tunist\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 740,
        ""words"": [
            ""suttin"",
            ""tunist"",
            ""tempter"",
            ""retempt"",
            ""homeliest"",
            ""lithesome""
        ],
        ""solution"": [
            [
                ""homeliest"",
                ""lithesome""
            ],
            [
                ""retempt"",
                ""tempter""
            ],
            [
                ""suttin"",
                ""tunist""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
741,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""wagang"", ""gangwa"", ""mensuration"", ""numerations"", ""esperantido"", ""desperation"", ""notelessness"", ""tonelessness""]
","[[""desperation"", ""esperantido""], [""gangwa"", ""wagang""], [""mensuration"", ""numerations""], [""notelessness"", ""tonelessness""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""wagang\"", \""gangwa\"", \""mensuration\"", \""numerations\"", \""esperantido\"", \""desperation\"", \""notelessness\"", \""tonelessness\""]\n"",
    ""answer"": ""[[\""desperation\"", \""esperantido\""], [\""gangwa\"", \""wagang\""], [\""mensuration\"", \""numerations\""], [\""notelessness\"", \""tonelessness\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 741,
        ""words"": [
            ""wagang"",
            ""gangwa"",
            ""mensuration"",
            ""numerations"",
            ""esperantido"",
            ""desperation"",
            ""notelessness"",
            ""tonelessness""
        ],
        ""solution"": [
            [
                ""desperation"",
                ""esperantido""
            ],
            [
                ""gangwa"",
                ""wagang""
            ],
            [
                ""mensuration"",
                ""numerations""
            ],
            [
                ""notelessness"",
                ""tonelessness""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
742,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""acerval"", ""caravel"", ""lavacre"", ""artist"", ""strait"", ""strati"", ""traist"", ""traits"", ""respersive"", ""repressive"", ""permissible"", ""impressible"", ""gan"", ""nag"", ""ephestia"", ""hepatise""]
","[[""acerval"", ""caravel"", ""lavacre""], [""artist"", ""strait"", ""strati"", ""traist"", ""traits""], [""ephestia"", ""hepatise""], [""gan"", ""nag""], [""impressible"", ""permissible""], [""repressive"", ""respersive""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""acerval\"", \""caravel\"", \""lavacre\"", \""artist\"", \""strait\"", \""strati\"", \""traist\"", \""traits\"", \""respersive\"", \""repressive\"", \""permissible\"", \""impressible\"", \""gan\"", \""nag\"", \""ephestia\"", \""hepatise\""]\n"",
    ""answer"": ""[[\""acerval\"", \""caravel\"", \""lavacre\""], [\""artist\"", \""strait\"", \""strati\"", \""traist\"", \""traits\""], [\""ephestia\"", \""hepatise\""], [\""gan\"", \""nag\""], [\""impressible\"", \""permissible\""], [\""repressive\"", \""respersive\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 742,
        ""words"": [
            ""acerval"",
            ""caravel"",
            ""lavacre"",
            ""artist"",
            ""strait"",
            ""strati"",
            ""traist"",
            ""traits"",
            ""respersive"",
            ""repressive"",
            ""permissible"",
            ""impressible"",
            ""gan"",
            ""nag"",
            ""ephestia"",
            ""hepatise""
        ],
        ""solution"": [
            [
                ""acerval"",
                ""caravel"",
                ""lavacre""
            ],
            [
                ""artist"",
                ""strait"",
                ""strati"",
                ""traist"",
                ""traits""
            ],
            [
                ""ephestia"",
                ""hepatise""
            ],
            [
                ""gan"",
                ""nag""
            ],
            [
                ""impressible"",
                ""permissible""
            ],
            [
                ""repressive"",
                ""respersive""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
743,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""teest"", ""teste"", ""adaption"", ""adoptian"", ""unroofs"", ""sunroof"", ""rebeck"", ""becker"", ""sliming"", ""simling"", ""smiling"", ""neocyte"", ""enocyte"", ""vulpinic"", ""pulvinic"", ""uncouth"", ""untouch"", ""elfwort"", ""felwort""]
","[[""adaption"", ""adoptian""], [""becker"", ""rebeck""], [""elfwort"", ""felwort""], [""enocyte"", ""neocyte""], [""pulvinic"", ""vulpinic""], [""simling"", ""sliming"", ""smiling""], [""sunroof"", ""unroofs""], [""teest"", ""teste""], [""uncouth"", ""untouch""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""teest\"", \""teste\"", \""adaption\"", \""adoptian\"", \""unroofs\"", \""sunroof\"", \""rebeck\"", \""becker\"", \""sliming\"", \""simling\"", \""smiling\"", \""neocyte\"", \""enocyte\"", \""vulpinic\"", \""pulvinic\"", \""uncouth\"", \""untouch\"", \""elfwort\"", \""felwort\""]\n"",
    ""answer"": ""[[\""adaption\"", \""adoptian\""], [\""becker\"", \""rebeck\""], [\""elfwort\"", \""felwort\""], [\""enocyte\"", \""neocyte\""], [\""pulvinic\"", \""vulpinic\""], [\""simling\"", \""sliming\"", \""smiling\""], [\""sunroof\"", \""unroofs\""], [\""teest\"", \""teste\""], [\""uncouth\"", \""untouch\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 743,
        ""words"": [
            ""teest"",
            ""teste"",
            ""adaption"",
            ""adoptian"",
            ""unroofs"",
            ""sunroof"",
            ""rebeck"",
            ""becker"",
            ""sliming"",
            ""simling"",
            ""smiling"",
            ""neocyte"",
            ""enocyte"",
            ""vulpinic"",
            ""pulvinic"",
            ""uncouth"",
            ""untouch"",
            ""elfwort"",
            ""felwort""
        ],
        ""solution"": [
            [
                ""adaption"",
                ""adoptian""
            ],
            [
                ""becker"",
                ""rebeck""
            ],
            [
                ""elfwort"",
                ""felwort""
            ],
            [
                ""enocyte"",
                ""neocyte""
            ],
            [
                ""pulvinic"",
                ""vulpinic""
            ],
            [
                ""simling"",
                ""sliming"",
                ""smiling""
            ],
            [
                ""sunroof"",
                ""unroofs""
            ],
            [
                ""teest"",
                ""teste""
            ],
            [
                ""uncouth"",
                ""untouch""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
744,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""preobtrude"", ""predoubter"", ""join"", ""joni"", ""osteologic"", ""tocologies"", ""rm"", ""mr"", ""seenu"", ""ensue"", ""aristotle"", ""literatos"", ""striolate"", ""festination"", ""sinfonietta"", ""nicarao"", ""aaronic"", ""iodism"", ""idioms"", ""idoism""]
","[[""aaronic"", ""nicarao""], [""aristotle"", ""literatos"", ""striolate""], [""ensue"", ""seenu""], [""festination"", ""sinfonietta""], [""idioms"", ""idoism"", ""iodism""], [""join"", ""joni""], [""mr"", ""rm""], [""osteologic"", ""tocologies""], [""predoubter"", ""preobtrude""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""preobtrude\"", \""predoubter\"", \""join\"", \""joni\"", \""osteologic\"", \""tocologies\"", \""rm\"", \""mr\"", \""seenu\"", \""ensue\"", \""aristotle\"", \""literatos\"", \""striolate\"", \""festination\"", \""sinfonietta\"", \""nicarao\"", \""aaronic\"", \""iodism\"", \""idioms\"", \""idoism\""]\n"",
    ""answer"": ""[[\""aaronic\"", \""nicarao\""], [\""aristotle\"", \""literatos\"", \""striolate\""], [\""ensue\"", \""seenu\""], [\""festination\"", \""sinfonietta\""], [\""idioms\"", \""idoism\"", \""iodism\""], [\""join\"", \""joni\""], [\""mr\"", \""rm\""], [\""osteologic\"", \""tocologies\""], [\""predoubter\"", \""preobtrude\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 744,
        ""words"": [
            ""preobtrude"",
            ""predoubter"",
            ""join"",
            ""joni"",
            ""osteologic"",
            ""tocologies"",
            ""rm"",
            ""mr"",
            ""seenu"",
            ""ensue"",
            ""aristotle"",
            ""literatos"",
            ""striolate"",
            ""festination"",
            ""sinfonietta"",
            ""nicarao"",
            ""aaronic"",
            ""iodism"",
            ""idioms"",
            ""idoism""
        ],
        ""solution"": [
            [
                ""aaronic"",
                ""nicarao""
            ],
            [
                ""aristotle"",
                ""literatos"",
                ""striolate""
            ],
            [
                ""ensue"",
                ""seenu""
            ],
            [
                ""festination"",
                ""sinfonietta""
            ],
            [
                ""idioms"",
                ""idoism"",
                ""iodism""
            ],
            [
                ""join"",
                ""joni""
            ],
            [
                ""mr"",
                ""rm""
            ],
            [
                ""osteologic"",
                ""tocologies""
            ],
            [
                ""predoubter"",
                ""preobtrude""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
745,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""equalness"", ""squalenes"", ""pelusios"", ""epulosis"", ""devex"", ""vexed"", ""triactine"", ""inctirate"", ""colectomy"", ""motocycle"", ""cyclotome""]
","[[""colectomy"", ""cyclotome"", ""motocycle""], [""devex"", ""vexed""], [""epulosis"", ""pelusios""], [""equalness"", ""squalenes""], [""inctirate"", ""triactine""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""equalness\"", \""squalenes\"", \""pelusios\"", \""epulosis\"", \""devex\"", \""vexed\"", \""triactine\"", \""inctirate\"", \""colectomy\"", \""motocycle\"", \""cyclotome\""]\n"",
    ""answer"": ""[[\""colectomy\"", \""cyclotome\"", \""motocycle\""], [\""devex\"", \""vexed\""], [\""epulosis\"", \""pelusios\""], [\""equalness\"", \""squalenes\""], [\""inctirate\"", \""triactine\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 745,
        ""words"": [
            ""equalness"",
            ""squalenes"",
            ""pelusios"",
            ""epulosis"",
            ""devex"",
            ""vexed"",
            ""triactine"",
            ""inctirate"",
            ""colectomy"",
            ""motocycle"",
            ""cyclotome""
        ],
        ""solution"": [
            [
                ""colectomy"",
                ""cyclotome"",
                ""motocycle""
            ],
            [
                ""devex"",
                ""vexed""
            ],
            [
                ""epulosis"",
                ""pelusios""
            ],
            [
                ""equalness"",
                ""squalenes""
            ],
            [
                ""inctirate"",
                ""triactine""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
746,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""delimitation"", ""mniotiltidae"", ""keratosis"", ""asterikos""]
","[[""asterikos"", ""keratosis""], [""delimitation"", ""mniotiltidae""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""delimitation\"", \""mniotiltidae\"", \""keratosis\"", \""asterikos\""]\n"",
    ""answer"": ""[[\""asterikos\"", \""keratosis\""], [\""delimitation\"", \""mniotiltidae\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 746,
        ""words"": [
            ""delimitation"",
            ""mniotiltidae"",
            ""keratosis"",
            ""asterikos""
        ],
        ""solution"": [
            [
                ""asterikos"",
                ""keratosis""
            ],
            [
                ""delimitation"",
                ""mniotiltidae""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
747,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""squad"", ""quads"", ""stickseed"", ""tickseeds"", ""besluit"", ""subtile"", ""dromon"", ""ormond"", ""telos"", ""toles"", ""slote"", ""greatening"", ""generating"", ""boro"", ""broo"", ""boor"", ""scan"", ""cans"", ""durocs"", ""codrus"", ""cotonia"", ""coation""]
","[[""besluit"", ""subtile""], [""boor"", ""boro"", ""broo""], [""cans"", ""scan""], [""coation"", ""cotonia""], [""codrus"", ""durocs""], [""dromon"", ""ormond""], [""generating"", ""greatening""], [""quads"", ""squad""], [""slote"", ""telos"", ""toles""], [""stickseed"", ""tickseeds""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""squad\"", \""quads\"", \""stickseed\"", \""tickseeds\"", \""besluit\"", \""subtile\"", \""dromon\"", \""ormond\"", \""telos\"", \""toles\"", \""slote\"", \""greatening\"", \""generating\"", \""boro\"", \""broo\"", \""boor\"", \""scan\"", \""cans\"", \""durocs\"", \""codrus\"", \""cotonia\"", \""coation\""]\n"",
    ""answer"": ""[[\""besluit\"", \""subtile\""], [\""boor\"", \""boro\"", \""broo\""], [\""cans\"", \""scan\""], [\""coation\"", \""cotonia\""], [\""codrus\"", \""durocs\""], [\""dromon\"", \""ormond\""], [\""generating\"", \""greatening\""], [\""quads\"", \""squad\""], [\""slote\"", \""telos\"", \""toles\""], [\""stickseed\"", \""tickseeds\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 747,
        ""words"": [
            ""squad"",
            ""quads"",
            ""stickseed"",
            ""tickseeds"",
            ""besluit"",
            ""subtile"",
            ""dromon"",
            ""ormond"",
            ""telos"",
            ""toles"",
            ""slote"",
            ""greatening"",
            ""generating"",
            ""boro"",
            ""broo"",
            ""boor"",
            ""scan"",
            ""cans"",
            ""durocs"",
            ""codrus"",
            ""cotonia"",
            ""coation""
        ],
        ""solution"": [
            [
                ""besluit"",
                ""subtile""
            ],
            [
                ""boor"",
                ""boro"",
                ""broo""
            ],
            [
                ""cans"",
                ""scan""
            ],
            [
                ""coation"",
                ""cotonia""
            ],
            [
                ""codrus"",
                ""durocs""
            ],
            [
                ""dromon"",
                ""ormond""
            ],
            [
                ""generating"",
                ""greatening""
            ],
            [
                ""quads"",
                ""squad""
            ],
            [
                ""slote"",
                ""telos"",
                ""toles""
            ],
            [
                ""stickseed"",
                ""tickseeds""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
748,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nonuser"", ""neurons"", ""quickset"", ""quickest"", ""crewer"", ""recrew"", ""rosetty"", ""sottery"", ""orna"", ""nora"", ""roan""]
","[[""crewer"", ""recrew""], [""neurons"", ""nonuser""], [""nora"", ""orna"", ""roan""], [""quickest"", ""quickset""], [""rosetty"", ""sottery""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nonuser\"", \""neurons\"", \""quickset\"", \""quickest\"", \""crewer\"", \""recrew\"", \""rosetty\"", \""sottery\"", \""orna\"", \""nora\"", \""roan\""]\n"",
    ""answer"": ""[[\""crewer\"", \""recrew\""], [\""neurons\"", \""nonuser\""], [\""nora\"", \""orna\"", \""roan\""], [\""quickest\"", \""quickset\""], [\""rosetty\"", \""sottery\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 748,
        ""words"": [
            ""nonuser"",
            ""neurons"",
            ""quickset"",
            ""quickest"",
            ""crewer"",
            ""recrew"",
            ""rosetty"",
            ""sottery"",
            ""orna"",
            ""nora"",
            ""roan""
        ],
        ""solution"": [
            [
                ""crewer"",
                ""recrew""
            ],
            [
                ""neurons"",
                ""nonuser""
            ],
            [
                ""nora"",
                ""orna"",
                ""roan""
            ],
            [
                ""quickest"",
                ""quickset""
            ],
            [
                ""rosetty"",
                ""sottery""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
749,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""certify"", ""cretify"", ""rectify"", ""gourde"", ""rouged"", ""rogued"", ""drogue"", ""bayou"", ""boyau"", ""transprose"", ""transposer"", ""persecutions"", ""counterspies""]
","[[""bayou"", ""boyau""], [""certify"", ""cretify"", ""rectify""], [""counterspies"", ""persecutions""], [""drogue"", ""gourde"", ""rogued"", ""rouged""], [""transposer"", ""transprose""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""certify\"", \""cretify\"", \""rectify\"", \""gourde\"", \""rouged\"", \""rogued\"", \""drogue\"", \""bayou\"", \""boyau\"", \""transprose\"", \""transposer\"", \""persecutions\"", \""counterspies\""]\n"",
    ""answer"": ""[[\""bayou\"", \""boyau\""], [\""certify\"", \""cretify\"", \""rectify\""], [\""counterspies\"", \""persecutions\""], [\""drogue\"", \""gourde\"", \""rogued\"", \""rouged\""], [\""transposer\"", \""transprose\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 749,
        ""words"": [
            ""certify"",
            ""cretify"",
            ""rectify"",
            ""gourde"",
            ""rouged"",
            ""rogued"",
            ""drogue"",
            ""bayou"",
            ""boyau"",
            ""transprose"",
            ""transposer"",
            ""persecutions"",
            ""counterspies""
        ],
        ""solution"": [
            [
                ""bayou"",
                ""boyau""
            ],
            [
                ""certify"",
                ""cretify"",
                ""rectify""
            ],
            [
                ""counterspies"",
                ""persecutions""
            ],
            [
                ""drogue"",
                ""gourde"",
                ""rogued"",
                ""rouged""
            ],
            [
                ""transposer"",
                ""transprose""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
750,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""phecda"", ""chaped"", ""crepeier"", ""creepier"", ""rigel"", ""gleir"", ""relig"", ""liger""]
","[[""chaped"", ""phecda""], [""creepier"", ""crepeier""], [""gleir"", ""liger"", ""relig"", ""rigel""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""phecda\"", \""chaped\"", \""crepeier\"", \""creepier\"", \""rigel\"", \""gleir\"", \""relig\"", \""liger\""]\n"",
    ""answer"": ""[[\""chaped\"", \""phecda\""], [\""creepier\"", \""crepeier\""], [\""gleir\"", \""liger\"", \""relig\"", \""rigel\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 750,
        ""words"": [
            ""phecda"",
            ""chaped"",
            ""crepeier"",
            ""creepier"",
            ""rigel"",
            ""gleir"",
            ""relig"",
            ""liger""
        ],
        ""solution"": [
            [
                ""chaped"",
                ""phecda""
            ],
            [
                ""creepier"",
                ""crepeier""
            ],
            [
                ""gleir"",
                ""liger"",
                ""relig"",
                ""rigel""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
751,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""virgin"", ""irving"", ""steepy"", ""typees"", ""conical"", ""calcino"", ""laconic"", ""tobe"", ""bote"", ""estately"", ""layettes"", ""drupel"", ""redupl"", ""purled"", ""choregus"", ""coughers"", ""grouches"", ""overwarms"", ""overswarm"", ""breachers"", ""schrebera"", ""saucers"", ""sucrase""]
","[[""bote"", ""tobe""], [""breachers"", ""schrebera""], [""calcino"", ""conical"", ""laconic""], [""choregus"", ""coughers"", ""grouches""], [""drupel"", ""purled"", ""redupl""], [""estately"", ""layettes""], [""irving"", ""virgin""], [""overswarm"", ""overwarms""], [""saucers"", ""sucrase""], [""steepy"", ""typees""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""virgin\"", \""irving\"", \""steepy\"", \""typees\"", \""conical\"", \""calcino\"", \""laconic\"", \""tobe\"", \""bote\"", \""estately\"", \""layettes\"", \""drupel\"", \""redupl\"", \""purled\"", \""choregus\"", \""coughers\"", \""grouches\"", \""overwarms\"", \""overswarm\"", \""breachers\"", \""schrebera\"", \""saucers\"", \""sucrase\""]\n"",
    ""answer"": ""[[\""bote\"", \""tobe\""], [\""breachers\"", \""schrebera\""], [\""calcino\"", \""conical\"", \""laconic\""], [\""choregus\"", \""coughers\"", \""grouches\""], [\""drupel\"", \""purled\"", \""redupl\""], [\""estately\"", \""layettes\""], [\""irving\"", \""virgin\""], [\""overswarm\"", \""overwarms\""], [\""saucers\"", \""sucrase\""], [\""steepy\"", \""typees\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 751,
        ""words"": [
            ""virgin"",
            ""irving"",
            ""steepy"",
            ""typees"",
            ""conical"",
            ""calcino"",
            ""laconic"",
            ""tobe"",
            ""bote"",
            ""estately"",
            ""layettes"",
            ""drupel"",
            ""redupl"",
            ""purled"",
            ""choregus"",
            ""coughers"",
            ""grouches"",
            ""overwarms"",
            ""overswarm"",
            ""breachers"",
            ""schrebera"",
            ""saucers"",
            ""sucrase""
        ],
        ""solution"": [
            [
                ""bote"",
                ""tobe""
            ],
            [
                ""breachers"",
                ""schrebera""
            ],
            [
                ""calcino"",
                ""conical"",
                ""laconic""
            ],
            [
                ""choregus"",
                ""coughers"",
                ""grouches""
            ],
            [
                ""drupel"",
                ""purled"",
                ""redupl""
            ],
            [
                ""estately"",
                ""layettes""
            ],
            [
                ""irving"",
                ""virgin""
            ],
            [
                ""overswarm"",
                ""overwarms""
            ],
            [
                ""saucers"",
                ""sucrase""
            ],
            [
                ""steepy"",
                ""typees""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
752,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""shastraik"", ""katharsis"", ""maga"", ""agma"", ""corelates"", ""relocates"", ""labiocervical"", ""cervicolabial"", ""cosenator"", ""corantoes"", ""masochism"", ""machismos"", ""sclerotal"", ""collarets"", ""darings"", ""gradins""]
","[[""agma"", ""maga""], [""cervicolabial"", ""labiocervical""], [""collarets"", ""sclerotal""], [""corantoes"", ""cosenator""], [""corelates"", ""relocates""], [""darings"", ""gradins""], [""katharsis"", ""shastraik""], [""machismos"", ""masochism""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""shastraik\"", \""katharsis\"", \""maga\"", \""agma\"", \""corelates\"", \""relocates\"", \""labiocervical\"", \""cervicolabial\"", \""cosenator\"", \""corantoes\"", \""masochism\"", \""machismos\"", \""sclerotal\"", \""collarets\"", \""darings\"", \""gradins\""]\n"",
    ""answer"": ""[[\""agma\"", \""maga\""], [\""cervicolabial\"", \""labiocervical\""], [\""collarets\"", \""sclerotal\""], [\""corantoes\"", \""cosenator\""], [\""corelates\"", \""relocates\""], [\""darings\"", \""gradins\""], [\""katharsis\"", \""shastraik\""], [\""machismos\"", \""masochism\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 752,
        ""words"": [
            ""shastraik"",
            ""katharsis"",
            ""maga"",
            ""agma"",
            ""corelates"",
            ""relocates"",
            ""labiocervical"",
            ""cervicolabial"",
            ""cosenator"",
            ""corantoes"",
            ""masochism"",
            ""machismos"",
            ""sclerotal"",
            ""collarets"",
            ""darings"",
            ""gradins""
        ],
        ""solution"": [
            [
                ""agma"",
                ""maga""
            ],
            [
                ""cervicolabial"",
                ""labiocervical""
            ],
            [
                ""collarets"",
                ""sclerotal""
            ],
            [
                ""corantoes"",
                ""cosenator""
            ],
            [
                ""corelates"",
                ""relocates""
            ],
            [
                ""darings"",
                ""gradins""
            ],
            [
                ""katharsis"",
                ""shastraik""
            ],
            [
                ""machismos"",
                ""masochism""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
753,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""antiques"", ""quanties"", ""unpervaded"", ""undepraved"", ""blastings"", ""stablings"", ""dossel"", ""doless"", ""pan"", ""nap"", ""aludra"", ""radula"", ""adular"", ""versta"", ""tavers"", ""starve"", ""ritsu"", ""ritus"", ""sruti"", ""ozena"", ""neoza"", ""rustly"", ""sultry""]
","[[""adular"", ""aludra"", ""radula""], [""antiques"", ""quanties""], [""blastings"", ""stablings""], [""doless"", ""dossel""], [""nap"", ""pan""], [""neoza"", ""ozena""], [""ritsu"", ""ritus"", ""sruti""], [""rustly"", ""sultry""], [""starve"", ""tavers"", ""versta""], [""undepraved"", ""unpervaded""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""antiques\"", \""quanties\"", \""unpervaded\"", \""undepraved\"", \""blastings\"", \""stablings\"", \""dossel\"", \""doless\"", \""pan\"", \""nap\"", \""aludra\"", \""radula\"", \""adular\"", \""versta\"", \""tavers\"", \""starve\"", \""ritsu\"", \""ritus\"", \""sruti\"", \""ozena\"", \""neoza\"", \""rustly\"", \""sultry\""]\n"",
    ""answer"": ""[[\""adular\"", \""aludra\"", \""radula\""], [\""antiques\"", \""quanties\""], [\""blastings\"", \""stablings\""], [\""doless\"", \""dossel\""], [\""nap\"", \""pan\""], [\""neoza\"", \""ozena\""], [\""ritsu\"", \""ritus\"", \""sruti\""], [\""rustly\"", \""sultry\""], [\""starve\"", \""tavers\"", \""versta\""], [\""undepraved\"", \""unpervaded\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 753,
        ""words"": [
            ""antiques"",
            ""quanties"",
            ""unpervaded"",
            ""undepraved"",
            ""blastings"",
            ""stablings"",
            ""dossel"",
            ""doless"",
            ""pan"",
            ""nap"",
            ""aludra"",
            ""radula"",
            ""adular"",
            ""versta"",
            ""tavers"",
            ""starve"",
            ""ritsu"",
            ""ritus"",
            ""sruti"",
            ""ozena"",
            ""neoza"",
            ""rustly"",
            ""sultry""
        ],
        ""solution"": [
            [
                ""adular"",
                ""aludra"",
                ""radula""
            ],
            [
                ""antiques"",
                ""quanties""
            ],
            [
                ""blastings"",
                ""stablings""
            ],
            [
                ""doless"",
                ""dossel""
            ],
            [
                ""nap"",
                ""pan""
            ],
            [
                ""neoza"",
                ""ozena""
            ],
            [
                ""ritsu"",
                ""ritus"",
                ""sruti""
            ],
            [
                ""rustly"",
                ""sultry""
            ],
            [
                ""starve"",
                ""tavers"",
                ""versta""
            ],
            [
                ""undepraved"",
                ""unpervaded""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
754,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""albino"", ""albion"", ""soning"", ""nosing"", ""cistvaen"", ""vesicant"", ""ransomed"", ""madrones"", ""calcines"", ""scenical"", ""biases"", ""bassie"", ""inkwoods"", ""woodskin""]
","[[""albino"", ""albion""], [""bassie"", ""biases""], [""calcines"", ""scenical""], [""cistvaen"", ""vesicant""], [""inkwoods"", ""woodskin""], [""madrones"", ""ransomed""], [""nosing"", ""soning""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""albino\"", \""albion\"", \""soning\"", \""nosing\"", \""cistvaen\"", \""vesicant\"", \""ransomed\"", \""madrones\"", \""calcines\"", \""scenical\"", \""biases\"", \""bassie\"", \""inkwoods\"", \""woodskin\""]\n"",
    ""answer"": ""[[\""albino\"", \""albion\""], [\""bassie\"", \""biases\""], [\""calcines\"", \""scenical\""], [\""cistvaen\"", \""vesicant\""], [\""inkwoods\"", \""woodskin\""], [\""madrones\"", \""ransomed\""], [\""nosing\"", \""soning\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 754,
        ""words"": [
            ""albino"",
            ""albion"",
            ""soning"",
            ""nosing"",
            ""cistvaen"",
            ""vesicant"",
            ""ransomed"",
            ""madrones"",
            ""calcines"",
            ""scenical"",
            ""biases"",
            ""bassie"",
            ""inkwoods"",
            ""woodskin""
        ],
        ""solution"": [
            [
                ""albino"",
                ""albion""
            ],
            [
                ""bassie"",
                ""biases""
            ],
            [
                ""calcines"",
                ""scenical""
            ],
            [
                ""cistvaen"",
                ""vesicant""
            ],
            [
                ""inkwoods"",
                ""woodskin""
            ],
            [
                ""madrones"",
                ""ransomed""
            ],
            [
                ""nosing"",
                ""soning""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
755,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fringes"", ""fingers"", ""spoiler"", ""leporis"", ""spirole"", ""gangplow"", ""plowgang"", ""lamblike"", ""balmlike"", ""vendace"", ""devance"", ""myrick"", ""kymric""]
","[[""balmlike"", ""lamblike""], [""devance"", ""vendace""], [""fingers"", ""fringes""], [""gangplow"", ""plowgang""], [""kymric"", ""myrick""], [""leporis"", ""spirole"", ""spoiler""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fringes\"", \""fingers\"", \""spoiler\"", \""leporis\"", \""spirole\"", \""gangplow\"", \""plowgang\"", \""lamblike\"", \""balmlike\"", \""vendace\"", \""devance\"", \""myrick\"", \""kymric\""]\n"",
    ""answer"": ""[[\""balmlike\"", \""lamblike\""], [\""devance\"", \""vendace\""], [\""fingers\"", \""fringes\""], [\""gangplow\"", \""plowgang\""], [\""kymric\"", \""myrick\""], [\""leporis\"", \""spirole\"", \""spoiler\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 755,
        ""words"": [
            ""fringes"",
            ""fingers"",
            ""spoiler"",
            ""leporis"",
            ""spirole"",
            ""gangplow"",
            ""plowgang"",
            ""lamblike"",
            ""balmlike"",
            ""vendace"",
            ""devance"",
            ""myrick"",
            ""kymric""
        ],
        ""solution"": [
            [
                ""balmlike"",
                ""lamblike""
            ],
            [
                ""devance"",
                ""vendace""
            ],
            [
                ""fingers"",
                ""fringes""
            ],
            [
                ""gangplow"",
                ""plowgang""
            ],
            [
                ""kymric"",
                ""myrick""
            ],
            [
                ""leporis"",
                ""spirole"",
                ""spoiler""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
756,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tristate"", ""rattiest"", ""titrates"", ""radiac"", ""acarid"", ""cardia"", ""resetting"", ""strengite"", ""leprosed"", ""deplores"", ""obi"", ""ibo"", ""bio"", ""suling"", ""sluing"", ""lungis"", ""swelt"", ""welts"", ""raniform"", ""nariform"", ""tate"", ""atte"", ""teat""]
","[[""acarid"", ""cardia"", ""radiac""], [""atte"", ""tate"", ""teat""], [""bio"", ""ibo"", ""obi""], [""deplores"", ""leprosed""], [""lungis"", ""sluing"", ""suling""], [""nariform"", ""raniform""], [""rattiest"", ""titrates"", ""tristate""], [""resetting"", ""strengite""], [""swelt"", ""welts""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tristate\"", \""rattiest\"", \""titrates\"", \""radiac\"", \""acarid\"", \""cardia\"", \""resetting\"", \""strengite\"", \""leprosed\"", \""deplores\"", \""obi\"", \""ibo\"", \""bio\"", \""suling\"", \""sluing\"", \""lungis\"", \""swelt\"", \""welts\"", \""raniform\"", \""nariform\"", \""tate\"", \""atte\"", \""teat\""]\n"",
    ""answer"": ""[[\""acarid\"", \""cardia\"", \""radiac\""], [\""atte\"", \""tate\"", \""teat\""], [\""bio\"", \""ibo\"", \""obi\""], [\""deplores\"", \""leprosed\""], [\""lungis\"", \""sluing\"", \""suling\""], [\""nariform\"", \""raniform\""], [\""rattiest\"", \""titrates\"", \""tristate\""], [\""resetting\"", \""strengite\""], [\""swelt\"", \""welts\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 756,
        ""words"": [
            ""tristate"",
            ""rattiest"",
            ""titrates"",
            ""radiac"",
            ""acarid"",
            ""cardia"",
            ""resetting"",
            ""strengite"",
            ""leprosed"",
            ""deplores"",
            ""obi"",
            ""ibo"",
            ""bio"",
            ""suling"",
            ""sluing"",
            ""lungis"",
            ""swelt"",
            ""welts"",
            ""raniform"",
            ""nariform"",
            ""tate"",
            ""atte"",
            ""teat""
        ],
        ""solution"": [
            [
                ""acarid"",
                ""cardia"",
                ""radiac""
            ],
            [
                ""atte"",
                ""tate"",
                ""teat""
            ],
            [
                ""bio"",
                ""ibo"",
                ""obi""
            ],
            [
                ""deplores"",
                ""leprosed""
            ],
            [
                ""lungis"",
                ""sluing"",
                ""suling""
            ],
            [
                ""nariform"",
                ""raniform""
            ],
            [
                ""rattiest"",
                ""titrates"",
                ""tristate""
            ],
            [
                ""resetting"",
                ""strengite""
            ],
            [
                ""swelt"",
                ""welts""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
757,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""neutralness"", ""unalertness"", ""miltier"", ""relimit"", ""limiter"", ""stagne"", ""agents"", ""estang"", ""fungite"", ""fugient"", ""toccata"", ""attacco"", ""doyen"", ""doney"", ""hander"", ""harden"", ""cosinesses"", ""secessions"", ""gunshot"", ""noughts"", ""shotgun""]
","[[""agents"", ""estang"", ""stagne""], [""attacco"", ""toccata""], [""cosinesses"", ""secessions""], [""doney"", ""doyen""], [""fugient"", ""fungite""], [""gunshot"", ""noughts"", ""shotgun""], [""hander"", ""harden""], [""limiter"", ""miltier"", ""relimit""], [""neutralness"", ""unalertness""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""neutralness\"", \""unalertness\"", \""miltier\"", \""relimit\"", \""limiter\"", \""stagne\"", \""agents\"", \""estang\"", \""fungite\"", \""fugient\"", \""toccata\"", \""attacco\"", \""doyen\"", \""doney\"", \""hander\"", \""harden\"", \""cosinesses\"", \""secessions\"", \""gunshot\"", \""noughts\"", \""shotgun\""]\n"",
    ""answer"": ""[[\""agents\"", \""estang\"", \""stagne\""], [\""attacco\"", \""toccata\""], [\""cosinesses\"", \""secessions\""], [\""doney\"", \""doyen\""], [\""fugient\"", \""fungite\""], [\""gunshot\"", \""noughts\"", \""shotgun\""], [\""hander\"", \""harden\""], [\""limiter\"", \""miltier\"", \""relimit\""], [\""neutralness\"", \""unalertness\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 757,
        ""words"": [
            ""neutralness"",
            ""unalertness"",
            ""miltier"",
            ""relimit"",
            ""limiter"",
            ""stagne"",
            ""agents"",
            ""estang"",
            ""fungite"",
            ""fugient"",
            ""toccata"",
            ""attacco"",
            ""doyen"",
            ""doney"",
            ""hander"",
            ""harden"",
            ""cosinesses"",
            ""secessions"",
            ""gunshot"",
            ""noughts"",
            ""shotgun""
        ],
        ""solution"": [
            [
                ""agents"",
                ""estang"",
                ""stagne""
            ],
            [
                ""attacco"",
                ""toccata""
            ],
            [
                ""cosinesses"",
                ""secessions""
            ],
            [
                ""doney"",
                ""doyen""
            ],
            [
                ""fugient"",
                ""fungite""
            ],
            [
                ""gunshot"",
                ""noughts"",
                ""shotgun""
            ],
            [
                ""hander"",
                ""harden""
            ],
            [
                ""limiter"",
                ""miltier"",
                ""relimit""
            ],
            [
                ""neutralness"",
                ""unalertness""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
758,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""spinose"", ""espinos"", ""phanariot"", ""parathion"", ""bania"", ""aniba"", ""forzandos"", ""sforzando"", ""hts"", ""sht"", ""signeted"", ""ingested""]
","[[""aniba"", ""bania""], [""espinos"", ""spinose""], [""forzandos"", ""sforzando""], [""hts"", ""sht""], [""ingested"", ""signeted""], [""parathion"", ""phanariot""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""spinose\"", \""espinos\"", \""phanariot\"", \""parathion\"", \""bania\"", \""aniba\"", \""forzandos\"", \""sforzando\"", \""hts\"", \""sht\"", \""signeted\"", \""ingested\""]\n"",
    ""answer"": ""[[\""aniba\"", \""bania\""], [\""espinos\"", \""spinose\""], [\""forzandos\"", \""sforzando\""], [\""hts\"", \""sht\""], [\""ingested\"", \""signeted\""], [\""parathion\"", \""phanariot\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 758,
        ""words"": [
            ""spinose"",
            ""espinos"",
            ""phanariot"",
            ""parathion"",
            ""bania"",
            ""aniba"",
            ""forzandos"",
            ""sforzando"",
            ""hts"",
            ""sht"",
            ""signeted"",
            ""ingested""
        ],
        ""solution"": [
            [
                ""aniba"",
                ""bania""
            ],
            [
                ""espinos"",
                ""spinose""
            ],
            [
                ""forzandos"",
                ""sforzando""
            ],
            [
                ""hts"",
                ""sht""
            ],
            [
                ""ingested"",
                ""signeted""
            ],
            [
                ""parathion"",
                ""phanariot""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
759,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ondy"", ""yond"", ""care"", ""acre"", ""race"", ""crea"", ""bulder"", ""burled"", ""seiurus"", ""usuries"", ""benedight"", ""benighted""]
","[[""acre"", ""care"", ""crea"", ""race""], [""benedight"", ""benighted""], [""bulder"", ""burled""], [""ondy"", ""yond""], [""seiurus"", ""usuries""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ondy\"", \""yond\"", \""care\"", \""acre\"", \""race\"", \""crea\"", \""bulder\"", \""burled\"", \""seiurus\"", \""usuries\"", \""benedight\"", \""benighted\""]\n"",
    ""answer"": ""[[\""acre\"", \""care\"", \""crea\"", \""race\""], [\""benedight\"", \""benighted\""], [\""bulder\"", \""burled\""], [\""ondy\"", \""yond\""], [\""seiurus\"", \""usuries\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 759,
        ""words"": [
            ""ondy"",
            ""yond"",
            ""care"",
            ""acre"",
            ""race"",
            ""crea"",
            ""bulder"",
            ""burled"",
            ""seiurus"",
            ""usuries"",
            ""benedight"",
            ""benighted""
        ],
        ""solution"": [
            [
                ""acre"",
                ""care"",
                ""crea"",
                ""race""
            ],
            [
                ""benedight"",
                ""benighted""
            ],
            [
                ""bulder"",
                ""burled""
            ],
            [
                ""ondy"",
                ""yond""
            ],
            [
                ""seiurus"",
                ""usuries""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
760,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""plower"", ""replow"", ""pattie"", ""tapeti"", ""plerome"", ""emplore"", ""girleen"", ""reeling"", ""leering"", ""sent"", ""sten"", ""chart"", ""ratch"", ""archt"", ""unshortened"", ""underhonest"", ""pretransmission"", ""transimpression"", ""tweag"", ""waget"", ""kineses"", ""enskies""]
","[[""archt"", ""chart"", ""ratch""], [""emplore"", ""plerome""], [""enskies"", ""kineses""], [""girleen"", ""leering"", ""reeling""], [""pattie"", ""tapeti""], [""plower"", ""replow""], [""pretransmission"", ""transimpression""], [""sent"", ""sten""], [""tweag"", ""waget""], [""underhonest"", ""unshortened""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""plower\"", \""replow\"", \""pattie\"", \""tapeti\"", \""plerome\"", \""emplore\"", \""girleen\"", \""reeling\"", \""leering\"", \""sent\"", \""sten\"", \""chart\"", \""ratch\"", \""archt\"", \""unshortened\"", \""underhonest\"", \""pretransmission\"", \""transimpression\"", \""tweag\"", \""waget\"", \""kineses\"", \""enskies\""]\n"",
    ""answer"": ""[[\""archt\"", \""chart\"", \""ratch\""], [\""emplore\"", \""plerome\""], [\""enskies\"", \""kineses\""], [\""girleen\"", \""leering\"", \""reeling\""], [\""pattie\"", \""tapeti\""], [\""plower\"", \""replow\""], [\""pretransmission\"", \""transimpression\""], [\""sent\"", \""sten\""], [\""tweag\"", \""waget\""], [\""underhonest\"", \""unshortened\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 760,
        ""words"": [
            ""plower"",
            ""replow"",
            ""pattie"",
            ""tapeti"",
            ""plerome"",
            ""emplore"",
            ""girleen"",
            ""reeling"",
            ""leering"",
            ""sent"",
            ""sten"",
            ""chart"",
            ""ratch"",
            ""archt"",
            ""unshortened"",
            ""underhonest"",
            ""pretransmission"",
            ""transimpression"",
            ""tweag"",
            ""waget"",
            ""kineses"",
            ""enskies""
        ],
        ""solution"": [
            [
                ""archt"",
                ""chart"",
                ""ratch""
            ],
            [
                ""emplore"",
                ""plerome""
            ],
            [
                ""enskies"",
                ""kineses""
            ],
            [
                ""girleen"",
                ""leering"",
                ""reeling""
            ],
            [
                ""pattie"",
                ""tapeti""
            ],
            [
                ""plower"",
                ""replow""
            ],
            [
                ""pretransmission"",
                ""transimpression""
            ],
            [
                ""sent"",
                ""sten""
            ],
            [
                ""tweag"",
                ""waget""
            ],
            [
                ""underhonest"",
                ""unshortened""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
761,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""uranic"", ""anuric"", ""cinura"", ""hommack"", ""hammock"", ""laudation"", ""adulation"", ""rumly"", ""murly"", ""eringo"", ""region"", ""chatty"", ""tatchy""]
","[[""adulation"", ""laudation""], [""anuric"", ""cinura"", ""uranic""], [""chatty"", ""tatchy""], [""eringo"", ""region""], [""hammock"", ""hommack""], [""murly"", ""rumly""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""uranic\"", \""anuric\"", \""cinura\"", \""hommack\"", \""hammock\"", \""laudation\"", \""adulation\"", \""rumly\"", \""murly\"", \""eringo\"", \""region\"", \""chatty\"", \""tatchy\""]\n"",
    ""answer"": ""[[\""adulation\"", \""laudation\""], [\""anuric\"", \""cinura\"", \""uranic\""], [\""chatty\"", \""tatchy\""], [\""eringo\"", \""region\""], [\""hammock\"", \""hommack\""], [\""murly\"", \""rumly\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 761,
        ""words"": [
            ""uranic"",
            ""anuric"",
            ""cinura"",
            ""hommack"",
            ""hammock"",
            ""laudation"",
            ""adulation"",
            ""rumly"",
            ""murly"",
            ""eringo"",
            ""region"",
            ""chatty"",
            ""tatchy""
        ],
        ""solution"": [
            [
                ""adulation"",
                ""laudation""
            ],
            [
                ""anuric"",
                ""cinura"",
                ""uranic""
            ],
            [
                ""chatty"",
                ""tatchy""
            ],
            [
                ""eringo"",
                ""region""
            ],
            [
                ""hammock"",
                ""hommack""
            ],
            [
                ""murly"",
                ""rumly""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
762,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""breading"", ""bearding"", ""inbardge"", ""gravure"", ""verruga"", ""anointer"", ""reanoint"", ""directoire"", ""cordierite"", ""underhorsed"", ""undershored"", ""teazle"", ""teazel""]
","[[""anointer"", ""reanoint""], [""bearding"", ""breading"", ""inbardge""], [""cordierite"", ""directoire""], [""gravure"", ""verruga""], [""teazel"", ""teazle""], [""underhorsed"", ""undershored""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""breading\"", \""bearding\"", \""inbardge\"", \""gravure\"", \""verruga\"", \""anointer\"", \""reanoint\"", \""directoire\"", \""cordierite\"", \""underhorsed\"", \""undershored\"", \""teazle\"", \""teazel\""]\n"",
    ""answer"": ""[[\""anointer\"", \""reanoint\""], [\""bearding\"", \""breading\"", \""inbardge\""], [\""cordierite\"", \""directoire\""], [\""gravure\"", \""verruga\""], [\""teazel\"", \""teazle\""], [\""underhorsed\"", \""undershored\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 762,
        ""words"": [
            ""breading"",
            ""bearding"",
            ""inbardge"",
            ""gravure"",
            ""verruga"",
            ""anointer"",
            ""reanoint"",
            ""directoire"",
            ""cordierite"",
            ""underhorsed"",
            ""undershored"",
            ""teazle"",
            ""teazel""
        ],
        ""solution"": [
            [
                ""anointer"",
                ""reanoint""
            ],
            [
                ""bearding"",
                ""breading"",
                ""inbardge""
            ],
            [
                ""cordierite"",
                ""directoire""
            ],
            [
                ""gravure"",
                ""verruga""
            ],
            [
                ""teazel"",
                ""teazle""
            ],
            [
                ""underhorsed"",
                ""undershored""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
763,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""umbrina"", ""umbrian"", ""esthetician"", ""inaesthetic"", ""gamasid"", ""magadis"", ""bedlight"", ""blighted"", ""company"", ""copyman"", ""coque"", ""ocque"", ""pinings"", ""sniping"", ""stut"", ""tuts""]
","[[""bedlight"", ""blighted""], [""company"", ""copyman""], [""coque"", ""ocque""], [""esthetician"", ""inaesthetic""], [""gamasid"", ""magadis""], [""pinings"", ""sniping""], [""stut"", ""tuts""], [""umbrian"", ""umbrina""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""umbrina\"", \""umbrian\"", \""esthetician\"", \""inaesthetic\"", \""gamasid\"", \""magadis\"", \""bedlight\"", \""blighted\"", \""company\"", \""copyman\"", \""coque\"", \""ocque\"", \""pinings\"", \""sniping\"", \""stut\"", \""tuts\""]\n"",
    ""answer"": ""[[\""bedlight\"", \""blighted\""], [\""company\"", \""copyman\""], [\""coque\"", \""ocque\""], [\""esthetician\"", \""inaesthetic\""], [\""gamasid\"", \""magadis\""], [\""pinings\"", \""sniping\""], [\""stut\"", \""tuts\""], [\""umbrian\"", \""umbrina\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 763,
        ""words"": [
            ""umbrina"",
            ""umbrian"",
            ""esthetician"",
            ""inaesthetic"",
            ""gamasid"",
            ""magadis"",
            ""bedlight"",
            ""blighted"",
            ""company"",
            ""copyman"",
            ""coque"",
            ""ocque"",
            ""pinings"",
            ""sniping"",
            ""stut"",
            ""tuts""
        ],
        ""solution"": [
            [
                ""bedlight"",
                ""blighted""
            ],
            [
                ""company"",
                ""copyman""
            ],
            [
                ""coque"",
                ""ocque""
            ],
            [
                ""esthetician"",
                ""inaesthetic""
            ],
            [
                ""gamasid"",
                ""magadis""
            ],
            [
                ""pinings"",
                ""sniping""
            ],
            [
                ""stut"",
                ""tuts""
            ],
            [
                ""umbrian"",
                ""umbrina""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
764,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""eon"", ""one"", ""neo"", ""floured"", ""foulder"", ""fouldre"", ""foldure"", ""herbarian"", ""harebrain"", ""scalewing"", ""lacewings"", ""doeuvre"", ""overdue"", ""heathens"", ""ensheath"", ""workloads"", ""woodlarks"", ""samiti"", ""timias"", ""venerous"", ""enervous"", ""myoepicardial"", ""epimyocardial""]
","[[""doeuvre"", ""overdue""], [""enervous"", ""venerous""], [""ensheath"", ""heathens""], [""eon"", ""neo"", ""one""], [""epimyocardial"", ""myoepicardial""], [""floured"", ""foldure"", ""foulder"", ""fouldre""], [""harebrain"", ""herbarian""], [""lacewings"", ""scalewing""], [""samiti"", ""timias""], [""woodlarks"", ""workloads""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""eon\"", \""one\"", \""neo\"", \""floured\"", \""foulder\"", \""fouldre\"", \""foldure\"", \""herbarian\"", \""harebrain\"", \""scalewing\"", \""lacewings\"", \""doeuvre\"", \""overdue\"", \""heathens\"", \""ensheath\"", \""workloads\"", \""woodlarks\"", \""samiti\"", \""timias\"", \""venerous\"", \""enervous\"", \""myoepicardial\"", \""epimyocardial\""]\n"",
    ""answer"": ""[[\""doeuvre\"", \""overdue\""], [\""enervous\"", \""venerous\""], [\""ensheath\"", \""heathens\""], [\""eon\"", \""neo\"", \""one\""], [\""epimyocardial\"", \""myoepicardial\""], [\""floured\"", \""foldure\"", \""foulder\"", \""fouldre\""], [\""harebrain\"", \""herbarian\""], [\""lacewings\"", \""scalewing\""], [\""samiti\"", \""timias\""], [\""woodlarks\"", \""workloads\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 764,
        ""words"": [
            ""eon"",
            ""one"",
            ""neo"",
            ""floured"",
            ""foulder"",
            ""fouldre"",
            ""foldure"",
            ""herbarian"",
            ""harebrain"",
            ""scalewing"",
            ""lacewings"",
            ""doeuvre"",
            ""overdue"",
            ""heathens"",
            ""ensheath"",
            ""workloads"",
            ""woodlarks"",
            ""samiti"",
            ""timias"",
            ""venerous"",
            ""enervous"",
            ""myoepicardial"",
            ""epimyocardial""
        ],
        ""solution"": [
            [
                ""doeuvre"",
                ""overdue""
            ],
            [
                ""enervous"",
                ""venerous""
            ],
            [
                ""ensheath"",
                ""heathens""
            ],
            [
                ""eon"",
                ""neo"",
                ""one""
            ],
            [
                ""epimyocardial"",
                ""myoepicardial""
            ],
            [
                ""floured"",
                ""foldure"",
                ""foulder"",
                ""fouldre""
            ],
            [
                ""harebrain"",
                ""herbarian""
            ],
            [
                ""lacewings"",
                ""scalewing""
            ],
            [
                ""samiti"",
                ""timias""
            ],
            [
                ""woodlarks"",
                ""workloads""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
765,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sastra"", ""assart"", ""kanga"", ""angka"", ""flemish"", ""himself"", ""inspan"", ""pinnas"", ""friths"", ""firths"", ""shrift"", ""germing"", ""merging"", ""madecase"", ""academes"", ""lifesome"", ""liefsome""]
","[[""academes"", ""madecase""], [""angka"", ""kanga""], [""assart"", ""sastra""], [""firths"", ""friths"", ""shrift""], [""flemish"", ""himself""], [""germing"", ""merging""], [""inspan"", ""pinnas""], [""liefsome"", ""lifesome""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sastra\"", \""assart\"", \""kanga\"", \""angka\"", \""flemish\"", \""himself\"", \""inspan\"", \""pinnas\"", \""friths\"", \""firths\"", \""shrift\"", \""germing\"", \""merging\"", \""madecase\"", \""academes\"", \""lifesome\"", \""liefsome\""]\n"",
    ""answer"": ""[[\""academes\"", \""madecase\""], [\""angka\"", \""kanga\""], [\""assart\"", \""sastra\""], [\""firths\"", \""friths\"", \""shrift\""], [\""flemish\"", \""himself\""], [\""germing\"", \""merging\""], [\""inspan\"", \""pinnas\""], [\""liefsome\"", \""lifesome\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 765,
        ""words"": [
            ""sastra"",
            ""assart"",
            ""kanga"",
            ""angka"",
            ""flemish"",
            ""himself"",
            ""inspan"",
            ""pinnas"",
            ""friths"",
            ""firths"",
            ""shrift"",
            ""germing"",
            ""merging"",
            ""madecase"",
            ""academes"",
            ""lifesome"",
            ""liefsome""
        ],
        ""solution"": [
            [
                ""academes"",
                ""madecase""
            ],
            [
                ""angka"",
                ""kanga""
            ],
            [
                ""assart"",
                ""sastra""
            ],
            [
                ""firths"",
                ""friths"",
                ""shrift""
            ],
            [
                ""flemish"",
                ""himself""
            ],
            [
                ""germing"",
                ""merging""
            ],
            [
                ""inspan"",
                ""pinnas""
            ],
            [
                ""liefsome"",
                ""lifesome""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
766,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cribella"", ""claribel"", ""nectary"", ""encraty"", ""talli"", ""aillt"", ""dustier"", ""studier"", ""carey"", ""craye"", ""wrive"", ""wiver"", ""classier"", ""clarisse"", ""eternalism"", ""streamline""]
","[[""aillt"", ""talli""], [""carey"", ""craye""], [""claribel"", ""cribella""], [""clarisse"", ""classier""], [""dustier"", ""studier""], [""encraty"", ""nectary""], [""eternalism"", ""streamline""], [""wiver"", ""wrive""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cribella\"", \""claribel\"", \""nectary\"", \""encraty\"", \""talli\"", \""aillt\"", \""dustier\"", \""studier\"", \""carey\"", \""craye\"", \""wrive\"", \""wiver\"", \""classier\"", \""clarisse\"", \""eternalism\"", \""streamline\""]\n"",
    ""answer"": ""[[\""aillt\"", \""talli\""], [\""carey\"", \""craye\""], [\""claribel\"", \""cribella\""], [\""clarisse\"", \""classier\""], [\""dustier\"", \""studier\""], [\""encraty\"", \""nectary\""], [\""eternalism\"", \""streamline\""], [\""wiver\"", \""wrive\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 766,
        ""words"": [
            ""cribella"",
            ""claribel"",
            ""nectary"",
            ""encraty"",
            ""talli"",
            ""aillt"",
            ""dustier"",
            ""studier"",
            ""carey"",
            ""craye"",
            ""wrive"",
            ""wiver"",
            ""classier"",
            ""clarisse"",
            ""eternalism"",
            ""streamline""
        ],
        ""solution"": [
            [
                ""aillt"",
                ""talli""
            ],
            [
                ""carey"",
                ""craye""
            ],
            [
                ""claribel"",
                ""cribella""
            ],
            [
                ""clarisse"",
                ""classier""
            ],
            [
                ""dustier"",
                ""studier""
            ],
            [
                ""encraty"",
                ""nectary""
            ],
            [
                ""eternalism"",
                ""streamline""
            ],
            [
                ""wiver"",
                ""wrive""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
767,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""wedels"", ""slewed"", ""liveth"", ""thivel"", ""lipoids"", ""diplois"", ""gifola"", ""filago"", ""abidden"", ""bandied""]
","[[""abidden"", ""bandied""], [""diplois"", ""lipoids""], [""filago"", ""gifola""], [""liveth"", ""thivel""], [""slewed"", ""wedels""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""wedels\"", \""slewed\"", \""liveth\"", \""thivel\"", \""lipoids\"", \""diplois\"", \""gifola\"", \""filago\"", \""abidden\"", \""bandied\""]\n"",
    ""answer"": ""[[\""abidden\"", \""bandied\""], [\""diplois\"", \""lipoids\""], [\""filago\"", \""gifola\""], [\""liveth\"", \""thivel\""], [\""slewed\"", \""wedels\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 767,
        ""words"": [
            ""wedels"",
            ""slewed"",
            ""liveth"",
            ""thivel"",
            ""lipoids"",
            ""diplois"",
            ""gifola"",
            ""filago"",
            ""abidden"",
            ""bandied""
        ],
        ""solution"": [
            [
                ""abidden"",
                ""bandied""
            ],
            [
                ""diplois"",
                ""lipoids""
            ],
            [
                ""filago"",
                ""gifola""
            ],
            [
                ""liveth"",
                ""thivel""
            ],
            [
                ""slewed"",
                ""wedels""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
768,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tinnier"", ""intrine"", ""albinoism"", ""binomials"", ""hydroferricyanic"", ""ferrihydrocyanic"", ""missense"", ""messines"", ""seminess"", ""essenism"", ""pisky"", ""spiky"", ""virge"", ""giver"", ""vergi"", ""warless"", ""warsles"", ""courtier"", ""outcrier"", ""pimentos"", ""nepotism""]
","[[""albinoism"", ""binomials""], [""courtier"", ""outcrier""], [""essenism"", ""messines"", ""missense"", ""seminess""], [""ferrihydrocyanic"", ""hydroferricyanic""], [""giver"", ""vergi"", ""virge""], [""intrine"", ""tinnier""], [""nepotism"", ""pimentos""], [""pisky"", ""spiky""], [""warless"", ""warsles""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tinnier\"", \""intrine\"", \""albinoism\"", \""binomials\"", \""hydroferricyanic\"", \""ferrihydrocyanic\"", \""missense\"", \""messines\"", \""seminess\"", \""essenism\"", \""pisky\"", \""spiky\"", \""virge\"", \""giver\"", \""vergi\"", \""warless\"", \""warsles\"", \""courtier\"", \""outcrier\"", \""pimentos\"", \""nepotism\""]\n"",
    ""answer"": ""[[\""albinoism\"", \""binomials\""], [\""courtier\"", \""outcrier\""], [\""essenism\"", \""messines\"", \""missense\"", \""seminess\""], [\""ferrihydrocyanic\"", \""hydroferricyanic\""], [\""giver\"", \""vergi\"", \""virge\""], [\""intrine\"", \""tinnier\""], [\""nepotism\"", \""pimentos\""], [\""pisky\"", \""spiky\""], [\""warless\"", \""warsles\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 768,
        ""words"": [
            ""tinnier"",
            ""intrine"",
            ""albinoism"",
            ""binomials"",
            ""hydroferricyanic"",
            ""ferrihydrocyanic"",
            ""missense"",
            ""messines"",
            ""seminess"",
            ""essenism"",
            ""pisky"",
            ""spiky"",
            ""virge"",
            ""giver"",
            ""vergi"",
            ""warless"",
            ""warsles"",
            ""courtier"",
            ""outcrier"",
            ""pimentos"",
            ""nepotism""
        ],
        ""solution"": [
            [
                ""albinoism"",
                ""binomials""
            ],
            [
                ""courtier"",
                ""outcrier""
            ],
            [
                ""essenism"",
                ""messines"",
                ""missense"",
                ""seminess""
            ],
            [
                ""ferrihydrocyanic"",
                ""hydroferricyanic""
            ],
            [
                ""giver"",
                ""vergi"",
                ""virge""
            ],
            [
                ""intrine"",
                ""tinnier""
            ],
            [
                ""nepotism"",
                ""pimentos""
            ],
            [
                ""pisky"",
                ""spiky""
            ],
            [
                ""warless"",
                ""warsles""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
769,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""buds"", ""dubs"", ""denies"", ""dienes"", ""leaner"", ""arlene""]
","[[""arlene"", ""leaner""], [""buds"", ""dubs""], [""denies"", ""dienes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""buds\"", \""dubs\"", \""denies\"", \""dienes\"", \""leaner\"", \""arlene\""]\n"",
    ""answer"": ""[[\""arlene\"", \""leaner\""], [\""buds\"", \""dubs\""], [\""denies\"", \""dienes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 769,
        ""words"": [
            ""buds"",
            ""dubs"",
            ""denies"",
            ""dienes"",
            ""leaner"",
            ""arlene""
        ],
        ""solution"": [
            [
                ""arlene"",
                ""leaner""
            ],
            [
                ""buds"",
                ""dubs""
            ],
            [
                ""denies"",
                ""dienes""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
770,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""garbing"", ""barging"", ""sophy"", ""hypos"", ""frescoed"", ""deforces"", ""interceder"", ""crednerite"", ""reveto"", ""vetoer"", ""revote"", ""cotenure"", ""countree"", ""reblend"", ""blender"", ""vaunce"", ""uncave"", ""trichosporum"", ""sporotrichum"", ""mariou"", ""oarium""]
","[[""barging"", ""garbing""], [""blender"", ""reblend""], [""cotenure"", ""countree""], [""crednerite"", ""interceder""], [""deforces"", ""frescoed""], [""hypos"", ""sophy""], [""mariou"", ""oarium""], [""reveto"", ""revote"", ""vetoer""], [""sporotrichum"", ""trichosporum""], [""uncave"", ""vaunce""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""garbing\"", \""barging\"", \""sophy\"", \""hypos\"", \""frescoed\"", \""deforces\"", \""interceder\"", \""crednerite\"", \""reveto\"", \""vetoer\"", \""revote\"", \""cotenure\"", \""countree\"", \""reblend\"", \""blender\"", \""vaunce\"", \""uncave\"", \""trichosporum\"", \""sporotrichum\"", \""mariou\"", \""oarium\""]\n"",
    ""answer"": ""[[\""barging\"", \""garbing\""], [\""blender\"", \""reblend\""], [\""cotenure\"", \""countree\""], [\""crednerite\"", \""interceder\""], [\""deforces\"", \""frescoed\""], [\""hypos\"", \""sophy\""], [\""mariou\"", \""oarium\""], [\""reveto\"", \""revote\"", \""vetoer\""], [\""sporotrichum\"", \""trichosporum\""], [\""uncave\"", \""vaunce\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 770,
        ""words"": [
            ""garbing"",
            ""barging"",
            ""sophy"",
            ""hypos"",
            ""frescoed"",
            ""deforces"",
            ""interceder"",
            ""crednerite"",
            ""reveto"",
            ""vetoer"",
            ""revote"",
            ""cotenure"",
            ""countree"",
            ""reblend"",
            ""blender"",
            ""vaunce"",
            ""uncave"",
            ""trichosporum"",
            ""sporotrichum"",
            ""mariou"",
            ""oarium""
        ],
        ""solution"": [
            [
                ""barging"",
                ""garbing""
            ],
            [
                ""blender"",
                ""reblend""
            ],
            [
                ""cotenure"",
                ""countree""
            ],
            [
                ""crednerite"",
                ""interceder""
            ],
            [
                ""deforces"",
                ""frescoed""
            ],
            [
                ""hypos"",
                ""sophy""
            ],
            [
                ""mariou"",
                ""oarium""
            ],
            [
                ""reveto"",
                ""revote"",
                ""vetoer""
            ],
            [
                ""sporotrichum"",
                ""trichosporum""
            ],
            [
                ""uncave"",
                ""vaunce""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
771,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""blotters"", ""bottlers"", ""frame"", ""fream"", ""gunlayer"", ""neuralgy""]
","[[""blotters"", ""bottlers""], [""frame"", ""fream""], [""gunlayer"", ""neuralgy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""blotters\"", \""bottlers\"", \""frame\"", \""fream\"", \""gunlayer\"", \""neuralgy\""]\n"",
    ""answer"": ""[[\""blotters\"", \""bottlers\""], [\""frame\"", \""fream\""], [\""gunlayer\"", \""neuralgy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 771,
        ""words"": [
            ""blotters"",
            ""bottlers"",
            ""frame"",
            ""fream"",
            ""gunlayer"",
            ""neuralgy""
        ],
        ""solution"": [
            [
                ""blotters"",
                ""bottlers""
            ],
            [
                ""frame"",
                ""fream""
            ],
            [
                ""gunlayer"",
                ""neuralgy""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
772,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""needsome"", ""modenese"", ""overcoat"", ""evocator"", ""asonia"", ""anosia"", ""waddlers"", ""swaddler"", ""rivose"", ""virose"", ""octary"", ""actory"", ""amapa"", ""apama"", ""caulds"", ""cladus"", ""roto"", ""toro"", ""root""]
","[[""actory"", ""octary""], [""amapa"", ""apama""], [""anosia"", ""asonia""], [""caulds"", ""cladus""], [""evocator"", ""overcoat""], [""modenese"", ""needsome""], [""rivose"", ""virose""], [""root"", ""roto"", ""toro""], [""swaddler"", ""waddlers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""needsome\"", \""modenese\"", \""overcoat\"", \""evocator\"", \""asonia\"", \""anosia\"", \""waddlers\"", \""swaddler\"", \""rivose\"", \""virose\"", \""octary\"", \""actory\"", \""amapa\"", \""apama\"", \""caulds\"", \""cladus\"", \""roto\"", \""toro\"", \""root\""]\n"",
    ""answer"": ""[[\""actory\"", \""octary\""], [\""amapa\"", \""apama\""], [\""anosia\"", \""asonia\""], [\""caulds\"", \""cladus\""], [\""evocator\"", \""overcoat\""], [\""modenese\"", \""needsome\""], [\""rivose\"", \""virose\""], [\""root\"", \""roto\"", \""toro\""], [\""swaddler\"", \""waddlers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 772,
        ""words"": [
            ""needsome"",
            ""modenese"",
            ""overcoat"",
            ""evocator"",
            ""asonia"",
            ""anosia"",
            ""waddlers"",
            ""swaddler"",
            ""rivose"",
            ""virose"",
            ""octary"",
            ""actory"",
            ""amapa"",
            ""apama"",
            ""caulds"",
            ""cladus"",
            ""roto"",
            ""toro"",
            ""root""
        ],
        ""solution"": [
            [
                ""actory"",
                ""octary""
            ],
            [
                ""amapa"",
                ""apama""
            ],
            [
                ""anosia"",
                ""asonia""
            ],
            [
                ""caulds"",
                ""cladus""
            ],
            [
                ""evocator"",
                ""overcoat""
            ],
            [
                ""modenese"",
                ""needsome""
            ],
            [
                ""rivose"",
                ""virose""
            ],
            [
                ""root"",
                ""roto"",
                ""toro""
            ],
            [
                ""swaddler"",
                ""waddlers""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
773,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""clavus"", ""calvus"", ""sokes"", ""sekos"", ""syllabi"", ""sibylla"", ""samp"", ""spam"", ""pams"", ""amps"", ""neurolite"", ""reoutline"", ""clodpole"", ""colloped"", ""malakin"", ""alkamin"", ""uncured"", ""uncrude"", ""infaunal"", ""falunian""]
","[[""alkamin"", ""malakin""], [""amps"", ""pams"", ""samp"", ""spam""], [""calvus"", ""clavus""], [""clodpole"", ""colloped""], [""falunian"", ""infaunal""], [""neurolite"", ""reoutline""], [""sekos"", ""sokes""], [""sibylla"", ""syllabi""], [""uncrude"", ""uncured""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""clavus\"", \""calvus\"", \""sokes\"", \""sekos\"", \""syllabi\"", \""sibylla\"", \""samp\"", \""spam\"", \""pams\"", \""amps\"", \""neurolite\"", \""reoutline\"", \""clodpole\"", \""colloped\"", \""malakin\"", \""alkamin\"", \""uncured\"", \""uncrude\"", \""infaunal\"", \""falunian\""]\n"",
    ""answer"": ""[[\""alkamin\"", \""malakin\""], [\""amps\"", \""pams\"", \""samp\"", \""spam\""], [\""calvus\"", \""clavus\""], [\""clodpole\"", \""colloped\""], [\""falunian\"", \""infaunal\""], [\""neurolite\"", \""reoutline\""], [\""sekos\"", \""sokes\""], [\""sibylla\"", \""syllabi\""], [\""uncrude\"", \""uncured\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 773,
        ""words"": [
            ""clavus"",
            ""calvus"",
            ""sokes"",
            ""sekos"",
            ""syllabi"",
            ""sibylla"",
            ""samp"",
            ""spam"",
            ""pams"",
            ""amps"",
            ""neurolite"",
            ""reoutline"",
            ""clodpole"",
            ""colloped"",
            ""malakin"",
            ""alkamin"",
            ""uncured"",
            ""uncrude"",
            ""infaunal"",
            ""falunian""
        ],
        ""solution"": [
            [
                ""alkamin"",
                ""malakin""
            ],
            [
                ""amps"",
                ""pams"",
                ""samp"",
                ""spam""
            ],
            [
                ""calvus"",
                ""clavus""
            ],
            [
                ""clodpole"",
                ""colloped""
            ],
            [
                ""falunian"",
                ""infaunal""
            ],
            [
                ""neurolite"",
                ""reoutline""
            ],
            [
                ""sekos"",
                ""sokes""
            ],
            [
                ""sibylla"",
                ""syllabi""
            ],
            [
                ""uncrude"",
                ""uncured""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
774,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""calyptratae"", ""acalyptrate"", ""stingier"", ""strigine"", ""igniters"", ""consulter"", ""reconsult"", ""hazarder"", ""rehazard"", ""creased"", ""decares"", ""kooks"", ""kokos"", ""uit"", ""tiu"", ""constructer"", ""reconstruct"", ""pretensive"", ""vespertine"", ""presentive""]
","[[""acalyptrate"", ""calyptratae""], [""constructer"", ""reconstruct""], [""consulter"", ""reconsult""], [""creased"", ""decares""], [""hazarder"", ""rehazard""], [""igniters"", ""stingier"", ""strigine""], [""kokos"", ""kooks""], [""presentive"", ""pretensive"", ""vespertine""], [""tiu"", ""uit""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""calyptratae\"", \""acalyptrate\"", \""stingier\"", \""strigine\"", \""igniters\"", \""consulter\"", \""reconsult\"", \""hazarder\"", \""rehazard\"", \""creased\"", \""decares\"", \""kooks\"", \""kokos\"", \""uit\"", \""tiu\"", \""constructer\"", \""reconstruct\"", \""pretensive\"", \""vespertine\"", \""presentive\""]\n"",
    ""answer"": ""[[\""acalyptrate\"", \""calyptratae\""], [\""constructer\"", \""reconstruct\""], [\""consulter\"", \""reconsult\""], [\""creased\"", \""decares\""], [\""hazarder\"", \""rehazard\""], [\""igniters\"", \""stingier\"", \""strigine\""], [\""kokos\"", \""kooks\""], [\""presentive\"", \""pretensive\"", \""vespertine\""], [\""tiu\"", \""uit\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 774,
        ""words"": [
            ""calyptratae"",
            ""acalyptrate"",
            ""stingier"",
            ""strigine"",
            ""igniters"",
            ""consulter"",
            ""reconsult"",
            ""hazarder"",
            ""rehazard"",
            ""creased"",
            ""decares"",
            ""kooks"",
            ""kokos"",
            ""uit"",
            ""tiu"",
            ""constructer"",
            ""reconstruct"",
            ""pretensive"",
            ""vespertine"",
            ""presentive""
        ],
        ""solution"": [
            [
                ""acalyptrate"",
                ""calyptratae""
            ],
            [
                ""constructer"",
                ""reconstruct""
            ],
            [
                ""consulter"",
                ""reconsult""
            ],
            [
                ""creased"",
                ""decares""
            ],
            [
                ""hazarder"",
                ""rehazard""
            ],
            [
                ""igniters"",
                ""stingier"",
                ""strigine""
            ],
            [
                ""kokos"",
                ""kooks""
            ],
            [
                ""presentive"",
                ""pretensive"",
                ""vespertine""
            ],
            [
                ""tiu"",
                ""uit""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
775,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""overtakes"", ""takeovers"", ""paniolo"", ""apionol"", ""polonia"", ""plenty"", ""pentyl"", ""bedrid"", ""birded"", ""bidder"", ""carolling"", ""collaring"", ""unapt"", ""untap"", ""punta"", ""reconvert"", ""converter""]
","[[""apionol"", ""paniolo"", ""polonia""], [""bedrid"", ""bidder"", ""birded""], [""carolling"", ""collaring""], [""converter"", ""reconvert""], [""overtakes"", ""takeovers""], [""pentyl"", ""plenty""], [""punta"", ""unapt"", ""untap""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""overtakes\"", \""takeovers\"", \""paniolo\"", \""apionol\"", \""polonia\"", \""plenty\"", \""pentyl\"", \""bedrid\"", \""birded\"", \""bidder\"", \""carolling\"", \""collaring\"", \""unapt\"", \""untap\"", \""punta\"", \""reconvert\"", \""converter\""]\n"",
    ""answer"": ""[[\""apionol\"", \""paniolo\"", \""polonia\""], [\""bedrid\"", \""bidder\"", \""birded\""], [\""carolling\"", \""collaring\""], [\""converter\"", \""reconvert\""], [\""overtakes\"", \""takeovers\""], [\""pentyl\"", \""plenty\""], [\""punta\"", \""unapt\"", \""untap\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 775,
        ""words"": [
            ""overtakes"",
            ""takeovers"",
            ""paniolo"",
            ""apionol"",
            ""polonia"",
            ""plenty"",
            ""pentyl"",
            ""bedrid"",
            ""birded"",
            ""bidder"",
            ""carolling"",
            ""collaring"",
            ""unapt"",
            ""untap"",
            ""punta"",
            ""reconvert"",
            ""converter""
        ],
        ""solution"": [
            [
                ""apionol"",
                ""paniolo"",
                ""polonia""
            ],
            [
                ""bedrid"",
                ""bidder"",
                ""birded""
            ],
            [
                ""carolling"",
                ""collaring""
            ],
            [
                ""converter"",
                ""reconvert""
            ],
            [
                ""overtakes"",
                ""takeovers""
            ],
            [
                ""pentyl"",
                ""plenty""
            ],
            [
                ""punta"",
                ""unapt"",
                ""untap""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
776,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sprite"", ""ripest"", ""stripe"", ""wordle"", ""lowder"", ""weldor"", ""coalition"", ""coitional"", ""lociation"", ""voila"", ""oliva"", ""astrid"", ""triads"", ""renter"", ""rerent"", ""percompound"", ""precompound""]
","[[""astrid"", ""triads""], [""coalition"", ""coitional"", ""lociation""], [""lowder"", ""weldor"", ""wordle""], [""oliva"", ""voila""], [""percompound"", ""precompound""], [""renter"", ""rerent""], [""ripest"", ""sprite"", ""stripe""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sprite\"", \""ripest\"", \""stripe\"", \""wordle\"", \""lowder\"", \""weldor\"", \""coalition\"", \""coitional\"", \""lociation\"", \""voila\"", \""oliva\"", \""astrid\"", \""triads\"", \""renter\"", \""rerent\"", \""percompound\"", \""precompound\""]\n"",
    ""answer"": ""[[\""astrid\"", \""triads\""], [\""coalition\"", \""coitional\"", \""lociation\""], [\""lowder\"", \""weldor\"", \""wordle\""], [\""oliva\"", \""voila\""], [\""percompound\"", \""precompound\""], [\""renter\"", \""rerent\""], [\""ripest\"", \""sprite\"", \""stripe\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 776,
        ""words"": [
            ""sprite"",
            ""ripest"",
            ""stripe"",
            ""wordle"",
            ""lowder"",
            ""weldor"",
            ""coalition"",
            ""coitional"",
            ""lociation"",
            ""voila"",
            ""oliva"",
            ""astrid"",
            ""triads"",
            ""renter"",
            ""rerent"",
            ""percompound"",
            ""precompound""
        ],
        ""solution"": [
            [
                ""astrid"",
                ""triads""
            ],
            [
                ""coalition"",
                ""coitional"",
                ""lociation""
            ],
            [
                ""lowder"",
                ""weldor"",
                ""wordle""
            ],
            [
                ""oliva"",
                ""voila""
            ],
            [
                ""percompound"",
                ""precompound""
            ],
            [
                ""renter"",
                ""rerent""
            ],
            [
                ""ripest"",
                ""sprite"",
                ""stripe""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
777,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""urnae"", ""urena"", ""recruited"", ""directeur""]
","[[""directeur"", ""recruited""], [""urena"", ""urnae""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""urnae\"", \""urena\"", \""recruited\"", \""directeur\""]\n"",
    ""answer"": ""[[\""directeur\"", \""recruited\""], [\""urena\"", \""urnae\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 777,
        ""words"": [
            ""urnae"",
            ""urena"",
            ""recruited"",
            ""directeur""
        ],
        ""solution"": [
            [
                ""directeur"",
                ""recruited""
            ],
            [
                ""urena"",
                ""urnae""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
778,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""stunner"", ""unstern"", ""suina"", ""unais"", ""ianus"", ""ainus"", ""beduck"", ""bucked"", ""regiminal"", ""remailing"", ""litten"", ""tinlet"", ""unfired"", ""unfried"", ""hocking"", ""choking"", ""sawbuck"", ""bucksaw"", ""supertotal"", ""tetraplous""]
","[[""ainus"", ""ianus"", ""suina"", ""unais""], [""beduck"", ""bucked""], [""bucksaw"", ""sawbuck""], [""choking"", ""hocking""], [""litten"", ""tinlet""], [""regiminal"", ""remailing""], [""stunner"", ""unstern""], [""supertotal"", ""tetraplous""], [""unfired"", ""unfried""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""stunner\"", \""unstern\"", \""suina\"", \""unais\"", \""ianus\"", \""ainus\"", \""beduck\"", \""bucked\"", \""regiminal\"", \""remailing\"", \""litten\"", \""tinlet\"", \""unfired\"", \""unfried\"", \""hocking\"", \""choking\"", \""sawbuck\"", \""bucksaw\"", \""supertotal\"", \""tetraplous\""]\n"",
    ""answer"": ""[[\""ainus\"", \""ianus\"", \""suina\"", \""unais\""], [\""beduck\"", \""bucked\""], [\""bucksaw\"", \""sawbuck\""], [\""choking\"", \""hocking\""], [\""litten\"", \""tinlet\""], [\""regiminal\"", \""remailing\""], [\""stunner\"", \""unstern\""], [\""supertotal\"", \""tetraplous\""], [\""unfired\"", \""unfried\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 778,
        ""words"": [
            ""stunner"",
            ""unstern"",
            ""suina"",
            ""unais"",
            ""ianus"",
            ""ainus"",
            ""beduck"",
            ""bucked"",
            ""regiminal"",
            ""remailing"",
            ""litten"",
            ""tinlet"",
            ""unfired"",
            ""unfried"",
            ""hocking"",
            ""choking"",
            ""sawbuck"",
            ""bucksaw"",
            ""supertotal"",
            ""tetraplous""
        ],
        ""solution"": [
            [
                ""ainus"",
                ""ianus"",
                ""suina"",
                ""unais""
            ],
            [
                ""beduck"",
                ""bucked""
            ],
            [
                ""bucksaw"",
                ""sawbuck""
            ],
            [
                ""choking"",
                ""hocking""
            ],
            [
                ""litten"",
                ""tinlet""
            ],
            [
                ""regiminal"",
                ""remailing""
            ],
            [
                ""stunner"",
                ""unstern""
            ],
            [
                ""supertotal"",
                ""tetraplous""
            ],
            [
                ""unfired"",
                ""unfried""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
779,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""betrayal"", ""tearably"", ""rateably"", ""tragia"", ""gratia"", ""restung"", ""surgent"", ""gurnets"", ""gunster""]
","[[""betrayal"", ""rateably"", ""tearably""], [""gratia"", ""tragia""], [""gunster"", ""gurnets"", ""restung"", ""surgent""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""betrayal\"", \""tearably\"", \""rateably\"", \""tragia\"", \""gratia\"", \""restung\"", \""surgent\"", \""gurnets\"", \""gunster\""]\n"",
    ""answer"": ""[[\""betrayal\"", \""rateably\"", \""tearably\""], [\""gratia\"", \""tragia\""], [\""gunster\"", \""gurnets\"", \""restung\"", \""surgent\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 779,
        ""words"": [
            ""betrayal"",
            ""tearably"",
            ""rateably"",
            ""tragia"",
            ""gratia"",
            ""restung"",
            ""surgent"",
            ""gurnets"",
            ""gunster""
        ],
        ""solution"": [
            [
                ""betrayal"",
                ""rateably"",
                ""tearably""
            ],
            [
                ""gratia"",
                ""tragia""
            ],
            [
                ""gunster"",
                ""gurnets"",
                ""restung"",
                ""surgent""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
780,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""owd"", ""wod"", ""dow"", ""kiters"", ""skiter"", ""strike""]
","[[""dow"", ""owd"", ""wod""], [""kiters"", ""skiter"", ""strike""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""owd\"", \""wod\"", \""dow\"", \""kiters\"", \""skiter\"", \""strike\""]\n"",
    ""answer"": ""[[\""dow\"", \""owd\"", \""wod\""], [\""kiters\"", \""skiter\"", \""strike\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 780,
        ""words"": [
            ""owd"",
            ""wod"",
            ""dow"",
            ""kiters"",
            ""skiter"",
            ""strike""
        ],
        ""solution"": [
            [
                ""dow"",
                ""owd"",
                ""wod""
            ],
            [
                ""kiters"",
                ""skiter"",
                ""strike""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
781,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cadmia"", ""adamic"", ""prostyle"", ""protyles"", ""tiao"", ""iota"", ""owregane"", ""wagoneer""]
","[[""adamic"", ""cadmia""], [""iota"", ""tiao""], [""owregane"", ""wagoneer""], [""prostyle"", ""protyles""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cadmia\"", \""adamic\"", \""prostyle\"", \""protyles\"", \""tiao\"", \""iota\"", \""owregane\"", \""wagoneer\""]\n"",
    ""answer"": ""[[\""adamic\"", \""cadmia\""], [\""iota\"", \""tiao\""], [\""owregane\"", \""wagoneer\""], [\""prostyle\"", \""protyles\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 781,
        ""words"": [
            ""cadmia"",
            ""adamic"",
            ""prostyle"",
            ""protyles"",
            ""tiao"",
            ""iota"",
            ""owregane"",
            ""wagoneer""
        ],
        ""solution"": [
            [
                ""adamic"",
                ""cadmia""
            ],
            [
                ""iota"",
                ""tiao""
            ],
            [
                ""owregane"",
                ""wagoneer""
            ],
            [
                ""prostyle"",
                ""protyles""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
782,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""stockinger"", ""restocking"", ""asserts"", ""trasses"", ""linecaster"", ""interlaces"", ""undersail"", ""laundries""]
","[[""asserts"", ""trasses""], [""interlaces"", ""linecaster""], [""laundries"", ""undersail""], [""restocking"", ""stockinger""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""stockinger\"", \""restocking\"", \""asserts\"", \""trasses\"", \""linecaster\"", \""interlaces\"", \""undersail\"", \""laundries\""]\n"",
    ""answer"": ""[[\""asserts\"", \""trasses\""], [\""interlaces\"", \""linecaster\""], [\""laundries\"", \""undersail\""], [\""restocking\"", \""stockinger\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 782,
        ""words"": [
            ""stockinger"",
            ""restocking"",
            ""asserts"",
            ""trasses"",
            ""linecaster"",
            ""interlaces"",
            ""undersail"",
            ""laundries""
        ],
        ""solution"": [
            [
                ""asserts"",
                ""trasses""
            ],
            [
                ""interlaces"",
                ""linecaster""
            ],
            [
                ""laundries"",
                ""undersail""
            ],
            [
                ""restocking"",
                ""stockinger""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
783,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""scoff"", ""coffs"", ""agrionid"", ""radioing""]
","[[""agrionid"", ""radioing""], [""coffs"", ""scoff""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""scoff\"", \""coffs\"", \""agrionid\"", \""radioing\""]\n"",
    ""answer"": ""[[\""agrionid\"", \""radioing\""], [\""coffs\"", \""scoff\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 783,
        ""words"": [
            ""scoff"",
            ""coffs"",
            ""agrionid"",
            ""radioing""
        ],
        ""solution"": [
            [
                ""agrionid"",
                ""radioing""
            ],
            [
                ""coffs"",
                ""scoff""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
784,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""kathal"", ""khalat"", ""chromidae"", ""archidome"", ""threave"", ""thereva"", ""underbeat"", ""eburnated""]
","[[""archidome"", ""chromidae""], [""eburnated"", ""underbeat""], [""kathal"", ""khalat""], [""thereva"", ""threave""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""kathal\"", \""khalat\"", \""chromidae\"", \""archidome\"", \""threave\"", \""thereva\"", \""underbeat\"", \""eburnated\""]\n"",
    ""answer"": ""[[\""archidome\"", \""chromidae\""], [\""eburnated\"", \""underbeat\""], [\""kathal\"", \""khalat\""], [\""thereva\"", \""threave\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 784,
        ""words"": [
            ""kathal"",
            ""khalat"",
            ""chromidae"",
            ""archidome"",
            ""threave"",
            ""thereva"",
            ""underbeat"",
            ""eburnated""
        ],
        ""solution"": [
            [
                ""archidome"",
                ""chromidae""
            ],
            [
                ""eburnated"",
                ""underbeat""
            ],
            [
                ""kathal"",
                ""khalat""
            ],
            [
                ""thereva"",
                ""threave""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
785,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""keystoner"", ""keynoters"", ""stereometric"", ""crestmoreite"", ""deferment"", ""fermented"", ""riches"", ""shicer""]
","[[""crestmoreite"", ""stereometric""], [""deferment"", ""fermented""], [""keynoters"", ""keystoner""], [""riches"", ""shicer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""keystoner\"", \""keynoters\"", \""stereometric\"", \""crestmoreite\"", \""deferment\"", \""fermented\"", \""riches\"", \""shicer\""]\n"",
    ""answer"": ""[[\""crestmoreite\"", \""stereometric\""], [\""deferment\"", \""fermented\""], [\""keynoters\"", \""keystoner\""], [\""riches\"", \""shicer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 785,
        ""words"": [
            ""keystoner"",
            ""keynoters"",
            ""stereometric"",
            ""crestmoreite"",
            ""deferment"",
            ""fermented"",
            ""riches"",
            ""shicer""
        ],
        ""solution"": [
            [
                ""crestmoreite"",
                ""stereometric""
            ],
            [
                ""deferment"",
                ""fermented""
            ],
            [
                ""keynoters"",
                ""keystoner""
            ],
            [
                ""riches"",
                ""shicer""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
786,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""harass"", ""hassar"", ""sahras"", ""creolin"", ""licorne"", ""locrine"", ""raptores"", ""prorates"", ""praetors"", ""hangnail"", ""langhian"", ""forelive"", ""overfile"", ""rhodope"", ""redhoop"", ""psychopharmacology"", ""pharmacopsychology"", ""magnolias"", ""analogism"", ""naethings"", ""hastening""]
","[[""analogism"", ""magnolias""], [""creolin"", ""licorne"", ""locrine""], [""forelive"", ""overfile""], [""hangnail"", ""langhian""], [""harass"", ""hassar"", ""sahras""], [""hastening"", ""naethings""], [""pharmacopsychology"", ""psychopharmacology""], [""praetors"", ""prorates"", ""raptores""], [""redhoop"", ""rhodope""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""harass\"", \""hassar\"", \""sahras\"", \""creolin\"", \""licorne\"", \""locrine\"", \""raptores\"", \""prorates\"", \""praetors\"", \""hangnail\"", \""langhian\"", \""forelive\"", \""overfile\"", \""rhodope\"", \""redhoop\"", \""psychopharmacology\"", \""pharmacopsychology\"", \""magnolias\"", \""analogism\"", \""naethings\"", \""hastening\""]\n"",
    ""answer"": ""[[\""analogism\"", \""magnolias\""], [\""creolin\"", \""licorne\"", \""locrine\""], [\""forelive\"", \""overfile\""], [\""hangnail\"", \""langhian\""], [\""harass\"", \""hassar\"", \""sahras\""], [\""hastening\"", \""naethings\""], [\""pharmacopsychology\"", \""psychopharmacology\""], [\""praetors\"", \""prorates\"", \""raptores\""], [\""redhoop\"", \""rhodope\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 786,
        ""words"": [
            ""harass"",
            ""hassar"",
            ""sahras"",
            ""creolin"",
            ""licorne"",
            ""locrine"",
            ""raptores"",
            ""prorates"",
            ""praetors"",
            ""hangnail"",
            ""langhian"",
            ""forelive"",
            ""overfile"",
            ""rhodope"",
            ""redhoop"",
            ""psychopharmacology"",
            ""pharmacopsychology"",
            ""magnolias"",
            ""analogism"",
            ""naethings"",
            ""hastening""
        ],
        ""solution"": [
            [
                ""analogism"",
                ""magnolias""
            ],
            [
                ""creolin"",
                ""licorne"",
                ""locrine""
            ],
            [
                ""forelive"",
                ""overfile""
            ],
            [
                ""hangnail"",
                ""langhian""
            ],
            [
                ""harass"",
                ""hassar"",
                ""sahras""
            ],
            [
                ""hastening"",
                ""naethings""
            ],
            [
                ""pharmacopsychology"",
                ""psychopharmacology""
            ],
            [
                ""praetors"",
                ""prorates"",
                ""raptores""
            ],
            [
                ""redhoop"",
                ""rhodope""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
787,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""syllabi"", ""sibylla"", ""befile"", ""belief"", ""faretta"", ""atafter"", ""commaterial"", ""metacromial"", ""mounted"", ""demount"", ""taster"", ""testar"", ""stater"", ""strate"", ""snavel"", ""valens"", ""navels""]
","[[""atafter"", ""faretta""], [""befile"", ""belief""], [""commaterial"", ""metacromial""], [""demount"", ""mounted""], [""navels"", ""snavel"", ""valens""], [""sibylla"", ""syllabi""], [""stater"", ""strate"", ""taster"", ""testar""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""syllabi\"", \""sibylla\"", \""befile\"", \""belief\"", \""faretta\"", \""atafter\"", \""commaterial\"", \""metacromial\"", \""mounted\"", \""demount\"", \""taster\"", \""testar\"", \""stater\"", \""strate\"", \""snavel\"", \""valens\"", \""navels\""]\n"",
    ""answer"": ""[[\""atafter\"", \""faretta\""], [\""befile\"", \""belief\""], [\""commaterial\"", \""metacromial\""], [\""demount\"", \""mounted\""], [\""navels\"", \""snavel\"", \""valens\""], [\""sibylla\"", \""syllabi\""], [\""stater\"", \""strate\"", \""taster\"", \""testar\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 787,
        ""words"": [
            ""syllabi"",
            ""sibylla"",
            ""befile"",
            ""belief"",
            ""faretta"",
            ""atafter"",
            ""commaterial"",
            ""metacromial"",
            ""mounted"",
            ""demount"",
            ""taster"",
            ""testar"",
            ""stater"",
            ""strate"",
            ""snavel"",
            ""valens"",
            ""navels""
        ],
        ""solution"": [
            [
                ""atafter"",
                ""faretta""
            ],
            [
                ""befile"",
                ""belief""
            ],
            [
                ""commaterial"",
                ""metacromial""
            ],
            [
                ""demount"",
                ""mounted""
            ],
            [
                ""navels"",
                ""snavel"",
                ""valens""
            ],
            [
                ""sibylla"",
                ""syllabi""
            ],
            [
                ""stater"",
                ""strate"",
                ""taster"",
                ""testar""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
788,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""decimosexto"", ""sextodecimo"", ""wanely"", ""weanly"", ""grangerise"", ""regreasing"", ""frutage"", ""turfage"", ""ascrive"", ""varices"", ""viscera""]
","[[""ascrive"", ""varices"", ""viscera""], [""decimosexto"", ""sextodecimo""], [""frutage"", ""turfage""], [""grangerise"", ""regreasing""], [""wanely"", ""weanly""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""decimosexto\"", \""sextodecimo\"", \""wanely\"", \""weanly\"", \""grangerise\"", \""regreasing\"", \""frutage\"", \""turfage\"", \""ascrive\"", \""varices\"", \""viscera\""]\n"",
    ""answer"": ""[[\""ascrive\"", \""varices\"", \""viscera\""], [\""decimosexto\"", \""sextodecimo\""], [\""frutage\"", \""turfage\""], [\""grangerise\"", \""regreasing\""], [\""wanely\"", \""weanly\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 788,
        ""words"": [
            ""decimosexto"",
            ""sextodecimo"",
            ""wanely"",
            ""weanly"",
            ""grangerise"",
            ""regreasing"",
            ""frutage"",
            ""turfage"",
            ""ascrive"",
            ""varices"",
            ""viscera""
        ],
        ""solution"": [
            [
                ""ascrive"",
                ""varices"",
                ""viscera""
            ],
            [
                ""decimosexto"",
                ""sextodecimo""
            ],
            [
                ""frutage"",
                ""turfage""
            ],
            [
                ""grangerise"",
                ""regreasing""
            ],
            [
                ""wanely"",
                ""weanly""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
789,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pantometric"", ""copartiment"", ""pernoctation"", ""percontation"", ""retrade"", ""treader"", ""retread"", ""carlino"", ""clarion"", ""apanteles"", ""panetelas"", ""profiter"", ""portfire"", ""pertinacity"", ""antipyretic"", ""preyed"", ""dreepy"", ""lingster"", ""tinglers"", ""ringlets"", ""sterling""]
","[[""antipyretic"", ""pertinacity""], [""apanteles"", ""panetelas""], [""carlino"", ""clarion""], [""copartiment"", ""pantometric""], [""dreepy"", ""preyed""], [""lingster"", ""ringlets"", ""sterling"", ""tinglers""], [""percontation"", ""pernoctation""], [""portfire"", ""profiter""], [""retrade"", ""retread"", ""treader""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pantometric\"", \""copartiment\"", \""pernoctation\"", \""percontation\"", \""retrade\"", \""treader\"", \""retread\"", \""carlino\"", \""clarion\"", \""apanteles\"", \""panetelas\"", \""profiter\"", \""portfire\"", \""pertinacity\"", \""antipyretic\"", \""preyed\"", \""dreepy\"", \""lingster\"", \""tinglers\"", \""ringlets\"", \""sterling\""]\n"",
    ""answer"": ""[[\""antipyretic\"", \""pertinacity\""], [\""apanteles\"", \""panetelas\""], [\""carlino\"", \""clarion\""], [\""copartiment\"", \""pantometric\""], [\""dreepy\"", \""preyed\""], [\""lingster\"", \""ringlets\"", \""sterling\"", \""tinglers\""], [\""percontation\"", \""pernoctation\""], [\""portfire\"", \""profiter\""], [\""retrade\"", \""retread\"", \""treader\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 789,
        ""words"": [
            ""pantometric"",
            ""copartiment"",
            ""pernoctation"",
            ""percontation"",
            ""retrade"",
            ""treader"",
            ""retread"",
            ""carlino"",
            ""clarion"",
            ""apanteles"",
            ""panetelas"",
            ""profiter"",
            ""portfire"",
            ""pertinacity"",
            ""antipyretic"",
            ""preyed"",
            ""dreepy"",
            ""lingster"",
            ""tinglers"",
            ""ringlets"",
            ""sterling""
        ],
        ""solution"": [
            [
                ""antipyretic"",
                ""pertinacity""
            ],
            [
                ""apanteles"",
                ""panetelas""
            ],
            [
                ""carlino"",
                ""clarion""
            ],
            [
                ""copartiment"",
                ""pantometric""
            ],
            [
                ""dreepy"",
                ""preyed""
            ],
            [
                ""lingster"",
                ""ringlets"",
                ""sterling"",
                ""tinglers""
            ],
            [
                ""percontation"",
                ""pernoctation""
            ],
            [
                ""portfire"",
                ""profiter""
            ],
            [
                ""retrade"",
                ""retread"",
                ""treader""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
790,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sardonic"", ""draconis"", ""cruelty"", ""cutlery"", ""chambering"", ""becharming""]
","[[""becharming"", ""chambering""], [""cruelty"", ""cutlery""], [""draconis"", ""sardonic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sardonic\"", \""draconis\"", \""cruelty\"", \""cutlery\"", \""chambering\"", \""becharming\""]\n"",
    ""answer"": ""[[\""becharming\"", \""chambering\""], [\""cruelty\"", \""cutlery\""], [\""draconis\"", \""sardonic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 790,
        ""words"": [
            ""sardonic"",
            ""draconis"",
            ""cruelty"",
            ""cutlery"",
            ""chambering"",
            ""becharming""
        ],
        ""solution"": [
            [
                ""becharming"",
                ""chambering""
            ],
            [
                ""cruelty"",
                ""cutlery""
            ],
            [
                ""draconis"",
                ""sardonic""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
791,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""iterable"", ""liberate"", ""stardom"", ""tsardom"", ""vac"", ""cav"", ""beamy"", ""embay"", ""maybe"", ""stalker"", ""starkle"", ""sklater"", ""anticorn"", ""narcotin"", ""paulism"", ""simpula""]
","[[""anticorn"", ""narcotin""], [""beamy"", ""embay"", ""maybe""], [""cav"", ""vac""], [""iterable"", ""liberate""], [""paulism"", ""simpula""], [""sklater"", ""stalker"", ""starkle""], [""stardom"", ""tsardom""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""iterable\"", \""liberate\"", \""stardom\"", \""tsardom\"", \""vac\"", \""cav\"", \""beamy\"", \""embay\"", \""maybe\"", \""stalker\"", \""starkle\"", \""sklater\"", \""anticorn\"", \""narcotin\"", \""paulism\"", \""simpula\""]\n"",
    ""answer"": ""[[\""anticorn\"", \""narcotin\""], [\""beamy\"", \""embay\"", \""maybe\""], [\""cav\"", \""vac\""], [\""iterable\"", \""liberate\""], [\""paulism\"", \""simpula\""], [\""sklater\"", \""stalker\"", \""starkle\""], [\""stardom\"", \""tsardom\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 791,
        ""words"": [
            ""iterable"",
            ""liberate"",
            ""stardom"",
            ""tsardom"",
            ""vac"",
            ""cav"",
            ""beamy"",
            ""embay"",
            ""maybe"",
            ""stalker"",
            ""starkle"",
            ""sklater"",
            ""anticorn"",
            ""narcotin"",
            ""paulism"",
            ""simpula""
        ],
        ""solution"": [
            [
                ""anticorn"",
                ""narcotin""
            ],
            [
                ""beamy"",
                ""embay"",
                ""maybe""
            ],
            [
                ""cav"",
                ""vac""
            ],
            [
                ""iterable"",
                ""liberate""
            ],
            [
                ""paulism"",
                ""simpula""
            ],
            [
                ""sklater"",
                ""stalker"",
                ""starkle""
            ],
            [
                ""stardom"",
                ""tsardom""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
792,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hernial"", ""inhaler"", ""delignate"", ""gelatined"", ""amiable"", ""aimable"", ""amabile"", ""brabbles"", ""blabbers"", ""babblers""]
","[[""aimable"", ""amabile"", ""amiable""], [""babblers"", ""blabbers"", ""brabbles""], [""delignate"", ""gelatined""], [""hernial"", ""inhaler""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hernial\"", \""inhaler\"", \""delignate\"", \""gelatined\"", \""amiable\"", \""aimable\"", \""amabile\"", \""brabbles\"", \""blabbers\"", \""babblers\""]\n"",
    ""answer"": ""[[\""aimable\"", \""amabile\"", \""amiable\""], [\""babblers\"", \""blabbers\"", \""brabbles\""], [\""delignate\"", \""gelatined\""], [\""hernial\"", \""inhaler\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 792,
        ""words"": [
            ""hernial"",
            ""inhaler"",
            ""delignate"",
            ""gelatined"",
            ""amiable"",
            ""aimable"",
            ""amabile"",
            ""brabbles"",
            ""blabbers"",
            ""babblers""
        ],
        ""solution"": [
            [
                ""aimable"",
                ""amabile"",
                ""amiable""
            ],
            [
                ""babblers"",
                ""blabbers"",
                ""brabbles""
            ],
            [
                ""delignate"",
                ""gelatined""
            ],
            [
                ""hernial"",
                ""inhaler""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
793,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""litigants"", ""stingtail"", ""overspill"", ""spillover"", ""tragicomedy"", ""comitragedy"", ""upsmite"", ""impetus"", ""uptimes"", ""imputes"", ""prongs"", ""sprong"", ""tophus"", ""upshot""]
","[[""comitragedy"", ""tragicomedy""], [""impetus"", ""imputes"", ""upsmite"", ""uptimes""], [""litigants"", ""stingtail""], [""overspill"", ""spillover""], [""prongs"", ""sprong""], [""tophus"", ""upshot""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""litigants\"", \""stingtail\"", \""overspill\"", \""spillover\"", \""tragicomedy\"", \""comitragedy\"", \""upsmite\"", \""impetus\"", \""uptimes\"", \""imputes\"", \""prongs\"", \""sprong\"", \""tophus\"", \""upshot\""]\n"",
    ""answer"": ""[[\""comitragedy\"", \""tragicomedy\""], [\""impetus\"", \""imputes\"", \""upsmite\"", \""uptimes\""], [\""litigants\"", \""stingtail\""], [\""overspill\"", \""spillover\""], [\""prongs\"", \""sprong\""], [\""tophus\"", \""upshot\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 793,
        ""words"": [
            ""litigants"",
            ""stingtail"",
            ""overspill"",
            ""spillover"",
            ""tragicomedy"",
            ""comitragedy"",
            ""upsmite"",
            ""impetus"",
            ""uptimes"",
            ""imputes"",
            ""prongs"",
            ""sprong"",
            ""tophus"",
            ""upshot""
        ],
        ""solution"": [
            [
                ""comitragedy"",
                ""tragicomedy""
            ],
            [
                ""impetus"",
                ""imputes"",
                ""upsmite"",
                ""uptimes""
            ],
            [
                ""litigants"",
                ""stingtail""
            ],
            [
                ""overspill"",
                ""spillover""
            ],
            [
                ""prongs"",
                ""sprong""
            ],
            [
                ""tophus"",
                ""upshot""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
794,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pretors"", ""reports"", ""strepor"", ""liminess"", ""senilism"", ""chakobu"", ""chabouk"", ""foolship"", ""fishpool"", ""denies"", ""seined"", ""dienes"", ""tonite"", ""tiento"", ""vagas"", ""avgas"", ""boracite"", ""boarcite"", ""labridae"", ""radiable"", ""arnica"", ""acinar"", ""crania"", ""carian"", ""canari""]
","[[""acinar"", ""arnica"", ""canari"", ""carian"", ""crania""], [""avgas"", ""vagas""], [""boarcite"", ""boracite""], [""chabouk"", ""chakobu""], [""denies"", ""dienes"", ""seined""], [""fishpool"", ""foolship""], [""labridae"", ""radiable""], [""liminess"", ""senilism""], [""pretors"", ""reports"", ""strepor""], [""tiento"", ""tonite""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pretors\"", \""reports\"", \""strepor\"", \""liminess\"", \""senilism\"", \""chakobu\"", \""chabouk\"", \""foolship\"", \""fishpool\"", \""denies\"", \""seined\"", \""dienes\"", \""tonite\"", \""tiento\"", \""vagas\"", \""avgas\"", \""boracite\"", \""boarcite\"", \""labridae\"", \""radiable\"", \""arnica\"", \""acinar\"", \""crania\"", \""carian\"", \""canari\""]\n"",
    ""answer"": ""[[\""acinar\"", \""arnica\"", \""canari\"", \""carian\"", \""crania\""], [\""avgas\"", \""vagas\""], [\""boarcite\"", \""boracite\""], [\""chabouk\"", \""chakobu\""], [\""denies\"", \""dienes\"", \""seined\""], [\""fishpool\"", \""foolship\""], [\""labridae\"", \""radiable\""], [\""liminess\"", \""senilism\""], [\""pretors\"", \""reports\"", \""strepor\""], [\""tiento\"", \""tonite\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 794,
        ""words"": [
            ""pretors"",
            ""reports"",
            ""strepor"",
            ""liminess"",
            ""senilism"",
            ""chakobu"",
            ""chabouk"",
            ""foolship"",
            ""fishpool"",
            ""denies"",
            ""seined"",
            ""dienes"",
            ""tonite"",
            ""tiento"",
            ""vagas"",
            ""avgas"",
            ""boracite"",
            ""boarcite"",
            ""labridae"",
            ""radiable"",
            ""arnica"",
            ""acinar"",
            ""crania"",
            ""carian"",
            ""canari""
        ],
        ""solution"": [
            [
                ""acinar"",
                ""arnica"",
                ""canari"",
                ""carian"",
                ""crania""
            ],
            [
                ""avgas"",
                ""vagas""
            ],
            [
                ""boarcite"",
                ""boracite""
            ],
            [
                ""chabouk"",
                ""chakobu""
            ],
            [
                ""denies"",
                ""dienes"",
                ""seined""
            ],
            [
                ""fishpool"",
                ""foolship""
            ],
            [
                ""labridae"",
                ""radiable""
            ],
            [
                ""liminess"",
                ""senilism""
            ],
            [
                ""pretors"",
                ""reports"",
                ""strepor""
            ],
            [
                ""tiento"",
                ""tonite""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
795,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""retelegraph"", ""telegrapher"", ""coolingly"", ""clinology"", ""rafters"", ""fraters"", ""khila"", ""kilah"", ""maral"", ""marla"", ""alarm"", ""ramal"", ""malar"", ""guilts"", ""gulist"", ""funders"", ""refunds""]
","[[""alarm"", ""malar"", ""maral"", ""marla"", ""ramal""], [""clinology"", ""coolingly""], [""fraters"", ""rafters""], [""funders"", ""refunds""], [""guilts"", ""gulist""], [""khila"", ""kilah""], [""retelegraph"", ""telegrapher""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""retelegraph\"", \""telegrapher\"", \""coolingly\"", \""clinology\"", \""rafters\"", \""fraters\"", \""khila\"", \""kilah\"", \""maral\"", \""marla\"", \""alarm\"", \""ramal\"", \""malar\"", \""guilts\"", \""gulist\"", \""funders\"", \""refunds\""]\n"",
    ""answer"": ""[[\""alarm\"", \""malar\"", \""maral\"", \""marla\"", \""ramal\""], [\""clinology\"", \""coolingly\""], [\""fraters\"", \""rafters\""], [\""funders\"", \""refunds\""], [\""guilts\"", \""gulist\""], [\""khila\"", \""kilah\""], [\""retelegraph\"", \""telegrapher\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 795,
        ""words"": [
            ""retelegraph"",
            ""telegrapher"",
            ""coolingly"",
            ""clinology"",
            ""rafters"",
            ""fraters"",
            ""khila"",
            ""kilah"",
            ""maral"",
            ""marla"",
            ""alarm"",
            ""ramal"",
            ""malar"",
            ""guilts"",
            ""gulist"",
            ""funders"",
            ""refunds""
        ],
        ""solution"": [
            [
                ""alarm"",
                ""malar"",
                ""maral"",
                ""marla"",
                ""ramal""
            ],
            [
                ""clinology"",
                ""coolingly""
            ],
            [
                ""fraters"",
                ""rafters""
            ],
            [
                ""funders"",
                ""refunds""
            ],
            [
                ""guilts"",
                ""gulist""
            ],
            [
                ""khila"",
                ""kilah""
            ],
            [
                ""retelegraph"",
                ""telegrapher""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
796,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""setbacks"", ""backsets"", ""papion"", ""oppian"", ""popian"", ""anecdotic"", ""incoacted"", ""carnations"", ""sanctorian"", ""reimport"", ""promerit"", ""importer""]
","[[""anecdotic"", ""incoacted""], [""backsets"", ""setbacks""], [""carnations"", ""sanctorian""], [""importer"", ""promerit"", ""reimport""], [""oppian"", ""papion"", ""popian""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""setbacks\"", \""backsets\"", \""papion\"", \""oppian\"", \""popian\"", \""anecdotic\"", \""incoacted\"", \""carnations\"", \""sanctorian\"", \""reimport\"", \""promerit\"", \""importer\""]\n"",
    ""answer"": ""[[\""anecdotic\"", \""incoacted\""], [\""backsets\"", \""setbacks\""], [\""carnations\"", \""sanctorian\""], [\""importer\"", \""promerit\"", \""reimport\""], [\""oppian\"", \""papion\"", \""popian\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 796,
        ""words"": [
            ""setbacks"",
            ""backsets"",
            ""papion"",
            ""oppian"",
            ""popian"",
            ""anecdotic"",
            ""incoacted"",
            ""carnations"",
            ""sanctorian"",
            ""reimport"",
            ""promerit"",
            ""importer""
        ],
        ""solution"": [
            [
                ""anecdotic"",
                ""incoacted""
            ],
            [
                ""backsets"",
                ""setbacks""
            ],
            [
                ""carnations"",
                ""sanctorian""
            ],
            [
                ""importer"",
                ""promerit"",
                ""reimport""
            ],
            [
                ""oppian"",
                ""papion"",
                ""popian""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
797,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reconnects"", ""connecters"", ""ife"", ""fei"", ""fie"", ""sonant"", ""santon"", ""stanno"", ""bondages"", ""dogbanes"", ""straiten"", ""intreats"", ""nitrates"", ""tertians""]
","[[""bondages"", ""dogbanes""], [""connecters"", ""reconnects""], [""fei"", ""fie"", ""ife""], [""intreats"", ""nitrates"", ""straiten"", ""tertians""], [""santon"", ""sonant"", ""stanno""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reconnects\"", \""connecters\"", \""ife\"", \""fei\"", \""fie\"", \""sonant\"", \""santon\"", \""stanno\"", \""bondages\"", \""dogbanes\"", \""straiten\"", \""intreats\"", \""nitrates\"", \""tertians\""]\n"",
    ""answer"": ""[[\""bondages\"", \""dogbanes\""], [\""connecters\"", \""reconnects\""], [\""fei\"", \""fie\"", \""ife\""], [\""intreats\"", \""nitrates\"", \""straiten\"", \""tertians\""], [\""santon\"", \""sonant\"", \""stanno\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 797,
        ""words"": [
            ""reconnects"",
            ""connecters"",
            ""ife"",
            ""fei"",
            ""fie"",
            ""sonant"",
            ""santon"",
            ""stanno"",
            ""bondages"",
            ""dogbanes"",
            ""straiten"",
            ""intreats"",
            ""nitrates"",
            ""tertians""
        ],
        ""solution"": [
            [
                ""bondages"",
                ""dogbanes""
            ],
            [
                ""connecters"",
                ""reconnects""
            ],
            [
                ""fei"",
                ""fie"",
                ""ife""
            ],
            [
                ""intreats"",
                ""nitrates"",
                ""straiten"",
                ""tertians""
            ],
            [
                ""santon"",
                ""sonant"",
                ""stanno""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
798,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""oilmen"", ""moline"", ""peridentium"", ""premutinied"", ""trac"", ""cart""]
","[[""cart"", ""trac""], [""moline"", ""oilmen""], [""peridentium"", ""premutinied""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""oilmen\"", \""moline\"", \""peridentium\"", \""premutinied\"", \""trac\"", \""cart\""]\n"",
    ""answer"": ""[[\""cart\"", \""trac\""], [\""moline\"", \""oilmen\""], [\""peridentium\"", \""premutinied\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 798,
        ""words"": [
            ""oilmen"",
            ""moline"",
            ""peridentium"",
            ""premutinied"",
            ""trac"",
            ""cart""
        ],
        ""solution"": [
            [
                ""cart"",
                ""trac""
            ],
            [
                ""moline"",
                ""oilmen""
            ],
            [
                ""peridentium"",
                ""premutinied""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
799,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""defilers"", ""fielders"", ""unsame"", ""unseam"", ""grand"", ""drang"", ""reply"", ""plyer""]
","[[""defilers"", ""fielders""], [""drang"", ""grand""], [""plyer"", ""reply""], [""unsame"", ""unseam""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""defilers\"", \""fielders\"", \""unsame\"", \""unseam\"", \""grand\"", \""drang\"", \""reply\"", \""plyer\""]\n"",
    ""answer"": ""[[\""defilers\"", \""fielders\""], [\""drang\"", \""grand\""], [\""plyer\"", \""reply\""], [\""unsame\"", \""unseam\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 799,
        ""words"": [
            ""defilers"",
            ""fielders"",
            ""unsame"",
            ""unseam"",
            ""grand"",
            ""drang"",
            ""reply"",
            ""plyer""
        ],
        ""solution"": [
            [
                ""defilers"",
                ""fielders""
            ],
            [
                ""drang"",
                ""grand""
            ],
            [
                ""plyer"",
                ""reply""
            ],
            [
                ""unsame"",
                ""unseam""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
800,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""dashing"", ""shading"", ""gent"", ""teng"", ""outray"", ""yaourt"", ""underward"", ""underdraw"", ""tarasc"", ""carats"", ""castra"", ""laddies"", ""dislade"", ""kashan"", ""sankha"", ""diosmose"", ""sodomies"", ""preinduce"", ""unpierced"", ""pipistrel"", ""rippliest""]
","[[""carats"", ""castra"", ""tarasc""], [""dashing"", ""shading""], [""diosmose"", ""sodomies""], [""dislade"", ""laddies""], [""gent"", ""teng""], [""kashan"", ""sankha""], [""outray"", ""yaourt""], [""pipistrel"", ""rippliest""], [""preinduce"", ""unpierced""], [""underdraw"", ""underward""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""dashing\"", \""shading\"", \""gent\"", \""teng\"", \""outray\"", \""yaourt\"", \""underward\"", \""underdraw\"", \""tarasc\"", \""carats\"", \""castra\"", \""laddies\"", \""dislade\"", \""kashan\"", \""sankha\"", \""diosmose\"", \""sodomies\"", \""preinduce\"", \""unpierced\"", \""pipistrel\"", \""rippliest\""]\n"",
    ""answer"": ""[[\""carats\"", \""castra\"", \""tarasc\""], [\""dashing\"", \""shading\""], [\""diosmose\"", \""sodomies\""], [\""dislade\"", \""laddies\""], [\""gent\"", \""teng\""], [\""kashan\"", \""sankha\""], [\""outray\"", \""yaourt\""], [\""pipistrel\"", \""rippliest\""], [\""preinduce\"", \""unpierced\""], [\""underdraw\"", \""underward\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 800,
        ""words"": [
            ""dashing"",
            ""shading"",
            ""gent"",
            ""teng"",
            ""outray"",
            ""yaourt"",
            ""underward"",
            ""underdraw"",
            ""tarasc"",
            ""carats"",
            ""castra"",
            ""laddies"",
            ""dislade"",
            ""kashan"",
            ""sankha"",
            ""diosmose"",
            ""sodomies"",
            ""preinduce"",
            ""unpierced"",
            ""pipistrel"",
            ""rippliest""
        ],
        ""solution"": [
            [
                ""carats"",
                ""castra"",
                ""tarasc""
            ],
            [
                ""dashing"",
                ""shading""
            ],
            [
                ""diosmose"",
                ""sodomies""
            ],
            [
                ""dislade"",
                ""laddies""
            ],
            [
                ""gent"",
                ""teng""
            ],
            [
                ""kashan"",
                ""sankha""
            ],
            [
                ""outray"",
                ""yaourt""
            ],
            [
                ""pipistrel"",
                ""rippliest""
            ],
            [
                ""preinduce"",
                ""unpierced""
            ],
            [
                ""underdraw"",
                ""underward""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
801,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unarticled"", ""denticular"", ""untidier"", ""indurite"", ""belletrist"", ""belittlers"", ""arcuale"", ""caurale"", ""optimeter"", ""pitometer"", ""tannogallate"", ""gallotannate""]
","[[""arcuale"", ""caurale""], [""belittlers"", ""belletrist""], [""denticular"", ""unarticled""], [""gallotannate"", ""tannogallate""], [""indurite"", ""untidier""], [""optimeter"", ""pitometer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unarticled\"", \""denticular\"", \""untidier\"", \""indurite\"", \""belletrist\"", \""belittlers\"", \""arcuale\"", \""caurale\"", \""optimeter\"", \""pitometer\"", \""tannogallate\"", \""gallotannate\""]\n"",
    ""answer"": ""[[\""arcuale\"", \""caurale\""], [\""belittlers\"", \""belletrist\""], [\""denticular\"", \""unarticled\""], [\""gallotannate\"", \""tannogallate\""], [\""indurite\"", \""untidier\""], [\""optimeter\"", \""pitometer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 801,
        ""words"": [
            ""unarticled"",
            ""denticular"",
            ""untidier"",
            ""indurite"",
            ""belletrist"",
            ""belittlers"",
            ""arcuale"",
            ""caurale"",
            ""optimeter"",
            ""pitometer"",
            ""tannogallate"",
            ""gallotannate""
        ],
        ""solution"": [
            [
                ""arcuale"",
                ""caurale""
            ],
            [
                ""belittlers"",
                ""belletrist""
            ],
            [
                ""denticular"",
                ""unarticled""
            ],
            [
                ""gallotannate"",
                ""tannogallate""
            ],
            [
                ""indurite"",
                ""untidier""
            ],
            [
                ""optimeter"",
                ""pitometer""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
802,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unnet"", ""tennu"", ""botryomyces"", ""botrycymose"", ""colonaded"", ""canoodled"", ""nandi"", ""indan"", ""boti"", ""obit"", ""bito"", ""horsetown"", ""honeworts""]
","[[""bito"", ""boti"", ""obit""], [""botrycymose"", ""botryomyces""], [""canoodled"", ""colonaded""], [""honeworts"", ""horsetown""], [""indan"", ""nandi""], [""tennu"", ""unnet""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unnet\"", \""tennu\"", \""botryomyces\"", \""botrycymose\"", \""colonaded\"", \""canoodled\"", \""nandi\"", \""indan\"", \""boti\"", \""obit\"", \""bito\"", \""horsetown\"", \""honeworts\""]\n"",
    ""answer"": ""[[\""bito\"", \""boti\"", \""obit\""], [\""botrycymose\"", \""botryomyces\""], [\""canoodled\"", \""colonaded\""], [\""honeworts\"", \""horsetown\""], [\""indan\"", \""nandi\""], [\""tennu\"", \""unnet\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 802,
        ""words"": [
            ""unnet"",
            ""tennu"",
            ""botryomyces"",
            ""botrycymose"",
            ""colonaded"",
            ""canoodled"",
            ""nandi"",
            ""indan"",
            ""boti"",
            ""obit"",
            ""bito"",
            ""horsetown"",
            ""honeworts""
        ],
        ""solution"": [
            [
                ""bito"",
                ""boti"",
                ""obit""
            ],
            [
                ""botrycymose"",
                ""botryomyces""
            ],
            [
                ""canoodled"",
                ""colonaded""
            ],
            [
                ""honeworts"",
                ""horsetown""
            ],
            [
                ""indan"",
                ""nandi""
            ],
            [
                ""tennu"",
                ""unnet""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
803,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""matreed"", ""determa"", ""arshin"", ""shairn"", ""myctodera"", ""radectomy"", ""leaving"", ""vangeli"", ""vealing"", ""dawn"", ""wand""]
","[[""arshin"", ""shairn""], [""dawn"", ""wand""], [""determa"", ""matreed""], [""leaving"", ""vangeli"", ""vealing""], [""myctodera"", ""radectomy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""matreed\"", \""determa\"", \""arshin\"", \""shairn\"", \""myctodera\"", \""radectomy\"", \""leaving\"", \""vangeli\"", \""vealing\"", \""dawn\"", \""wand\""]\n"",
    ""answer"": ""[[\""arshin\"", \""shairn\""], [\""dawn\"", \""wand\""], [\""determa\"", \""matreed\""], [\""leaving\"", \""vangeli\"", \""vealing\""], [\""myctodera\"", \""radectomy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 803,
        ""words"": [
            ""matreed"",
            ""determa"",
            ""arshin"",
            ""shairn"",
            ""myctodera"",
            ""radectomy"",
            ""leaving"",
            ""vangeli"",
            ""vealing"",
            ""dawn"",
            ""wand""
        ],
        ""solution"": [
            [
                ""arshin"",
                ""shairn""
            ],
            [
                ""dawn"",
                ""wand""
            ],
            [
                ""determa"",
                ""matreed""
            ],
            [
                ""leaving"",
                ""vangeli"",
                ""vealing""
            ],
            [
                ""myctodera"",
                ""radectomy""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
804,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""acrosomes"", ""sarcosome"", ""howlet"", ""thowel"", ""mucor"", ""mucro"", ""undefinability"", ""unidentifiably"", ""limoid"", ""modili"", ""muscinae"", ""semuncia"", ""arba"", ""bara"", ""acholia"", ""alochia""]
","[[""acholia"", ""alochia""], [""acrosomes"", ""sarcosome""], [""arba"", ""bara""], [""howlet"", ""thowel""], [""limoid"", ""modili""], [""mucor"", ""mucro""], [""muscinae"", ""semuncia""], [""undefinability"", ""unidentifiably""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""acrosomes\"", \""sarcosome\"", \""howlet\"", \""thowel\"", \""mucor\"", \""mucro\"", \""undefinability\"", \""unidentifiably\"", \""limoid\"", \""modili\"", \""muscinae\"", \""semuncia\"", \""arba\"", \""bara\"", \""acholia\"", \""alochia\""]\n"",
    ""answer"": ""[[\""acholia\"", \""alochia\""], [\""acrosomes\"", \""sarcosome\""], [\""arba\"", \""bara\""], [\""howlet\"", \""thowel\""], [\""limoid\"", \""modili\""], [\""mucor\"", \""mucro\""], [\""muscinae\"", \""semuncia\""], [\""undefinability\"", \""unidentifiably\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 804,
        ""words"": [
            ""acrosomes"",
            ""sarcosome"",
            ""howlet"",
            ""thowel"",
            ""mucor"",
            ""mucro"",
            ""undefinability"",
            ""unidentifiably"",
            ""limoid"",
            ""modili"",
            ""muscinae"",
            ""semuncia"",
            ""arba"",
            ""bara"",
            ""acholia"",
            ""alochia""
        ],
        ""solution"": [
            [
                ""acholia"",
                ""alochia""
            ],
            [
                ""acrosomes"",
                ""sarcosome""
            ],
            [
                ""arba"",
                ""bara""
            ],
            [
                ""howlet"",
                ""thowel""
            ],
            [
                ""limoid"",
                ""modili""
            ],
            [
                ""mucor"",
                ""mucro""
            ],
            [
                ""muscinae"",
                ""semuncia""
            ],
            [
                ""undefinability"",
                ""unidentifiably""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
805,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""chenille"", ""hellenic"", ""sope"", ""epos"", ""pose"", ""opes"", ""peso"", ""duramater"", ""armatured"", ""raisable"", ""rabelais"", ""indurite"", ""untidier"", ""channeler"", ""rechannel"", ""infra"", ""irfan"", ""vers"", ""serv"", ""revs"", ""atropisms"", ""pastromis"", ""centuples"", ""stepuncle""]
","[[""armatured"", ""duramater""], [""atropisms"", ""pastromis""], [""centuples"", ""stepuncle""], [""channeler"", ""rechannel""], [""chenille"", ""hellenic""], [""epos"", ""opes"", ""peso"", ""pose"", ""sope""], [""indurite"", ""untidier""], [""infra"", ""irfan""], [""rabelais"", ""raisable""], [""revs"", ""serv"", ""vers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""chenille\"", \""hellenic\"", \""sope\"", \""epos\"", \""pose\"", \""opes\"", \""peso\"", \""duramater\"", \""armatured\"", \""raisable\"", \""rabelais\"", \""indurite\"", \""untidier\"", \""channeler\"", \""rechannel\"", \""infra\"", \""irfan\"", \""vers\"", \""serv\"", \""revs\"", \""atropisms\"", \""pastromis\"", \""centuples\"", \""stepuncle\""]\n"",
    ""answer"": ""[[\""armatured\"", \""duramater\""], [\""atropisms\"", \""pastromis\""], [\""centuples\"", \""stepuncle\""], [\""channeler\"", \""rechannel\""], [\""chenille\"", \""hellenic\""], [\""epos\"", \""opes\"", \""peso\"", \""pose\"", \""sope\""], [\""indurite\"", \""untidier\""], [\""infra\"", \""irfan\""], [\""rabelais\"", \""raisable\""], [\""revs\"", \""serv\"", \""vers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 805,
        ""words"": [
            ""chenille"",
            ""hellenic"",
            ""sope"",
            ""epos"",
            ""pose"",
            ""opes"",
            ""peso"",
            ""duramater"",
            ""armatured"",
            ""raisable"",
            ""rabelais"",
            ""indurite"",
            ""untidier"",
            ""channeler"",
            ""rechannel"",
            ""infra"",
            ""irfan"",
            ""vers"",
            ""serv"",
            ""revs"",
            ""atropisms"",
            ""pastromis"",
            ""centuples"",
            ""stepuncle""
        ],
        ""solution"": [
            [
                ""armatured"",
                ""duramater""
            ],
            [
                ""atropisms"",
                ""pastromis""
            ],
            [
                ""centuples"",
                ""stepuncle""
            ],
            [
                ""channeler"",
                ""rechannel""
            ],
            [
                ""chenille"",
                ""hellenic""
            ],
            [
                ""epos"",
                ""opes"",
                ""peso"",
                ""pose"",
                ""sope""
            ],
            [
                ""indurite"",
                ""untidier""
            ],
            [
                ""infra"",
                ""irfan""
            ],
            [
                ""rabelais"",
                ""raisable""
            ],
            [
                ""revs"",
                ""serv"",
                ""vers""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
806,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nuisancer"", ""insurance"", ""recrown"", ""crowner"", ""landsleit"", ""installed"", ""nepote"", ""poteen"", ""reeky"", ""rekey"", ""sonnetwise"", ""swinestone"", ""cnemial"", ""melanic"", ""anatira"", ""tariana"", ""glauber"", ""guberla"", ""kernite"", ""entrike""]
","[[""anatira"", ""tariana""], [""cnemial"", ""melanic""], [""crowner"", ""recrown""], [""entrike"", ""kernite""], [""glauber"", ""guberla""], [""installed"", ""landsleit""], [""insurance"", ""nuisancer""], [""nepote"", ""poteen""], [""reeky"", ""rekey""], [""sonnetwise"", ""swinestone""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nuisancer\"", \""insurance\"", \""recrown\"", \""crowner\"", \""landsleit\"", \""installed\"", \""nepote\"", \""poteen\"", \""reeky\"", \""rekey\"", \""sonnetwise\"", \""swinestone\"", \""cnemial\"", \""melanic\"", \""anatira\"", \""tariana\"", \""glauber\"", \""guberla\"", \""kernite\"", \""entrike\""]\n"",
    ""answer"": ""[[\""anatira\"", \""tariana\""], [\""cnemial\"", \""melanic\""], [\""crowner\"", \""recrown\""], [\""entrike\"", \""kernite\""], [\""glauber\"", \""guberla\""], [\""installed\"", \""landsleit\""], [\""insurance\"", \""nuisancer\""], [\""nepote\"", \""poteen\""], [\""reeky\"", \""rekey\""], [\""sonnetwise\"", \""swinestone\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 806,
        ""words"": [
            ""nuisancer"",
            ""insurance"",
            ""recrown"",
            ""crowner"",
            ""landsleit"",
            ""installed"",
            ""nepote"",
            ""poteen"",
            ""reeky"",
            ""rekey"",
            ""sonnetwise"",
            ""swinestone"",
            ""cnemial"",
            ""melanic"",
            ""anatira"",
            ""tariana"",
            ""glauber"",
            ""guberla"",
            ""kernite"",
            ""entrike""
        ],
        ""solution"": [
            [
                ""anatira"",
                ""tariana""
            ],
            [
                ""cnemial"",
                ""melanic""
            ],
            [
                ""crowner"",
                ""recrown""
            ],
            [
                ""entrike"",
                ""kernite""
            ],
            [
                ""glauber"",
                ""guberla""
            ],
            [
                ""installed"",
                ""landsleit""
            ],
            [
                ""insurance"",
                ""nuisancer""
            ],
            [
                ""nepote"",
                ""poteen""
            ],
            [
                ""reeky"",
                ""rekey""
            ],
            [
                ""sonnetwise"",
                ""swinestone""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
807,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ruinating"", ""urinating"", ""cleanout"", ""outlance"", ""ligulas"", ""lugsail""]
","[[""cleanout"", ""outlance""], [""ligulas"", ""lugsail""], [""ruinating"", ""urinating""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ruinating\"", \""urinating\"", \""cleanout\"", \""outlance\"", \""ligulas\"", \""lugsail\""]\n"",
    ""answer"": ""[[\""cleanout\"", \""outlance\""], [\""ligulas\"", \""lugsail\""], [\""ruinating\"", \""urinating\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 807,
        ""words"": [
            ""ruinating"",
            ""urinating"",
            ""cleanout"",
            ""outlance"",
            ""ligulas"",
            ""lugsail""
        ],
        ""solution"": [
            [
                ""cleanout"",
                ""outlance""
            ],
            [
                ""ligulas"",
                ""lugsail""
            ],
            [
                ""ruinating"",
                ""urinating""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
808,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""untastable"", ""unstatable"", ""early"", ""leary"", ""layer"", ""nonhematic"", ""ethnomanic"", ""rachiodynia"", ""hyracoidian"", ""scrutable"", ""subrectal""]
","[[""early"", ""layer"", ""leary""], [""ethnomanic"", ""nonhematic""], [""hyracoidian"", ""rachiodynia""], [""scrutable"", ""subrectal""], [""unstatable"", ""untastable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""untastable\"", \""unstatable\"", \""early\"", \""leary\"", \""layer\"", \""nonhematic\"", \""ethnomanic\"", \""rachiodynia\"", \""hyracoidian\"", \""scrutable\"", \""subrectal\""]\n"",
    ""answer"": ""[[\""early\"", \""layer\"", \""leary\""], [\""ethnomanic\"", \""nonhematic\""], [\""hyracoidian\"", \""rachiodynia\""], [\""scrutable\"", \""subrectal\""], [\""unstatable\"", \""untastable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 808,
        ""words"": [
            ""untastable"",
            ""unstatable"",
            ""early"",
            ""leary"",
            ""layer"",
            ""nonhematic"",
            ""ethnomanic"",
            ""rachiodynia"",
            ""hyracoidian"",
            ""scrutable"",
            ""subrectal""
        ],
        ""solution"": [
            [
                ""early"",
                ""layer"",
                ""leary""
            ],
            [
                ""ethnomanic"",
                ""nonhematic""
            ],
            [
                ""hyracoidian"",
                ""rachiodynia""
            ],
            [
                ""scrutable"",
                ""subrectal""
            ],
            [
                ""unstatable"",
                ""untastable""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
809,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""haltica"", ""calathi"", ""reimprison"", ""imprisoner"", ""vepse"", ""veeps"", ""cagers"", ""graces"", ""gulpers"", ""splurge"", ""underbids"", ""disburden"", ""polenta"", ""nepotal"", ""petalon"", ""wormer"", ""merrow""]
","[[""cagers"", ""graces""], [""calathi"", ""haltica""], [""disburden"", ""underbids""], [""gulpers"", ""splurge""], [""imprisoner"", ""reimprison""], [""merrow"", ""wormer""], [""nepotal"", ""petalon"", ""polenta""], [""veeps"", ""vepse""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""haltica\"", \""calathi\"", \""reimprison\"", \""imprisoner\"", \""vepse\"", \""veeps\"", \""cagers\"", \""graces\"", \""gulpers\"", \""splurge\"", \""underbids\"", \""disburden\"", \""polenta\"", \""nepotal\"", \""petalon\"", \""wormer\"", \""merrow\""]\n"",
    ""answer"": ""[[\""cagers\"", \""graces\""], [\""calathi\"", \""haltica\""], [\""disburden\"", \""underbids\""], [\""gulpers\"", \""splurge\""], [\""imprisoner\"", \""reimprison\""], [\""merrow\"", \""wormer\""], [\""nepotal\"", \""petalon\"", \""polenta\""], [\""veeps\"", \""vepse\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 809,
        ""words"": [
            ""haltica"",
            ""calathi"",
            ""reimprison"",
            ""imprisoner"",
            ""vepse"",
            ""veeps"",
            ""cagers"",
            ""graces"",
            ""gulpers"",
            ""splurge"",
            ""underbids"",
            ""disburden"",
            ""polenta"",
            ""nepotal"",
            ""petalon"",
            ""wormer"",
            ""merrow""
        ],
        ""solution"": [
            [
                ""cagers"",
                ""graces""
            ],
            [
                ""calathi"",
                ""haltica""
            ],
            [
                ""disburden"",
                ""underbids""
            ],
            [
                ""gulpers"",
                ""splurge""
            ],
            [
                ""imprisoner"",
                ""reimprison""
            ],
            [
                ""merrow"",
                ""wormer""
            ],
            [
                ""nepotal"",
                ""petalon"",
                ""polenta""
            ],
            [
                ""veeps"",
                ""vepse""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
810,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""psf"", ""fps"", ""besayle"", ""seeably"", ""yarth"", ""rhyta""]
","[[""besayle"", ""seeably""], [""fps"", ""psf""], [""rhyta"", ""yarth""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""psf\"", \""fps\"", \""besayle\"", \""seeably\"", \""yarth\"", \""rhyta\""]\n"",
    ""answer"": ""[[\""besayle\"", \""seeably\""], [\""fps\"", \""psf\""], [\""rhyta\"", \""yarth\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 810,
        ""words"": [
            ""psf"",
            ""fps"",
            ""besayle"",
            ""seeably"",
            ""yarth"",
            ""rhyta""
        ],
        ""solution"": [
            [
                ""besayle"",
                ""seeably""
            ],
            [
                ""fps"",
                ""psf""
            ],
            [
                ""rhyta"",
                ""yarth""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
811,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""graphology"", ""logography"", ""atonic"", ""cation"", ""action"", ""neper"", ""repen"", ""preen"", ""performing"", ""preforming"", ""none"", ""neon"", ""supine"", ""puisne"", ""swiping"", ""wisping"", ""plagiarise"", ""plagiaries"", ""lardacein"", ""ecardinal"", ""tartanas"", ""tantaras"", ""tarantas""]
","[[""action"", ""atonic"", ""cation""], [""ecardinal"", ""lardacein""], [""graphology"", ""logography""], [""neon"", ""none""], [""neper"", ""preen"", ""repen""], [""performing"", ""preforming""], [""plagiaries"", ""plagiarise""], [""puisne"", ""supine""], [""swiping"", ""wisping""], [""tantaras"", ""tarantas"", ""tartanas""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""graphology\"", \""logography\"", \""atonic\"", \""cation\"", \""action\"", \""neper\"", \""repen\"", \""preen\"", \""performing\"", \""preforming\"", \""none\"", \""neon\"", \""supine\"", \""puisne\"", \""swiping\"", \""wisping\"", \""plagiarise\"", \""plagiaries\"", \""lardacein\"", \""ecardinal\"", \""tartanas\"", \""tantaras\"", \""tarantas\""]\n"",
    ""answer"": ""[[\""action\"", \""atonic\"", \""cation\""], [\""ecardinal\"", \""lardacein\""], [\""graphology\"", \""logography\""], [\""neon\"", \""none\""], [\""neper\"", \""preen\"", \""repen\""], [\""performing\"", \""preforming\""], [\""plagiaries\"", \""plagiarise\""], [\""puisne\"", \""supine\""], [\""swiping\"", \""wisping\""], [\""tantaras\"", \""tarantas\"", \""tartanas\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 811,
        ""words"": [
            ""graphology"",
            ""logography"",
            ""atonic"",
            ""cation"",
            ""action"",
            ""neper"",
            ""repen"",
            ""preen"",
            ""performing"",
            ""preforming"",
            ""none"",
            ""neon"",
            ""supine"",
            ""puisne"",
            ""swiping"",
            ""wisping"",
            ""plagiarise"",
            ""plagiaries"",
            ""lardacein"",
            ""ecardinal"",
            ""tartanas"",
            ""tantaras"",
            ""tarantas""
        ],
        ""solution"": [
            [
                ""action"",
                ""atonic"",
                ""cation""
            ],
            [
                ""ecardinal"",
                ""lardacein""
            ],
            [
                ""graphology"",
                ""logography""
            ],
            [
                ""neon"",
                ""none""
            ],
            [
                ""neper"",
                ""preen"",
                ""repen""
            ],
            [
                ""performing"",
                ""preforming""
            ],
            [
                ""plagiaries"",
                ""plagiarise""
            ],
            [
                ""puisne"",
                ""supine""
            ],
            [
                ""swiping"",
                ""wisping""
            ],
            [
                ""tantaras"",
                ""tarantas"",
                ""tartanas""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
812,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""harkener"", ""hankerer"", ""nacelle"", ""canelle"", ""ribroast"", ""arborist"", ""peristome"", ""temporise"", ""isnardia"", ""sardinia"", ""kamel"", ""kemal"", ""cygnus"", ""scungy"", ""ginete"", ""teeing"", ""reenactments"", ""encastrement"", ""define"", ""infeed""]
","[[""arborist"", ""ribroast""], [""canelle"", ""nacelle""], [""cygnus"", ""scungy""], [""define"", ""infeed""], [""encastrement"", ""reenactments""], [""ginete"", ""teeing""], [""hankerer"", ""harkener""], [""isnardia"", ""sardinia""], [""kamel"", ""kemal""], [""peristome"", ""temporise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""harkener\"", \""hankerer\"", \""nacelle\"", \""canelle\"", \""ribroast\"", \""arborist\"", \""peristome\"", \""temporise\"", \""isnardia\"", \""sardinia\"", \""kamel\"", \""kemal\"", \""cygnus\"", \""scungy\"", \""ginete\"", \""teeing\"", \""reenactments\"", \""encastrement\"", \""define\"", \""infeed\""]\n"",
    ""answer"": ""[[\""arborist\"", \""ribroast\""], [\""canelle\"", \""nacelle\""], [\""cygnus\"", \""scungy\""], [\""define\"", \""infeed\""], [\""encastrement\"", \""reenactments\""], [\""ginete\"", \""teeing\""], [\""hankerer\"", \""harkener\""], [\""isnardia\"", \""sardinia\""], [\""kamel\"", \""kemal\""], [\""peristome\"", \""temporise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 812,
        ""words"": [
            ""harkener"",
            ""hankerer"",
            ""nacelle"",
            ""canelle"",
            ""ribroast"",
            ""arborist"",
            ""peristome"",
            ""temporise"",
            ""isnardia"",
            ""sardinia"",
            ""kamel"",
            ""kemal"",
            ""cygnus"",
            ""scungy"",
            ""ginete"",
            ""teeing"",
            ""reenactments"",
            ""encastrement"",
            ""define"",
            ""infeed""
        ],
        ""solution"": [
            [
                ""arborist"",
                ""ribroast""
            ],
            [
                ""canelle"",
                ""nacelle""
            ],
            [
                ""cygnus"",
                ""scungy""
            ],
            [
                ""define"",
                ""infeed""
            ],
            [
                ""encastrement"",
                ""reenactments""
            ],
            [
                ""ginete"",
                ""teeing""
            ],
            [
                ""hankerer"",
                ""harkener""
            ],
            [
                ""isnardia"",
                ""sardinia""
            ],
            [
                ""kamel"",
                ""kemal""
            ],
            [
                ""peristome"",
                ""temporise""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
813,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""contravene"", ""covenanter"", ""loros"", ""orlos""]
","[[""contravene"", ""covenanter""], [""loros"", ""orlos""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""contravene\"", \""covenanter\"", \""loros\"", \""orlos\""]\n"",
    ""answer"": ""[[\""contravene\"", \""covenanter\""], [\""loros\"", \""orlos\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 813,
        ""words"": [
            ""contravene"",
            ""covenanter"",
            ""loros"",
            ""orlos""
        ],
        ""solution"": [
            [
                ""contravene"",
                ""covenanter""
            ],
            [
                ""loros"",
                ""orlos""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
814,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""arterious"", ""autoriser"", ""fosite"", ""softie"", ""undefinability"", ""unidentifiably""]
","[[""arterious"", ""autoriser""], [""fosite"", ""softie""], [""undefinability"", ""unidentifiably""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""arterious\"", \""autoriser\"", \""fosite\"", \""softie\"", \""undefinability\"", \""unidentifiably\""]\n"",
    ""answer"": ""[[\""arterious\"", \""autoriser\""], [\""fosite\"", \""softie\""], [\""undefinability\"", \""unidentifiably\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 814,
        ""words"": [
            ""arterious"",
            ""autoriser"",
            ""fosite"",
            ""softie"",
            ""undefinability"",
            ""unidentifiably""
        ],
        ""solution"": [
            [
                ""arterious"",
                ""autoriser""
            ],
            [
                ""fosite"",
                ""softie""
            ],
            [
                ""undefinability"",
                ""unidentifiably""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
815,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""seagull"", ""sullage"", ""woodlands"", ""downloads"", ""boyard"", ""boardy"", ""byroad"", ""sidehills"", ""hillsides"", ""satellite"", ""telestial"", ""sprottle"", ""plotters"", ""impresting"", ""springtime"", ""corchat"", ""octarch""]
","[[""boardy"", ""boyard"", ""byroad""], [""corchat"", ""octarch""], [""downloads"", ""woodlands""], [""hillsides"", ""sidehills""], [""impresting"", ""springtime""], [""plotters"", ""sprottle""], [""satellite"", ""telestial""], [""seagull"", ""sullage""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""seagull\"", \""sullage\"", \""woodlands\"", \""downloads\"", \""boyard\"", \""boardy\"", \""byroad\"", \""sidehills\"", \""hillsides\"", \""satellite\"", \""telestial\"", \""sprottle\"", \""plotters\"", \""impresting\"", \""springtime\"", \""corchat\"", \""octarch\""]\n"",
    ""answer"": ""[[\""boardy\"", \""boyard\"", \""byroad\""], [\""corchat\"", \""octarch\""], [\""downloads\"", \""woodlands\""], [\""hillsides\"", \""sidehills\""], [\""impresting\"", \""springtime\""], [\""plotters\"", \""sprottle\""], [\""satellite\"", \""telestial\""], [\""seagull\"", \""sullage\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 815,
        ""words"": [
            ""seagull"",
            ""sullage"",
            ""woodlands"",
            ""downloads"",
            ""boyard"",
            ""boardy"",
            ""byroad"",
            ""sidehills"",
            ""hillsides"",
            ""satellite"",
            ""telestial"",
            ""sprottle"",
            ""plotters"",
            ""impresting"",
            ""springtime"",
            ""corchat"",
            ""octarch""
        ],
        ""solution"": [
            [
                ""boardy"",
                ""boyard"",
                ""byroad""
            ],
            [
                ""corchat"",
                ""octarch""
            ],
            [
                ""downloads"",
                ""woodlands""
            ],
            [
                ""hillsides"",
                ""sidehills""
            ],
            [
                ""impresting"",
                ""springtime""
            ],
            [
                ""plotters"",
                ""sprottle""
            ],
            [
                ""satellite"",
                ""telestial""
            ],
            [
                ""seagull"",
                ""sullage""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
816,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sirpoon"", ""porions"", ""egghot"", ""hogget"", ""supr"", ""purs"", ""arabic"", ""cairba"", ""untriable"", ""untirable"", ""indicates"", ""actinides"", ""andesitic"", ""succinol"", ""councils"", ""gomart"", ""margot"", ""hamital"", ""thalami""]
","[[""actinides"", ""andesitic"", ""indicates""], [""arabic"", ""cairba""], [""councils"", ""succinol""], [""egghot"", ""hogget""], [""gomart"", ""margot""], [""hamital"", ""thalami""], [""porions"", ""sirpoon""], [""purs"", ""supr""], [""untirable"", ""untriable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sirpoon\"", \""porions\"", \""egghot\"", \""hogget\"", \""supr\"", \""purs\"", \""arabic\"", \""cairba\"", \""untriable\"", \""untirable\"", \""indicates\"", \""actinides\"", \""andesitic\"", \""succinol\"", \""councils\"", \""gomart\"", \""margot\"", \""hamital\"", \""thalami\""]\n"",
    ""answer"": ""[[\""actinides\"", \""andesitic\"", \""indicates\""], [\""arabic\"", \""cairba\""], [\""councils\"", \""succinol\""], [\""egghot\"", \""hogget\""], [\""gomart\"", \""margot\""], [\""hamital\"", \""thalami\""], [\""porions\"", \""sirpoon\""], [\""purs\"", \""supr\""], [\""untirable\"", \""untriable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 816,
        ""words"": [
            ""sirpoon"",
            ""porions"",
            ""egghot"",
            ""hogget"",
            ""supr"",
            ""purs"",
            ""arabic"",
            ""cairba"",
            ""untriable"",
            ""untirable"",
            ""indicates"",
            ""actinides"",
            ""andesitic"",
            ""succinol"",
            ""councils"",
            ""gomart"",
            ""margot"",
            ""hamital"",
            ""thalami""
        ],
        ""solution"": [
            [
                ""actinides"",
                ""andesitic"",
                ""indicates""
            ],
            [
                ""arabic"",
                ""cairba""
            ],
            [
                ""councils"",
                ""succinol""
            ],
            [
                ""egghot"",
                ""hogget""
            ],
            [
                ""gomart"",
                ""margot""
            ],
            [
                ""hamital"",
                ""thalami""
            ],
            [
                ""porions"",
                ""sirpoon""
            ],
            [
                ""purs"",
                ""supr""
            ],
            [
                ""untirable"",
                ""untriable""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
817,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""minimax"", ""maximin"", ""almugs"", ""algums""]
","[[""algums"", ""almugs""], [""maximin"", ""minimax""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""minimax\"", \""maximin\"", \""almugs\"", \""algums\""]\n"",
    ""answer"": ""[[\""algums\"", \""almugs\""], [\""maximin\"", \""minimax\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 817,
        ""words"": [
            ""minimax"",
            ""maximin"",
            ""almugs"",
            ""algums""
        ],
        ""solution"": [
            [
                ""algums"",
                ""almugs""
            ],
            [
                ""maximin"",
                ""minimax""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
818,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""turner"", ""return"", ""orsede"", ""redoes"", ""erodes"", ""anthralin"", ""anthranil"", ""gravidate"", ""gradative"", ""lumper"", ""plumer"", ""rumple"", ""replum"", ""ovenpeel"", ""envelope"", ""eral"", ""earl"", ""lear"", ""rale"", ""coiffes"", ""offices"", ""nanas"", ""annas""]
","[[""annas"", ""nanas""], [""anthralin"", ""anthranil""], [""coiffes"", ""offices""], [""earl"", ""eral"", ""lear"", ""rale""], [""envelope"", ""ovenpeel""], [""erodes"", ""orsede"", ""redoes""], [""gradative"", ""gravidate""], [""lumper"", ""plumer"", ""replum"", ""rumple""], [""return"", ""turner""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""turner\"", \""return\"", \""orsede\"", \""redoes\"", \""erodes\"", \""anthralin\"", \""anthranil\"", \""gravidate\"", \""gradative\"", \""lumper\"", \""plumer\"", \""rumple\"", \""replum\"", \""ovenpeel\"", \""envelope\"", \""eral\"", \""earl\"", \""lear\"", \""rale\"", \""coiffes\"", \""offices\"", \""nanas\"", \""annas\""]\n"",
    ""answer"": ""[[\""annas\"", \""nanas\""], [\""anthralin\"", \""anthranil\""], [\""coiffes\"", \""offices\""], [\""earl\"", \""eral\"", \""lear\"", \""rale\""], [\""envelope\"", \""ovenpeel\""], [\""erodes\"", \""orsede\"", \""redoes\""], [\""gradative\"", \""gravidate\""], [\""lumper\"", \""plumer\"", \""replum\"", \""rumple\""], [\""return\"", \""turner\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 818,
        ""words"": [
            ""turner"",
            ""return"",
            ""orsede"",
            ""redoes"",
            ""erodes"",
            ""anthralin"",
            ""anthranil"",
            ""gravidate"",
            ""gradative"",
            ""lumper"",
            ""plumer"",
            ""rumple"",
            ""replum"",
            ""ovenpeel"",
            ""envelope"",
            ""eral"",
            ""earl"",
            ""lear"",
            ""rale"",
            ""coiffes"",
            ""offices"",
            ""nanas"",
            ""annas""
        ],
        ""solution"": [
            [
                ""annas"",
                ""nanas""
            ],
            [
                ""anthralin"",
                ""anthranil""
            ],
            [
                ""coiffes"",
                ""offices""
            ],
            [
                ""earl"",
                ""eral"",
                ""lear"",
                ""rale""
            ],
            [
                ""envelope"",
                ""ovenpeel""
            ],
            [
                ""erodes"",
                ""orsede"",
                ""redoes""
            ],
            [
                ""gradative"",
                ""gravidate""
            ],
            [
                ""lumper"",
                ""plumer"",
                ""replum"",
                ""rumple""
            ],
            [
                ""return"",
                ""turner""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
819,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nassau"", ""saunas"", ""vectors"", ""coverts"", ""ethyls"", ""shelty"", ""thysel"", ""tranvia"", ""variant"", ""electrode"", ""electroed"", ""olein"", ""eloin"", ""tol"", ""tlo"", ""lot"", ""pieces"", ""specie""]
","[[""coverts"", ""vectors""], [""electrode"", ""electroed""], [""eloin"", ""olein""], [""ethyls"", ""shelty"", ""thysel""], [""lot"", ""tlo"", ""tol""], [""nassau"", ""saunas""], [""pieces"", ""specie""], [""tranvia"", ""variant""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nassau\"", \""saunas\"", \""vectors\"", \""coverts\"", \""ethyls\"", \""shelty\"", \""thysel\"", \""tranvia\"", \""variant\"", \""electrode\"", \""electroed\"", \""olein\"", \""eloin\"", \""tol\"", \""tlo\"", \""lot\"", \""pieces\"", \""specie\""]\n"",
    ""answer"": ""[[\""coverts\"", \""vectors\""], [\""electrode\"", \""electroed\""], [\""eloin\"", \""olein\""], [\""ethyls\"", \""shelty\"", \""thysel\""], [\""lot\"", \""tlo\"", \""tol\""], [\""nassau\"", \""saunas\""], [\""pieces\"", \""specie\""], [\""tranvia\"", \""variant\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 819,
        ""words"": [
            ""nassau"",
            ""saunas"",
            ""vectors"",
            ""coverts"",
            ""ethyls"",
            ""shelty"",
            ""thysel"",
            ""tranvia"",
            ""variant"",
            ""electrode"",
            ""electroed"",
            ""olein"",
            ""eloin"",
            ""tol"",
            ""tlo"",
            ""lot"",
            ""pieces"",
            ""specie""
        ],
        ""solution"": [
            [
                ""coverts"",
                ""vectors""
            ],
            [
                ""electrode"",
                ""electroed""
            ],
            [
                ""eloin"",
                ""olein""
            ],
            [
                ""ethyls"",
                ""shelty"",
                ""thysel""
            ],
            [
                ""lot"",
                ""tlo"",
                ""tol""
            ],
            [
                ""nassau"",
                ""saunas""
            ],
            [
                ""pieces"",
                ""specie""
            ],
            [
                ""tranvia"",
                ""variant""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
820,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ungreened"", ""engendure"", ""reequips"", ""periques""]
","[[""engendure"", ""ungreened""], [""periques"", ""reequips""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ungreened\"", \""engendure\"", \""reequips\"", \""periques\""]\n"",
    ""answer"": ""[[\""engendure\"", \""ungreened\""], [\""periques\"", \""reequips\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 820,
        ""words"": [
            ""ungreened"",
            ""engendure"",
            ""reequips"",
            ""periques""
        ],
        ""solution"": [
            [
                ""engendure"",
                ""ungreened""
            ],
            [
                ""periques"",
                ""reequips""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
821,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""copatrons"", ""corposant"", ""snips"", ""spins"", ""corance"", ""conacre"", ""pantine"", ""piannet"", ""pinnate"", ""soccer"", ""scorce"", ""reforested"", ""deforester"", ""ready"", ""deray"", ""yeard"", ""unpanel"", ""unpenal""]
","[[""conacre"", ""corance""], [""copatrons"", ""corposant""], [""deforester"", ""reforested""], [""deray"", ""ready"", ""yeard""], [""pantine"", ""piannet"", ""pinnate""], [""scorce"", ""soccer""], [""snips"", ""spins""], [""unpanel"", ""unpenal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""copatrons\"", \""corposant\"", \""snips\"", \""spins\"", \""corance\"", \""conacre\"", \""pantine\"", \""piannet\"", \""pinnate\"", \""soccer\"", \""scorce\"", \""reforested\"", \""deforester\"", \""ready\"", \""deray\"", \""yeard\"", \""unpanel\"", \""unpenal\""]\n"",
    ""answer"": ""[[\""conacre\"", \""corance\""], [\""copatrons\"", \""corposant\""], [\""deforester\"", \""reforested\""], [\""deray\"", \""ready\"", \""yeard\""], [\""pantine\"", \""piannet\"", \""pinnate\""], [\""scorce\"", \""soccer\""], [\""snips\"", \""spins\""], [\""unpanel\"", \""unpenal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 821,
        ""words"": [
            ""copatrons"",
            ""corposant"",
            ""snips"",
            ""spins"",
            ""corance"",
            ""conacre"",
            ""pantine"",
            ""piannet"",
            ""pinnate"",
            ""soccer"",
            ""scorce"",
            ""reforested"",
            ""deforester"",
            ""ready"",
            ""deray"",
            ""yeard"",
            ""unpanel"",
            ""unpenal""
        ],
        ""solution"": [
            [
                ""conacre"",
                ""corance""
            ],
            [
                ""copatrons"",
                ""corposant""
            ],
            [
                ""deforester"",
                ""reforested""
            ],
            [
                ""deray"",
                ""ready"",
                ""yeard""
            ],
            [
                ""pantine"",
                ""piannet"",
                ""pinnate""
            ],
            [
                ""scorce"",
                ""soccer""
            ],
            [
                ""snips"",
                ""spins""
            ],
            [
                ""unpanel"",
                ""unpenal""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
822,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""slapped"", ""dapples"", ""toran"", ""rotan"", ""pupelo"", ""poulpe"", ""geir"", ""gire"", ""horsts"", ""shorts"", ""ioniums"", ""minious"", ""fisher"", ""sherif""]
","[[""dapples"", ""slapped""], [""fisher"", ""sherif""], [""geir"", ""gire""], [""horsts"", ""shorts""], [""ioniums"", ""minious""], [""poulpe"", ""pupelo""], [""rotan"", ""toran""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""slapped\"", \""dapples\"", \""toran\"", \""rotan\"", \""pupelo\"", \""poulpe\"", \""geir\"", \""gire\"", \""horsts\"", \""shorts\"", \""ioniums\"", \""minious\"", \""fisher\"", \""sherif\""]\n"",
    ""answer"": ""[[\""dapples\"", \""slapped\""], [\""fisher\"", \""sherif\""], [\""geir\"", \""gire\""], [\""horsts\"", \""shorts\""], [\""ioniums\"", \""minious\""], [\""poulpe\"", \""pupelo\""], [\""rotan\"", \""toran\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 822,
        ""words"": [
            ""slapped"",
            ""dapples"",
            ""toran"",
            ""rotan"",
            ""pupelo"",
            ""poulpe"",
            ""geir"",
            ""gire"",
            ""horsts"",
            ""shorts"",
            ""ioniums"",
            ""minious"",
            ""fisher"",
            ""sherif""
        ],
        ""solution"": [
            [
                ""dapples"",
                ""slapped""
            ],
            [
                ""fisher"",
                ""sherif""
            ],
            [
                ""geir"",
                ""gire""
            ],
            [
                ""horsts"",
                ""shorts""
            ],
            [
                ""ioniums"",
                ""minious""
            ],
            [
                ""poulpe"",
                ""pupelo""
            ],
            [
                ""rotan"",
                ""toran""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
823,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""slacken"", ""snackle"", ""chiromant"", ""chromatin"", ""boats"", ""boast"", ""sabot"", ""basto"", ""botas"", ""looter"", ""retool"", ""tooler"", ""rootle"", ""palterers"", ""replaster"", ""plasterer""]
","[[""basto"", ""boast"", ""boats"", ""botas"", ""sabot""], [""chiromant"", ""chromatin""], [""looter"", ""retool"", ""rootle"", ""tooler""], [""palterers"", ""plasterer"", ""replaster""], [""slacken"", ""snackle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""slacken\"", \""snackle\"", \""chiromant\"", \""chromatin\"", \""boats\"", \""boast\"", \""sabot\"", \""basto\"", \""botas\"", \""looter\"", \""retool\"", \""tooler\"", \""rootle\"", \""palterers\"", \""replaster\"", \""plasterer\""]\n"",
    ""answer"": ""[[\""basto\"", \""boast\"", \""boats\"", \""botas\"", \""sabot\""], [\""chiromant\"", \""chromatin\""], [\""looter\"", \""retool\"", \""rootle\"", \""tooler\""], [\""palterers\"", \""plasterer\"", \""replaster\""], [\""slacken\"", \""snackle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 823,
        ""words"": [
            ""slacken"",
            ""snackle"",
            ""chiromant"",
            ""chromatin"",
            ""boats"",
            ""boast"",
            ""sabot"",
            ""basto"",
            ""botas"",
            ""looter"",
            ""retool"",
            ""tooler"",
            ""rootle"",
            ""palterers"",
            ""replaster"",
            ""plasterer""
        ],
        ""solution"": [
            [
                ""basto"",
                ""boast"",
                ""boats"",
                ""botas"",
                ""sabot""
            ],
            [
                ""chiromant"",
                ""chromatin""
            ],
            [
                ""looter"",
                ""retool"",
                ""rootle"",
                ""tooler""
            ],
            [
                ""palterers"",
                ""plasterer"",
                ""replaster""
            ],
            [
                ""slacken"",
                ""snackle""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
824,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""petioli"", ""politei"", ""vestal"", ""valets"", ""canonists"", ""sanctions"", ""petrosquamosal"", ""squamopetrosal"", ""shrove"", ""hovers"", ""shover""]
","[[""canonists"", ""sanctions""], [""hovers"", ""shover"", ""shrove""], [""petioli"", ""politei""], [""petrosquamosal"", ""squamopetrosal""], [""valets"", ""vestal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""petioli\"", \""politei\"", \""vestal\"", \""valets\"", \""canonists\"", \""sanctions\"", \""petrosquamosal\"", \""squamopetrosal\"", \""shrove\"", \""hovers\"", \""shover\""]\n"",
    ""answer"": ""[[\""canonists\"", \""sanctions\""], [\""hovers\"", \""shover\"", \""shrove\""], [\""petioli\"", \""politei\""], [\""petrosquamosal\"", \""squamopetrosal\""], [\""valets\"", \""vestal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 824,
        ""words"": [
            ""petioli"",
            ""politei"",
            ""vestal"",
            ""valets"",
            ""canonists"",
            ""sanctions"",
            ""petrosquamosal"",
            ""squamopetrosal"",
            ""shrove"",
            ""hovers"",
            ""shover""
        ],
        ""solution"": [
            [
                ""canonists"",
                ""sanctions""
            ],
            [
                ""hovers"",
                ""shover"",
                ""shrove""
            ],
            [
                ""petioli"",
                ""politei""
            ],
            [
                ""petrosquamosal"",
                ""squamopetrosal""
            ],
            [
                ""valets"",
                ""vestal""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
825,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""maneuvre"", ""maneuver"", ""manuever"", ""mucoids"", ""muscoid"", ""enseel"", ""selene"", ""qp"", ""pq"", ""scarificator"", ""sacrificator"", ""remelt"", ""melter"", ""cellar"", ""caller"", ""floush"", ""shoful"", ""inshave"", ""evanish"", ""vahines""]
","[[""caller"", ""cellar""], [""enseel"", ""selene""], [""evanish"", ""inshave"", ""vahines""], [""floush"", ""shoful""], [""maneuver"", ""maneuvre"", ""manuever""], [""melter"", ""remelt""], [""mucoids"", ""muscoid""], [""pq"", ""qp""], [""sacrificator"", ""scarificator""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""maneuvre\"", \""maneuver\"", \""manuever\"", \""mucoids\"", \""muscoid\"", \""enseel\"", \""selene\"", \""qp\"", \""pq\"", \""scarificator\"", \""sacrificator\"", \""remelt\"", \""melter\"", \""cellar\"", \""caller\"", \""floush\"", \""shoful\"", \""inshave\"", \""evanish\"", \""vahines\""]\n"",
    ""answer"": ""[[\""caller\"", \""cellar\""], [\""enseel\"", \""selene\""], [\""evanish\"", \""inshave\"", \""vahines\""], [\""floush\"", \""shoful\""], [\""maneuver\"", \""maneuvre\"", \""manuever\""], [\""melter\"", \""remelt\""], [\""mucoids\"", \""muscoid\""], [\""pq\"", \""qp\""], [\""sacrificator\"", \""scarificator\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 825,
        ""words"": [
            ""maneuvre"",
            ""maneuver"",
            ""manuever"",
            ""mucoids"",
            ""muscoid"",
            ""enseel"",
            ""selene"",
            ""qp"",
            ""pq"",
            ""scarificator"",
            ""sacrificator"",
            ""remelt"",
            ""melter"",
            ""cellar"",
            ""caller"",
            ""floush"",
            ""shoful"",
            ""inshave"",
            ""evanish"",
            ""vahines""
        ],
        ""solution"": [
            [
                ""caller"",
                ""cellar""
            ],
            [
                ""enseel"",
                ""selene""
            ],
            [
                ""evanish"",
                ""inshave"",
                ""vahines""
            ],
            [
                ""floush"",
                ""shoful""
            ],
            [
                ""maneuver"",
                ""maneuvre"",
                ""manuever""
            ],
            [
                ""melter"",
                ""remelt""
            ],
            [
                ""mucoids"",
                ""muscoid""
            ],
            [
                ""pq"",
                ""qp""
            ],
            [
                ""sacrificator"",
                ""scarificator""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
826,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""luges"", ""glues"", ""gules"", ""answerer"", ""reanswer"", ""lodged"", ""degold"", ""bastard"", ""tabards"", ""gen"", ""eng"", ""stoplights"", ""spotlights"", ""mismatches"", ""schematism"", ""rebater"", ""terebra"", ""ext"", ""tex"", ""flustra"", ""starful""]
","[[""answerer"", ""reanswer""], [""bastard"", ""tabards""], [""degold"", ""lodged""], [""eng"", ""gen""], [""ext"", ""tex""], [""flustra"", ""starful""], [""glues"", ""gules"", ""luges""], [""mismatches"", ""schematism""], [""rebater"", ""terebra""], [""spotlights"", ""stoplights""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""luges\"", \""glues\"", \""gules\"", \""answerer\"", \""reanswer\"", \""lodged\"", \""degold\"", \""bastard\"", \""tabards\"", \""gen\"", \""eng\"", \""stoplights\"", \""spotlights\"", \""mismatches\"", \""schematism\"", \""rebater\"", \""terebra\"", \""ext\"", \""tex\"", \""flustra\"", \""starful\""]\n"",
    ""answer"": ""[[\""answerer\"", \""reanswer\""], [\""bastard\"", \""tabards\""], [\""degold\"", \""lodged\""], [\""eng\"", \""gen\""], [\""ext\"", \""tex\""], [\""flustra\"", \""starful\""], [\""glues\"", \""gules\"", \""luges\""], [\""mismatches\"", \""schematism\""], [\""rebater\"", \""terebra\""], [\""spotlights\"", \""stoplights\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 826,
        ""words"": [
            ""luges"",
            ""glues"",
            ""gules"",
            ""answerer"",
            ""reanswer"",
            ""lodged"",
            ""degold"",
            ""bastard"",
            ""tabards"",
            ""gen"",
            ""eng"",
            ""stoplights"",
            ""spotlights"",
            ""mismatches"",
            ""schematism"",
            ""rebater"",
            ""terebra"",
            ""ext"",
            ""tex"",
            ""flustra"",
            ""starful""
        ],
        ""solution"": [
            [
                ""answerer"",
                ""reanswer""
            ],
            [
                ""bastard"",
                ""tabards""
            ],
            [
                ""degold"",
                ""lodged""
            ],
            [
                ""eng"",
                ""gen""
            ],
            [
                ""ext"",
                ""tex""
            ],
            [
                ""flustra"",
                ""starful""
            ],
            [
                ""glues"",
                ""gules"",
                ""luges""
            ],
            [
                ""mismatches"",
                ""schematism""
            ],
            [
                ""rebater"",
                ""terebra""
            ],
            [
                ""spotlights"",
                ""stoplights""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
827,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""asemia"", ""saeima"", ""anglice"", ""angelic"", ""relever"", ""reveler"", ""leverer"", ""shadily"", ""ladyish"", ""alcids"", ""discal""]
","[[""alcids"", ""discal""], [""angelic"", ""anglice""], [""asemia"", ""saeima""], [""ladyish"", ""shadily""], [""leverer"", ""relever"", ""reveler""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""asemia\"", \""saeima\"", \""anglice\"", \""angelic\"", \""relever\"", \""reveler\"", \""leverer\"", \""shadily\"", \""ladyish\"", \""alcids\"", \""discal\""]\n"",
    ""answer"": ""[[\""alcids\"", \""discal\""], [\""angelic\"", \""anglice\""], [\""asemia\"", \""saeima\""], [\""ladyish\"", \""shadily\""], [\""leverer\"", \""relever\"", \""reveler\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 827,
        ""words"": [
            ""asemia"",
            ""saeima"",
            ""anglice"",
            ""angelic"",
            ""relever"",
            ""reveler"",
            ""leverer"",
            ""shadily"",
            ""ladyish"",
            ""alcids"",
            ""discal""
        ],
        ""solution"": [
            [
                ""alcids"",
                ""discal""
            ],
            [
                ""angelic"",
                ""anglice""
            ],
            [
                ""asemia"",
                ""saeima""
            ],
            [
                ""ladyish"",
                ""shadily""
            ],
            [
                ""leverer"",
                ""relever"",
                ""reveler""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
828,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""patronise"", ""operantis"", ""atropines"", ""mazer"", ""zerma"", ""maidservant"", ""animadverts"", ""anthemwise"", ""whitmanese""]
","[[""animadverts"", ""maidservant""], [""anthemwise"", ""whitmanese""], [""atropines"", ""operantis"", ""patronise""], [""mazer"", ""zerma""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""patronise\"", \""operantis\"", \""atropines\"", \""mazer\"", \""zerma\"", \""maidservant\"", \""animadverts\"", \""anthemwise\"", \""whitmanese\""]\n"",
    ""answer"": ""[[\""animadverts\"", \""maidservant\""], [\""anthemwise\"", \""whitmanese\""], [\""atropines\"", \""operantis\"", \""patronise\""], [\""mazer\"", \""zerma\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 828,
        ""words"": [
            ""patronise"",
            ""operantis"",
            ""atropines"",
            ""mazer"",
            ""zerma"",
            ""maidservant"",
            ""animadverts"",
            ""anthemwise"",
            ""whitmanese""
        ],
        ""solution"": [
            [
                ""animadverts"",
                ""maidservant""
            ],
            [
                ""anthemwise"",
                ""whitmanese""
            ],
            [
                ""atropines"",
                ""operantis"",
                ""patronise""
            ],
            [
                ""mazer"",
                ""zerma""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
829,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""stern"", ""ernst"", ""terns"", ""vivandire"", ""vivandier"", ""raiment"", ""tireman"", ""carlo"", ""claro"", ""calor"", ""alcor"", ""underlease"", ""unreleased"", ""rescreens"", ""screeners"", ""dyad"", ""addy"", ""assuasive"", ""assausive"", ""temporals"", ""plastomer""]
","[[""addy"", ""dyad""], [""alcor"", ""calor"", ""carlo"", ""claro""], [""assausive"", ""assuasive""], [""ernst"", ""stern"", ""terns""], [""plastomer"", ""temporals""], [""raiment"", ""tireman""], [""rescreens"", ""screeners""], [""underlease"", ""unreleased""], [""vivandier"", ""vivandire""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""stern\"", \""ernst\"", \""terns\"", \""vivandire\"", \""vivandier\"", \""raiment\"", \""tireman\"", \""carlo\"", \""claro\"", \""calor\"", \""alcor\"", \""underlease\"", \""unreleased\"", \""rescreens\"", \""screeners\"", \""dyad\"", \""addy\"", \""assuasive\"", \""assausive\"", \""temporals\"", \""plastomer\""]\n"",
    ""answer"": ""[[\""addy\"", \""dyad\""], [\""alcor\"", \""calor\"", \""carlo\"", \""claro\""], [\""assausive\"", \""assuasive\""], [\""ernst\"", \""stern\"", \""terns\""], [\""plastomer\"", \""temporals\""], [\""raiment\"", \""tireman\""], [\""rescreens\"", \""screeners\""], [\""underlease\"", \""unreleased\""], [\""vivandier\"", \""vivandire\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 829,
        ""words"": [
            ""stern"",
            ""ernst"",
            ""terns"",
            ""vivandire"",
            ""vivandier"",
            ""raiment"",
            ""tireman"",
            ""carlo"",
            ""claro"",
            ""calor"",
            ""alcor"",
            ""underlease"",
            ""unreleased"",
            ""rescreens"",
            ""screeners"",
            ""dyad"",
            ""addy"",
            ""assuasive"",
            ""assausive"",
            ""temporals"",
            ""plastomer""
        ],
        ""solution"": [
            [
                ""addy"",
                ""dyad""
            ],
            [
                ""alcor"",
                ""calor"",
                ""carlo"",
                ""claro""
            ],
            [
                ""assausive"",
                ""assuasive""
            ],
            [
                ""ernst"",
                ""stern"",
                ""terns""
            ],
            [
                ""plastomer"",
                ""temporals""
            ],
            [
                ""raiment"",
                ""tireman""
            ],
            [
                ""rescreens"",
                ""screeners""
            ],
            [
                ""underlease"",
                ""unreleased""
            ],
            [
                ""vivandier"",
                ""vivandire""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
830,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""laticlave"", ""vacillate"", ""gregge"", ""gegger"", ""ancillary"", ""carlylian"", ""cranially"", ""suttas"", ""status"", ""ratite"", ""attire""]
","[[""ancillary"", ""carlylian"", ""cranially""], [""attire"", ""ratite""], [""gegger"", ""gregge""], [""laticlave"", ""vacillate""], [""status"", ""suttas""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""laticlave\"", \""vacillate\"", \""gregge\"", \""gegger\"", \""ancillary\"", \""carlylian\"", \""cranially\"", \""suttas\"", \""status\"", \""ratite\"", \""attire\""]\n"",
    ""answer"": ""[[\""ancillary\"", \""carlylian\"", \""cranially\""], [\""attire\"", \""ratite\""], [\""gegger\"", \""gregge\""], [\""laticlave\"", \""vacillate\""], [\""status\"", \""suttas\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 830,
        ""words"": [
            ""laticlave"",
            ""vacillate"",
            ""gregge"",
            ""gegger"",
            ""ancillary"",
            ""carlylian"",
            ""cranially"",
            ""suttas"",
            ""status"",
            ""ratite"",
            ""attire""
        ],
        ""solution"": [
            [
                ""ancillary"",
                ""carlylian"",
                ""cranially""
            ],
            [
                ""attire"",
                ""ratite""
            ],
            [
                ""gegger"",
                ""gregge""
            ],
            [
                ""laticlave"",
                ""vacillate""
            ],
            [
                ""status"",
                ""suttas""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
831,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""headmen"", ""needham"", ""tyrannies"", ""tyrannise"", ""poe"", ""ope"", ""enduing"", ""undigne"", ""prendre"", ""prender"", ""pottaro"", ""portato"", ""potator"", ""taproot""]
","[[""enduing"", ""undigne""], [""headmen"", ""needham""], [""ope"", ""poe""], [""portato"", ""potator"", ""pottaro"", ""taproot""], [""prender"", ""prendre""], [""tyrannies"", ""tyrannise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""headmen\"", \""needham\"", \""tyrannies\"", \""tyrannise\"", \""poe\"", \""ope\"", \""enduing\"", \""undigne\"", \""prendre\"", \""prender\"", \""pottaro\"", \""portato\"", \""potator\"", \""taproot\""]\n"",
    ""answer"": ""[[\""enduing\"", \""undigne\""], [\""headmen\"", \""needham\""], [\""ope\"", \""poe\""], [\""portato\"", \""potator\"", \""pottaro\"", \""taproot\""], [\""prender\"", \""prendre\""], [\""tyrannies\"", \""tyrannise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 831,
        ""words"": [
            ""headmen"",
            ""needham"",
            ""tyrannies"",
            ""tyrannise"",
            ""poe"",
            ""ope"",
            ""enduing"",
            ""undigne"",
            ""prendre"",
            ""prender"",
            ""pottaro"",
            ""portato"",
            ""potator"",
            ""taproot""
        ],
        ""solution"": [
            [
                ""enduing"",
                ""undigne""
            ],
            [
                ""headmen"",
                ""needham""
            ],
            [
                ""ope"",
                ""poe""
            ],
            [
                ""portato"",
                ""potator"",
                ""pottaro"",
                ""taproot""
            ],
            [
                ""prender"",
                ""prendre""
            ],
            [
                ""tyrannies"",
                ""tyrannise""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
832,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fingu"", ""fungi"", ""vedaic"", ""advice"", ""silted"", ""desilt"", ""delist"", ""idlest"", ""tildes"", ""termin"", ""minter"", ""remint"", ""braceleted"", ""celebrated"", ""barnacles"", ""balancers""]
","[[""advice"", ""vedaic""], [""balancers"", ""barnacles""], [""braceleted"", ""celebrated""], [""delist"", ""desilt"", ""idlest"", ""silted"", ""tildes""], [""fingu"", ""fungi""], [""minter"", ""remint"", ""termin""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fingu\"", \""fungi\"", \""vedaic\"", \""advice\"", \""silted\"", \""desilt\"", \""delist\"", \""idlest\"", \""tildes\"", \""termin\"", \""minter\"", \""remint\"", \""braceleted\"", \""celebrated\"", \""barnacles\"", \""balancers\""]\n"",
    ""answer"": ""[[\""advice\"", \""vedaic\""], [\""balancers\"", \""barnacles\""], [\""braceleted\"", \""celebrated\""], [\""delist\"", \""desilt\"", \""idlest\"", \""silted\"", \""tildes\""], [\""fingu\"", \""fungi\""], [\""minter\"", \""remint\"", \""termin\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 832,
        ""words"": [
            ""fingu"",
            ""fungi"",
            ""vedaic"",
            ""advice"",
            ""silted"",
            ""desilt"",
            ""delist"",
            ""idlest"",
            ""tildes"",
            ""termin"",
            ""minter"",
            ""remint"",
            ""braceleted"",
            ""celebrated"",
            ""barnacles"",
            ""balancers""
        ],
        ""solution"": [
            [
                ""advice"",
                ""vedaic""
            ],
            [
                ""balancers"",
                ""barnacles""
            ],
            [
                ""braceleted"",
                ""celebrated""
            ],
            [
                ""delist"",
                ""desilt"",
                ""idlest"",
                ""silted"",
                ""tildes""
            ],
            [
                ""fingu"",
                ""fungi""
            ],
            [
                ""minter"",
                ""remint"",
                ""termin""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
833,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ligulae"", ""glaieul"", ""honourer"", ""rehonour"", ""truelove"", ""revolute"", ""serratile"", ""retailers"", ""damier"", ""armied"", ""admire"", ""merida"", ""eosaurus"", ""rousseau"", ""looper"", ""pooler"", ""prewhip"", ""whipper""]
","[[""admire"", ""armied"", ""damier"", ""merida""], [""eosaurus"", ""rousseau""], [""glaieul"", ""ligulae""], [""honourer"", ""rehonour""], [""looper"", ""pooler""], [""prewhip"", ""whipper""], [""retailers"", ""serratile""], [""revolute"", ""truelove""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ligulae\"", \""glaieul\"", \""honourer\"", \""rehonour\"", \""truelove\"", \""revolute\"", \""serratile\"", \""retailers\"", \""damier\"", \""armied\"", \""admire\"", \""merida\"", \""eosaurus\"", \""rousseau\"", \""looper\"", \""pooler\"", \""prewhip\"", \""whipper\""]\n"",
    ""answer"": ""[[\""admire\"", \""armied\"", \""damier\"", \""merida\""], [\""eosaurus\"", \""rousseau\""], [\""glaieul\"", \""ligulae\""], [\""honourer\"", \""rehonour\""], [\""looper\"", \""pooler\""], [\""prewhip\"", \""whipper\""], [\""retailers\"", \""serratile\""], [\""revolute\"", \""truelove\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 833,
        ""words"": [
            ""ligulae"",
            ""glaieul"",
            ""honourer"",
            ""rehonour"",
            ""truelove"",
            ""revolute"",
            ""serratile"",
            ""retailers"",
            ""damier"",
            ""armied"",
            ""admire"",
            ""merida"",
            ""eosaurus"",
            ""rousseau"",
            ""looper"",
            ""pooler"",
            ""prewhip"",
            ""whipper""
        ],
        ""solution"": [
            [
                ""admire"",
                ""armied"",
                ""damier"",
                ""merida""
            ],
            [
                ""eosaurus"",
                ""rousseau""
            ],
            [
                ""glaieul"",
                ""ligulae""
            ],
            [
                ""honourer"",
                ""rehonour""
            ],
            [
                ""looper"",
                ""pooler""
            ],
            [
                ""prewhip"",
                ""whipper""
            ],
            [
                ""retailers"",
                ""serratile""
            ],
            [
                ""revolute"",
                ""truelove""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
834,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bracteal"", ""cartable"", ""cleopatra"", ""acropetal"", ""azole"", ""zoeal""]
","[[""acropetal"", ""cleopatra""], [""azole"", ""zoeal""], [""bracteal"", ""cartable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bracteal\"", \""cartable\"", \""cleopatra\"", \""acropetal\"", \""azole\"", \""zoeal\""]\n"",
    ""answer"": ""[[\""acropetal\"", \""cleopatra\""], [\""azole\"", \""zoeal\""], [\""bracteal\"", \""cartable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 834,
        ""words"": [
            ""bracteal"",
            ""cartable"",
            ""cleopatra"",
            ""acropetal"",
            ""azole"",
            ""zoeal""
        ],
        ""solution"": [
            [
                ""acropetal"",
                ""cleopatra""
            ],
            [
                ""azole"",
                ""zoeal""
            ],
            [
                ""bracteal"",
                ""cartable""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
835,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""merlins"", ""limners"", ""pave"", ""evap"", ""usar"", ""saur"", ""ursa"", ""rusa"", ""sura"", ""draintile"", ""interlaid"", ""deliriant""]
","[[""deliriant"", ""draintile"", ""interlaid""], [""evap"", ""pave""], [""limners"", ""merlins""], [""rusa"", ""saur"", ""sura"", ""ursa"", ""usar""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""merlins\"", \""limners\"", \""pave\"", \""evap\"", \""usar\"", \""saur\"", \""ursa\"", \""rusa\"", \""sura\"", \""draintile\"", \""interlaid\"", \""deliriant\""]\n"",
    ""answer"": ""[[\""deliriant\"", \""draintile\"", \""interlaid\""], [\""evap\"", \""pave\""], [\""limners\"", \""merlins\""], [\""rusa\"", \""saur\"", \""sura\"", \""ursa\"", \""usar\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 835,
        ""words"": [
            ""merlins"",
            ""limners"",
            ""pave"",
            ""evap"",
            ""usar"",
            ""saur"",
            ""ursa"",
            ""rusa"",
            ""sura"",
            ""draintile"",
            ""interlaid"",
            ""deliriant""
        ],
        ""solution"": [
            [
                ""deliriant"",
                ""draintile"",
                ""interlaid""
            ],
            [
                ""evap"",
                ""pave""
            ],
            [
                ""limners"",
                ""merlins""
            ],
            [
                ""rusa"",
                ""saur"",
                ""sura"",
                ""ursa"",
                ""usar""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
836,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""badiner"", ""inbread"", ""brained"", ""curtail"", ""trucial"", ""urtical"", ""pothouses"", ""posthouse"", ""housetops"", ""gladrags"", ""laggards"", ""radiectomy"", ""acidometry"", ""map"", ""amp"", ""pam"", ""calloo"", ""colola"", ""rfs"", ""frs""]
","[[""acidometry"", ""radiectomy""], [""amp"", ""map"", ""pam""], [""badiner"", ""brained"", ""inbread""], [""calloo"", ""colola""], [""curtail"", ""trucial"", ""urtical""], [""frs"", ""rfs""], [""gladrags"", ""laggards""], [""housetops"", ""posthouse"", ""pothouses""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""badiner\"", \""inbread\"", \""brained\"", \""curtail\"", \""trucial\"", \""urtical\"", \""pothouses\"", \""posthouse\"", \""housetops\"", \""gladrags\"", \""laggards\"", \""radiectomy\"", \""acidometry\"", \""map\"", \""amp\"", \""pam\"", \""calloo\"", \""colola\"", \""rfs\"", \""frs\""]\n"",
    ""answer"": ""[[\""acidometry\"", \""radiectomy\""], [\""amp\"", \""map\"", \""pam\""], [\""badiner\"", \""brained\"", \""inbread\""], [\""calloo\"", \""colola\""], [\""curtail\"", \""trucial\"", \""urtical\""], [\""frs\"", \""rfs\""], [\""gladrags\"", \""laggards\""], [\""housetops\"", \""posthouse\"", \""pothouses\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 836,
        ""words"": [
            ""badiner"",
            ""inbread"",
            ""brained"",
            ""curtail"",
            ""trucial"",
            ""urtical"",
            ""pothouses"",
            ""posthouse"",
            ""housetops"",
            ""gladrags"",
            ""laggards"",
            ""radiectomy"",
            ""acidometry"",
            ""map"",
            ""amp"",
            ""pam"",
            ""calloo"",
            ""colola"",
            ""rfs"",
            ""frs""
        ],
        ""solution"": [
            [
                ""acidometry"",
                ""radiectomy""
            ],
            [
                ""amp"",
                ""map"",
                ""pam""
            ],
            [
                ""badiner"",
                ""brained"",
                ""inbread""
            ],
            [
                ""calloo"",
                ""colola""
            ],
            [
                ""curtail"",
                ""trucial"",
                ""urtical""
            ],
            [
                ""frs"",
                ""rfs""
            ],
            [
                ""gladrags"",
                ""laggards""
            ],
            [
                ""housetops"",
                ""posthouse"",
                ""pothouses""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
837,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""metropolises"", ""pleometrosis"", ""throwdown"", ""downthrow"", ""recatalog"", ""cataloger"", ""kouros"", ""rookus"", ""corsage"", ""socager"", ""honest"", ""ethnos"", ""tinkerer"", ""retinker"", ""harpings"", ""phrasing"", ""sharping""]
","[[""cataloger"", ""recatalog""], [""corsage"", ""socager""], [""downthrow"", ""throwdown""], [""ethnos"", ""honest""], [""harpings"", ""phrasing"", ""sharping""], [""kouros"", ""rookus""], [""metropolises"", ""pleometrosis""], [""retinker"", ""tinkerer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""metropolises\"", \""pleometrosis\"", \""throwdown\"", \""downthrow\"", \""recatalog\"", \""cataloger\"", \""kouros\"", \""rookus\"", \""corsage\"", \""socager\"", \""honest\"", \""ethnos\"", \""tinkerer\"", \""retinker\"", \""harpings\"", \""phrasing\"", \""sharping\""]\n"",
    ""answer"": ""[[\""cataloger\"", \""recatalog\""], [\""corsage\"", \""socager\""], [\""downthrow\"", \""throwdown\""], [\""ethnos\"", \""honest\""], [\""harpings\"", \""phrasing\"", \""sharping\""], [\""kouros\"", \""rookus\""], [\""metropolises\"", \""pleometrosis\""], [\""retinker\"", \""tinkerer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 837,
        ""words"": [
            ""metropolises"",
            ""pleometrosis"",
            ""throwdown"",
            ""downthrow"",
            ""recatalog"",
            ""cataloger"",
            ""kouros"",
            ""rookus"",
            ""corsage"",
            ""socager"",
            ""honest"",
            ""ethnos"",
            ""tinkerer"",
            ""retinker"",
            ""harpings"",
            ""phrasing"",
            ""sharping""
        ],
        ""solution"": [
            [
                ""cataloger"",
                ""recatalog""
            ],
            [
                ""corsage"",
                ""socager""
            ],
            [
                ""downthrow"",
                ""throwdown""
            ],
            [
                ""ethnos"",
                ""honest""
            ],
            [
                ""harpings"",
                ""phrasing"",
                ""sharping""
            ],
            [
                ""kouros"",
                ""rookus""
            ],
            [
                ""metropolises"",
                ""pleometrosis""
            ],
            [
                ""retinker"",
                ""tinkerer""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
838,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fer"", ""erf"", ""ref"", ""plote"", ""eplot"", ""ageists"", ""sagiest"", ""dhoon"", ""hondo"", ""coit"", ""otic""]
","[[""ageists"", ""sagiest""], [""coit"", ""otic""], [""dhoon"", ""hondo""], [""eplot"", ""plote""], [""erf"", ""fer"", ""ref""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fer\"", \""erf\"", \""ref\"", \""plote\"", \""eplot\"", \""ageists\"", \""sagiest\"", \""dhoon\"", \""hondo\"", \""coit\"", \""otic\""]\n"",
    ""answer"": ""[[\""ageists\"", \""sagiest\""], [\""coit\"", \""otic\""], [\""dhoon\"", \""hondo\""], [\""eplot\"", \""plote\""], [\""erf\"", \""fer\"", \""ref\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 838,
        ""words"": [
            ""fer"",
            ""erf"",
            ""ref"",
            ""plote"",
            ""eplot"",
            ""ageists"",
            ""sagiest"",
            ""dhoon"",
            ""hondo"",
            ""coit"",
            ""otic""
        ],
        ""solution"": [
            [
                ""ageists"",
                ""sagiest""
            ],
            [
                ""coit"",
                ""otic""
            ],
            [
                ""dhoon"",
                ""hondo""
            ],
            [
                ""eplot"",
                ""plote""
            ],
            [
                ""erf"",
                ""fer"",
                ""ref""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
839,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""shot"", ""tosh"", ""thos"", ""soth"", ""skylab"", ""skybal"", ""nigerians"", ""arginines"", ""sepawn"", ""waspen"", ""eradicators"", ""radiocaster"", ""simoleon"", ""oinomels"", ""bartsia"", ""arabist""]
","[[""arabist"", ""bartsia""], [""arginines"", ""nigerians""], [""eradicators"", ""radiocaster""], [""oinomels"", ""simoleon""], [""sepawn"", ""waspen""], [""shot"", ""soth"", ""thos"", ""tosh""], [""skybal"", ""skylab""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""shot\"", \""tosh\"", \""thos\"", \""soth\"", \""skylab\"", \""skybal\"", \""nigerians\"", \""arginines\"", \""sepawn\"", \""waspen\"", \""eradicators\"", \""radiocaster\"", \""simoleon\"", \""oinomels\"", \""bartsia\"", \""arabist\""]\n"",
    ""answer"": ""[[\""arabist\"", \""bartsia\""], [\""arginines\"", \""nigerians\""], [\""eradicators\"", \""radiocaster\""], [\""oinomels\"", \""simoleon\""], [\""sepawn\"", \""waspen\""], [\""shot\"", \""soth\"", \""thos\"", \""tosh\""], [\""skybal\"", \""skylab\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 839,
        ""words"": [
            ""shot"",
            ""tosh"",
            ""thos"",
            ""soth"",
            ""skylab"",
            ""skybal"",
            ""nigerians"",
            ""arginines"",
            ""sepawn"",
            ""waspen"",
            ""eradicators"",
            ""radiocaster"",
            ""simoleon"",
            ""oinomels"",
            ""bartsia"",
            ""arabist""
        ],
        ""solution"": [
            [
                ""arabist"",
                ""bartsia""
            ],
            [
                ""arginines"",
                ""nigerians""
            ],
            [
                ""eradicators"",
                ""radiocaster""
            ],
            [
                ""oinomels"",
                ""simoleon""
            ],
            [
                ""sepawn"",
                ""waspen""
            ],
            [
                ""shot"",
                ""soth"",
                ""thos"",
                ""tosh""
            ],
            [
                ""skybal"",
                ""skylab""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
840,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rasant"", ""ratans"", ""santar"", ""firelight"", ""flightier"", ""miaotze"", ""atomize"", ""disney"", ""sidney"", ""sondes"", ""endoss"", ""whyfor"", ""forwhy"", ""marblers"", ""ramblers"", ""winterish"", ""interwish"", ""pyruline"", ""unripely"", ""learner"", ""relearn""]
","[[""atomize"", ""miaotze""], [""disney"", ""sidney""], [""endoss"", ""sondes""], [""firelight"", ""flightier""], [""forwhy"", ""whyfor""], [""interwish"", ""winterish""], [""learner"", ""relearn""], [""marblers"", ""ramblers""], [""pyruline"", ""unripely""], [""rasant"", ""ratans"", ""santar""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rasant\"", \""ratans\"", \""santar\"", \""firelight\"", \""flightier\"", \""miaotze\"", \""atomize\"", \""disney\"", \""sidney\"", \""sondes\"", \""endoss\"", \""whyfor\"", \""forwhy\"", \""marblers\"", \""ramblers\"", \""winterish\"", \""interwish\"", \""pyruline\"", \""unripely\"", \""learner\"", \""relearn\""]\n"",
    ""answer"": ""[[\""atomize\"", \""miaotze\""], [\""disney\"", \""sidney\""], [\""endoss\"", \""sondes\""], [\""firelight\"", \""flightier\""], [\""forwhy\"", \""whyfor\""], [\""interwish\"", \""winterish\""], [\""learner\"", \""relearn\""], [\""marblers\"", \""ramblers\""], [\""pyruline\"", \""unripely\""], [\""rasant\"", \""ratans\"", \""santar\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 840,
        ""words"": [
            ""rasant"",
            ""ratans"",
            ""santar"",
            ""firelight"",
            ""flightier"",
            ""miaotze"",
            ""atomize"",
            ""disney"",
            ""sidney"",
            ""sondes"",
            ""endoss"",
            ""whyfor"",
            ""forwhy"",
            ""marblers"",
            ""ramblers"",
            ""winterish"",
            ""interwish"",
            ""pyruline"",
            ""unripely"",
            ""learner"",
            ""relearn""
        ],
        ""solution"": [
            [
                ""atomize"",
                ""miaotze""
            ],
            [
                ""disney"",
                ""sidney""
            ],
            [
                ""endoss"",
                ""sondes""
            ],
            [
                ""firelight"",
                ""flightier""
            ],
            [
                ""forwhy"",
                ""whyfor""
            ],
            [
                ""interwish"",
                ""winterish""
            ],
            [
                ""learner"",
                ""relearn""
            ],
            [
                ""marblers"",
                ""ramblers""
            ],
            [
                ""pyruline"",
                ""unripely""
            ],
            [
                ""rasant"",
                ""ratans"",
                ""santar""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
841,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""modelist"", ""melodist"", ""moldiest"", ""ignote"", ""toeing"", ""rotte"", ""otter"", ""toret"", ""octoroon"", ""coonroot""]
","[[""coonroot"", ""octoroon""], [""ignote"", ""toeing""], [""melodist"", ""modelist"", ""moldiest""], [""otter"", ""rotte"", ""toret""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""modelist\"", \""melodist\"", \""moldiest\"", \""ignote\"", \""toeing\"", \""rotte\"", \""otter\"", \""toret\"", \""octoroon\"", \""coonroot\""]\n"",
    ""answer"": ""[[\""coonroot\"", \""octoroon\""], [\""ignote\"", \""toeing\""], [\""melodist\"", \""modelist\"", \""moldiest\""], [\""otter\"", \""rotte\"", \""toret\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 841,
        ""words"": [
            ""modelist"",
            ""melodist"",
            ""moldiest"",
            ""ignote"",
            ""toeing"",
            ""rotte"",
            ""otter"",
            ""toret"",
            ""octoroon"",
            ""coonroot""
        ],
        ""solution"": [
            [
                ""coonroot"",
                ""octoroon""
            ],
            [
                ""ignote"",
                ""toeing""
            ],
            [
                ""melodist"",
                ""modelist"",
                ""moldiest""
            ],
            [
                ""otter"",
                ""rotte"",
                ""toret""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
842,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tangible"", ""belating"", ""medimnos"", ""demonism"", ""misnomed"", ""despoil"", ""spoiled"", ""soliped"", ""dipoles"", ""diploes"", ""add"", ""dad"", ""chondroangioma"", ""angiochondroma"", ""augustan"", ""guatusan"", ""dister"", ""disert"", ""stride"", ""sterid"", ""monera"", ""anomer"", ""romane"", ""morena"", ""iotacist"", ""taoistic"", ""cutset"", ""cutest""]
","[[""add"", ""dad""], [""angiochondroma"", ""chondroangioma""], [""anomer"", ""monera"", ""morena"", ""romane""], [""augustan"", ""guatusan""], [""belating"", ""tangible""], [""cutest"", ""cutset""], [""demonism"", ""medimnos"", ""misnomed""], [""despoil"", ""diploes"", ""dipoles"", ""soliped"", ""spoiled""], [""disert"", ""dister"", ""sterid"", ""stride""], [""iotacist"", ""taoistic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tangible\"", \""belating\"", \""medimnos\"", \""demonism\"", \""misnomed\"", \""despoil\"", \""spoiled\"", \""soliped\"", \""dipoles\"", \""diploes\"", \""add\"", \""dad\"", \""chondroangioma\"", \""angiochondroma\"", \""augustan\"", \""guatusan\"", \""dister\"", \""disert\"", \""stride\"", \""sterid\"", \""monera\"", \""anomer\"", \""romane\"", \""morena\"", \""iotacist\"", \""taoistic\"", \""cutset\"", \""cutest\""]\n"",
    ""answer"": ""[[\""add\"", \""dad\""], [\""angiochondroma\"", \""chondroangioma\""], [\""anomer\"", \""monera\"", \""morena\"", \""romane\""], [\""augustan\"", \""guatusan\""], [\""belating\"", \""tangible\""], [\""cutest\"", \""cutset\""], [\""demonism\"", \""medimnos\"", \""misnomed\""], [\""despoil\"", \""diploes\"", \""dipoles\"", \""soliped\"", \""spoiled\""], [\""disert\"", \""dister\"", \""sterid\"", \""stride\""], [\""iotacist\"", \""taoistic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 842,
        ""words"": [
            ""tangible"",
            ""belating"",
            ""medimnos"",
            ""demonism"",
            ""misnomed"",
            ""despoil"",
            ""spoiled"",
            ""soliped"",
            ""dipoles"",
            ""diploes"",
            ""add"",
            ""dad"",
            ""chondroangioma"",
            ""angiochondroma"",
            ""augustan"",
            ""guatusan"",
            ""dister"",
            ""disert"",
            ""stride"",
            ""sterid"",
            ""monera"",
            ""anomer"",
            ""romane"",
            ""morena"",
            ""iotacist"",
            ""taoistic"",
            ""cutset"",
            ""cutest""
        ],
        ""solution"": [
            [
                ""add"",
                ""dad""
            ],
            [
                ""angiochondroma"",
                ""chondroangioma""
            ],
            [
                ""anomer"",
                ""monera"",
                ""morena"",
                ""romane""
            ],
            [
                ""augustan"",
                ""guatusan""
            ],
            [
                ""belating"",
                ""tangible""
            ],
            [
                ""cutest"",
                ""cutset""
            ],
            [
                ""demonism"",
                ""medimnos"",
                ""misnomed""
            ],
            [
                ""despoil"",
                ""diploes"",
                ""dipoles"",
                ""soliped"",
                ""spoiled""
            ],
            [
                ""disert"",
                ""dister"",
                ""sterid"",
                ""stride""
            ],
            [
                ""iotacist"",
                ""taoistic""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
843,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""chymes"", ""schemy"", ""sporal"", ""parols"", ""prosal"", ""polars"", ""unaired"", ""uranide"", ""supt"", ""puts"", ""tups"", ""sput"", ""ureic"", ""curie"", ""gearless"", ""largesse"", ""rageless"", ""eelgrass"", ""uncope"", ""pounce"", ""skoot"", ""kotos"", ""stook"", ""cameline"", ""melaenic"", ""jereed"", ""jeered""]
","[[""cameline"", ""melaenic""], [""chymes"", ""schemy""], [""curie"", ""ureic""], [""eelgrass"", ""gearless"", ""largesse"", ""rageless""], [""jeered"", ""jereed""], [""kotos"", ""skoot"", ""stook""], [""parols"", ""polars"", ""prosal"", ""sporal""], [""pounce"", ""uncope""], [""puts"", ""sput"", ""supt"", ""tups""], [""unaired"", ""uranide""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""chymes\"", \""schemy\"", \""sporal\"", \""parols\"", \""prosal\"", \""polars\"", \""unaired\"", \""uranide\"", \""supt\"", \""puts\"", \""tups\"", \""sput\"", \""ureic\"", \""curie\"", \""gearless\"", \""largesse\"", \""rageless\"", \""eelgrass\"", \""uncope\"", \""pounce\"", \""skoot\"", \""kotos\"", \""stook\"", \""cameline\"", \""melaenic\"", \""jereed\"", \""jeered\""]\n"",
    ""answer"": ""[[\""cameline\"", \""melaenic\""], [\""chymes\"", \""schemy\""], [\""curie\"", \""ureic\""], [\""eelgrass\"", \""gearless\"", \""largesse\"", \""rageless\""], [\""jeered\"", \""jereed\""], [\""kotos\"", \""skoot\"", \""stook\""], [\""parols\"", \""polars\"", \""prosal\"", \""sporal\""], [\""pounce\"", \""uncope\""], [\""puts\"", \""sput\"", \""supt\"", \""tups\""], [\""unaired\"", \""uranide\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 843,
        ""words"": [
            ""chymes"",
            ""schemy"",
            ""sporal"",
            ""parols"",
            ""prosal"",
            ""polars"",
            ""unaired"",
            ""uranide"",
            ""supt"",
            ""puts"",
            ""tups"",
            ""sput"",
            ""ureic"",
            ""curie"",
            ""gearless"",
            ""largesse"",
            ""rageless"",
            ""eelgrass"",
            ""uncope"",
            ""pounce"",
            ""skoot"",
            ""kotos"",
            ""stook"",
            ""cameline"",
            ""melaenic"",
            ""jereed"",
            ""jeered""
        ],
        ""solution"": [
            [
                ""cameline"",
                ""melaenic""
            ],
            [
                ""chymes"",
                ""schemy""
            ],
            [
                ""curie"",
                ""ureic""
            ],
            [
                ""eelgrass"",
                ""gearless"",
                ""largesse"",
                ""rageless""
            ],
            [
                ""jeered"",
                ""jereed""
            ],
            [
                ""kotos"",
                ""skoot"",
                ""stook""
            ],
            [
                ""parols"",
                ""polars"",
                ""prosal"",
                ""sporal""
            ],
            [
                ""pounce"",
                ""uncope""
            ],
            [
                ""puts"",
                ""sput"",
                ""supt"",
                ""tups""
            ],
            [
                ""unaired"",
                ""uranide""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
844,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""putation"", ""outpaint"", ""chessart"", ""starches""]
","[[""chessart"", ""starches""], [""outpaint"", ""putation""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""putation\"", \""outpaint\"", \""chessart\"", \""starches\""]\n"",
    ""answer"": ""[[\""chessart\"", \""starches\""], [\""outpaint\"", \""putation\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 844,
        ""words"": [
            ""putation"",
            ""outpaint"",
            ""chessart"",
            ""starches""
        ],
        ""solution"": [
            [
                ""chessart"",
                ""starches""
            ],
            [
                ""outpaint"",
                ""putation""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
845,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""prorate"", ""praetor"", ""skeeing"", ""seeking"", ""germans"", ""engrams"", ""udasi"", ""saudi"", ""bervie"", ""brieve""]
","[[""bervie"", ""brieve""], [""engrams"", ""germans""], [""praetor"", ""prorate""], [""saudi"", ""udasi""], [""seeking"", ""skeeing""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""prorate\"", \""praetor\"", \""skeeing\"", \""seeking\"", \""germans\"", \""engrams\"", \""udasi\"", \""saudi\"", \""bervie\"", \""brieve\""]\n"",
    ""answer"": ""[[\""bervie\"", \""brieve\""], [\""engrams\"", \""germans\""], [\""praetor\"", \""prorate\""], [\""saudi\"", \""udasi\""], [\""seeking\"", \""skeeing\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 845,
        ""words"": [
            ""prorate"",
            ""praetor"",
            ""skeeing"",
            ""seeking"",
            ""germans"",
            ""engrams"",
            ""udasi"",
            ""saudi"",
            ""bervie"",
            ""brieve""
        ],
        ""solution"": [
            [
                ""bervie"",
                ""brieve""
            ],
            [
                ""engrams"",
                ""germans""
            ],
            [
                ""praetor"",
                ""prorate""
            ],
            [
                ""saudi"",
                ""udasi""
            ],
            [
                ""seeking"",
                ""skeeing""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
846,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""yelk"", ""kyle"", ""scovel"", ""cloves"", ""spoilless"", ""slipsoles"", ""pyre"", ""rype"", ""prey"", ""deiced"", ""decide"", ""spritehood"", ""priesthood"", ""slotted"", ""dottles"", ""dottels"", ""threaps"", ""spreath"", ""tephras"", ""eleoplast"", ""soleplate"", ""antedate"", ""edentata""]
","[[""antedate"", ""edentata""], [""cloves"", ""scovel""], [""decide"", ""deiced""], [""dottels"", ""dottles"", ""slotted""], [""eleoplast"", ""soleplate""], [""kyle"", ""yelk""], [""prey"", ""pyre"", ""rype""], [""priesthood"", ""spritehood""], [""slipsoles"", ""spoilless""], [""spreath"", ""tephras"", ""threaps""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""yelk\"", \""kyle\"", \""scovel\"", \""cloves\"", \""spoilless\"", \""slipsoles\"", \""pyre\"", \""rype\"", \""prey\"", \""deiced\"", \""decide\"", \""spritehood\"", \""priesthood\"", \""slotted\"", \""dottles\"", \""dottels\"", \""threaps\"", \""spreath\"", \""tephras\"", \""eleoplast\"", \""soleplate\"", \""antedate\"", \""edentata\""]\n"",
    ""answer"": ""[[\""antedate\"", \""edentata\""], [\""cloves\"", \""scovel\""], [\""decide\"", \""deiced\""], [\""dottels\"", \""dottles\"", \""slotted\""], [\""eleoplast\"", \""soleplate\""], [\""kyle\"", \""yelk\""], [\""prey\"", \""pyre\"", \""rype\""], [\""priesthood\"", \""spritehood\""], [\""slipsoles\"", \""spoilless\""], [\""spreath\"", \""tephras\"", \""threaps\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 846,
        ""words"": [
            ""yelk"",
            ""kyle"",
            ""scovel"",
            ""cloves"",
            ""spoilless"",
            ""slipsoles"",
            ""pyre"",
            ""rype"",
            ""prey"",
            ""deiced"",
            ""decide"",
            ""spritehood"",
            ""priesthood"",
            ""slotted"",
            ""dottles"",
            ""dottels"",
            ""threaps"",
            ""spreath"",
            ""tephras"",
            ""eleoplast"",
            ""soleplate"",
            ""antedate"",
            ""edentata""
        ],
        ""solution"": [
            [
                ""antedate"",
                ""edentata""
            ],
            [
                ""cloves"",
                ""scovel""
            ],
            [
                ""decide"",
                ""deiced""
            ],
            [
                ""dottels"",
                ""dottles"",
                ""slotted""
            ],
            [
                ""eleoplast"",
                ""soleplate""
            ],
            [
                ""kyle"",
                ""yelk""
            ],
            [
                ""prey"",
                ""pyre"",
                ""rype""
            ],
            [
                ""priesthood"",
                ""spritehood""
            ],
            [
                ""slipsoles"",
                ""spoilless""
            ],
            [
                ""spreath"",
                ""tephras"",
                ""threaps""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
847,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""posterist"", ""sportiest"", ""rewash"", ""hawser"", ""washer"", ""rend"", ""dern"", ""nerd""]
","[[""dern"", ""nerd"", ""rend""], [""hawser"", ""rewash"", ""washer""], [""posterist"", ""sportiest""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""posterist\"", \""sportiest\"", \""rewash\"", \""hawser\"", \""washer\"", \""rend\"", \""dern\"", \""nerd\""]\n"",
    ""answer"": ""[[\""dern\"", \""nerd\"", \""rend\""], [\""hawser\"", \""rewash\"", \""washer\""], [\""posterist\"", \""sportiest\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 847,
        ""words"": [
            ""posterist"",
            ""sportiest"",
            ""rewash"",
            ""hawser"",
            ""washer"",
            ""rend"",
            ""dern"",
            ""nerd""
        ],
        ""solution"": [
            [
                ""dern"",
                ""nerd"",
                ""rend""
            ],
            [
                ""hawser"",
                ""rewash"",
                ""washer""
            ],
            [
                ""posterist"",
                ""sportiest""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
848,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""antilia"", ""italian"", ""overawing"", ""reavowing"", ""chapeling"", ""pleaching""]
","[[""antilia"", ""italian""], [""chapeling"", ""pleaching""], [""overawing"", ""reavowing""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""antilia\"", \""italian\"", \""overawing\"", \""reavowing\"", \""chapeling\"", \""pleaching\""]\n"",
    ""answer"": ""[[\""antilia\"", \""italian\""], [\""chapeling\"", \""pleaching\""], [\""overawing\"", \""reavowing\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 848,
        ""words"": [
            ""antilia"",
            ""italian"",
            ""overawing"",
            ""reavowing"",
            ""chapeling"",
            ""pleaching""
        ],
        ""solution"": [
            [
                ""antilia"",
                ""italian""
            ],
            [
                ""chapeling"",
                ""pleaching""
            ],
            [
                ""overawing"",
                ""reavowing""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
849,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""biremes"", ""berimes"", ""bemires"", ""reservedly"", ""reversedly"", ""garottes"", ""ergostat"", ""loping"", ""poling"", ""unlibeled"", ""undelible"", ""predations"", ""patronised"", ""oilcamp"", ""pamlico""]
","[[""bemires"", ""berimes"", ""biremes""], [""ergostat"", ""garottes""], [""loping"", ""poling""], [""oilcamp"", ""pamlico""], [""patronised"", ""predations""], [""reservedly"", ""reversedly""], [""undelible"", ""unlibeled""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""biremes\"", \""berimes\"", \""bemires\"", \""reservedly\"", \""reversedly\"", \""garottes\"", \""ergostat\"", \""loping\"", \""poling\"", \""unlibeled\"", \""undelible\"", \""predations\"", \""patronised\"", \""oilcamp\"", \""pamlico\""]\n"",
    ""answer"": ""[[\""bemires\"", \""berimes\"", \""biremes\""], [\""ergostat\"", \""garottes\""], [\""loping\"", \""poling\""], [\""oilcamp\"", \""pamlico\""], [\""patronised\"", \""predations\""], [\""reservedly\"", \""reversedly\""], [\""undelible\"", \""unlibeled\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 849,
        ""words"": [
            ""biremes"",
            ""berimes"",
            ""bemires"",
            ""reservedly"",
            ""reversedly"",
            ""garottes"",
            ""ergostat"",
            ""loping"",
            ""poling"",
            ""unlibeled"",
            ""undelible"",
            ""predations"",
            ""patronised"",
            ""oilcamp"",
            ""pamlico""
        ],
        ""solution"": [
            [
                ""bemires"",
                ""berimes"",
                ""biremes""
            ],
            [
                ""ergostat"",
                ""garottes""
            ],
            [
                ""loping"",
                ""poling""
            ],
            [
                ""oilcamp"",
                ""pamlico""
            ],
            [
                ""patronised"",
                ""predations""
            ],
            [
                ""reservedly"",
                ""reversedly""
            ],
            [
                ""undelible"",
                ""unlibeled""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
850,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""muffins"", ""munsiff"", ""sirple"", ""pliers"", ""perils"", ""spiler"", ""pilers""]
","[[""muffins"", ""munsiff""], [""perils"", ""pilers"", ""pliers"", ""sirple"", ""spiler""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""muffins\"", \""munsiff\"", \""sirple\"", \""pliers\"", \""perils\"", \""spiler\"", \""pilers\""]\n"",
    ""answer"": ""[[\""muffins\"", \""munsiff\""], [\""perils\"", \""pilers\"", \""pliers\"", \""sirple\"", \""spiler\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 850,
        ""words"": [
            ""muffins"",
            ""munsiff"",
            ""sirple"",
            ""pliers"",
            ""perils"",
            ""spiler"",
            ""pilers""
        ],
        ""solution"": [
            [
                ""muffins"",
                ""munsiff""
            ],
            [
                ""perils"",
                ""pilers"",
                ""pliers"",
                ""sirple"",
                ""spiler""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
851,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""arcsin"", ""cairns"", ""belder"", ""bedrel"", ""slouchiness"", ""cushionless"", ""imbarn"", ""minbar"", ""gelated"", ""legated"", ""cateringly"", ""anticlergy"", ""delate"", ""elated"", ""loe"", ""ole"", ""huse"", ""hues"", ""melomanic"", ""commelina""]
","[[""anticlergy"", ""cateringly""], [""arcsin"", ""cairns""], [""bedrel"", ""belder""], [""commelina"", ""melomanic""], [""cushionless"", ""slouchiness""], [""delate"", ""elated""], [""gelated"", ""legated""], [""hues"", ""huse""], [""imbarn"", ""minbar""], [""loe"", ""ole""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""arcsin\"", \""cairns\"", \""belder\"", \""bedrel\"", \""slouchiness\"", \""cushionless\"", \""imbarn\"", \""minbar\"", \""gelated\"", \""legated\"", \""cateringly\"", \""anticlergy\"", \""delate\"", \""elated\"", \""loe\"", \""ole\"", \""huse\"", \""hues\"", \""melomanic\"", \""commelina\""]\n"",
    ""answer"": ""[[\""anticlergy\"", \""cateringly\""], [\""arcsin\"", \""cairns\""], [\""bedrel\"", \""belder\""], [\""commelina\"", \""melomanic\""], [\""cushionless\"", \""slouchiness\""], [\""delate\"", \""elated\""], [\""gelated\"", \""legated\""], [\""hues\"", \""huse\""], [\""imbarn\"", \""minbar\""], [\""loe\"", \""ole\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 851,
        ""words"": [
            ""arcsin"",
            ""cairns"",
            ""belder"",
            ""bedrel"",
            ""slouchiness"",
            ""cushionless"",
            ""imbarn"",
            ""minbar"",
            ""gelated"",
            ""legated"",
            ""cateringly"",
            ""anticlergy"",
            ""delate"",
            ""elated"",
            ""loe"",
            ""ole"",
            ""huse"",
            ""hues"",
            ""melomanic"",
            ""commelina""
        ],
        ""solution"": [
            [
                ""anticlergy"",
                ""cateringly""
            ],
            [
                ""arcsin"",
                ""cairns""
            ],
            [
                ""bedrel"",
                ""belder""
            ],
            [
                ""commelina"",
                ""melomanic""
            ],
            [
                ""cushionless"",
                ""slouchiness""
            ],
            [
                ""delate"",
                ""elated""
            ],
            [
                ""gelated"",
                ""legated""
            ],
            [
                ""hues"",
                ""huse""
            ],
            [
                ""imbarn"",
                ""minbar""
            ],
            [
                ""loe"",
                ""ole""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
852,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""taissle"", ""salties"", ""podagra"", ""pagador"", ""galiot"", ""latigo""]
","[[""galiot"", ""latigo""], [""pagador"", ""podagra""], [""salties"", ""taissle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""taissle\"", \""salties\"", \""podagra\"", \""pagador\"", \""galiot\"", \""latigo\""]\n"",
    ""answer"": ""[[\""galiot\"", \""latigo\""], [\""pagador\"", \""podagra\""], [\""salties\"", \""taissle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 852,
        ""words"": [
            ""taissle"",
            ""salties"",
            ""podagra"",
            ""pagador"",
            ""galiot"",
            ""latigo""
        ],
        ""solution"": [
            [
                ""galiot"",
                ""latigo""
            ],
            [
                ""pagador"",
                ""podagra""
            ],
            [
                ""salties"",
                ""taissle""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
853,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""renule"", ""enlure"", ""wissle"", ""wissel"", ""redeflect"", ""reflected"", ""aldrin"", ""inlard"", ""pounded"", ""undoped"", ""polemic"", ""compile"", ""seconde"", ""encodes""]
","[[""aldrin"", ""inlard""], [""compile"", ""polemic""], [""encodes"", ""seconde""], [""enlure"", ""renule""], [""pounded"", ""undoped""], [""redeflect"", ""reflected""], [""wissel"", ""wissle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""renule\"", \""enlure\"", \""wissle\"", \""wissel\"", \""redeflect\"", \""reflected\"", \""aldrin\"", \""inlard\"", \""pounded\"", \""undoped\"", \""polemic\"", \""compile\"", \""seconde\"", \""encodes\""]\n"",
    ""answer"": ""[[\""aldrin\"", \""inlard\""], [\""compile\"", \""polemic\""], [\""encodes\"", \""seconde\""], [\""enlure\"", \""renule\""], [\""pounded\"", \""undoped\""], [\""redeflect\"", \""reflected\""], [\""wissel\"", \""wissle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 853,
        ""words"": [
            ""renule"",
            ""enlure"",
            ""wissle"",
            ""wissel"",
            ""redeflect"",
            ""reflected"",
            ""aldrin"",
            ""inlard"",
            ""pounded"",
            ""undoped"",
            ""polemic"",
            ""compile"",
            ""seconde"",
            ""encodes""
        ],
        ""solution"": [
            [
                ""aldrin"",
                ""inlard""
            ],
            [
                ""compile"",
                ""polemic""
            ],
            [
                ""encodes"",
                ""seconde""
            ],
            [
                ""enlure"",
                ""renule""
            ],
            [
                ""pounded"",
                ""undoped""
            ],
            [
                ""redeflect"",
                ""reflected""
            ],
            [
                ""wissel"",
                ""wissle""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
854,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gentiin"", ""ingenit"", ""hubris"", ""ribhus"", ""emplore"", ""plerome"", ""sciatic"", ""ascitic"", ""certifier"", ""rectifier""]
","[[""ascitic"", ""sciatic""], [""certifier"", ""rectifier""], [""emplore"", ""plerome""], [""gentiin"", ""ingenit""], [""hubris"", ""ribhus""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gentiin\"", \""ingenit\"", \""hubris\"", \""ribhus\"", \""emplore\"", \""plerome\"", \""sciatic\"", \""ascitic\"", \""certifier\"", \""rectifier\""]\n"",
    ""answer"": ""[[\""ascitic\"", \""sciatic\""], [\""certifier\"", \""rectifier\""], [\""emplore\"", \""plerome\""], [\""gentiin\"", \""ingenit\""], [\""hubris\"", \""ribhus\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 854,
        ""words"": [
            ""gentiin"",
            ""ingenit"",
            ""hubris"",
            ""ribhus"",
            ""emplore"",
            ""plerome"",
            ""sciatic"",
            ""ascitic"",
            ""certifier"",
            ""rectifier""
        ],
        ""solution"": [
            [
                ""ascitic"",
                ""sciatic""
            ],
            [
                ""certifier"",
                ""rectifier""
            ],
            [
                ""emplore"",
                ""plerome""
            ],
            [
                ""gentiin"",
                ""ingenit""
            ],
            [
                ""hubris"",
                ""ribhus""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
855,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tridecyl"", ""directly"", ""unfolding"", ""foundling"", ""remitter"", ""trimeter"", ""soluble"", ""lobules"", ""boulles"", ""bridally"", ""ribaldly"", ""respells"", ""spellers"", ""realisation"", ""rationalise"", ""rondure"", ""rounder"", ""unorder"", ""definer"", ""refined""]
","[[""boulles"", ""lobules"", ""soluble""], [""bridally"", ""ribaldly""], [""definer"", ""refined""], [""directly"", ""tridecyl""], [""foundling"", ""unfolding""], [""rationalise"", ""realisation""], [""remitter"", ""trimeter""], [""respells"", ""spellers""], [""rondure"", ""rounder"", ""unorder""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tridecyl\"", \""directly\"", \""unfolding\"", \""foundling\"", \""remitter\"", \""trimeter\"", \""soluble\"", \""lobules\"", \""boulles\"", \""bridally\"", \""ribaldly\"", \""respells\"", \""spellers\"", \""realisation\"", \""rationalise\"", \""rondure\"", \""rounder\"", \""unorder\"", \""definer\"", \""refined\""]\n"",
    ""answer"": ""[[\""boulles\"", \""lobules\"", \""soluble\""], [\""bridally\"", \""ribaldly\""], [\""definer\"", \""refined\""], [\""directly\"", \""tridecyl\""], [\""foundling\"", \""unfolding\""], [\""rationalise\"", \""realisation\""], [\""remitter\"", \""trimeter\""], [\""respells\"", \""spellers\""], [\""rondure\"", \""rounder\"", \""unorder\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 855,
        ""words"": [
            ""tridecyl"",
            ""directly"",
            ""unfolding"",
            ""foundling"",
            ""remitter"",
            ""trimeter"",
            ""soluble"",
            ""lobules"",
            ""boulles"",
            ""bridally"",
            ""ribaldly"",
            ""respells"",
            ""spellers"",
            ""realisation"",
            ""rationalise"",
            ""rondure"",
            ""rounder"",
            ""unorder"",
            ""definer"",
            ""refined""
        ],
        ""solution"": [
            [
                ""boulles"",
                ""lobules"",
                ""soluble""
            ],
            [
                ""bridally"",
                ""ribaldly""
            ],
            [
                ""definer"",
                ""refined""
            ],
            [
                ""directly"",
                ""tridecyl""
            ],
            [
                ""foundling"",
                ""unfolding""
            ],
            [
                ""rationalise"",
                ""realisation""
            ],
            [
                ""remitter"",
                ""trimeter""
            ],
            [
                ""respells"",
                ""spellers""
            ],
            [
                ""rondure"",
                ""rounder"",
                ""unorder""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
856,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""infare"", ""farine"", ""fainer"", ""enfrai"", ""replications"", ""inspectorial"", ""postie"", ""potsie"", ""sopite"", ""epoist"", ""pisote""]
","[[""enfrai"", ""fainer"", ""farine"", ""infare""], [""epoist"", ""pisote"", ""postie"", ""potsie"", ""sopite""], [""inspectorial"", ""replications""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""infare\"", \""farine\"", \""fainer\"", \""enfrai\"", \""replications\"", \""inspectorial\"", \""postie\"", \""potsie\"", \""sopite\"", \""epoist\"", \""pisote\""]\n"",
    ""answer"": ""[[\""enfrai\"", \""fainer\"", \""farine\"", \""infare\""], [\""epoist\"", \""pisote\"", \""postie\"", \""potsie\"", \""sopite\""], [\""inspectorial\"", \""replications\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 856,
        ""words"": [
            ""infare"",
            ""farine"",
            ""fainer"",
            ""enfrai"",
            ""replications"",
            ""inspectorial"",
            ""postie"",
            ""potsie"",
            ""sopite"",
            ""epoist"",
            ""pisote""
        ],
        ""solution"": [
            [
                ""enfrai"",
                ""fainer"",
                ""farine"",
                ""infare""
            ],
            [
                ""epoist"",
                ""pisote"",
                ""postie"",
                ""potsie"",
                ""sopite""
            ],
            [
                ""inspectorial"",
                ""replications""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
857,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""kore"", ""oker"", ""kero"", ""annoyed"", ""anodyne"", ""bimotors"", ""robotism"", ""maoist"", ""taoism"", ""pyrogenetic"", ""pyretogenic""]
","[[""annoyed"", ""anodyne""], [""bimotors"", ""robotism""], [""kero"", ""kore"", ""oker""], [""maoist"", ""taoism""], [""pyretogenic"", ""pyrogenetic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""kore\"", \""oker\"", \""kero\"", \""annoyed\"", \""anodyne\"", \""bimotors\"", \""robotism\"", \""maoist\"", \""taoism\"", \""pyrogenetic\"", \""pyretogenic\""]\n"",
    ""answer"": ""[[\""annoyed\"", \""anodyne\""], [\""bimotors\"", \""robotism\""], [\""kero\"", \""kore\"", \""oker\""], [\""maoist\"", \""taoism\""], [\""pyretogenic\"", \""pyrogenetic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 857,
        ""words"": [
            ""kore"",
            ""oker"",
            ""kero"",
            ""annoyed"",
            ""anodyne"",
            ""bimotors"",
            ""robotism"",
            ""maoist"",
            ""taoism"",
            ""pyrogenetic"",
            ""pyretogenic""
        ],
        ""solution"": [
            [
                ""annoyed"",
                ""anodyne""
            ],
            [
                ""bimotors"",
                ""robotism""
            ],
            [
                ""kero"",
                ""kore"",
                ""oker""
            ],
            [
                ""maoist"",
                ""taoism""
            ],
            [
                ""pyretogenic"",
                ""pyrogenetic""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
858,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""walsh"", ""shawl"", ""corseting"", ""escorting"", ""sectoring""]
","[[""corseting"", ""escorting"", ""sectoring""], [""shawl"", ""walsh""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""walsh\"", \""shawl\"", \""corseting\"", \""escorting\"", \""sectoring\""]\n"",
    ""answer"": ""[[\""corseting\"", \""escorting\"", \""sectoring\""], [\""shawl\"", \""walsh\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 858,
        ""words"": [
            ""walsh"",
            ""shawl"",
            ""corseting"",
            ""escorting"",
            ""sectoring""
        ],
        ""solution"": [
            [
                ""corseting"",
                ""escorting"",
                ""sectoring""
            ],
            [
                ""shawl"",
                ""walsh""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
859,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""clamatores"", ""scleromata"", ""vug"", ""guv"", ""cashed"", ""chased"", ""physiopsychology"", ""psychophysiology"", ""scraps"", ""scarps"", ""wallies"", ""wallise"", ""celebrate"", ""erectable"", ""glomerate"", ""algometer""]
","[[""algometer"", ""glomerate""], [""cashed"", ""chased""], [""celebrate"", ""erectable""], [""clamatores"", ""scleromata""], [""guv"", ""vug""], [""physiopsychology"", ""psychophysiology""], [""scarps"", ""scraps""], [""wallies"", ""wallise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""clamatores\"", \""scleromata\"", \""vug\"", \""guv\"", \""cashed\"", \""chased\"", \""physiopsychology\"", \""psychophysiology\"", \""scraps\"", \""scarps\"", \""wallies\"", \""wallise\"", \""celebrate\"", \""erectable\"", \""glomerate\"", \""algometer\""]\n"",
    ""answer"": ""[[\""algometer\"", \""glomerate\""], [\""cashed\"", \""chased\""], [\""celebrate\"", \""erectable\""], [\""clamatores\"", \""scleromata\""], [\""guv\"", \""vug\""], [\""physiopsychology\"", \""psychophysiology\""], [\""scarps\"", \""scraps\""], [\""wallies\"", \""wallise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 859,
        ""words"": [
            ""clamatores"",
            ""scleromata"",
            ""vug"",
            ""guv"",
            ""cashed"",
            ""chased"",
            ""physiopsychology"",
            ""psychophysiology"",
            ""scraps"",
            ""scarps"",
            ""wallies"",
            ""wallise"",
            ""celebrate"",
            ""erectable"",
            ""glomerate"",
            ""algometer""
        ],
        ""solution"": [
            [
                ""algometer"",
                ""glomerate""
            ],
            [
                ""cashed"",
                ""chased""
            ],
            [
                ""celebrate"",
                ""erectable""
            ],
            [
                ""clamatores"",
                ""scleromata""
            ],
            [
                ""guv"",
                ""vug""
            ],
            [
                ""physiopsychology"",
                ""psychophysiology""
            ],
            [
                ""scarps"",
                ""scraps""
            ],
            [
                ""wallies"",
                ""wallise""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
860,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""petulant"", ""patulent"", ""corder"", ""record"", ""sam"", ""mas"", ""sma"", ""seisin"", ""niseis"", ""riches"", ""shicer""]
","[[""corder"", ""record""], [""mas"", ""sam"", ""sma""], [""niseis"", ""seisin""], [""patulent"", ""petulant""], [""riches"", ""shicer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""petulant\"", \""patulent\"", \""corder\"", \""record\"", \""sam\"", \""mas\"", \""sma\"", \""seisin\"", \""niseis\"", \""riches\"", \""shicer\""]\n"",
    ""answer"": ""[[\""corder\"", \""record\""], [\""mas\"", \""sam\"", \""sma\""], [\""niseis\"", \""seisin\""], [\""patulent\"", \""petulant\""], [\""riches\"", \""shicer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 860,
        ""words"": [
            ""petulant"",
            ""patulent"",
            ""corder"",
            ""record"",
            ""sam"",
            ""mas"",
            ""sma"",
            ""seisin"",
            ""niseis"",
            ""riches"",
            ""shicer""
        ],
        ""solution"": [
            [
                ""corder"",
                ""record""
            ],
            [
                ""mas"",
                ""sam"",
                ""sma""
            ],
            [
                ""niseis"",
                ""seisin""
            ],
            [
                ""patulent"",
                ""petulant""
            ],
            [
                ""riches"",
                ""shicer""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
861,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""prepectoral"", ""preceptoral"", ""crapple"", ""clapper"", ""subdie"", ""busied"", ""ughten"", ""thunge"", ""manuring"", ""unarming"", ""disinfecter"", ""dentifrices"", ""redisinfect"", ""intexine"", ""exintine"", ""workpiece"", ""piecework"", ""lumine"", ""unlime"", ""nonrelation"", ""nonoriental""]
","[[""busied"", ""subdie""], [""clapper"", ""crapple""], [""dentifrices"", ""disinfecter"", ""redisinfect""], [""exintine"", ""intexine""], [""lumine"", ""unlime""], [""manuring"", ""unarming""], [""nonoriental"", ""nonrelation""], [""piecework"", ""workpiece""], [""preceptoral"", ""prepectoral""], [""thunge"", ""ughten""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""prepectoral\"", \""preceptoral\"", \""crapple\"", \""clapper\"", \""subdie\"", \""busied\"", \""ughten\"", \""thunge\"", \""manuring\"", \""unarming\"", \""disinfecter\"", \""dentifrices\"", \""redisinfect\"", \""intexine\"", \""exintine\"", \""workpiece\"", \""piecework\"", \""lumine\"", \""unlime\"", \""nonrelation\"", \""nonoriental\""]\n"",
    ""answer"": ""[[\""busied\"", \""subdie\""], [\""clapper\"", \""crapple\""], [\""dentifrices\"", \""disinfecter\"", \""redisinfect\""], [\""exintine\"", \""intexine\""], [\""lumine\"", \""unlime\""], [\""manuring\"", \""unarming\""], [\""nonoriental\"", \""nonrelation\""], [\""piecework\"", \""workpiece\""], [\""preceptoral\"", \""prepectoral\""], [\""thunge\"", \""ughten\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 861,
        ""words"": [
            ""prepectoral"",
            ""preceptoral"",
            ""crapple"",
            ""clapper"",
            ""subdie"",
            ""busied"",
            ""ughten"",
            ""thunge"",
            ""manuring"",
            ""unarming"",
            ""disinfecter"",
            ""dentifrices"",
            ""redisinfect"",
            ""intexine"",
            ""exintine"",
            ""workpiece"",
            ""piecework"",
            ""lumine"",
            ""unlime"",
            ""nonrelation"",
            ""nonoriental""
        ],
        ""solution"": [
            [
                ""busied"",
                ""subdie""
            ],
            [
                ""clapper"",
                ""crapple""
            ],
            [
                ""dentifrices"",
                ""disinfecter"",
                ""redisinfect""
            ],
            [
                ""exintine"",
                ""intexine""
            ],
            [
                ""lumine"",
                ""unlime""
            ],
            [
                ""manuring"",
                ""unarming""
            ],
            [
                ""nonoriental"",
                ""nonrelation""
            ],
            [
                ""piecework"",
                ""workpiece""
            ],
            [
                ""preceptoral"",
                ""prepectoral""
            ],
            [
                ""thunge"",
                ""ughten""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
862,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""galleried"", ""greillade"", ""cnidian"", ""indican"", ""perreia"", ""pereira"", ""minute"", ""munite"", ""mutine"", ""redesert"", ""deserter"", ""jecoral"", ""cajoler"", ""pelota"", ""alepot"", ""pigly"", ""gilpy"", ""definitor"", ""introfied""]
","[[""alepot"", ""pelota""], [""cajoler"", ""jecoral""], [""cnidian"", ""indican""], [""definitor"", ""introfied""], [""deserter"", ""redesert""], [""galleried"", ""greillade""], [""gilpy"", ""pigly""], [""minute"", ""munite"", ""mutine""], [""pereira"", ""perreia""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""galleried\"", \""greillade\"", \""cnidian\"", \""indican\"", \""perreia\"", \""pereira\"", \""minute\"", \""munite\"", \""mutine\"", \""redesert\"", \""deserter\"", \""jecoral\"", \""cajoler\"", \""pelota\"", \""alepot\"", \""pigly\"", \""gilpy\"", \""definitor\"", \""introfied\""]\n"",
    ""answer"": ""[[\""alepot\"", \""pelota\""], [\""cajoler\"", \""jecoral\""], [\""cnidian\"", \""indican\""], [\""definitor\"", \""introfied\""], [\""deserter\"", \""redesert\""], [\""galleried\"", \""greillade\""], [\""gilpy\"", \""pigly\""], [\""minute\"", \""munite\"", \""mutine\""], [\""pereira\"", \""perreia\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 862,
        ""words"": [
            ""galleried"",
            ""greillade"",
            ""cnidian"",
            ""indican"",
            ""perreia"",
            ""pereira"",
            ""minute"",
            ""munite"",
            ""mutine"",
            ""redesert"",
            ""deserter"",
            ""jecoral"",
            ""cajoler"",
            ""pelota"",
            ""alepot"",
            ""pigly"",
            ""gilpy"",
            ""definitor"",
            ""introfied""
        ],
        ""solution"": [
            [
                ""alepot"",
                ""pelota""
            ],
            [
                ""cajoler"",
                ""jecoral""
            ],
            [
                ""cnidian"",
                ""indican""
            ],
            [
                ""definitor"",
                ""introfied""
            ],
            [
                ""deserter"",
                ""redesert""
            ],
            [
                ""galleried"",
                ""greillade""
            ],
            [
                ""gilpy"",
                ""pigly""
            ],
            [
                ""minute"",
                ""munite"",
                ""mutine""
            ],
            [
                ""pereira"",
                ""perreia""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
863,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""encashes"", ""enchases"", ""nonracial"", ""carniolan""]
","[[""carniolan"", ""nonracial""], [""encashes"", ""enchases""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""encashes\"", \""enchases\"", \""nonracial\"", \""carniolan\""]\n"",
    ""answer"": ""[[\""carniolan\"", \""nonracial\""], [\""encashes\"", \""enchases\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 863,
        ""words"": [
            ""encashes"",
            ""enchases"",
            ""nonracial"",
            ""carniolan""
        ],
        ""solution"": [
            [
                ""carniolan"",
                ""nonracial""
            ],
            [
                ""encashes"",
                ""enchases""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
864,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""neist"", ""snite"", ""tines"", ""inset"", ""senit"", ""tuarn"", ""untar"", ""arnut"", ""beladle"", ""labeled"", ""criterium"", ""tricerium"", ""telephotograph"", ""phototelegraph""]
","[[""arnut"", ""tuarn"", ""untar""], [""beladle"", ""labeled""], [""criterium"", ""tricerium""], [""inset"", ""neist"", ""senit"", ""snite"", ""tines""], [""phototelegraph"", ""telephotograph""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""neist\"", \""snite\"", \""tines\"", \""inset\"", \""senit\"", \""tuarn\"", \""untar\"", \""arnut\"", \""beladle\"", \""labeled\"", \""criterium\"", \""tricerium\"", \""telephotograph\"", \""phototelegraph\""]\n"",
    ""answer"": ""[[\""arnut\"", \""tuarn\"", \""untar\""], [\""beladle\"", \""labeled\""], [\""criterium\"", \""tricerium\""], [\""inset\"", \""neist\"", \""senit\"", \""snite\"", \""tines\""], [\""phototelegraph\"", \""telephotograph\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 864,
        ""words"": [
            ""neist"",
            ""snite"",
            ""tines"",
            ""inset"",
            ""senit"",
            ""tuarn"",
            ""untar"",
            ""arnut"",
            ""beladle"",
            ""labeled"",
            ""criterium"",
            ""tricerium"",
            ""telephotograph"",
            ""phototelegraph""
        ],
        ""solution"": [
            [
                ""arnut"",
                ""tuarn"",
                ""untar""
            ],
            [
                ""beladle"",
                ""labeled""
            ],
            [
                ""criterium"",
                ""tricerium""
            ],
            [
                ""inset"",
                ""neist"",
                ""senit"",
                ""snite"",
                ""tines""
            ],
            [
                ""phototelegraph"",
                ""telephotograph""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
865,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""precurse"", ""precures"", ""aloin"", ""anoil"", ""anoli""]
","[[""aloin"", ""anoil"", ""anoli""], [""precures"", ""precurse""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""precurse\"", \""precures\"", \""aloin\"", \""anoil\"", \""anoli\""]\n"",
    ""answer"": ""[[\""aloin\"", \""anoil\"", \""anoli\""], [\""precures\"", \""precurse\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 865,
        ""words"": [
            ""precurse"",
            ""precures"",
            ""aloin"",
            ""anoil"",
            ""anoli""
        ],
        ""solution"": [
            [
                ""aloin"",
                ""anoil"",
                ""anoli""
            ],
            [
                ""precures"",
                ""precurse""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
866,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sastra"", ""assart"", ""rangeless"", ""angerless"", ""largeness"", ""regalness"", ""crestmoreite"", ""stereometric"", ""adlay"", ""dayal"", ""unresonating"", ""nonsignature"", ""fickler"", ""flicker"", ""recanting"", ""cantering"", ""santiago"", ""agonista""]
","[[""adlay"", ""dayal""], [""agonista"", ""santiago""], [""angerless"", ""largeness"", ""rangeless"", ""regalness""], [""assart"", ""sastra""], [""cantering"", ""recanting""], [""crestmoreite"", ""stereometric""], [""fickler"", ""flicker""], [""nonsignature"", ""unresonating""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sastra\"", \""assart\"", \""rangeless\"", \""angerless\"", \""largeness\"", \""regalness\"", \""crestmoreite\"", \""stereometric\"", \""adlay\"", \""dayal\"", \""unresonating\"", \""nonsignature\"", \""fickler\"", \""flicker\"", \""recanting\"", \""cantering\"", \""santiago\"", \""agonista\""]\n"",
    ""answer"": ""[[\""adlay\"", \""dayal\""], [\""agonista\"", \""santiago\""], [\""angerless\"", \""largeness\"", \""rangeless\"", \""regalness\""], [\""assart\"", \""sastra\""], [\""cantering\"", \""recanting\""], [\""crestmoreite\"", \""stereometric\""], [\""fickler\"", \""flicker\""], [\""nonsignature\"", \""unresonating\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 866,
        ""words"": [
            ""sastra"",
            ""assart"",
            ""rangeless"",
            ""angerless"",
            ""largeness"",
            ""regalness"",
            ""crestmoreite"",
            ""stereometric"",
            ""adlay"",
            ""dayal"",
            ""unresonating"",
            ""nonsignature"",
            ""fickler"",
            ""flicker"",
            ""recanting"",
            ""cantering"",
            ""santiago"",
            ""agonista""
        ],
        ""solution"": [
            [
                ""adlay"",
                ""dayal""
            ],
            [
                ""agonista"",
                ""santiago""
            ],
            [
                ""angerless"",
                ""largeness"",
                ""rangeless"",
                ""regalness""
            ],
            [
                ""assart"",
                ""sastra""
            ],
            [
                ""cantering"",
                ""recanting""
            ],
            [
                ""crestmoreite"",
                ""stereometric""
            ],
            [
                ""fickler"",
                ""flicker""
            ],
            [
                ""nonsignature"",
                ""unresonating""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
867,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""notaeal"", ""anatole"", ""septimal"", ""palmiste"", ""petalism"", ""palmiest"", ""tooling"", ""ilongot"", ""souring"", ""nigrous""]
","[[""anatole"", ""notaeal""], [""ilongot"", ""tooling""], [""nigrous"", ""souring""], [""palmiest"", ""palmiste"", ""petalism"", ""septimal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""notaeal\"", \""anatole\"", \""septimal\"", \""palmiste\"", \""petalism\"", \""palmiest\"", \""tooling\"", \""ilongot\"", \""souring\"", \""nigrous\""]\n"",
    ""answer"": ""[[\""anatole\"", \""notaeal\""], [\""ilongot\"", \""tooling\""], [\""nigrous\"", \""souring\""], [\""palmiest\"", \""palmiste\"", \""petalism\"", \""septimal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 867,
        ""words"": [
            ""notaeal"",
            ""anatole"",
            ""septimal"",
            ""palmiste"",
            ""petalism"",
            ""palmiest"",
            ""tooling"",
            ""ilongot"",
            ""souring"",
            ""nigrous""
        ],
        ""solution"": [
            [
                ""anatole"",
                ""notaeal""
            ],
            [
                ""ilongot"",
                ""tooling""
            ],
            [
                ""nigrous"",
                ""souring""
            ],
            [
                ""palmiest"",
                ""palmiste"",
                ""petalism"",
                ""septimal""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
868,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tidying"", ""dignity"", ""presentation"", ""penetrations"", ""nictation"", ""antitonic"", ""mantodea"", ""nematoda"", ""ticuna"", ""anicut"", ""tunica"", ""nautic""]
","[[""anicut"", ""nautic"", ""ticuna"", ""tunica""], [""antitonic"", ""nictation""], [""dignity"", ""tidying""], [""mantodea"", ""nematoda""], [""penetrations"", ""presentation""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tidying\"", \""dignity\"", \""presentation\"", \""penetrations\"", \""nictation\"", \""antitonic\"", \""mantodea\"", \""nematoda\"", \""ticuna\"", \""anicut\"", \""tunica\"", \""nautic\""]\n"",
    ""answer"": ""[[\""anicut\"", \""nautic\"", \""ticuna\"", \""tunica\""], [\""antitonic\"", \""nictation\""], [\""dignity\"", \""tidying\""], [\""mantodea\"", \""nematoda\""], [\""penetrations\"", \""presentation\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 868,
        ""words"": [
            ""tidying"",
            ""dignity"",
            ""presentation"",
            ""penetrations"",
            ""nictation"",
            ""antitonic"",
            ""mantodea"",
            ""nematoda"",
            ""ticuna"",
            ""anicut"",
            ""tunica"",
            ""nautic""
        ],
        ""solution"": [
            [
                ""anicut"",
                ""nautic"",
                ""ticuna"",
                ""tunica""
            ],
            [
                ""antitonic"",
                ""nictation""
            ],
            [
                ""dignity"",
                ""tidying""
            ],
            [
                ""mantodea"",
                ""nematoda""
            ],
            [
                ""penetrations"",
                ""presentation""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
869,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""oman"", ""mona"", ""noam"", ""moan"", ""compendia"", ""companied"", ""mallardite"", ""malladrite"", ""tidiness"", ""insisted"", ""betrays"", ""barytes"", ""serialized"", ""disrealize"", ""perceptively"", ""preceptively"", ""forkfuls"", ""forksful""]
","[[""barytes"", ""betrays""], [""companied"", ""compendia""], [""disrealize"", ""serialized""], [""forkfuls"", ""forksful""], [""insisted"", ""tidiness""], [""malladrite"", ""mallardite""], [""moan"", ""mona"", ""noam"", ""oman""], [""perceptively"", ""preceptively""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""oman\"", \""mona\"", \""noam\"", \""moan\"", \""compendia\"", \""companied\"", \""mallardite\"", \""malladrite\"", \""tidiness\"", \""insisted\"", \""betrays\"", \""barytes\"", \""serialized\"", \""disrealize\"", \""perceptively\"", \""preceptively\"", \""forkfuls\"", \""forksful\""]\n"",
    ""answer"": ""[[\""barytes\"", \""betrays\""], [\""companied\"", \""compendia\""], [\""disrealize\"", \""serialized\""], [\""forkfuls\"", \""forksful\""], [\""insisted\"", \""tidiness\""], [\""malladrite\"", \""mallardite\""], [\""moan\"", \""mona\"", \""noam\"", \""oman\""], [\""perceptively\"", \""preceptively\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 869,
        ""words"": [
            ""oman"",
            ""mona"",
            ""noam"",
            ""moan"",
            ""compendia"",
            ""companied"",
            ""mallardite"",
            ""malladrite"",
            ""tidiness"",
            ""insisted"",
            ""betrays"",
            ""barytes"",
            ""serialized"",
            ""disrealize"",
            ""perceptively"",
            ""preceptively"",
            ""forkfuls"",
            ""forksful""
        ],
        ""solution"": [
            [
                ""barytes"",
                ""betrays""
            ],
            [
                ""companied"",
                ""compendia""
            ],
            [
                ""disrealize"",
                ""serialized""
            ],
            [
                ""forkfuls"",
                ""forksful""
            ],
            [
                ""insisted"",
                ""tidiness""
            ],
            [
                ""malladrite"",
                ""mallardite""
            ],
            [
                ""moan"",
                ""mona"",
                ""noam"",
                ""oman""
            ],
            [
                ""perceptively"",
                ""preceptively""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
870,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""looper"", ""pooler"", ""liven"", ""levin"", ""warding"", ""drawing"", ""ginward"", ""reflood"", ""floored"", ""flooder"", ""ameboid"", ""amoebid"", ""intervening"", ""reinventing""]
","[[""ameboid"", ""amoebid""], [""drawing"", ""ginward"", ""warding""], [""flooder"", ""floored"", ""reflood""], [""intervening"", ""reinventing""], [""levin"", ""liven""], [""looper"", ""pooler""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""looper\"", \""pooler\"", \""liven\"", \""levin\"", \""warding\"", \""drawing\"", \""ginward\"", \""reflood\"", \""floored\"", \""flooder\"", \""ameboid\"", \""amoebid\"", \""intervening\"", \""reinventing\""]\n"",
    ""answer"": ""[[\""ameboid\"", \""amoebid\""], [\""drawing\"", \""ginward\"", \""warding\""], [\""flooder\"", \""floored\"", \""reflood\""], [\""intervening\"", \""reinventing\""], [\""levin\"", \""liven\""], [\""looper\"", \""pooler\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 870,
        ""words"": [
            ""looper"",
            ""pooler"",
            ""liven"",
            ""levin"",
            ""warding"",
            ""drawing"",
            ""ginward"",
            ""reflood"",
            ""floored"",
            ""flooder"",
            ""ameboid"",
            ""amoebid"",
            ""intervening"",
            ""reinventing""
        ],
        ""solution"": [
            [
                ""ameboid"",
                ""amoebid""
            ],
            [
                ""drawing"",
                ""ginward"",
                ""warding""
            ],
            [
                ""flooder"",
                ""floored"",
                ""reflood""
            ],
            [
                ""intervening"",
                ""reinventing""
            ],
            [
                ""levin"",
                ""liven""
            ],
            [
                ""looper"",
                ""pooler""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
871,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tallymen"", ""mentally"", ""lusory"", ""sourly""]
","[[""lusory"", ""sourly""], [""mentally"", ""tallymen""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tallymen\"", \""mentally\"", \""lusory\"", \""sourly\""]\n"",
    ""answer"": ""[[\""lusory\"", \""sourly\""], [\""mentally\"", \""tallymen\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 871,
        ""words"": [
            ""tallymen"",
            ""mentally"",
            ""lusory"",
            ""sourly""
        ],
        ""solution"": [
            [
                ""lusory"",
                ""sourly""
            ],
            [
                ""mentally"",
                ""tallymen""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
872,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gremiale"", ""gleamier"", ""rousedness"", ""dournesses"", ""jaun"", ""juan"", ""unregarded"", ""undergrade"", ""tetraplous"", ""supertotal"", ""osmond"", ""mondos""]
","[[""dournesses"", ""rousedness""], [""gleamier"", ""gremiale""], [""jaun"", ""juan""], [""mondos"", ""osmond""], [""supertotal"", ""tetraplous""], [""undergrade"", ""unregarded""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gremiale\"", \""gleamier\"", \""rousedness\"", \""dournesses\"", \""jaun\"", \""juan\"", \""unregarded\"", \""undergrade\"", \""tetraplous\"", \""supertotal\"", \""osmond\"", \""mondos\""]\n"",
    ""answer"": ""[[\""dournesses\"", \""rousedness\""], [\""gleamier\"", \""gremiale\""], [\""jaun\"", \""juan\""], [\""mondos\"", \""osmond\""], [\""supertotal\"", \""tetraplous\""], [\""undergrade\"", \""unregarded\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 872,
        ""words"": [
            ""gremiale"",
            ""gleamier"",
            ""rousedness"",
            ""dournesses"",
            ""jaun"",
            ""juan"",
            ""unregarded"",
            ""undergrade"",
            ""tetraplous"",
            ""supertotal"",
            ""osmond"",
            ""mondos""
        ],
        ""solution"": [
            [
                ""dournesses"",
                ""rousedness""
            ],
            [
                ""gleamier"",
                ""gremiale""
            ],
            [
                ""jaun"",
                ""juan""
            ],
            [
                ""mondos"",
                ""osmond""
            ],
            [
                ""supertotal"",
                ""tetraplous""
            ],
            [
                ""undergrade"",
                ""unregarded""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
873,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""degass"", ""gassed"", ""sourer"", ""rouser"", ""havana"", ""vahana"", ""flotsen"", ""notself"", ""laggen"", ""naggle"", ""dainties"", ""desiatin"", ""auction"", ""caution""]
","[[""auction"", ""caution""], [""dainties"", ""desiatin""], [""degass"", ""gassed""], [""flotsen"", ""notself""], [""havana"", ""vahana""], [""laggen"", ""naggle""], [""rouser"", ""sourer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""degass\"", \""gassed\"", \""sourer\"", \""rouser\"", \""havana\"", \""vahana\"", \""flotsen\"", \""notself\"", \""laggen\"", \""naggle\"", \""dainties\"", \""desiatin\"", \""auction\"", \""caution\""]\n"",
    ""answer"": ""[[\""auction\"", \""caution\""], [\""dainties\"", \""desiatin\""], [\""degass\"", \""gassed\""], [\""flotsen\"", \""notself\""], [\""havana\"", \""vahana\""], [\""laggen\"", \""naggle\""], [\""rouser\"", \""sourer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 873,
        ""words"": [
            ""degass"",
            ""gassed"",
            ""sourer"",
            ""rouser"",
            ""havana"",
            ""vahana"",
            ""flotsen"",
            ""notself"",
            ""laggen"",
            ""naggle"",
            ""dainties"",
            ""desiatin"",
            ""auction"",
            ""caution""
        ],
        ""solution"": [
            [
                ""auction"",
                ""caution""
            ],
            [
                ""dainties"",
                ""desiatin""
            ],
            [
                ""degass"",
                ""gassed""
            ],
            [
                ""flotsen"",
                ""notself""
            ],
            [
                ""havana"",
                ""vahana""
            ],
            [
                ""laggen"",
                ""naggle""
            ],
            [
                ""rouser"",
                ""sourer""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
874,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""chunkier"", ""kurchine"", ""silenus"", ""insulse""]
","[[""chunkier"", ""kurchine""], [""insulse"", ""silenus""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""chunkier\"", \""kurchine\"", \""silenus\"", \""insulse\""]\n"",
    ""answer"": ""[[\""chunkier\"", \""kurchine\""], [\""insulse\"", \""silenus\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 874,
        ""words"": [
            ""chunkier"",
            ""kurchine"",
            ""silenus"",
            ""insulse""
        ],
        ""solution"": [
            [
                ""chunkier"",
                ""kurchine""
            ],
            [
                ""insulse"",
                ""silenus""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
875,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""engrail"", ""realign"", ""aligner"", ""underpuke"", ""unperuked"", ""batman"", ""bantam"", ""siroc"", ""crois"", ""coirs"", ""tarocco"", ""coactor"", ""flamier"", ""fermail"", ""fermila"", ""ratbite"", ""battier"", ""brattie"", ""tumli"", ""multi""]
","[[""aligner"", ""engrail"", ""realign""], [""bantam"", ""batman""], [""battier"", ""brattie"", ""ratbite""], [""coactor"", ""tarocco""], [""coirs"", ""crois"", ""siroc""], [""fermail"", ""fermila"", ""flamier""], [""multi"", ""tumli""], [""underpuke"", ""unperuked""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""engrail\"", \""realign\"", \""aligner\"", \""underpuke\"", \""unperuked\"", \""batman\"", \""bantam\"", \""siroc\"", \""crois\"", \""coirs\"", \""tarocco\"", \""coactor\"", \""flamier\"", \""fermail\"", \""fermila\"", \""ratbite\"", \""battier\"", \""brattie\"", \""tumli\"", \""multi\""]\n"",
    ""answer"": ""[[\""aligner\"", \""engrail\"", \""realign\""], [\""bantam\"", \""batman\""], [\""battier\"", \""brattie\"", \""ratbite\""], [\""coactor\"", \""tarocco\""], [\""coirs\"", \""crois\"", \""siroc\""], [\""fermail\"", \""fermila\"", \""flamier\""], [\""multi\"", \""tumli\""], [\""underpuke\"", \""unperuked\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 875,
        ""words"": [
            ""engrail"",
            ""realign"",
            ""aligner"",
            ""underpuke"",
            ""unperuked"",
            ""batman"",
            ""bantam"",
            ""siroc"",
            ""crois"",
            ""coirs"",
            ""tarocco"",
            ""coactor"",
            ""flamier"",
            ""fermail"",
            ""fermila"",
            ""ratbite"",
            ""battier"",
            ""brattie"",
            ""tumli"",
            ""multi""
        ],
        ""solution"": [
            [
                ""aligner"",
                ""engrail"",
                ""realign""
            ],
            [
                ""bantam"",
                ""batman""
            ],
            [
                ""battier"",
                ""brattie"",
                ""ratbite""
            ],
            [
                ""coactor"",
                ""tarocco""
            ],
            [
                ""coirs"",
                ""crois"",
                ""siroc""
            ],
            [
                ""fermail"",
                ""fermila"",
                ""flamier""
            ],
            [
                ""multi"",
                ""tumli""
            ],
            [
                ""underpuke"",
                ""unperuked""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
876,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sarmentous"", ""tarsonemus"", ""hodmen"", ""donmeh""]
","[[""donmeh"", ""hodmen""], [""sarmentous"", ""tarsonemus""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sarmentous\"", \""tarsonemus\"", \""hodmen\"", \""donmeh\""]\n"",
    ""answer"": ""[[\""donmeh\"", \""hodmen\""], [\""sarmentous\"", \""tarsonemus\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 876,
        ""words"": [
            ""sarmentous"",
            ""tarsonemus"",
            ""hodmen"",
            ""donmeh""
        ],
        ""solution"": [
            [
                ""donmeh"",
                ""hodmen""
            ],
            [
                ""sarmentous"",
                ""tarsonemus""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
877,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""martins"", ""rantism"", ""rawboned"", ""downbear"", ""souly"", ""lousy"", ""rocketed"", ""redocket"", ""caesarist"", ""staircase""]
","[[""caesarist"", ""staircase""], [""downbear"", ""rawboned""], [""lousy"", ""souly""], [""martins"", ""rantism""], [""redocket"", ""rocketed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""martins\"", \""rantism\"", \""rawboned\"", \""downbear\"", \""souly\"", \""lousy\"", \""rocketed\"", \""redocket\"", \""caesarist\"", \""staircase\""]\n"",
    ""answer"": ""[[\""caesarist\"", \""staircase\""], [\""downbear\"", \""rawboned\""], [\""lousy\"", \""souly\""], [\""martins\"", \""rantism\""], [\""redocket\"", \""rocketed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 877,
        ""words"": [
            ""martins"",
            ""rantism"",
            ""rawboned"",
            ""downbear"",
            ""souly"",
            ""lousy"",
            ""rocketed"",
            ""redocket"",
            ""caesarist"",
            ""staircase""
        ],
        ""solution"": [
            [
                ""caesarist"",
                ""staircase""
            ],
            [
                ""downbear"",
                ""rawboned""
            ],
            [
                ""lousy"",
                ""souly""
            ],
            [
                ""martins"",
                ""rantism""
            ],
            [
                ""redocket"",
                ""rocketed""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
878,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""plass"", ""slaps"", ""salps"", ""strinkle"", ""linkster"", ""sklinter"", ""sunna"", ""annus"", ""knosp"", ""knops"", ""ramblers"", ""marblers"", ""cirrhus"", ""currish"", ""couchers"", ""crouches"", ""ectasis"", ""ascites"", ""unsheeted"", ""unseethed""]
","[[""annus"", ""sunna""], [""ascites"", ""ectasis""], [""cirrhus"", ""currish""], [""couchers"", ""crouches""], [""knops"", ""knosp""], [""linkster"", ""sklinter"", ""strinkle""], [""marblers"", ""ramblers""], [""plass"", ""salps"", ""slaps""], [""unseethed"", ""unsheeted""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""plass\"", \""slaps\"", \""salps\"", \""strinkle\"", \""linkster\"", \""sklinter\"", \""sunna\"", \""annus\"", \""knosp\"", \""knops\"", \""ramblers\"", \""marblers\"", \""cirrhus\"", \""currish\"", \""couchers\"", \""crouches\"", \""ectasis\"", \""ascites\"", \""unsheeted\"", \""unseethed\""]\n"",
    ""answer"": ""[[\""annus\"", \""sunna\""], [\""ascites\"", \""ectasis\""], [\""cirrhus\"", \""currish\""], [\""couchers\"", \""crouches\""], [\""knops\"", \""knosp\""], [\""linkster\"", \""sklinter\"", \""strinkle\""], [\""marblers\"", \""ramblers\""], [\""plass\"", \""salps\"", \""slaps\""], [\""unseethed\"", \""unsheeted\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 878,
        ""words"": [
            ""plass"",
            ""slaps"",
            ""salps"",
            ""strinkle"",
            ""linkster"",
            ""sklinter"",
            ""sunna"",
            ""annus"",
            ""knosp"",
            ""knops"",
            ""ramblers"",
            ""marblers"",
            ""cirrhus"",
            ""currish"",
            ""couchers"",
            ""crouches"",
            ""ectasis"",
            ""ascites"",
            ""unsheeted"",
            ""unseethed""
        ],
        ""solution"": [
            [
                ""annus"",
                ""sunna""
            ],
            [
                ""ascites"",
                ""ectasis""
            ],
            [
                ""cirrhus"",
                ""currish""
            ],
            [
                ""couchers"",
                ""crouches""
            ],
            [
                ""knops"",
                ""knosp""
            ],
            [
                ""linkster"",
                ""sklinter"",
                ""strinkle""
            ],
            [
                ""marblers"",
                ""ramblers""
            ],
            [
                ""plass"",
                ""salps"",
                ""slaps""
            ],
            [
                ""unseethed"",
                ""unsheeted""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
879,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""efford"", ""doffer"", ""untreadable"", ""untradeable"", ""nowanights"", ""washington"", ""sounded"", ""undosed"", ""odum"", ""doum"", ""moud"", ""udom"", ""atop"", ""pato"", ""bistered"", ""bestride"", ""tuts"", ""stut"", ""guyot"", ""gouty""]
","[[""atop"", ""pato""], [""bestride"", ""bistered""], [""doffer"", ""efford""], [""doum"", ""moud"", ""odum"", ""udom""], [""gouty"", ""guyot""], [""nowanights"", ""washington""], [""sounded"", ""undosed""], [""stut"", ""tuts""], [""untradeable"", ""untreadable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""efford\"", \""doffer\"", \""untreadable\"", \""untradeable\"", \""nowanights\"", \""washington\"", \""sounded\"", \""undosed\"", \""odum\"", \""doum\"", \""moud\"", \""udom\"", \""atop\"", \""pato\"", \""bistered\"", \""bestride\"", \""tuts\"", \""stut\"", \""guyot\"", \""gouty\""]\n"",
    ""answer"": ""[[\""atop\"", \""pato\""], [\""bestride\"", \""bistered\""], [\""doffer\"", \""efford\""], [\""doum\"", \""moud\"", \""odum\"", \""udom\""], [\""gouty\"", \""guyot\""], [\""nowanights\"", \""washington\""], [\""sounded\"", \""undosed\""], [\""stut\"", \""tuts\""], [\""untradeable\"", \""untreadable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 879,
        ""words"": [
            ""efford"",
            ""doffer"",
            ""untreadable"",
            ""untradeable"",
            ""nowanights"",
            ""washington"",
            ""sounded"",
            ""undosed"",
            ""odum"",
            ""doum"",
            ""moud"",
            ""udom"",
            ""atop"",
            ""pato"",
            ""bistered"",
            ""bestride"",
            ""tuts"",
            ""stut"",
            ""guyot"",
            ""gouty""
        ],
        ""solution"": [
            [
                ""atop"",
                ""pato""
            ],
            [
                ""bestride"",
                ""bistered""
            ],
            [
                ""doffer"",
                ""efford""
            ],
            [
                ""doum"",
                ""moud"",
                ""odum"",
                ""udom""
            ],
            [
                ""gouty"",
                ""guyot""
            ],
            [
                ""nowanights"",
                ""washington""
            ],
            [
                ""sounded"",
                ""undosed""
            ],
            [
                ""stut"",
                ""tuts""
            ],
            [
                ""untradeable"",
                ""untreadable""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
880,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""palest"", ""tepals"", ""telesmeter"", ""telemeters"", ""cosmoline"", ""semicolon"", ""doberman"", ""boardmen"", ""nahum"", ""human"", ""tef"", ""eft"", ""linkster"", ""sklinter"", ""wab"", ""baw"", ""halteres"", ""leathers"", ""semicordate"", ""democratise""]
","[[""baw"", ""wab""], [""boardmen"", ""doberman""], [""cosmoline"", ""semicolon""], [""democratise"", ""semicordate""], [""eft"", ""tef""], [""halteres"", ""leathers""], [""human"", ""nahum""], [""linkster"", ""sklinter""], [""palest"", ""tepals""], [""telemeters"", ""telesmeter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""palest\"", \""tepals\"", \""telesmeter\"", \""telemeters\"", \""cosmoline\"", \""semicolon\"", \""doberman\"", \""boardmen\"", \""nahum\"", \""human\"", \""tef\"", \""eft\"", \""linkster\"", \""sklinter\"", \""wab\"", \""baw\"", \""halteres\"", \""leathers\"", \""semicordate\"", \""democratise\""]\n"",
    ""answer"": ""[[\""baw\"", \""wab\""], [\""boardmen\"", \""doberman\""], [\""cosmoline\"", \""semicolon\""], [\""democratise\"", \""semicordate\""], [\""eft\"", \""tef\""], [\""halteres\"", \""leathers\""], [\""human\"", \""nahum\""], [\""linkster\"", \""sklinter\""], [\""palest\"", \""tepals\""], [\""telemeters\"", \""telesmeter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 880,
        ""words"": [
            ""palest"",
            ""tepals"",
            ""telesmeter"",
            ""telemeters"",
            ""cosmoline"",
            ""semicolon"",
            ""doberman"",
            ""boardmen"",
            ""nahum"",
            ""human"",
            ""tef"",
            ""eft"",
            ""linkster"",
            ""sklinter"",
            ""wab"",
            ""baw"",
            ""halteres"",
            ""leathers"",
            ""semicordate"",
            ""democratise""
        ],
        ""solution"": [
            [
                ""baw"",
                ""wab""
            ],
            [
                ""boardmen"",
                ""doberman""
            ],
            [
                ""cosmoline"",
                ""semicolon""
            ],
            [
                ""democratise"",
                ""semicordate""
            ],
            [
                ""eft"",
                ""tef""
            ],
            [
                ""halteres"",
                ""leathers""
            ],
            [
                ""human"",
                ""nahum""
            ],
            [
                ""linkster"",
                ""sklinter""
            ],
            [
                ""palest"",
                ""tepals""
            ],
            [
                ""telemeters"",
                ""telesmeter""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
881,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""canoe"", ""ocean"", ""acone"", ""frits"", ""first"", ""frist"", ""snivey"", ""visney""]
","[[""acone"", ""canoe"", ""ocean""], [""first"", ""frist"", ""frits""], [""snivey"", ""visney""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""canoe\"", \""ocean\"", \""acone\"", \""frits\"", \""first\"", \""frist\"", \""snivey\"", \""visney\""]\n"",
    ""answer"": ""[[\""acone\"", \""canoe\"", \""ocean\""], [\""first\"", \""frist\"", \""frits\""], [\""snivey\"", \""visney\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 881,
        ""words"": [
            ""canoe"",
            ""ocean"",
            ""acone"",
            ""frits"",
            ""first"",
            ""frist"",
            ""snivey"",
            ""visney""
        ],
        ""solution"": [
            [
                ""acone"",
                ""canoe"",
                ""ocean""
            ],
            [
                ""first"",
                ""frist"",
                ""frits""
            ],
            [
                ""snivey"",
                ""visney""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
882,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""conserving"", ""conversing"", ""pulvinic"", ""vulpinic""]
","[[""conserving"", ""conversing""], [""pulvinic"", ""vulpinic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""conserving\"", \""conversing\"", \""pulvinic\"", \""vulpinic\""]\n"",
    ""answer"": ""[[\""conserving\"", \""conversing\""], [\""pulvinic\"", \""vulpinic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 882,
        ""words"": [
            ""conserving"",
            ""conversing"",
            ""pulvinic"",
            ""vulpinic""
        ],
        ""solution"": [
            [
                ""conserving"",
                ""conversing""
            ],
            [
                ""pulvinic"",
                ""vulpinic""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
883,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""octet"", ""cotte"", ""primeur"", ""umpirer"", ""pericarp"", ""crappier"", ""focuses"", ""fucoses""]
","[[""cotte"", ""octet""], [""crappier"", ""pericarp""], [""focuses"", ""fucoses""], [""primeur"", ""umpirer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""octet\"", \""cotte\"", \""primeur\"", \""umpirer\"", \""pericarp\"", \""crappier\"", \""focuses\"", \""fucoses\""]\n"",
    ""answer"": ""[[\""cotte\"", \""octet\""], [\""crappier\"", \""pericarp\""], [\""focuses\"", \""fucoses\""], [\""primeur\"", \""umpirer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 883,
        ""words"": [
            ""octet"",
            ""cotte"",
            ""primeur"",
            ""umpirer"",
            ""pericarp"",
            ""crappier"",
            ""focuses"",
            ""fucoses""
        ],
        ""solution"": [
            [
                ""cotte"",
                ""octet""
            ],
            [
                ""crappier"",
                ""pericarp""
            ],
            [
                ""focuses"",
                ""fucoses""
            ],
            [
                ""primeur"",
                ""umpirer""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
884,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""prints"", ""sprint"", ""undig"", ""gundi"", ""shaptin"", ""hatpins"", ""antship"", ""shots"", ""soths"", ""hosts"", ""stosh"", ""speedup"", ""upspeed""]
","[[""antship"", ""hatpins"", ""shaptin""], [""gundi"", ""undig""], [""hosts"", ""shots"", ""soths"", ""stosh""], [""prints"", ""sprint""], [""speedup"", ""upspeed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""prints\"", \""sprint\"", \""undig\"", \""gundi\"", \""shaptin\"", \""hatpins\"", \""antship\"", \""shots\"", \""soths\"", \""hosts\"", \""stosh\"", \""speedup\"", \""upspeed\""]\n"",
    ""answer"": ""[[\""antship\"", \""hatpins\"", \""shaptin\""], [\""gundi\"", \""undig\""], [\""hosts\"", \""shots\"", \""soths\"", \""stosh\""], [\""prints\"", \""sprint\""], [\""speedup\"", \""upspeed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 884,
        ""words"": [
            ""prints"",
            ""sprint"",
            ""undig"",
            ""gundi"",
            ""shaptin"",
            ""hatpins"",
            ""antship"",
            ""shots"",
            ""soths"",
            ""hosts"",
            ""stosh"",
            ""speedup"",
            ""upspeed""
        ],
        ""solution"": [
            [
                ""antship"",
                ""hatpins"",
                ""shaptin""
            ],
            [
                ""gundi"",
                ""undig""
            ],
            [
                ""hosts"",
                ""shots"",
                ""soths"",
                ""stosh""
            ],
            [
                ""prints"",
                ""sprint""
            ],
            [
                ""speedup"",
                ""upspeed""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
885,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""logeia"", ""goalie"", ""unsharped"", ""unphrased"", ""unconserving"", ""unconversing"", ""masai"", ""amias"", ""algorithm"", ""logarithm"", ""entrain"", ""anterin"", ""trannie"", ""lp"", ""pl"", ""misplant"", ""implants"", ""tirelessness"", ""ritelessness"", ""enstyle"", ""tensely""]
","[[""algorithm"", ""logarithm""], [""amias"", ""masai""], [""anterin"", ""entrain"", ""trannie""], [""enstyle"", ""tensely""], [""goalie"", ""logeia""], [""implants"", ""misplant""], [""lp"", ""pl""], [""ritelessness"", ""tirelessness""], [""unconserving"", ""unconversing""], [""unphrased"", ""unsharped""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""logeia\"", \""goalie\"", \""unsharped\"", \""unphrased\"", \""unconserving\"", \""unconversing\"", \""masai\"", \""amias\"", \""algorithm\"", \""logarithm\"", \""entrain\"", \""anterin\"", \""trannie\"", \""lp\"", \""pl\"", \""misplant\"", \""implants\"", \""tirelessness\"", \""ritelessness\"", \""enstyle\"", \""tensely\""]\n"",
    ""answer"": ""[[\""algorithm\"", \""logarithm\""], [\""amias\"", \""masai\""], [\""anterin\"", \""entrain\"", \""trannie\""], [\""enstyle\"", \""tensely\""], [\""goalie\"", \""logeia\""], [\""implants\"", \""misplant\""], [\""lp\"", \""pl\""], [\""ritelessness\"", \""tirelessness\""], [\""unconserving\"", \""unconversing\""], [\""unphrased\"", \""unsharped\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 885,
        ""words"": [
            ""logeia"",
            ""goalie"",
            ""unsharped"",
            ""unphrased"",
            ""unconserving"",
            ""unconversing"",
            ""masai"",
            ""amias"",
            ""algorithm"",
            ""logarithm"",
            ""entrain"",
            ""anterin"",
            ""trannie"",
            ""lp"",
            ""pl"",
            ""misplant"",
            ""implants"",
            ""tirelessness"",
            ""ritelessness"",
            ""enstyle"",
            ""tensely""
        ],
        ""solution"": [
            [
                ""algorithm"",
                ""logarithm""
            ],
            [
                ""amias"",
                ""masai""
            ],
            [
                ""anterin"",
                ""entrain"",
                ""trannie""
            ],
            [
                ""enstyle"",
                ""tensely""
            ],
            [
                ""goalie"",
                ""logeia""
            ],
            [
                ""implants"",
                ""misplant""
            ],
            [
                ""lp"",
                ""pl""
            ],
            [
                ""ritelessness"",
                ""tirelessness""
            ],
            [
                ""unconserving"",
                ""unconversing""
            ],
            [
                ""unphrased"",
                ""unsharped""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
886,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tonus"", ""snout"", ""notus"", ""stoun"", ""ticunan"", ""tunican"", ""beach"", ""bache"", ""devilled"", ""divelled"", ""overruns"", ""runovers"", ""scaly"", ""aclys"", ""clays"", ""stogies"", ""egoists"", ""amakosa"", ""akoasma"", ""ironshod"", ""dishonor""]
","[[""aclys"", ""clays"", ""scaly""], [""akoasma"", ""amakosa""], [""bache"", ""beach""], [""devilled"", ""divelled""], [""dishonor"", ""ironshod""], [""egoists"", ""stogies""], [""notus"", ""snout"", ""stoun"", ""tonus""], [""overruns"", ""runovers""], [""ticunan"", ""tunican""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tonus\"", \""snout\"", \""notus\"", \""stoun\"", \""ticunan\"", \""tunican\"", \""beach\"", \""bache\"", \""devilled\"", \""divelled\"", \""overruns\"", \""runovers\"", \""scaly\"", \""aclys\"", \""clays\"", \""stogies\"", \""egoists\"", \""amakosa\"", \""akoasma\"", \""ironshod\"", \""dishonor\""]\n"",
    ""answer"": ""[[\""aclys\"", \""clays\"", \""scaly\""], [\""akoasma\"", \""amakosa\""], [\""bache\"", \""beach\""], [\""devilled\"", \""divelled\""], [\""dishonor\"", \""ironshod\""], [\""egoists\"", \""stogies\""], [\""notus\"", \""snout\"", \""stoun\"", \""tonus\""], [\""overruns\"", \""runovers\""], [\""ticunan\"", \""tunican\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 886,
        ""words"": [
            ""tonus"",
            ""snout"",
            ""notus"",
            ""stoun"",
            ""ticunan"",
            ""tunican"",
            ""beach"",
            ""bache"",
            ""devilled"",
            ""divelled"",
            ""overruns"",
            ""runovers"",
            ""scaly"",
            ""aclys"",
            ""clays"",
            ""stogies"",
            ""egoists"",
            ""amakosa"",
            ""akoasma"",
            ""ironshod"",
            ""dishonor""
        ],
        ""solution"": [
            [
                ""aclys"",
                ""clays"",
                ""scaly""
            ],
            [
                ""akoasma"",
                ""amakosa""
            ],
            [
                ""bache"",
                ""beach""
            ],
            [
                ""devilled"",
                ""divelled""
            ],
            [
                ""dishonor"",
                ""ironshod""
            ],
            [
                ""egoists"",
                ""stogies""
            ],
            [
                ""notus"",
                ""snout"",
                ""stoun"",
                ""tonus""
            ],
            [
                ""overruns"",
                ""runovers""
            ],
            [
                ""ticunan"",
                ""tunican""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
887,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""oversteady"", ""overstayed"", ""clipper"", ""cripple"", ""cod"", ""doc"", ""cervicodorsal"", ""dorsocervical"", ""huntings"", ""shunting"", ""residenter"", ""tenderiser"", ""reinserted"", ""cattish"", ""tachist"", ""rebrand"", ""bernard"", ""brander"", ""raxes"", ""axers"", ""offhand"", ""handoff""]
","[[""axers"", ""raxes""], [""bernard"", ""brander"", ""rebrand""], [""cattish"", ""tachist""], [""cervicodorsal"", ""dorsocervical""], [""clipper"", ""cripple""], [""cod"", ""doc""], [""handoff"", ""offhand""], [""huntings"", ""shunting""], [""overstayed"", ""oversteady""], [""reinserted"", ""residenter"", ""tenderiser""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""oversteady\"", \""overstayed\"", \""clipper\"", \""cripple\"", \""cod\"", \""doc\"", \""cervicodorsal\"", \""dorsocervical\"", \""huntings\"", \""shunting\"", \""residenter\"", \""tenderiser\"", \""reinserted\"", \""cattish\"", \""tachist\"", \""rebrand\"", \""bernard\"", \""brander\"", \""raxes\"", \""axers\"", \""offhand\"", \""handoff\""]\n"",
    ""answer"": ""[[\""axers\"", \""raxes\""], [\""bernard\"", \""brander\"", \""rebrand\""], [\""cattish\"", \""tachist\""], [\""cervicodorsal\"", \""dorsocervical\""], [\""clipper\"", \""cripple\""], [\""cod\"", \""doc\""], [\""handoff\"", \""offhand\""], [\""huntings\"", \""shunting\""], [\""overstayed\"", \""oversteady\""], [\""reinserted\"", \""residenter\"", \""tenderiser\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 887,
        ""words"": [
            ""oversteady"",
            ""overstayed"",
            ""clipper"",
            ""cripple"",
            ""cod"",
            ""doc"",
            ""cervicodorsal"",
            ""dorsocervical"",
            ""huntings"",
            ""shunting"",
            ""residenter"",
            ""tenderiser"",
            ""reinserted"",
            ""cattish"",
            ""tachist"",
            ""rebrand"",
            ""bernard"",
            ""brander"",
            ""raxes"",
            ""axers"",
            ""offhand"",
            ""handoff""
        ],
        ""solution"": [
            [
                ""axers"",
                ""raxes""
            ],
            [
                ""bernard"",
                ""brander"",
                ""rebrand""
            ],
            [
                ""cattish"",
                ""tachist""
            ],
            [
                ""cervicodorsal"",
                ""dorsocervical""
            ],
            [
                ""clipper"",
                ""cripple""
            ],
            [
                ""cod"",
                ""doc""
            ],
            [
                ""handoff"",
                ""offhand""
            ],
            [
                ""huntings"",
                ""shunting""
            ],
            [
                ""overstayed"",
                ""oversteady""
            ],
            [
                ""reinserted"",
                ""residenter"",
                ""tenderiser""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
888,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mustard"", ""durmast"", ""sillyhow"", ""lowishly"", ""baldness"", ""bandless"", ""mediocral"", ""decimolar"", ""upblow"", ""blowup"", ""civitan"", ""activin"", ""shittims"", ""isthmist""]
","[[""activin"", ""civitan""], [""baldness"", ""bandless""], [""blowup"", ""upblow""], [""decimolar"", ""mediocral""], [""durmast"", ""mustard""], [""isthmist"", ""shittims""], [""lowishly"", ""sillyhow""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mustard\"", \""durmast\"", \""sillyhow\"", \""lowishly\"", \""baldness\"", \""bandless\"", \""mediocral\"", \""decimolar\"", \""upblow\"", \""blowup\"", \""civitan\"", \""activin\"", \""shittims\"", \""isthmist\""]\n"",
    ""answer"": ""[[\""activin\"", \""civitan\""], [\""baldness\"", \""bandless\""], [\""blowup\"", \""upblow\""], [\""decimolar\"", \""mediocral\""], [\""durmast\"", \""mustard\""], [\""isthmist\"", \""shittims\""], [\""lowishly\"", \""sillyhow\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 888,
        ""words"": [
            ""mustard"",
            ""durmast"",
            ""sillyhow"",
            ""lowishly"",
            ""baldness"",
            ""bandless"",
            ""mediocral"",
            ""decimolar"",
            ""upblow"",
            ""blowup"",
            ""civitan"",
            ""activin"",
            ""shittims"",
            ""isthmist""
        ],
        ""solution"": [
            [
                ""activin"",
                ""civitan""
            ],
            [
                ""baldness"",
                ""bandless""
            ],
            [
                ""blowup"",
                ""upblow""
            ],
            [
                ""decimolar"",
                ""mediocral""
            ],
            [
                ""durmast"",
                ""mustard""
            ],
            [
                ""isthmist"",
                ""shittims""
            ],
            [
                ""lowishly"",
                ""sillyhow""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
889,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hield"", ""delhi"", ""heild"", ""lusiad"", ""dulias"", ""angareb"", ""barnage"", ""joinering"", ""rejoining"", ""bilianic"", ""biclinia"", ""acid"", ""cadi"", ""caid"", ""caratch"", ""charact""]
","[[""acid"", ""cadi"", ""caid""], [""angareb"", ""barnage""], [""biclinia"", ""bilianic""], [""caratch"", ""charact""], [""delhi"", ""heild"", ""hield""], [""dulias"", ""lusiad""], [""joinering"", ""rejoining""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hield\"", \""delhi\"", \""heild\"", \""lusiad\"", \""dulias\"", \""angareb\"", \""barnage\"", \""joinering\"", \""rejoining\"", \""bilianic\"", \""biclinia\"", \""acid\"", \""cadi\"", \""caid\"", \""caratch\"", \""charact\""]\n"",
    ""answer"": ""[[\""acid\"", \""cadi\"", \""caid\""], [\""angareb\"", \""barnage\""], [\""biclinia\"", \""bilianic\""], [\""caratch\"", \""charact\""], [\""delhi\"", \""heild\"", \""hield\""], [\""dulias\"", \""lusiad\""], [\""joinering\"", \""rejoining\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 889,
        ""words"": [
            ""hield"",
            ""delhi"",
            ""heild"",
            ""lusiad"",
            ""dulias"",
            ""angareb"",
            ""barnage"",
            ""joinering"",
            ""rejoining"",
            ""bilianic"",
            ""biclinia"",
            ""acid"",
            ""cadi"",
            ""caid"",
            ""caratch"",
            ""charact""
        ],
        ""solution"": [
            [
                ""acid"",
                ""cadi"",
                ""caid""
            ],
            [
                ""angareb"",
                ""barnage""
            ],
            [
                ""biclinia"",
                ""bilianic""
            ],
            [
                ""caratch"",
                ""charact""
            ],
            [
                ""delhi"",
                ""heild"",
                ""hield""
            ],
            [
                ""dulias"",
                ""lusiad""
            ],
            [
                ""joinering"",
                ""rejoining""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
890,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gibbon"", ""gobbin"", ""reintegration"", ""reorientating""]
","[[""gibbon"", ""gobbin""], [""reintegration"", ""reorientating""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gibbon\"", \""gobbin\"", \""reintegration\"", \""reorientating\""]\n"",
    ""answer"": ""[[\""gibbon\"", \""gobbin\""], [\""reintegration\"", \""reorientating\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 890,
        ""words"": [
            ""gibbon"",
            ""gobbin"",
            ""reintegration"",
            ""reorientating""
        ],
        ""solution"": [
            [
                ""gibbon"",
                ""gobbin""
            ],
            [
                ""reintegration"",
                ""reorientating""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
891,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""labredt"", ""bardlet"", ""rimose"", ""moires"", ""diacid"", ""diadic"", ""hugo"", ""ough"", ""uprear"", ""parure"", ""suent"", ""usent"", ""skirt"", ""stirk"", ""rumal"", ""larum"", ""tinkerer"", ""retinker""]
","[[""bardlet"", ""labredt""], [""diacid"", ""diadic""], [""hugo"", ""ough""], [""larum"", ""rumal""], [""moires"", ""rimose""], [""parure"", ""uprear""], [""retinker"", ""tinkerer""], [""skirt"", ""stirk""], [""suent"", ""usent""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""labredt\"", \""bardlet\"", \""rimose\"", \""moires\"", \""diacid\"", \""diadic\"", \""hugo\"", \""ough\"", \""uprear\"", \""parure\"", \""suent\"", \""usent\"", \""skirt\"", \""stirk\"", \""rumal\"", \""larum\"", \""tinkerer\"", \""retinker\""]\n"",
    ""answer"": ""[[\""bardlet\"", \""labredt\""], [\""diacid\"", \""diadic\""], [\""hugo\"", \""ough\""], [\""larum\"", \""rumal\""], [\""moires\"", \""rimose\""], [\""parure\"", \""uprear\""], [\""retinker\"", \""tinkerer\""], [\""skirt\"", \""stirk\""], [\""suent\"", \""usent\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 891,
        ""words"": [
            ""labredt"",
            ""bardlet"",
            ""rimose"",
            ""moires"",
            ""diacid"",
            ""diadic"",
            ""hugo"",
            ""ough"",
            ""uprear"",
            ""parure"",
            ""suent"",
            ""usent"",
            ""skirt"",
            ""stirk"",
            ""rumal"",
            ""larum"",
            ""tinkerer"",
            ""retinker""
        ],
        ""solution"": [
            [
                ""bardlet"",
                ""labredt""
            ],
            [
                ""diacid"",
                ""diadic""
            ],
            [
                ""hugo"",
                ""ough""
            ],
            [
                ""larum"",
                ""rumal""
            ],
            [
                ""moires"",
                ""rimose""
            ],
            [
                ""parure"",
                ""uprear""
            ],
            [
                ""retinker"",
                ""tinkerer""
            ],
            [
                ""skirt"",
                ""stirk""
            ],
            [
                ""suent"",
                ""usent""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
892,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ettled"", ""letted"", ""etamine"", ""amenite"", ""matinee"", ""neocomian"", ""monoecian"", ""mandarin"", ""drainman"", ""photomacrography"", ""macrophotography"", ""chaitya"", ""cyathia"", ""leech"", ""leche""]
","[[""amenite"", ""etamine"", ""matinee""], [""chaitya"", ""cyathia""], [""drainman"", ""mandarin""], [""ettled"", ""letted""], [""leche"", ""leech""], [""macrophotography"", ""photomacrography""], [""monoecian"", ""neocomian""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ettled\"", \""letted\"", \""etamine\"", \""amenite\"", \""matinee\"", \""neocomian\"", \""monoecian\"", \""mandarin\"", \""drainman\"", \""photomacrography\"", \""macrophotography\"", \""chaitya\"", \""cyathia\"", \""leech\"", \""leche\""]\n"",
    ""answer"": ""[[\""amenite\"", \""etamine\"", \""matinee\""], [\""chaitya\"", \""cyathia\""], [\""drainman\"", \""mandarin\""], [\""ettled\"", \""letted\""], [\""leche\"", \""leech\""], [\""macrophotography\"", \""photomacrography\""], [\""monoecian\"", \""neocomian\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 892,
        ""words"": [
            ""ettled"",
            ""letted"",
            ""etamine"",
            ""amenite"",
            ""matinee"",
            ""neocomian"",
            ""monoecian"",
            ""mandarin"",
            ""drainman"",
            ""photomacrography"",
            ""macrophotography"",
            ""chaitya"",
            ""cyathia"",
            ""leech"",
            ""leche""
        ],
        ""solution"": [
            [
                ""amenite"",
                ""etamine"",
                ""matinee""
            ],
            [
                ""chaitya"",
                ""cyathia""
            ],
            [
                ""drainman"",
                ""mandarin""
            ],
            [
                ""ettled"",
                ""letted""
            ],
            [
                ""leche"",
                ""leech""
            ],
            [
                ""macrophotography"",
                ""photomacrography""
            ],
            [
                ""monoecian"",
                ""neocomian""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
893,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""talli"", ""aillt"", ""shaws"", ""swash"", ""sound"", ""ounds""]
","[[""aillt"", ""talli""], [""ounds"", ""sound""], [""shaws"", ""swash""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""talli\"", \""aillt\"", \""shaws\"", \""swash\"", \""sound\"", \""ounds\""]\n"",
    ""answer"": ""[[\""aillt\"", \""talli\""], [\""ounds\"", \""sound\""], [\""shaws\"", \""swash\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 893,
        ""words"": [
            ""talli"",
            ""aillt"",
            ""shaws"",
            ""swash"",
            ""sound"",
            ""ounds""
        ],
        ""solution"": [
            [
                ""aillt"",
                ""talli""
            ],
            [
                ""ounds"",
                ""sound""
            ],
            [
                ""shaws"",
                ""swash""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
894,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""shams"", ""smash"", ""astringent"", ""transigent"", ""quata"", ""taqua"", ""marliest"", ""marlites"", ""lamister"", ""oversured"", ""devourers"", ""renerve"", ""venerer"", ""biostrome"", ""broomiest"", ""regaled"", ""lagered""]
","[[""astringent"", ""transigent""], [""biostrome"", ""broomiest""], [""devourers"", ""oversured""], [""lagered"", ""regaled""], [""lamister"", ""marliest"", ""marlites""], [""quata"", ""taqua""], [""renerve"", ""venerer""], [""shams"", ""smash""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""shams\"", \""smash\"", \""astringent\"", \""transigent\"", \""quata\"", \""taqua\"", \""marliest\"", \""marlites\"", \""lamister\"", \""oversured\"", \""devourers\"", \""renerve\"", \""venerer\"", \""biostrome\"", \""broomiest\"", \""regaled\"", \""lagered\""]\n"",
    ""answer"": ""[[\""astringent\"", \""transigent\""], [\""biostrome\"", \""broomiest\""], [\""devourers\"", \""oversured\""], [\""lagered\"", \""regaled\""], [\""lamister\"", \""marliest\"", \""marlites\""], [\""quata\"", \""taqua\""], [\""renerve\"", \""venerer\""], [\""shams\"", \""smash\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 894,
        ""words"": [
            ""shams"",
            ""smash"",
            ""astringent"",
            ""transigent"",
            ""quata"",
            ""taqua"",
            ""marliest"",
            ""marlites"",
            ""lamister"",
            ""oversured"",
            ""devourers"",
            ""renerve"",
            ""venerer"",
            ""biostrome"",
            ""broomiest"",
            ""regaled"",
            ""lagered""
        ],
        ""solution"": [
            [
                ""astringent"",
                ""transigent""
            ],
            [
                ""biostrome"",
                ""broomiest""
            ],
            [
                ""devourers"",
                ""oversured""
            ],
            [
                ""lagered"",
                ""regaled""
            ],
            [
                ""lamister"",
                ""marliest"",
                ""marlites""
            ],
            [
                ""quata"",
                ""taqua""
            ],
            [
                ""renerve"",
                ""venerer""
            ],
            [
                ""shams"",
                ""smash""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
895,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lanose"", ""anoles"", ""tweenies"", ""weeniest"", ""archontia"", ""tocharian"", ""mobbable"", ""bombable""]
","[[""anoles"", ""lanose""], [""archontia"", ""tocharian""], [""bombable"", ""mobbable""], [""tweenies"", ""weeniest""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lanose\"", \""anoles\"", \""tweenies\"", \""weeniest\"", \""archontia\"", \""tocharian\"", \""mobbable\"", \""bombable\""]\n"",
    ""answer"": ""[[\""anoles\"", \""lanose\""], [\""archontia\"", \""tocharian\""], [\""bombable\"", \""mobbable\""], [\""tweenies\"", \""weeniest\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 895,
        ""words"": [
            ""lanose"",
            ""anoles"",
            ""tweenies"",
            ""weeniest"",
            ""archontia"",
            ""tocharian"",
            ""mobbable"",
            ""bombable""
        ],
        ""solution"": [
            [
                ""anoles"",
                ""lanose""
            ],
            [
                ""archontia"",
                ""tocharian""
            ],
            [
                ""bombable"",
                ""mobbable""
            ],
            [
                ""tweenies"",
                ""weeniest""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
896,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""duplone"", ""unpoled"", ""havings"", ""shaving"", ""avgasses"", ""savagess"", ""pissed"", ""sepsid"", ""reattack"", ""attacker"", ""pignut"", ""puting""]
","[[""attacker"", ""reattack""], [""avgasses"", ""savagess""], [""duplone"", ""unpoled""], [""havings"", ""shaving""], [""pignut"", ""puting""], [""pissed"", ""sepsid""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""duplone\"", \""unpoled\"", \""havings\"", \""shaving\"", \""avgasses\"", \""savagess\"", \""pissed\"", \""sepsid\"", \""reattack\"", \""attacker\"", \""pignut\"", \""puting\""]\n"",
    ""answer"": ""[[\""attacker\"", \""reattack\""], [\""avgasses\"", \""savagess\""], [\""duplone\"", \""unpoled\""], [\""havings\"", \""shaving\""], [\""pignut\"", \""puting\""], [\""pissed\"", \""sepsid\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 896,
        ""words"": [
            ""duplone"",
            ""unpoled"",
            ""havings"",
            ""shaving"",
            ""avgasses"",
            ""savagess"",
            ""pissed"",
            ""sepsid"",
            ""reattack"",
            ""attacker"",
            ""pignut"",
            ""puting""
        ],
        ""solution"": [
            [
                ""attacker"",
                ""reattack""
            ],
            [
                ""avgasses"",
                ""savagess""
            ],
            [
                ""duplone"",
                ""unpoled""
            ],
            [
                ""havings"",
                ""shaving""
            ],
            [
                ""pignut"",
                ""puting""
            ],
            [
                ""pissed"",
                ""sepsid""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
897,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""harle"", ""haler"", ""melanorrhea"", ""amenorrheal"", ""seething"", ""sheeting"", ""portico"", ""porotic"", ""domesticate"", ""comediettas""]
","[[""amenorrheal"", ""melanorrhea""], [""comediettas"", ""domesticate""], [""haler"", ""harle""], [""porotic"", ""portico""], [""seething"", ""sheeting""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""harle\"", \""haler\"", \""melanorrhea\"", \""amenorrheal\"", \""seething\"", \""sheeting\"", \""portico\"", \""porotic\"", \""domesticate\"", \""comediettas\""]\n"",
    ""answer"": ""[[\""amenorrheal\"", \""melanorrhea\""], [\""comediettas\"", \""domesticate\""], [\""haler\"", \""harle\""], [\""porotic\"", \""portico\""], [\""seething\"", \""sheeting\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 897,
        ""words"": [
            ""harle"",
            ""haler"",
            ""melanorrhea"",
            ""amenorrheal"",
            ""seething"",
            ""sheeting"",
            ""portico"",
            ""porotic"",
            ""domesticate"",
            ""comediettas""
        ],
        ""solution"": [
            [
                ""amenorrheal"",
                ""melanorrhea""
            ],
            [
                ""comediettas"",
                ""domesticate""
            ],
            [
                ""haler"",
                ""harle""
            ],
            [
                ""porotic"",
                ""portico""
            ],
            [
                ""seething"",
                ""sheeting""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
898,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reproduce"", ""procedure"", ""annotine"", ""tenonian"", ""tibiofemoral"", ""femorotibial"", ""clima"", ""malic"", ""percurrent"", ""precurrent"", ""ionidium"", ""iodinium"", ""gaunch"", ""chunga"", ""teasy"", ""yeast"", ""uhllo"", ""hullo"", ""excepted"", ""expected""]
","[[""annotine"", ""tenonian""], [""chunga"", ""gaunch""], [""clima"", ""malic""], [""excepted"", ""expected""], [""femorotibial"", ""tibiofemoral""], [""hullo"", ""uhllo""], [""iodinium"", ""ionidium""], [""percurrent"", ""precurrent""], [""procedure"", ""reproduce""], [""teasy"", ""yeast""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reproduce\"", \""procedure\"", \""annotine\"", \""tenonian\"", \""tibiofemoral\"", \""femorotibial\"", \""clima\"", \""malic\"", \""percurrent\"", \""precurrent\"", \""ionidium\"", \""iodinium\"", \""gaunch\"", \""chunga\"", \""teasy\"", \""yeast\"", \""uhllo\"", \""hullo\"", \""excepted\"", \""expected\""]\n"",
    ""answer"": ""[[\""annotine\"", \""tenonian\""], [\""chunga\"", \""gaunch\""], [\""clima\"", \""malic\""], [\""excepted\"", \""expected\""], [\""femorotibial\"", \""tibiofemoral\""], [\""hullo\"", \""uhllo\""], [\""iodinium\"", \""ionidium\""], [\""percurrent\"", \""precurrent\""], [\""procedure\"", \""reproduce\""], [\""teasy\"", \""yeast\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 898,
        ""words"": [
            ""reproduce"",
            ""procedure"",
            ""annotine"",
            ""tenonian"",
            ""tibiofemoral"",
            ""femorotibial"",
            ""clima"",
            ""malic"",
            ""percurrent"",
            ""precurrent"",
            ""ionidium"",
            ""iodinium"",
            ""gaunch"",
            ""chunga"",
            ""teasy"",
            ""yeast"",
            ""uhllo"",
            ""hullo"",
            ""excepted"",
            ""expected""
        ],
        ""solution"": [
            [
                ""annotine"",
                ""tenonian""
            ],
            [
                ""chunga"",
                ""gaunch""
            ],
            [
                ""clima"",
                ""malic""
            ],
            [
                ""excepted"",
                ""expected""
            ],
            [
                ""femorotibial"",
                ""tibiofemoral""
            ],
            [
                ""hullo"",
                ""uhllo""
            ],
            [
                ""iodinium"",
                ""ionidium""
            ],
            [
                ""percurrent"",
                ""precurrent""
            ],
            [
                ""procedure"",
                ""reproduce""
            ],
            [
                ""teasy"",
                ""yeast""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
899,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""redocument"", ""documenter"", ""misunion"", ""unionism"", ""turbeh"", ""hubert"", ""impolder"", ""implored"", ""serment"", ""tremens"", ""plagionite"", ""pigeontail"", ""entohyal"", ""ethanoyl"", ""conant"", ""cannot"", ""canton"", ""nonact""]
","[[""cannot"", ""canton"", ""conant"", ""nonact""], [""documenter"", ""redocument""], [""entohyal"", ""ethanoyl""], [""hubert"", ""turbeh""], [""implored"", ""impolder""], [""misunion"", ""unionism""], [""pigeontail"", ""plagionite""], [""serment"", ""tremens""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""redocument\"", \""documenter\"", \""misunion\"", \""unionism\"", \""turbeh\"", \""hubert\"", \""impolder\"", \""implored\"", \""serment\"", \""tremens\"", \""plagionite\"", \""pigeontail\"", \""entohyal\"", \""ethanoyl\"", \""conant\"", \""cannot\"", \""canton\"", \""nonact\""]\n"",
    ""answer"": ""[[\""cannot\"", \""canton\"", \""conant\"", \""nonact\""], [\""documenter\"", \""redocument\""], [\""entohyal\"", \""ethanoyl\""], [\""hubert\"", \""turbeh\""], [\""implored\"", \""impolder\""], [\""misunion\"", \""unionism\""], [\""pigeontail\"", \""plagionite\""], [\""serment\"", \""tremens\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 899,
        ""words"": [
            ""redocument"",
            ""documenter"",
            ""misunion"",
            ""unionism"",
            ""turbeh"",
            ""hubert"",
            ""impolder"",
            ""implored"",
            ""serment"",
            ""tremens"",
            ""plagionite"",
            ""pigeontail"",
            ""entohyal"",
            ""ethanoyl"",
            ""conant"",
            ""cannot"",
            ""canton"",
            ""nonact""
        ],
        ""solution"": [
            [
                ""cannot"",
                ""canton"",
                ""conant"",
                ""nonact""
            ],
            [
                ""documenter"",
                ""redocument""
            ],
            [
                ""entohyal"",
                ""ethanoyl""
            ],
            [
                ""hubert"",
                ""turbeh""
            ],
            [
                ""implored"",
                ""impolder""
            ],
            [
                ""misunion"",
                ""unionism""
            ],
            [
                ""pigeontail"",
                ""plagionite""
            ],
            [
                ""serment"",
                ""tremens""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
900,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""repiningly"", ""ripeningly"", ""archapostle"", ""thecasporal"", ""skirting"", ""striking"", ""odiometer"", ""meteoroid"", ""golem"", ""molge"", ""lev"", ""vel"", ""topic"", ""picot"", ""optic"", ""geotonic"", ""otogenic"", ""eastmost"", ""stomates"", ""presbytia"", ""bapistery""]
","[[""archapostle"", ""thecasporal""], [""bapistery"", ""presbytia""], [""eastmost"", ""stomates""], [""geotonic"", ""otogenic""], [""golem"", ""molge""], [""lev"", ""vel""], [""meteoroid"", ""odiometer""], [""optic"", ""picot"", ""topic""], [""repiningly"", ""ripeningly""], [""skirting"", ""striking""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""repiningly\"", \""ripeningly\"", \""archapostle\"", \""thecasporal\"", \""skirting\"", \""striking\"", \""odiometer\"", \""meteoroid\"", \""golem\"", \""molge\"", \""lev\"", \""vel\"", \""topic\"", \""picot\"", \""optic\"", \""geotonic\"", \""otogenic\"", \""eastmost\"", \""stomates\"", \""presbytia\"", \""bapistery\""]\n"",
    ""answer"": ""[[\""archapostle\"", \""thecasporal\""], [\""bapistery\"", \""presbytia\""], [\""eastmost\"", \""stomates\""], [\""geotonic\"", \""otogenic\""], [\""golem\"", \""molge\""], [\""lev\"", \""vel\""], [\""meteoroid\"", \""odiometer\""], [\""optic\"", \""picot\"", \""topic\""], [\""repiningly\"", \""ripeningly\""], [\""skirting\"", \""striking\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 900,
        ""words"": [
            ""repiningly"",
            ""ripeningly"",
            ""archapostle"",
            ""thecasporal"",
            ""skirting"",
            ""striking"",
            ""odiometer"",
            ""meteoroid"",
            ""golem"",
            ""molge"",
            ""lev"",
            ""vel"",
            ""topic"",
            ""picot"",
            ""optic"",
            ""geotonic"",
            ""otogenic"",
            ""eastmost"",
            ""stomates"",
            ""presbytia"",
            ""bapistery""
        ],
        ""solution"": [
            [
                ""archapostle"",
                ""thecasporal""
            ],
            [
                ""bapistery"",
                ""presbytia""
            ],
            [
                ""eastmost"",
                ""stomates""
            ],
            [
                ""geotonic"",
                ""otogenic""
            ],
            [
                ""golem"",
                ""molge""
            ],
            [
                ""lev"",
                ""vel""
            ],
            [
                ""meteoroid"",
                ""odiometer""
            ],
            [
                ""optic"",
                ""picot"",
                ""topic""
            ],
            [
                ""repiningly"",
                ""ripeningly""
            ],
            [
                ""skirting"",
                ""striking""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
901,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""mariet"", ""rimate"", ""imaret"", ""subtile"", ""besluit"", ""housewares"", ""warehouses"", ""genitorial"", ""religation"", ""anaemic"", ""acnemia"", ""marabouts"", ""tambouras"", ""yannam"", ""ananym"", ""nake"", ""kane"", ""thraso"", ""torahs"", ""boxhead"", ""headbox""]
","[[""acnemia"", ""anaemic""], [""ananym"", ""yannam""], [""besluit"", ""subtile""], [""boxhead"", ""headbox""], [""genitorial"", ""religation""], [""housewares"", ""warehouses""], [""imaret"", ""mariet"", ""rimate""], [""kane"", ""nake""], [""marabouts"", ""tambouras""], [""thraso"", ""torahs""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""mariet\"", \""rimate\"", \""imaret\"", \""subtile\"", \""besluit\"", \""housewares\"", \""warehouses\"", \""genitorial\"", \""religation\"", \""anaemic\"", \""acnemia\"", \""marabouts\"", \""tambouras\"", \""yannam\"", \""ananym\"", \""nake\"", \""kane\"", \""thraso\"", \""torahs\"", \""boxhead\"", \""headbox\""]\n"",
    ""answer"": ""[[\""acnemia\"", \""anaemic\""], [\""ananym\"", \""yannam\""], [\""besluit\"", \""subtile\""], [\""boxhead\"", \""headbox\""], [\""genitorial\"", \""religation\""], [\""housewares\"", \""warehouses\""], [\""imaret\"", \""mariet\"", \""rimate\""], [\""kane\"", \""nake\""], [\""marabouts\"", \""tambouras\""], [\""thraso\"", \""torahs\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 901,
        ""words"": [
            ""mariet"",
            ""rimate"",
            ""imaret"",
            ""subtile"",
            ""besluit"",
            ""housewares"",
            ""warehouses"",
            ""genitorial"",
            ""religation"",
            ""anaemic"",
            ""acnemia"",
            ""marabouts"",
            ""tambouras"",
            ""yannam"",
            ""ananym"",
            ""nake"",
            ""kane"",
            ""thraso"",
            ""torahs"",
            ""boxhead"",
            ""headbox""
        ],
        ""solution"": [
            [
                ""acnemia"",
                ""anaemic""
            ],
            [
                ""ananym"",
                ""yannam""
            ],
            [
                ""besluit"",
                ""subtile""
            ],
            [
                ""boxhead"",
                ""headbox""
            ],
            [
                ""genitorial"",
                ""religation""
            ],
            [
                ""housewares"",
                ""warehouses""
            ],
            [
                ""imaret"",
                ""mariet"",
                ""rimate""
            ],
            [
                ""kane"",
                ""nake""
            ],
            [
                ""marabouts"",
                ""tambouras""
            ],
            [
                ""thraso"",
                ""torahs""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
902,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""certifiers"", ""rectifiers"", ""abele"", ""albee"", ""dosain"", ""danios"", ""adonis"", ""lanchara"", ""anarchal"", ""tracheole"", ""trochleae"", ""dithionic"", ""chitinoid"", ""raband"", ""bandar"", ""scurling"", ""curlings"", ""monism"", ""nomism"", ""simmon""]
","[[""abele"", ""albee""], [""adonis"", ""danios"", ""dosain""], [""anarchal"", ""lanchara""], [""bandar"", ""raband""], [""certifiers"", ""rectifiers""], [""chitinoid"", ""dithionic""], [""curlings"", ""scurling""], [""monism"", ""nomism"", ""simmon""], [""tracheole"", ""trochleae""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""certifiers\"", \""rectifiers\"", \""abele\"", \""albee\"", \""dosain\"", \""danios\"", \""adonis\"", \""lanchara\"", \""anarchal\"", \""tracheole\"", \""trochleae\"", \""dithionic\"", \""chitinoid\"", \""raband\"", \""bandar\"", \""scurling\"", \""curlings\"", \""monism\"", \""nomism\"", \""simmon\""]\n"",
    ""answer"": ""[[\""abele\"", \""albee\""], [\""adonis\"", \""danios\"", \""dosain\""], [\""anarchal\"", \""lanchara\""], [\""bandar\"", \""raband\""], [\""certifiers\"", \""rectifiers\""], [\""chitinoid\"", \""dithionic\""], [\""curlings\"", \""scurling\""], [\""monism\"", \""nomism\"", \""simmon\""], [\""tracheole\"", \""trochleae\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 902,
        ""words"": [
            ""certifiers"",
            ""rectifiers"",
            ""abele"",
            ""albee"",
            ""dosain"",
            ""danios"",
            ""adonis"",
            ""lanchara"",
            ""anarchal"",
            ""tracheole"",
            ""trochleae"",
            ""dithionic"",
            ""chitinoid"",
            ""raband"",
            ""bandar"",
            ""scurling"",
            ""curlings"",
            ""monism"",
            ""nomism"",
            ""simmon""
        ],
        ""solution"": [
            [
                ""abele"",
                ""albee""
            ],
            [
                ""adonis"",
                ""danios"",
                ""dosain""
            ],
            [
                ""anarchal"",
                ""lanchara""
            ],
            [
                ""bandar"",
                ""raband""
            ],
            [
                ""certifiers"",
                ""rectifiers""
            ],
            [
                ""chitinoid"",
                ""dithionic""
            ],
            [
                ""curlings"",
                ""scurling""
            ],
            [
                ""monism"",
                ""nomism"",
                ""simmon""
            ],
            [
                ""tracheole"",
                ""trochleae""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
903,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""intoed"", ""ditone"", ""auletic"", ""caulite"", ""aleutic"", ""lutecia"", ""curtailer"", ""recruital"", ""tabered"", ""rebated"", ""gentes"", ""genets"", ""gesten"", ""coarsened"", ""endoceras"", ""sailfin"", ""finalis"", ""finials"", ""nixon"", ""ninox"", ""meline"", ""elemin""]
","[[""aleutic"", ""auletic"", ""caulite"", ""lutecia""], [""coarsened"", ""endoceras""], [""curtailer"", ""recruital""], [""ditone"", ""intoed""], [""elemin"", ""meline""], [""finalis"", ""finials"", ""sailfin""], [""genets"", ""gentes"", ""gesten""], [""ninox"", ""nixon""], [""rebated"", ""tabered""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""intoed\"", \""ditone\"", \""auletic\"", \""caulite\"", \""aleutic\"", \""lutecia\"", \""curtailer\"", \""recruital\"", \""tabered\"", \""rebated\"", \""gentes\"", \""genets\"", \""gesten\"", \""coarsened\"", \""endoceras\"", \""sailfin\"", \""finalis\"", \""finials\"", \""nixon\"", \""ninox\"", \""meline\"", \""elemin\""]\n"",
    ""answer"": ""[[\""aleutic\"", \""auletic\"", \""caulite\"", \""lutecia\""], [\""coarsened\"", \""endoceras\""], [\""curtailer\"", \""recruital\""], [\""ditone\"", \""intoed\""], [\""elemin\"", \""meline\""], [\""finalis\"", \""finials\"", \""sailfin\""], [\""genets\"", \""gentes\"", \""gesten\""], [\""ninox\"", \""nixon\""], [\""rebated\"", \""tabered\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 903,
        ""words"": [
            ""intoed"",
            ""ditone"",
            ""auletic"",
            ""caulite"",
            ""aleutic"",
            ""lutecia"",
            ""curtailer"",
            ""recruital"",
            ""tabered"",
            ""rebated"",
            ""gentes"",
            ""genets"",
            ""gesten"",
            ""coarsened"",
            ""endoceras"",
            ""sailfin"",
            ""finalis"",
            ""finials"",
            ""nixon"",
            ""ninox"",
            ""meline"",
            ""elemin""
        ],
        ""solution"": [
            [
                ""aleutic"",
                ""auletic"",
                ""caulite"",
                ""lutecia""
            ],
            [
                ""coarsened"",
                ""endoceras""
            ],
            [
                ""curtailer"",
                ""recruital""
            ],
            [
                ""ditone"",
                ""intoed""
            ],
            [
                ""elemin"",
                ""meline""
            ],
            [
                ""finalis"",
                ""finials"",
                ""sailfin""
            ],
            [
                ""genets"",
                ""gentes"",
                ""gesten""
            ],
            [
                ""ninox"",
                ""nixon""
            ],
            [
                ""rebated"",
                ""tabered""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
904,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""empirics"", ""primices"", ""binny"", ""bynin"", ""genesiac"", ""agenesic"", ""agencies"", ""rappel"", ""lapper""]
","[[""agencies"", ""agenesic"", ""genesiac""], [""binny"", ""bynin""], [""empirics"", ""primices""], [""lapper"", ""rappel""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""empirics\"", \""primices\"", \""binny\"", \""bynin\"", \""genesiac\"", \""agenesic\"", \""agencies\"", \""rappel\"", \""lapper\""]\n"",
    ""answer"": ""[[\""agencies\"", \""agenesic\"", \""genesiac\""], [\""binny\"", \""bynin\""], [\""empirics\"", \""primices\""], [\""lapper\"", \""rappel\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 904,
        ""words"": [
            ""empirics"",
            ""primices"",
            ""binny"",
            ""bynin"",
            ""genesiac"",
            ""agenesic"",
            ""agencies"",
            ""rappel"",
            ""lapper""
        ],
        ""solution"": [
            [
                ""agencies"",
                ""agenesic"",
                ""genesiac""
            ],
            [
                ""binny"",
                ""bynin""
            ],
            [
                ""empirics"",
                ""primices""
            ],
            [
                ""lapper"",
                ""rappel""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
905,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""atrous"", ""soutar"", ""nepotal"", ""petalon"", ""lepanto"", ""polenta"", ""aneurism"", ""sumerian"", ""arsenium"", ""keratoses"", ""seastroke"", ""eirenarch"", ""rancherie"", ""indentures"", ""unresident"", ""clair"", ""carli"", ""subgraph"", ""hapsburg"", ""gree"", ""eger"", ""geer"", ""gere"", ""egre"", ""glazy"", ""zygal""]
","[[""aneurism"", ""arsenium"", ""sumerian""], [""atrous"", ""soutar""], [""carli"", ""clair""], [""eger"", ""egre"", ""geer"", ""gere"", ""gree""], [""eirenarch"", ""rancherie""], [""glazy"", ""zygal""], [""hapsburg"", ""subgraph""], [""indentures"", ""unresident""], [""keratoses"", ""seastroke""], [""lepanto"", ""nepotal"", ""petalon"", ""polenta""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""atrous\"", \""soutar\"", \""nepotal\"", \""petalon\"", \""lepanto\"", \""polenta\"", \""aneurism\"", \""sumerian\"", \""arsenium\"", \""keratoses\"", \""seastroke\"", \""eirenarch\"", \""rancherie\"", \""indentures\"", \""unresident\"", \""clair\"", \""carli\"", \""subgraph\"", \""hapsburg\"", \""gree\"", \""eger\"", \""geer\"", \""gere\"", \""egre\"", \""glazy\"", \""zygal\""]\n"",
    ""answer"": ""[[\""aneurism\"", \""arsenium\"", \""sumerian\""], [\""atrous\"", \""soutar\""], [\""carli\"", \""clair\""], [\""eger\"", \""egre\"", \""geer\"", \""gere\"", \""gree\""], [\""eirenarch\"", \""rancherie\""], [\""glazy\"", \""zygal\""], [\""hapsburg\"", \""subgraph\""], [\""indentures\"", \""unresident\""], [\""keratoses\"", \""seastroke\""], [\""lepanto\"", \""nepotal\"", \""petalon\"", \""polenta\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 905,
        ""words"": [
            ""atrous"",
            ""soutar"",
            ""nepotal"",
            ""petalon"",
            ""lepanto"",
            ""polenta"",
            ""aneurism"",
            ""sumerian"",
            ""arsenium"",
            ""keratoses"",
            ""seastroke"",
            ""eirenarch"",
            ""rancherie"",
            ""indentures"",
            ""unresident"",
            ""clair"",
            ""carli"",
            ""subgraph"",
            ""hapsburg"",
            ""gree"",
            ""eger"",
            ""geer"",
            ""gere"",
            ""egre"",
            ""glazy"",
            ""zygal""
        ],
        ""solution"": [
            [
                ""aneurism"",
                ""arsenium"",
                ""sumerian""
            ],
            [
                ""atrous"",
                ""soutar""
            ],
            [
                ""carli"",
                ""clair""
            ],
            [
                ""eger"",
                ""egre"",
                ""geer"",
                ""gere"",
                ""gree""
            ],
            [
                ""eirenarch"",
                ""rancherie""
            ],
            [
                ""glazy"",
                ""zygal""
            ],
            [
                ""hapsburg"",
                ""subgraph""
            ],
            [
                ""indentures"",
                ""unresident""
            ],
            [
                ""keratoses"",
                ""seastroke""
            ],
            [
                ""lepanto"",
                ""nepotal"",
                ""petalon"",
                ""polenta""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
906,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""target"", ""gatter"", ""diageotropism"", ""geodiatropism"", ""unto"", ""tuno"", ""termly"", ""myrtle"", ""hysteresial"", ""hysteriales"", ""latisept"", ""platiest"", ""breth"", ""berth"", ""overreact"", ""overtrace"", ""tula"", ""ulta""]
","[[""berth"", ""breth""], [""diageotropism"", ""geodiatropism""], [""gatter"", ""target""], [""hysteresial"", ""hysteriales""], [""latisept"", ""platiest""], [""myrtle"", ""termly""], [""overreact"", ""overtrace""], [""tula"", ""ulta""], [""tuno"", ""unto""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""target\"", \""gatter\"", \""diageotropism\"", \""geodiatropism\"", \""unto\"", \""tuno\"", \""termly\"", \""myrtle\"", \""hysteresial\"", \""hysteriales\"", \""latisept\"", \""platiest\"", \""breth\"", \""berth\"", \""overreact\"", \""overtrace\"", \""tula\"", \""ulta\""]\n"",
    ""answer"": ""[[\""berth\"", \""breth\""], [\""diageotropism\"", \""geodiatropism\""], [\""gatter\"", \""target\""], [\""hysteresial\"", \""hysteriales\""], [\""latisept\"", \""platiest\""], [\""myrtle\"", \""termly\""], [\""overreact\"", \""overtrace\""], [\""tula\"", \""ulta\""], [\""tuno\"", \""unto\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 906,
        ""words"": [
            ""target"",
            ""gatter"",
            ""diageotropism"",
            ""geodiatropism"",
            ""unto"",
            ""tuno"",
            ""termly"",
            ""myrtle"",
            ""hysteresial"",
            ""hysteriales"",
            ""latisept"",
            ""platiest"",
            ""breth"",
            ""berth"",
            ""overreact"",
            ""overtrace"",
            ""tula"",
            ""ulta""
        ],
        ""solution"": [
            [
                ""berth"",
                ""breth""
            ],
            [
                ""diageotropism"",
                ""geodiatropism""
            ],
            [
                ""gatter"",
                ""target""
            ],
            [
                ""hysteresial"",
                ""hysteriales""
            ],
            [
                ""latisept"",
                ""platiest""
            ],
            [
                ""myrtle"",
                ""termly""
            ],
            [
                ""overreact"",
                ""overtrace""
            ],
            [
                ""tula"",
                ""ulta""
            ],
            [
                ""tuno"",
                ""unto""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
907,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""avignonese"", ""ingaevones"", ""caman"", ""macan"", ""sclater"", ""crestal"", ""clarets"", ""cartels""]
","[[""avignonese"", ""ingaevones""], [""caman"", ""macan""], [""cartels"", ""clarets"", ""crestal"", ""sclater""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""avignonese\"", \""ingaevones\"", \""caman\"", \""macan\"", \""sclater\"", \""crestal\"", \""clarets\"", \""cartels\""]\n"",
    ""answer"": ""[[\""avignonese\"", \""ingaevones\""], [\""caman\"", \""macan\""], [\""cartels\"", \""clarets\"", \""crestal\"", \""sclater\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 907,
        ""words"": [
            ""avignonese"",
            ""ingaevones"",
            ""caman"",
            ""macan"",
            ""sclater"",
            ""crestal"",
            ""clarets"",
            ""cartels""
        ],
        ""solution"": [
            [
                ""avignonese"",
                ""ingaevones""
            ],
            [
                ""caman"",
                ""macan""
            ],
            [
                ""cartels"",
                ""clarets"",
                ""crestal"",
                ""sclater""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
908,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cibolan"", ""coalbin"", ""abelian"", ""nebalia"", ""asap"", ""paas"", ""malkite"", ""mekilta"", ""detector"", ""cottered"", ""virtual"", ""vitular"", ""nigglings"", ""sniggling""]
","[[""abelian"", ""nebalia""], [""asap"", ""paas""], [""cibolan"", ""coalbin""], [""cottered"", ""detector""], [""malkite"", ""mekilta""], [""nigglings"", ""sniggling""], [""virtual"", ""vitular""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cibolan\"", \""coalbin\"", \""abelian\"", \""nebalia\"", \""asap\"", \""paas\"", \""malkite\"", \""mekilta\"", \""detector\"", \""cottered\"", \""virtual\"", \""vitular\"", \""nigglings\"", \""sniggling\""]\n"",
    ""answer"": ""[[\""abelian\"", \""nebalia\""], [\""asap\"", \""paas\""], [\""cibolan\"", \""coalbin\""], [\""cottered\"", \""detector\""], [\""malkite\"", \""mekilta\""], [\""nigglings\"", \""sniggling\""], [\""virtual\"", \""vitular\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 908,
        ""words"": [
            ""cibolan"",
            ""coalbin"",
            ""abelian"",
            ""nebalia"",
            ""asap"",
            ""paas"",
            ""malkite"",
            ""mekilta"",
            ""detector"",
            ""cottered"",
            ""virtual"",
            ""vitular"",
            ""nigglings"",
            ""sniggling""
        ],
        ""solution"": [
            [
                ""abelian"",
                ""nebalia""
            ],
            [
                ""asap"",
                ""paas""
            ],
            [
                ""cibolan"",
                ""coalbin""
            ],
            [
                ""cottered"",
                ""detector""
            ],
            [
                ""malkite"",
                ""mekilta""
            ],
            [
                ""nigglings"",
                ""sniggling""
            ],
            [
                ""virtual"",
                ""vitular""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
909,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""inhame"", ""hemina"", ""haemin"", ""samh"", ""hams"", ""mash"", ""sham"", ""dowager"", ""wordage"", ""oxyl"", ""xylo"", ""shapeup"", ""upheaps"", ""miscovet"", ""vicomtes"", ""manroot"", ""moonrat""]
","[[""dowager"", ""wordage""], [""haemin"", ""hemina"", ""inhame""], [""hams"", ""mash"", ""samh"", ""sham""], [""manroot"", ""moonrat""], [""miscovet"", ""vicomtes""], [""oxyl"", ""xylo""], [""shapeup"", ""upheaps""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""inhame\"", \""hemina\"", \""haemin\"", \""samh\"", \""hams\"", \""mash\"", \""sham\"", \""dowager\"", \""wordage\"", \""oxyl\"", \""xylo\"", \""shapeup\"", \""upheaps\"", \""miscovet\"", \""vicomtes\"", \""manroot\"", \""moonrat\""]\n"",
    ""answer"": ""[[\""dowager\"", \""wordage\""], [\""haemin\"", \""hemina\"", \""inhame\""], [\""hams\"", \""mash\"", \""samh\"", \""sham\""], [\""manroot\"", \""moonrat\""], [\""miscovet\"", \""vicomtes\""], [\""oxyl\"", \""xylo\""], [\""shapeup\"", \""upheaps\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 909,
        ""words"": [
            ""inhame"",
            ""hemina"",
            ""haemin"",
            ""samh"",
            ""hams"",
            ""mash"",
            ""sham"",
            ""dowager"",
            ""wordage"",
            ""oxyl"",
            ""xylo"",
            ""shapeup"",
            ""upheaps"",
            ""miscovet"",
            ""vicomtes"",
            ""manroot"",
            ""moonrat""
        ],
        ""solution"": [
            [
                ""dowager"",
                ""wordage""
            ],
            [
                ""haemin"",
                ""hemina"",
                ""inhame""
            ],
            [
                ""hams"",
                ""mash"",
                ""samh"",
                ""sham""
            ],
            [
                ""manroot"",
                ""moonrat""
            ],
            [
                ""miscovet"",
                ""vicomtes""
            ],
            [
                ""oxyl"",
                ""xylo""
            ],
            [
                ""shapeup"",
                ""upheaps""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
910,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""celadonite"", ""caledonite"", ""streaks"", ""strakes"", ""skaters"", ""nervish"", ""shriven"", ""occipitotemporal"", ""temporooccipital"", ""calinut"", ""lunatic"", ""kantharoi"", ""tokharian"", ""returned"", ""unterred"", ""sus"", ""ssu""]
","[[""caledonite"", ""celadonite""], [""calinut"", ""lunatic""], [""kantharoi"", ""tokharian""], [""nervish"", ""shriven""], [""occipitotemporal"", ""temporooccipital""], [""returned"", ""unterred""], [""skaters"", ""strakes"", ""streaks""], [""ssu"", ""sus""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""celadonite\"", \""caledonite\"", \""streaks\"", \""strakes\"", \""skaters\"", \""nervish\"", \""shriven\"", \""occipitotemporal\"", \""temporooccipital\"", \""calinut\"", \""lunatic\"", \""kantharoi\"", \""tokharian\"", \""returned\"", \""unterred\"", \""sus\"", \""ssu\""]\n"",
    ""answer"": ""[[\""caledonite\"", \""celadonite\""], [\""calinut\"", \""lunatic\""], [\""kantharoi\"", \""tokharian\""], [\""nervish\"", \""shriven\""], [\""occipitotemporal\"", \""temporooccipital\""], [\""returned\"", \""unterred\""], [\""skaters\"", \""strakes\"", \""streaks\""], [\""ssu\"", \""sus\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 910,
        ""words"": [
            ""celadonite"",
            ""caledonite"",
            ""streaks"",
            ""strakes"",
            ""skaters"",
            ""nervish"",
            ""shriven"",
            ""occipitotemporal"",
            ""temporooccipital"",
            ""calinut"",
            ""lunatic"",
            ""kantharoi"",
            ""tokharian"",
            ""returned"",
            ""unterred"",
            ""sus"",
            ""ssu""
        ],
        ""solution"": [
            [
                ""caledonite"",
                ""celadonite""
            ],
            [
                ""calinut"",
                ""lunatic""
            ],
            [
                ""kantharoi"",
                ""tokharian""
            ],
            [
                ""nervish"",
                ""shriven""
            ],
            [
                ""occipitotemporal"",
                ""temporooccipital""
            ],
            [
                ""returned"",
                ""unterred""
            ],
            [
                ""skaters"",
                ""strakes"",
                ""streaks""
            ],
            [
                ""ssu"",
                ""sus""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
911,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""schematic"", ""catechism"", ""hardtops"", ""potshard"", ""mopish"", ""ophism"", ""atoms"", ""stoma"", ""osmund"", ""mounds"", ""pungle"", ""plunge"", ""bid"", ""dib"", ""epimere"", ""preemie"", ""eophyton"", ""honeypot"", ""girshes"", ""sighers""]
","[[""atoms"", ""stoma""], [""bid"", ""dib""], [""catechism"", ""schematic""], [""eophyton"", ""honeypot""], [""epimere"", ""preemie""], [""girshes"", ""sighers""], [""hardtops"", ""potshard""], [""mopish"", ""ophism""], [""mounds"", ""osmund""], [""plunge"", ""pungle""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""schematic\"", \""catechism\"", \""hardtops\"", \""potshard\"", \""mopish\"", \""ophism\"", \""atoms\"", \""stoma\"", \""osmund\"", \""mounds\"", \""pungle\"", \""plunge\"", \""bid\"", \""dib\"", \""epimere\"", \""preemie\"", \""eophyton\"", \""honeypot\"", \""girshes\"", \""sighers\""]\n"",
    ""answer"": ""[[\""atoms\"", \""stoma\""], [\""bid\"", \""dib\""], [\""catechism\"", \""schematic\""], [\""eophyton\"", \""honeypot\""], [\""epimere\"", \""preemie\""], [\""girshes\"", \""sighers\""], [\""hardtops\"", \""potshard\""], [\""mopish\"", \""ophism\""], [\""mounds\"", \""osmund\""], [\""plunge\"", \""pungle\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 911,
        ""words"": [
            ""schematic"",
            ""catechism"",
            ""hardtops"",
            ""potshard"",
            ""mopish"",
            ""ophism"",
            ""atoms"",
            ""stoma"",
            ""osmund"",
            ""mounds"",
            ""pungle"",
            ""plunge"",
            ""bid"",
            ""dib"",
            ""epimere"",
            ""preemie"",
            ""eophyton"",
            ""honeypot"",
            ""girshes"",
            ""sighers""
        ],
        ""solution"": [
            [
                ""atoms"",
                ""stoma""
            ],
            [
                ""bid"",
                ""dib""
            ],
            [
                ""catechism"",
                ""schematic""
            ],
            [
                ""eophyton"",
                ""honeypot""
            ],
            [
                ""epimere"",
                ""preemie""
            ],
            [
                ""girshes"",
                ""sighers""
            ],
            [
                ""hardtops"",
                ""potshard""
            ],
            [
                ""mopish"",
                ""ophism""
            ],
            [
                ""mounds"",
                ""osmund""
            ],
            [
                ""plunge"",
                ""pungle""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
912,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""countrie"", ""eruction"", ""neurotic"", ""unerotic"", ""wied"", ""wide""]
","[[""countrie"", ""eruction"", ""neurotic"", ""unerotic""], [""wide"", ""wied""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""countrie\"", \""eruction\"", \""neurotic\"", \""unerotic\"", \""wied\"", \""wide\""]\n"",
    ""answer"": ""[[\""countrie\"", \""eruction\"", \""neurotic\"", \""unerotic\""], [\""wide\"", \""wied\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 912,
        ""words"": [
            ""countrie"",
            ""eruction"",
            ""neurotic"",
            ""unerotic"",
            ""wied"",
            ""wide""
        ],
        ""solution"": [
            [
                ""countrie"",
                ""eruction"",
                ""neurotic"",
                ""unerotic""
            ],
            [
                ""wide"",
                ""wied""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
913,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tilda"", ""dital"", ""tidal"", ""mutters"", ""smutter"", ""ruler"", ""lurer"", ""spritehood"", ""priesthood"", ""borgh"", ""ghbor"", ""brogh"", ""cansos"", ""casson"", ""brazes"", ""zebras"", ""unstayed"", ""unsteady""]
","[[""borgh"", ""brogh"", ""ghbor""], [""brazes"", ""zebras""], [""cansos"", ""casson""], [""dital"", ""tidal"", ""tilda""], [""lurer"", ""ruler""], [""mutters"", ""smutter""], [""priesthood"", ""spritehood""], [""unstayed"", ""unsteady""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tilda\"", \""dital\"", \""tidal\"", \""mutters\"", \""smutter\"", \""ruler\"", \""lurer\"", \""spritehood\"", \""priesthood\"", \""borgh\"", \""ghbor\"", \""brogh\"", \""cansos\"", \""casson\"", \""brazes\"", \""zebras\"", \""unstayed\"", \""unsteady\""]\n"",
    ""answer"": ""[[\""borgh\"", \""brogh\"", \""ghbor\""], [\""brazes\"", \""zebras\""], [\""cansos\"", \""casson\""], [\""dital\"", \""tidal\"", \""tilda\""], [\""lurer\"", \""ruler\""], [\""mutters\"", \""smutter\""], [\""priesthood\"", \""spritehood\""], [\""unstayed\"", \""unsteady\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 913,
        ""words"": [
            ""tilda"",
            ""dital"",
            ""tidal"",
            ""mutters"",
            ""smutter"",
            ""ruler"",
            ""lurer"",
            ""spritehood"",
            ""priesthood"",
            ""borgh"",
            ""ghbor"",
            ""brogh"",
            ""cansos"",
            ""casson"",
            ""brazes"",
            ""zebras"",
            ""unstayed"",
            ""unsteady""
        ],
        ""solution"": [
            [
                ""borgh"",
                ""brogh"",
                ""ghbor""
            ],
            [
                ""brazes"",
                ""zebras""
            ],
            [
                ""cansos"",
                ""casson""
            ],
            [
                ""dital"",
                ""tidal"",
                ""tilda""
            ],
            [
                ""lurer"",
                ""ruler""
            ],
            [
                ""mutters"",
                ""smutter""
            ],
            [
                ""priesthood"",
                ""spritehood""
            ],
            [
                ""unstayed"",
                ""unsteady""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
914,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nonreality"", ""nonirately"", ""losses"", ""sossle""]
","[[""losses"", ""sossle""], [""nonirately"", ""nonreality""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nonreality\"", \""nonirately\"", \""losses\"", \""sossle\""]\n"",
    ""answer"": ""[[\""losses\"", \""sossle\""], [\""nonirately\"", \""nonreality\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 914,
        ""words"": [
            ""nonreality"",
            ""nonirately"",
            ""losses"",
            ""sossle""
        ],
        ""solution"": [
            [
                ""losses"",
                ""sossle""
            ],
            [
                ""nonirately"",
                ""nonreality""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
915,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""moraine"", ""romaine"", ""clambers"", ""scambler"", ""scramble"", ""vetanda"", ""vedanta"", ""tended"", ""dented"", ""songbag"", ""gobangs""]
","[[""clambers"", ""scambler"", ""scramble""], [""dented"", ""tended""], [""gobangs"", ""songbag""], [""moraine"", ""romaine""], [""vedanta"", ""vetanda""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""moraine\"", \""romaine\"", \""clambers\"", \""scambler\"", \""scramble\"", \""vetanda\"", \""vedanta\"", \""tended\"", \""dented\"", \""songbag\"", \""gobangs\""]\n"",
    ""answer"": ""[[\""clambers\"", \""scambler\"", \""scramble\""], [\""dented\"", \""tended\""], [\""gobangs\"", \""songbag\""], [\""moraine\"", \""romaine\""], [\""vedanta\"", \""vetanda\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 915,
        ""words"": [
            ""moraine"",
            ""romaine"",
            ""clambers"",
            ""scambler"",
            ""scramble"",
            ""vetanda"",
            ""vedanta"",
            ""tended"",
            ""dented"",
            ""songbag"",
            ""gobangs""
        ],
        ""solution"": [
            [
                ""clambers"",
                ""scambler"",
                ""scramble""
            ],
            [
                ""dented"",
                ""tended""
            ],
            [
                ""gobangs"",
                ""songbag""
            ],
            [
                ""moraine"",
                ""romaine""
            ],
            [
                ""vedanta"",
                ""vetanda""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
916,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""seedmen"", ""demesne"", ""phot"", ""toph"", ""aerarian"", ""arenaria"", ""vier"", ""veri"", ""vire"", ""rive"", ""irredenta"", ""retrained"", ""ambit"", ""imbat"", ""anomural"", ""monaural"", ""retonation"", ""renotation"", ""inisle"", ""sileni"", ""rapider"", ""parried""]
","[[""aerarian"", ""arenaria""], [""ambit"", ""imbat""], [""anomural"", ""monaural""], [""demesne"", ""seedmen""], [""inisle"", ""sileni""], [""irredenta"", ""retrained""], [""parried"", ""rapider""], [""phot"", ""toph""], [""renotation"", ""retonation""], [""rive"", ""veri"", ""vier"", ""vire""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""seedmen\"", \""demesne\"", \""phot\"", \""toph\"", \""aerarian\"", \""arenaria\"", \""vier\"", \""veri\"", \""vire\"", \""rive\"", \""irredenta\"", \""retrained\"", \""ambit\"", \""imbat\"", \""anomural\"", \""monaural\"", \""retonation\"", \""renotation\"", \""inisle\"", \""sileni\"", \""rapider\"", \""parried\""]\n"",
    ""answer"": ""[[\""aerarian\"", \""arenaria\""], [\""ambit\"", \""imbat\""], [\""anomural\"", \""monaural\""], [\""demesne\"", \""seedmen\""], [\""inisle\"", \""sileni\""], [\""irredenta\"", \""retrained\""], [\""parried\"", \""rapider\""], [\""phot\"", \""toph\""], [\""renotation\"", \""retonation\""], [\""rive\"", \""veri\"", \""vier\"", \""vire\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 916,
        ""words"": [
            ""seedmen"",
            ""demesne"",
            ""phot"",
            ""toph"",
            ""aerarian"",
            ""arenaria"",
            ""vier"",
            ""veri"",
            ""vire"",
            ""rive"",
            ""irredenta"",
            ""retrained"",
            ""ambit"",
            ""imbat"",
            ""anomural"",
            ""monaural"",
            ""retonation"",
            ""renotation"",
            ""inisle"",
            ""sileni"",
            ""rapider"",
            ""parried""
        ],
        ""solution"": [
            [
                ""aerarian"",
                ""arenaria""
            ],
            [
                ""ambit"",
                ""imbat""
            ],
            [
                ""anomural"",
                ""monaural""
            ],
            [
                ""demesne"",
                ""seedmen""
            ],
            [
                ""inisle"",
                ""sileni""
            ],
            [
                ""irredenta"",
                ""retrained""
            ],
            [
                ""parried"",
                ""rapider""
            ],
            [
                ""phot"",
                ""toph""
            ],
            [
                ""renotation"",
                ""retonation""
            ],
            [
                ""rive"",
                ""veri"",
                ""vier"",
                ""vire""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
917,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""misreason"", ""masonries"", ""detecter"", ""redetect"", ""pinlock"", ""lockpin"", ""succorer"", ""reoccurs"", ""scouring"", ""coursing"", ""scrimshon"", ""chrismons"", ""landler"", ""randell""]
","[[""chrismons"", ""scrimshon""], [""coursing"", ""scouring""], [""detecter"", ""redetect""], [""landler"", ""randell""], [""lockpin"", ""pinlock""], [""masonries"", ""misreason""], [""reoccurs"", ""succorer""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""misreason\"", \""masonries\"", \""detecter\"", \""redetect\"", \""pinlock\"", \""lockpin\"", \""succorer\"", \""reoccurs\"", \""scouring\"", \""coursing\"", \""scrimshon\"", \""chrismons\"", \""landler\"", \""randell\""]\n"",
    ""answer"": ""[[\""chrismons\"", \""scrimshon\""], [\""coursing\"", \""scouring\""], [\""detecter\"", \""redetect\""], [\""landler\"", \""randell\""], [\""lockpin\"", \""pinlock\""], [\""masonries\"", \""misreason\""], [\""reoccurs\"", \""succorer\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 917,
        ""words"": [
            ""misreason"",
            ""masonries"",
            ""detecter"",
            ""redetect"",
            ""pinlock"",
            ""lockpin"",
            ""succorer"",
            ""reoccurs"",
            ""scouring"",
            ""coursing"",
            ""scrimshon"",
            ""chrismons"",
            ""landler"",
            ""randell""
        ],
        ""solution"": [
            [
                ""chrismons"",
                ""scrimshon""
            ],
            [
                ""coursing"",
                ""scouring""
            ],
            [
                ""detecter"",
                ""redetect""
            ],
            [
                ""landler"",
                ""randell""
            ],
            [
                ""lockpin"",
                ""pinlock""
            ],
            [
                ""masonries"",
                ""misreason""
            ],
            [
                ""reoccurs"",
                ""succorer""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
918,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""setbolt"", ""bottles"", ""motleyer"", ""remotely"", ""repenter"", ""preenter"", ""sops"", ""poss"", ""earful"", ""ferula""]
","[[""bottles"", ""setbolt""], [""earful"", ""ferula""], [""motleyer"", ""remotely""], [""poss"", ""sops""], [""preenter"", ""repenter""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""setbolt\"", \""bottles\"", \""motleyer\"", \""remotely\"", \""repenter\"", \""preenter\"", \""sops\"", \""poss\"", \""earful\"", \""ferula\""]\n"",
    ""answer"": ""[[\""bottles\"", \""setbolt\""], [\""earful\"", \""ferula\""], [\""motleyer\"", \""remotely\""], [\""poss\"", \""sops\""], [\""preenter\"", \""repenter\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 918,
        ""words"": [
            ""setbolt"",
            ""bottles"",
            ""motleyer"",
            ""remotely"",
            ""repenter"",
            ""preenter"",
            ""sops"",
            ""poss"",
            ""earful"",
            ""ferula""
        ],
        ""solution"": [
            [
                ""bottles"",
                ""setbolt""
            ],
            [
                ""earful"",
                ""ferula""
            ],
            [
                ""motleyer"",
                ""remotely""
            ],
            [
                ""poss"",
                ""sops""
            ],
            [
                ""preenter"",
                ""repenter""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
919,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""charoset"", ""thoraces"", ""resining"", ""sirening"", ""vivandier"", ""vivandire"", ""cheaping"", ""peaching""]
","[[""charoset"", ""thoraces""], [""cheaping"", ""peaching""], [""resining"", ""sirening""], [""vivandier"", ""vivandire""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""charoset\"", \""thoraces\"", \""resining\"", \""sirening\"", \""vivandier\"", \""vivandire\"", \""cheaping\"", \""peaching\""]\n"",
    ""answer"": ""[[\""charoset\"", \""thoraces\""], [\""cheaping\"", \""peaching\""], [\""resining\"", \""sirening\""], [\""vivandier\"", \""vivandire\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 919,
        ""words"": [
            ""charoset"",
            ""thoraces"",
            ""resining"",
            ""sirening"",
            ""vivandier"",
            ""vivandire"",
            ""cheaping"",
            ""peaching""
        ],
        ""solution"": [
            [
                ""charoset"",
                ""thoraces""
            ],
            [
                ""cheaping"",
                ""peaching""
            ],
            [
                ""resining"",
                ""sirening""
            ],
            [
                ""vivandier"",
                ""vivandire""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
920,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""messiness"", ""missenses"", ""aldermanry"", ""marylander"", ""thestreen"", ""ethernets""]
","[[""aldermanry"", ""marylander""], [""ethernets"", ""thestreen""], [""messiness"", ""missenses""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""messiness\"", \""missenses\"", \""aldermanry\"", \""marylander\"", \""thestreen\"", \""ethernets\""]\n"",
    ""answer"": ""[[\""aldermanry\"", \""marylander\""], [\""ethernets\"", \""thestreen\""], [\""messiness\"", \""missenses\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 920,
        ""words"": [
            ""messiness"",
            ""missenses"",
            ""aldermanry"",
            ""marylander"",
            ""thestreen"",
            ""ethernets""
        ],
        ""solution"": [
            [
                ""aldermanry"",
                ""marylander""
            ],
            [
                ""ethernets"",
                ""thestreen""
            ],
            [
                ""messiness"",
                ""missenses""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
921,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""inorganical"", ""carolingian"", ""disseisor"", ""siderosis""]
","[[""carolingian"", ""inorganical""], [""disseisor"", ""siderosis""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""inorganical\"", \""carolingian\"", \""disseisor\"", \""siderosis\""]\n"",
    ""answer"": ""[[\""carolingian\"", \""inorganical\""], [\""disseisor\"", \""siderosis\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 921,
        ""words"": [
            ""inorganical"",
            ""carolingian"",
            ""disseisor"",
            ""siderosis""
        ],
        ""solution"": [
            [
                ""carolingian"",
                ""inorganical""
            ],
            [
                ""disseisor"",
                ""siderosis""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
922,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""impinged"", ""impeding"", ""fail"", ""alif"", ""optative"", ""potative"", ""washy"", ""shawy""]
","[[""alif"", ""fail""], [""impeding"", ""impinged""], [""optative"", ""potative""], [""shawy"", ""washy""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""impinged\"", \""impeding\"", \""fail\"", \""alif\"", \""optative\"", \""potative\"", \""washy\"", \""shawy\""]\n"",
    ""answer"": ""[[\""alif\"", \""fail\""], [\""impeding\"", \""impinged\""], [\""optative\"", \""potative\""], [\""shawy\"", \""washy\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 922,
        ""words"": [
            ""impinged"",
            ""impeding"",
            ""fail"",
            ""alif"",
            ""optative"",
            ""potative"",
            ""washy"",
            ""shawy""
        ],
        ""solution"": [
            [
                ""alif"",
                ""fail""
            ],
            [
                ""impeding"",
                ""impinged""
            ],
            [
                ""optative"",
                ""potative""
            ],
            [
                ""shawy"",
                ""washy""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
923,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""estops"", ""ptoses"", ""posset"", ""stopes"", ""chordotonal"", ""notochordal"", ""soaking"", ""kogasin"", ""dottle"", ""dottel"", ""dotlet"", ""lotted"", ""boyang"", ""bayong"", ""yagnob"", ""handicapper"", ""prehandicap"", ""writinger"", ""rewriting"", ""rattage"", ""garetta""]
","[[""bayong"", ""boyang"", ""yagnob""], [""chordotonal"", ""notochordal""], [""dotlet"", ""dottel"", ""dottle"", ""lotted""], [""estops"", ""posset"", ""ptoses"", ""stopes""], [""garetta"", ""rattage""], [""handicapper"", ""prehandicap""], [""kogasin"", ""soaking""], [""rewriting"", ""writinger""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""estops\"", \""ptoses\"", \""posset\"", \""stopes\"", \""chordotonal\"", \""notochordal\"", \""soaking\"", \""kogasin\"", \""dottle\"", \""dottel\"", \""dotlet\"", \""lotted\"", \""boyang\"", \""bayong\"", \""yagnob\"", \""handicapper\"", \""prehandicap\"", \""writinger\"", \""rewriting\"", \""rattage\"", \""garetta\""]\n"",
    ""answer"": ""[[\""bayong\"", \""boyang\"", \""yagnob\""], [\""chordotonal\"", \""notochordal\""], [\""dotlet\"", \""dottel\"", \""dottle\"", \""lotted\""], [\""estops\"", \""posset\"", \""ptoses\"", \""stopes\""], [\""garetta\"", \""rattage\""], [\""handicapper\"", \""prehandicap\""], [\""kogasin\"", \""soaking\""], [\""rewriting\"", \""writinger\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 923,
        ""words"": [
            ""estops"",
            ""ptoses"",
            ""posset"",
            ""stopes"",
            ""chordotonal"",
            ""notochordal"",
            ""soaking"",
            ""kogasin"",
            ""dottle"",
            ""dottel"",
            ""dotlet"",
            ""lotted"",
            ""boyang"",
            ""bayong"",
            ""yagnob"",
            ""handicapper"",
            ""prehandicap"",
            ""writinger"",
            ""rewriting"",
            ""rattage"",
            ""garetta""
        ],
        ""solution"": [
            [
                ""bayong"",
                ""boyang"",
                ""yagnob""
            ],
            [
                ""chordotonal"",
                ""notochordal""
            ],
            [
                ""dotlet"",
                ""dottel"",
                ""dottle"",
                ""lotted""
            ],
            [
                ""estops"",
                ""posset"",
                ""ptoses"",
                ""stopes""
            ],
            [
                ""garetta"",
                ""rattage""
            ],
            [
                ""handicapper"",
                ""prehandicap""
            ],
            [
                ""kogasin"",
                ""soaking""
            ],
            [
                ""rewriting"",
                ""writinger""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
924,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""banilad"", ""balanid"", ""emphasizing"", ""emhpasizing"", ""zoonic"", ""ozonic"", ""masculist"", ""simulcast"", ""etymol"", ""motley"", ""unsalt"", ""sultan"", ""soave"", ""oaves"", ""poitrels"", ""postiler""]
","[[""balanid"", ""banilad""], [""emhpasizing"", ""emphasizing""], [""etymol"", ""motley""], [""masculist"", ""simulcast""], [""oaves"", ""soave""], [""ozonic"", ""zoonic""], [""poitrels"", ""postiler""], [""sultan"", ""unsalt""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""banilad\"", \""balanid\"", \""emphasizing\"", \""emhpasizing\"", \""zoonic\"", \""ozonic\"", \""masculist\"", \""simulcast\"", \""etymol\"", \""motley\"", \""unsalt\"", \""sultan\"", \""soave\"", \""oaves\"", \""poitrels\"", \""postiler\""]\n"",
    ""answer"": ""[[\""balanid\"", \""banilad\""], [\""emhpasizing\"", \""emphasizing\""], [\""etymol\"", \""motley\""], [\""masculist\"", \""simulcast\""], [\""oaves\"", \""soave\""], [\""ozonic\"", \""zoonic\""], [\""poitrels\"", \""postiler\""], [\""sultan\"", \""unsalt\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 924,
        ""words"": [
            ""banilad"",
            ""balanid"",
            ""emphasizing"",
            ""emhpasizing"",
            ""zoonic"",
            ""ozonic"",
            ""masculist"",
            ""simulcast"",
            ""etymol"",
            ""motley"",
            ""unsalt"",
            ""sultan"",
            ""soave"",
            ""oaves"",
            ""poitrels"",
            ""postiler""
        ],
        ""solution"": [
            [
                ""balanid"",
                ""banilad""
            ],
            [
                ""emhpasizing"",
                ""emphasizing""
            ],
            [
                ""etymol"",
                ""motley""
            ],
            [
                ""masculist"",
                ""simulcast""
            ],
            [
                ""oaves"",
                ""soave""
            ],
            [
                ""ozonic"",
                ""zoonic""
            ],
            [
                ""poitrels"",
                ""postiler""
            ],
            [
                ""sultan"",
                ""unsalt""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
925,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lingbird"", ""birdling"", ""places"", ""scapel"", ""herbage"", ""breaghe"", ""lurch"", ""churl"", ""destinism"", ""timidness"", ""skee"", ""kees"", ""thurl"", ""thulr"", ""gluing"", ""luging"", ""muns"", ""snum""]
","[[""birdling"", ""lingbird""], [""breaghe"", ""herbage""], [""churl"", ""lurch""], [""destinism"", ""timidness""], [""gluing"", ""luging""], [""kees"", ""skee""], [""muns"", ""snum""], [""places"", ""scapel""], [""thulr"", ""thurl""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lingbird\"", \""birdling\"", \""places\"", \""scapel\"", \""herbage\"", \""breaghe\"", \""lurch\"", \""churl\"", \""destinism\"", \""timidness\"", \""skee\"", \""kees\"", \""thurl\"", \""thulr\"", \""gluing\"", \""luging\"", \""muns\"", \""snum\""]\n"",
    ""answer"": ""[[\""birdling\"", \""lingbird\""], [\""breaghe\"", \""herbage\""], [\""churl\"", \""lurch\""], [\""destinism\"", \""timidness\""], [\""gluing\"", \""luging\""], [\""kees\"", \""skee\""], [\""muns\"", \""snum\""], [\""places\"", \""scapel\""], [\""thulr\"", \""thurl\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 925,
        ""words"": [
            ""lingbird"",
            ""birdling"",
            ""places"",
            ""scapel"",
            ""herbage"",
            ""breaghe"",
            ""lurch"",
            ""churl"",
            ""destinism"",
            ""timidness"",
            ""skee"",
            ""kees"",
            ""thurl"",
            ""thulr"",
            ""gluing"",
            ""luging"",
            ""muns"",
            ""snum""
        ],
        ""solution"": [
            [
                ""birdling"",
                ""lingbird""
            ],
            [
                ""breaghe"",
                ""herbage""
            ],
            [
                ""churl"",
                ""lurch""
            ],
            [
                ""destinism"",
                ""timidness""
            ],
            [
                ""gluing"",
                ""luging""
            ],
            [
                ""kees"",
                ""skee""
            ],
            [
                ""muns"",
                ""snum""
            ],
            [
                ""places"",
                ""scapel""
            ],
            [
                ""thulr"",
                ""thurl""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
926,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""termor"", ""tremor"", ""kumhar"", ""kumrah"", ""refluxed"", ""flexured"", ""coardent"", ""contrade"", ""hingeless"", ""englishes"", ""dilutes"", ""duelist"", ""ranger"", ""garner""]
","[[""coardent"", ""contrade""], [""dilutes"", ""duelist""], [""englishes"", ""hingeless""], [""flexured"", ""refluxed""], [""garner"", ""ranger""], [""kumhar"", ""kumrah""], [""termor"", ""tremor""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""termor\"", \""tremor\"", \""kumhar\"", \""kumrah\"", \""refluxed\"", \""flexured\"", \""coardent\"", \""contrade\"", \""hingeless\"", \""englishes\"", \""dilutes\"", \""duelist\"", \""ranger\"", \""garner\""]\n"",
    ""answer"": ""[[\""coardent\"", \""contrade\""], [\""dilutes\"", \""duelist\""], [\""englishes\"", \""hingeless\""], [\""flexured\"", \""refluxed\""], [\""garner\"", \""ranger\""], [\""kumhar\"", \""kumrah\""], [\""termor\"", \""tremor\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 926,
        ""words"": [
            ""termor"",
            ""tremor"",
            ""kumhar"",
            ""kumrah"",
            ""refluxed"",
            ""flexured"",
            ""coardent"",
            ""contrade"",
            ""hingeless"",
            ""englishes"",
            ""dilutes"",
            ""duelist"",
            ""ranger"",
            ""garner""
        ],
        ""solution"": [
            [
                ""coardent"",
                ""contrade""
            ],
            [
                ""dilutes"",
                ""duelist""
            ],
            [
                ""englishes"",
                ""hingeless""
            ],
            [
                ""flexured"",
                ""refluxed""
            ],
            [
                ""garner"",
                ""ranger""
            ],
            [
                ""kumhar"",
                ""kumrah""
            ],
            [
                ""termor"",
                ""tremor""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
927,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""bota"", ""boat"", ""argles"", ""glares"", ""larges"", ""lagers"", ""snirtle"", ""linters"", ""easel"", ""lease"", ""doesn"", ""nosed"", ""sonde"", ""capsomers"", ""mesocarps"", ""amender"", ""reedman"", ""reamend"", ""rheophile"", ""herophile"", ""noshing"", ""shingon""]
","[[""amender"", ""reamend"", ""reedman""], [""argles"", ""glares"", ""lagers"", ""larges""], [""boat"", ""bota""], [""capsomers"", ""mesocarps""], [""doesn"", ""nosed"", ""sonde""], [""easel"", ""lease""], [""herophile"", ""rheophile""], [""linters"", ""snirtle""], [""noshing"", ""shingon""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""bota\"", \""boat\"", \""argles\"", \""glares\"", \""larges\"", \""lagers\"", \""snirtle\"", \""linters\"", \""easel\"", \""lease\"", \""doesn\"", \""nosed\"", \""sonde\"", \""capsomers\"", \""mesocarps\"", \""amender\"", \""reedman\"", \""reamend\"", \""rheophile\"", \""herophile\"", \""noshing\"", \""shingon\""]\n"",
    ""answer"": ""[[\""amender\"", \""reamend\"", \""reedman\""], [\""argles\"", \""glares\"", \""lagers\"", \""larges\""], [\""boat\"", \""bota\""], [\""capsomers\"", \""mesocarps\""], [\""doesn\"", \""nosed\"", \""sonde\""], [\""easel\"", \""lease\""], [\""herophile\"", \""rheophile\""], [\""linters\"", \""snirtle\""], [\""noshing\"", \""shingon\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 927,
        ""words"": [
            ""bota"",
            ""boat"",
            ""argles"",
            ""glares"",
            ""larges"",
            ""lagers"",
            ""snirtle"",
            ""linters"",
            ""easel"",
            ""lease"",
            ""doesn"",
            ""nosed"",
            ""sonde"",
            ""capsomers"",
            ""mesocarps"",
            ""amender"",
            ""reedman"",
            ""reamend"",
            ""rheophile"",
            ""herophile"",
            ""noshing"",
            ""shingon""
        ],
        ""solution"": [
            [
                ""amender"",
                ""reamend"",
                ""reedman""
            ],
            [
                ""argles"",
                ""glares"",
                ""lagers"",
                ""larges""
            ],
            [
                ""boat"",
                ""bota""
            ],
            [
                ""capsomers"",
                ""mesocarps""
            ],
            [
                ""doesn"",
                ""nosed"",
                ""sonde""
            ],
            [
                ""easel"",
                ""lease""
            ],
            [
                ""herophile"",
                ""rheophile""
            ],
            [
                ""linters"",
                ""snirtle""
            ],
            [
                ""noshing"",
                ""shingon""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
928,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""relished"", ""shielder"", ""hirseled"", ""herbert"", ""berther"", ""underpick"", ""unpricked"", ""tellus"", ""tulles"", ""aking"", ""kiang"", ""coloreds"", ""decolors"", ""wreak"", ""waker"", ""sartorian"", ""tornarias""]
","[[""aking"", ""kiang""], [""berther"", ""herbert""], [""coloreds"", ""decolors""], [""hirseled"", ""relished"", ""shielder""], [""sartorian"", ""tornarias""], [""tellus"", ""tulles""], [""underpick"", ""unpricked""], [""waker"", ""wreak""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""relished\"", \""shielder\"", \""hirseled\"", \""herbert\"", \""berther\"", \""underpick\"", \""unpricked\"", \""tellus\"", \""tulles\"", \""aking\"", \""kiang\"", \""coloreds\"", \""decolors\"", \""wreak\"", \""waker\"", \""sartorian\"", \""tornarias\""]\n"",
    ""answer"": ""[[\""aking\"", \""kiang\""], [\""berther\"", \""herbert\""], [\""coloreds\"", \""decolors\""], [\""hirseled\"", \""relished\"", \""shielder\""], [\""sartorian\"", \""tornarias\""], [\""tellus\"", \""tulles\""], [\""underpick\"", \""unpricked\""], [\""waker\"", \""wreak\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 928,
        ""words"": [
            ""relished"",
            ""shielder"",
            ""hirseled"",
            ""herbert"",
            ""berther"",
            ""underpick"",
            ""unpricked"",
            ""tellus"",
            ""tulles"",
            ""aking"",
            ""kiang"",
            ""coloreds"",
            ""decolors"",
            ""wreak"",
            ""waker"",
            ""sartorian"",
            ""tornarias""
        ],
        ""solution"": [
            [
                ""aking"",
                ""kiang""
            ],
            [
                ""berther"",
                ""herbert""
            ],
            [
                ""coloreds"",
                ""decolors""
            ],
            [
                ""hirseled"",
                ""relished"",
                ""shielder""
            ],
            [
                ""sartorian"",
                ""tornarias""
            ],
            [
                ""tellus"",
                ""tulles""
            ],
            [
                ""underpick"",
                ""unpricked""
            ],
            [
                ""waker"",
                ""wreak""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
929,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""anthrol"", ""thronal"", ""althorn"", ""tescaria"", ""aretaics"", ""limiest"", ""elitism"", ""uhlans"", ""unlash"", ""patches"", ""hepcats"", ""charmers"", ""marchers"", ""asserting"", ""ganisters"", ""astringes"", ""unfried"", ""unfired"", ""depascent"", ""stepdance"", ""tardiest"", ""distater"", ""striated""]
","[[""althorn"", ""anthrol"", ""thronal""], [""aretaics"", ""tescaria""], [""asserting"", ""astringes"", ""ganisters""], [""charmers"", ""marchers""], [""depascent"", ""stepdance""], [""distater"", ""striated"", ""tardiest""], [""elitism"", ""limiest""], [""hepcats"", ""patches""], [""uhlans"", ""unlash""], [""unfired"", ""unfried""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""anthrol\"", \""thronal\"", \""althorn\"", \""tescaria\"", \""aretaics\"", \""limiest\"", \""elitism\"", \""uhlans\"", \""unlash\"", \""patches\"", \""hepcats\"", \""charmers\"", \""marchers\"", \""asserting\"", \""ganisters\"", \""astringes\"", \""unfried\"", \""unfired\"", \""depascent\"", \""stepdance\"", \""tardiest\"", \""distater\"", \""striated\""]\n"",
    ""answer"": ""[[\""althorn\"", \""anthrol\"", \""thronal\""], [\""aretaics\"", \""tescaria\""], [\""asserting\"", \""astringes\"", \""ganisters\""], [\""charmers\"", \""marchers\""], [\""depascent\"", \""stepdance\""], [\""distater\"", \""striated\"", \""tardiest\""], [\""elitism\"", \""limiest\""], [\""hepcats\"", \""patches\""], [\""uhlans\"", \""unlash\""], [\""unfired\"", \""unfried\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 929,
        ""words"": [
            ""anthrol"",
            ""thronal"",
            ""althorn"",
            ""tescaria"",
            ""aretaics"",
            ""limiest"",
            ""elitism"",
            ""uhlans"",
            ""unlash"",
            ""patches"",
            ""hepcats"",
            ""charmers"",
            ""marchers"",
            ""asserting"",
            ""ganisters"",
            ""astringes"",
            ""unfried"",
            ""unfired"",
            ""depascent"",
            ""stepdance"",
            ""tardiest"",
            ""distater"",
            ""striated""
        ],
        ""solution"": [
            [
                ""althorn"",
                ""anthrol"",
                ""thronal""
            ],
            [
                ""aretaics"",
                ""tescaria""
            ],
            [
                ""asserting"",
                ""astringes"",
                ""ganisters""
            ],
            [
                ""charmers"",
                ""marchers""
            ],
            [
                ""depascent"",
                ""stepdance""
            ],
            [
                ""distater"",
                ""striated"",
                ""tardiest""
            ],
            [
                ""elitism"",
                ""limiest""
            ],
            [
                ""hepcats"",
                ""patches""
            ],
            [
                ""uhlans"",
                ""unlash""
            ],
            [
                ""unfired"",
                ""unfried""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
930,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""yeuks"", ""sukey"", ""lumined"", ""unlimed"", ""macabre"", ""macaber"", ""netcha"", ""entach"", ""dar"", ""rad"", ""tantalite"", ""atlantite""]
","[[""atlantite"", ""tantalite""], [""dar"", ""rad""], [""entach"", ""netcha""], [""lumined"", ""unlimed""], [""macaber"", ""macabre""], [""sukey"", ""yeuks""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""yeuks\"", \""sukey\"", \""lumined\"", \""unlimed\"", \""macabre\"", \""macaber\"", \""netcha\"", \""entach\"", \""dar\"", \""rad\"", \""tantalite\"", \""atlantite\""]\n"",
    ""answer"": ""[[\""atlantite\"", \""tantalite\""], [\""dar\"", \""rad\""], [\""entach\"", \""netcha\""], [\""lumined\"", \""unlimed\""], [\""macaber\"", \""macabre\""], [\""sukey\"", \""yeuks\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 930,
        ""words"": [
            ""yeuks"",
            ""sukey"",
            ""lumined"",
            ""unlimed"",
            ""macabre"",
            ""macaber"",
            ""netcha"",
            ""entach"",
            ""dar"",
            ""rad"",
            ""tantalite"",
            ""atlantite""
        ],
        ""solution"": [
            [
                ""atlantite"",
                ""tantalite""
            ],
            [
                ""dar"",
                ""rad""
            ],
            [
                ""entach"",
                ""netcha""
            ],
            [
                ""lumined"",
                ""unlimed""
            ],
            [
                ""macaber"",
                ""macabre""
            ],
            [
                ""sukey"",
                ""yeuks""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
931,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rheotactic"", ""theocratic"", ""proletaries"", ""proletarise"", ""concretor"", ""conrector"", ""calcite"", ""lectica"", ""reboant"", ""baronet"", ""underfelt"", ""tenderful"", ""spoutman"", ""pantoums"", ""adamine"", ""manidae"", ""denounce"", ""enounced"", ""maculates"", ""masculate""]
","[[""adamine"", ""manidae""], [""baronet"", ""reboant""], [""calcite"", ""lectica""], [""concretor"", ""conrector""], [""denounce"", ""enounced""], [""maculates"", ""masculate""], [""pantoums"", ""spoutman""], [""proletaries"", ""proletarise""], [""rheotactic"", ""theocratic""], [""tenderful"", ""underfelt""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rheotactic\"", \""theocratic\"", \""proletaries\"", \""proletarise\"", \""concretor\"", \""conrector\"", \""calcite\"", \""lectica\"", \""reboant\"", \""baronet\"", \""underfelt\"", \""tenderful\"", \""spoutman\"", \""pantoums\"", \""adamine\"", \""manidae\"", \""denounce\"", \""enounced\"", \""maculates\"", \""masculate\""]\n"",
    ""answer"": ""[[\""adamine\"", \""manidae\""], [\""baronet\"", \""reboant\""], [\""calcite\"", \""lectica\""], [\""concretor\"", \""conrector\""], [\""denounce\"", \""enounced\""], [\""maculates\"", \""masculate\""], [\""pantoums\"", \""spoutman\""], [\""proletaries\"", \""proletarise\""], [\""rheotactic\"", \""theocratic\""], [\""tenderful\"", \""underfelt\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 931,
        ""words"": [
            ""rheotactic"",
            ""theocratic"",
            ""proletaries"",
            ""proletarise"",
            ""concretor"",
            ""conrector"",
            ""calcite"",
            ""lectica"",
            ""reboant"",
            ""baronet"",
            ""underfelt"",
            ""tenderful"",
            ""spoutman"",
            ""pantoums"",
            ""adamine"",
            ""manidae"",
            ""denounce"",
            ""enounced"",
            ""maculates"",
            ""masculate""
        ],
        ""solution"": [
            [
                ""adamine"",
                ""manidae""
            ],
            [
                ""baronet"",
                ""reboant""
            ],
            [
                ""calcite"",
                ""lectica""
            ],
            [
                ""concretor"",
                ""conrector""
            ],
            [
                ""denounce"",
                ""enounced""
            ],
            [
                ""maculates"",
                ""masculate""
            ],
            [
                ""pantoums"",
                ""spoutman""
            ],
            [
                ""proletaries"",
                ""proletarise""
            ],
            [
                ""rheotactic"",
                ""theocratic""
            ],
            [
                ""tenderful"",
                ""underfelt""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
932,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""engler"", ""lenger"", ""hope"", ""peho"", ""theomorphic"", ""hemotrophic"", ""asana"", ""anasa"", ""oecanthus"", ""ceanothus"", ""sangha"", ""sangah"", ""unremanded"", ""undernamed"", ""clacking"", ""cackling"", ""gubernia"", ""rugbeian"", ""molts"", ""smolt""]
","[[""anasa"", ""asana""], [""cackling"", ""clacking""], [""ceanothus"", ""oecanthus""], [""engler"", ""lenger""], [""gubernia"", ""rugbeian""], [""hemotrophic"", ""theomorphic""], [""hope"", ""peho""], [""molts"", ""smolt""], [""sangah"", ""sangha""], [""undernamed"", ""unremanded""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""engler\"", \""lenger\"", \""hope\"", \""peho\"", \""theomorphic\"", \""hemotrophic\"", \""asana\"", \""anasa\"", \""oecanthus\"", \""ceanothus\"", \""sangha\"", \""sangah\"", \""unremanded\"", \""undernamed\"", \""clacking\"", \""cackling\"", \""gubernia\"", \""rugbeian\"", \""molts\"", \""smolt\""]\n"",
    ""answer"": ""[[\""anasa\"", \""asana\""], [\""cackling\"", \""clacking\""], [\""ceanothus\"", \""oecanthus\""], [\""engler\"", \""lenger\""], [\""gubernia\"", \""rugbeian\""], [\""hemotrophic\"", \""theomorphic\""], [\""hope\"", \""peho\""], [\""molts\"", \""smolt\""], [\""sangah\"", \""sangha\""], [\""undernamed\"", \""unremanded\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 932,
        ""words"": [
            ""engler"",
            ""lenger"",
            ""hope"",
            ""peho"",
            ""theomorphic"",
            ""hemotrophic"",
            ""asana"",
            ""anasa"",
            ""oecanthus"",
            ""ceanothus"",
            ""sangha"",
            ""sangah"",
            ""unremanded"",
            ""undernamed"",
            ""clacking"",
            ""cackling"",
            ""gubernia"",
            ""rugbeian"",
            ""molts"",
            ""smolt""
        ],
        ""solution"": [
            [
                ""anasa"",
                ""asana""
            ],
            [
                ""cackling"",
                ""clacking""
            ],
            [
                ""ceanothus"",
                ""oecanthus""
            ],
            [
                ""engler"",
                ""lenger""
            ],
            [
                ""gubernia"",
                ""rugbeian""
            ],
            [
                ""hemotrophic"",
                ""theomorphic""
            ],
            [
                ""hope"",
                ""peho""
            ],
            [
                ""molts"",
                ""smolt""
            ],
            [
                ""sangah"",
                ""sangha""
            ],
            [
                ""undernamed"",
                ""unremanded""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
933,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gambrel"", ""gambler"", ""curdle"", ""crudle"", ""curled"", ""neer"", ""erne"", ""reen"", ""nere"", ""spumose"", ""mopuses"", ""charuk"", ""chukar""]
","[[""charuk"", ""chukar""], [""crudle"", ""curdle"", ""curled""], [""erne"", ""neer"", ""nere"", ""reen""], [""gambler"", ""gambrel""], [""mopuses"", ""spumose""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gambrel\"", \""gambler\"", \""curdle\"", \""crudle\"", \""curled\"", \""neer\"", \""erne\"", \""reen\"", \""nere\"", \""spumose\"", \""mopuses\"", \""charuk\"", \""chukar\""]\n"",
    ""answer"": ""[[\""charuk\"", \""chukar\""], [\""crudle\"", \""curdle\"", \""curled\""], [\""erne\"", \""neer\"", \""nere\"", \""reen\""], [\""gambler\"", \""gambrel\""], [\""mopuses\"", \""spumose\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 933,
        ""words"": [
            ""gambrel"",
            ""gambler"",
            ""curdle"",
            ""crudle"",
            ""curled"",
            ""neer"",
            ""erne"",
            ""reen"",
            ""nere"",
            ""spumose"",
            ""mopuses"",
            ""charuk"",
            ""chukar""
        ],
        ""solution"": [
            [
                ""charuk"",
                ""chukar""
            ],
            [
                ""crudle"",
                ""curdle"",
                ""curled""
            ],
            [
                ""erne"",
                ""neer"",
                ""nere"",
                ""reen""
            ],
            [
                ""gambler"",
                ""gambrel""
            ],
            [
                ""mopuses"",
                ""spumose""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
934,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""edental"", ""dentale"", ""latened"", ""dalteen"", ""manacing"", ""manganic""]
","[[""dalteen"", ""dentale"", ""edental"", ""latened""], [""manacing"", ""manganic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""edental\"", \""dentale\"", \""latened\"", \""dalteen\"", \""manacing\"", \""manganic\""]\n"",
    ""answer"": ""[[\""dalteen\"", \""dentale\"", \""edental\"", \""latened\""], [\""manacing\"", \""manganic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 934,
        ""words"": [
            ""edental"",
            ""dentale"",
            ""latened"",
            ""dalteen"",
            ""manacing"",
            ""manganic""
        ],
        ""solution"": [
            [
                ""dalteen"",
                ""dentale"",
                ""edental"",
                ""latened""
            ],
            [
                ""manacing"",
                ""manganic""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
935,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""asyle"", ""lesya"", ""sealy"", ""lyase"", ""candles"", ""calends"", ""riposts"", ""prosist"", ""enantiomer"", ""renominate"", ""sharesman"", ""shearsman"", ""tracheophyte"", ""hypothecater"", ""ammeline"", ""melamine"", ""rhatanies"", ""hairstane"", ""aethered"", ""reheated"", ""ae"", ""ea""]
","[[""ae"", ""ea""], [""aethered"", ""reheated""], [""ammeline"", ""melamine""], [""asyle"", ""lesya"", ""lyase"", ""sealy""], [""calends"", ""candles""], [""enantiomer"", ""renominate""], [""hairstane"", ""rhatanies""], [""hypothecater"", ""tracheophyte""], [""prosist"", ""riposts""], [""sharesman"", ""shearsman""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""asyle\"", \""lesya\"", \""sealy\"", \""lyase\"", \""candles\"", \""calends\"", \""riposts\"", \""prosist\"", \""enantiomer\"", \""renominate\"", \""sharesman\"", \""shearsman\"", \""tracheophyte\"", \""hypothecater\"", \""ammeline\"", \""melamine\"", \""rhatanies\"", \""hairstane\"", \""aethered\"", \""reheated\"", \""ae\"", \""ea\""]\n"",
    ""answer"": ""[[\""ae\"", \""ea\""], [\""aethered\"", \""reheated\""], [\""ammeline\"", \""melamine\""], [\""asyle\"", \""lesya\"", \""lyase\"", \""sealy\""], [\""calends\"", \""candles\""], [\""enantiomer\"", \""renominate\""], [\""hairstane\"", \""rhatanies\""], [\""hypothecater\"", \""tracheophyte\""], [\""prosist\"", \""riposts\""], [\""sharesman\"", \""shearsman\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 935,
        ""words"": [
            ""asyle"",
            ""lesya"",
            ""sealy"",
            ""lyase"",
            ""candles"",
            ""calends"",
            ""riposts"",
            ""prosist"",
            ""enantiomer"",
            ""renominate"",
            ""sharesman"",
            ""shearsman"",
            ""tracheophyte"",
            ""hypothecater"",
            ""ammeline"",
            ""melamine"",
            ""rhatanies"",
            ""hairstane"",
            ""aethered"",
            ""reheated"",
            ""ae"",
            ""ea""
        ],
        ""solution"": [
            [
                ""ae"",
                ""ea""
            ],
            [
                ""aethered"",
                ""reheated""
            ],
            [
                ""ammeline"",
                ""melamine""
            ],
            [
                ""asyle"",
                ""lesya"",
                ""lyase"",
                ""sealy""
            ],
            [
                ""calends"",
                ""candles""
            ],
            [
                ""enantiomer"",
                ""renominate""
            ],
            [
                ""hairstane"",
                ""rhatanies""
            ],
            [
                ""hypothecater"",
                ""tracheophyte""
            ],
            [
                ""prosist"",
                ""riposts""
            ],
            [
                ""sharesman"",
                ""shearsman""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
936,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cognation"", ""contagion"", ""pinson"", ""pinons"", ""inconcievable"", ""inconceivable""]
","[[""cognation"", ""contagion""], [""inconceivable"", ""inconcievable""], [""pinons"", ""pinson""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cognation\"", \""contagion\"", \""pinson\"", \""pinons\"", \""inconcievable\"", \""inconceivable\""]\n"",
    ""answer"": ""[[\""cognation\"", \""contagion\""], [\""inconceivable\"", \""inconcievable\""], [\""pinons\"", \""pinson\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 936,
        ""words"": [
            ""cognation"",
            ""contagion"",
            ""pinson"",
            ""pinons"",
            ""inconcievable"",
            ""inconceivable""
        ],
        ""solution"": [
            [
                ""cognation"",
                ""contagion""
            ],
            [
                ""inconceivable"",
                ""inconcievable""
            ],
            [
                ""pinons"",
                ""pinson""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
937,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""manorship"", ""orphanism"", ""tetrakishexahedron"", ""hexakistetrahedron"", ""gentianic"", ""antigenic"", ""platelike"", ""petallike"", ""washier"", ""wearish"", ""concessionaires"", ""concessionaries"", ""annule"", ""unlean"", ""misfiled"", ""misfield""]
","[[""annule"", ""unlean""], [""antigenic"", ""gentianic""], [""concessionaires"", ""concessionaries""], [""hexakistetrahedron"", ""tetrakishexahedron""], [""manorship"", ""orphanism""], [""misfield"", ""misfiled""], [""petallike"", ""platelike""], [""washier"", ""wearish""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""manorship\"", \""orphanism\"", \""tetrakishexahedron\"", \""hexakistetrahedron\"", \""gentianic\"", \""antigenic\"", \""platelike\"", \""petallike\"", \""washier\"", \""wearish\"", \""concessionaires\"", \""concessionaries\"", \""annule\"", \""unlean\"", \""misfiled\"", \""misfield\""]\n"",
    ""answer"": ""[[\""annule\"", \""unlean\""], [\""antigenic\"", \""gentianic\""], [\""concessionaires\"", \""concessionaries\""], [\""hexakistetrahedron\"", \""tetrakishexahedron\""], [\""manorship\"", \""orphanism\""], [\""misfield\"", \""misfiled\""], [\""petallike\"", \""platelike\""], [\""washier\"", \""wearish\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 937,
        ""words"": [
            ""manorship"",
            ""orphanism"",
            ""tetrakishexahedron"",
            ""hexakistetrahedron"",
            ""gentianic"",
            ""antigenic"",
            ""platelike"",
            ""petallike"",
            ""washier"",
            ""wearish"",
            ""concessionaires"",
            ""concessionaries"",
            ""annule"",
            ""unlean"",
            ""misfiled"",
            ""misfield""
        ],
        ""solution"": [
            [
                ""annule"",
                ""unlean""
            ],
            [
                ""antigenic"",
                ""gentianic""
            ],
            [
                ""concessionaires"",
                ""concessionaries""
            ],
            [
                ""hexakistetrahedron"",
                ""tetrakishexahedron""
            ],
            [
                ""manorship"",
                ""orphanism""
            ],
            [
                ""misfield"",
                ""misfiled""
            ],
            [
                ""petallike"",
                ""platelike""
            ],
            [
                ""washier"",
                ""wearish""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
938,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""nauclerus"", ""unsecular"", ""argestes"", ""restages"", ""shieling"", ""sheiling"", ""antony"", ""noyant"", ""panier"", ""rapine"", ""parine"", ""napier"", ""ph"", ""hp""]
","[[""antony"", ""noyant""], [""argestes"", ""restages""], [""hp"", ""ph""], [""napier"", ""panier"", ""parine"", ""rapine""], [""nauclerus"", ""unsecular""], [""sheiling"", ""shieling""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""nauclerus\"", \""unsecular\"", \""argestes\"", \""restages\"", \""shieling\"", \""sheiling\"", \""antony\"", \""noyant\"", \""panier\"", \""rapine\"", \""parine\"", \""napier\"", \""ph\"", \""hp\""]\n"",
    ""answer"": ""[[\""antony\"", \""noyant\""], [\""argestes\"", \""restages\""], [\""hp\"", \""ph\""], [\""napier\"", \""panier\"", \""parine\"", \""rapine\""], [\""nauclerus\"", \""unsecular\""], [\""sheiling\"", \""shieling\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 938,
        ""words"": [
            ""nauclerus"",
            ""unsecular"",
            ""argestes"",
            ""restages"",
            ""shieling"",
            ""sheiling"",
            ""antony"",
            ""noyant"",
            ""panier"",
            ""rapine"",
            ""parine"",
            ""napier"",
            ""ph"",
            ""hp""
        ],
        ""solution"": [
            [
                ""antony"",
                ""noyant""
            ],
            [
                ""argestes"",
                ""restages""
            ],
            [
                ""hp"",
                ""ph""
            ],
            [
                ""napier"",
                ""panier"",
                ""parine"",
                ""rapine""
            ],
            [
                ""nauclerus"",
                ""unsecular""
            ],
            [
                ""sheiling"",
                ""shieling""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
939,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""carob"", ""carbo"", ""variates"", ""varietas"", ""moulinet"", ""unmotile"", ""hocky"", ""choky"", ""barters"", ""barrets"", ""atomises"", ""amitoses""]
","[[""amitoses"", ""atomises""], [""barrets"", ""barters""], [""carbo"", ""carob""], [""choky"", ""hocky""], [""moulinet"", ""unmotile""], [""variates"", ""varietas""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""carob\"", \""carbo\"", \""variates\"", \""varietas\"", \""moulinet\"", \""unmotile\"", \""hocky\"", \""choky\"", \""barters\"", \""barrets\"", \""atomises\"", \""amitoses\""]\n"",
    ""answer"": ""[[\""amitoses\"", \""atomises\""], [\""barrets\"", \""barters\""], [\""carbo\"", \""carob\""], [\""choky\"", \""hocky\""], [\""moulinet\"", \""unmotile\""], [\""variates\"", \""varietas\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 939,
        ""words"": [
            ""carob"",
            ""carbo"",
            ""variates"",
            ""varietas"",
            ""moulinet"",
            ""unmotile"",
            ""hocky"",
            ""choky"",
            ""barters"",
            ""barrets"",
            ""atomises"",
            ""amitoses""
        ],
        ""solution"": [
            [
                ""amitoses"",
                ""atomises""
            ],
            [
                ""barrets"",
                ""barters""
            ],
            [
                ""carbo"",
                ""carob""
            ],
            [
                ""choky"",
                ""hocky""
            ],
            [
                ""moulinet"",
                ""unmotile""
            ],
            [
                ""variates"",
                ""varietas""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
940,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""slashed"", ""hassled"", ""maunder"", ""unarmed"", ""manured"", ""secalin"", ""calesin""]
","[[""calesin"", ""secalin""], [""hassled"", ""slashed""], [""manured"", ""maunder"", ""unarmed""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""slashed\"", \""hassled\"", \""maunder\"", \""unarmed\"", \""manured\"", \""secalin\"", \""calesin\""]\n"",
    ""answer"": ""[[\""calesin\"", \""secalin\""], [\""hassled\"", \""slashed\""], [\""manured\"", \""maunder\"", \""unarmed\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 940,
        ""words"": [
            ""slashed"",
            ""hassled"",
            ""maunder"",
            ""unarmed"",
            ""manured"",
            ""secalin"",
            ""calesin""
        ],
        ""solution"": [
            [
                ""calesin"",
                ""secalin""
            ],
            [
                ""hassled"",
                ""slashed""
            ],
            [
                ""manured"",
                ""maunder"",
                ""unarmed""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
941,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""thimerosal"", ""isothermal"", ""collage"", ""alcogel"", ""lorien"", ""elinor"", ""nonconservational"", ""nonconversational""]
","[[""alcogel"", ""collage""], [""elinor"", ""lorien""], [""isothermal"", ""thimerosal""], [""nonconservational"", ""nonconversational""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""thimerosal\"", \""isothermal\"", \""collage\"", \""alcogel\"", \""lorien\"", \""elinor\"", \""nonconservational\"", \""nonconversational\""]\n"",
    ""answer"": ""[[\""alcogel\"", \""collage\""], [\""elinor\"", \""lorien\""], [\""isothermal\"", \""thimerosal\""], [\""nonconservational\"", \""nonconversational\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 941,
        ""words"": [
            ""thimerosal"",
            ""isothermal"",
            ""collage"",
            ""alcogel"",
            ""lorien"",
            ""elinor"",
            ""nonconservational"",
            ""nonconversational""
        ],
        ""solution"": [
            [
                ""alcogel"",
                ""collage""
            ],
            [
                ""elinor"",
                ""lorien""
            ],
            [
                ""isothermal"",
                ""thimerosal""
            ],
            [
                ""nonconservational"",
                ""nonconversational""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
942,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""reglowing"", ""glowering"", ""jaghir"", ""jirgah"", ""prelates"", ""pleaters"", ""replates"", ""koosin"", ""kinoos"", ""signeted"", ""ingested"", ""motographic"", ""tomographic"", ""unstateable"", ""untasteable""]
","[[""glowering"", ""reglowing""], [""ingested"", ""signeted""], [""jaghir"", ""jirgah""], [""kinoos"", ""koosin""], [""motographic"", ""tomographic""], [""pleaters"", ""prelates"", ""replates""], [""unstateable"", ""untasteable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""reglowing\"", \""glowering\"", \""jaghir\"", \""jirgah\"", \""prelates\"", \""pleaters\"", \""replates\"", \""koosin\"", \""kinoos\"", \""signeted\"", \""ingested\"", \""motographic\"", \""tomographic\"", \""unstateable\"", \""untasteable\""]\n"",
    ""answer"": ""[[\""glowering\"", \""reglowing\""], [\""ingested\"", \""signeted\""], [\""jaghir\"", \""jirgah\""], [\""kinoos\"", \""koosin\""], [\""motographic\"", \""tomographic\""], [\""pleaters\"", \""prelates\"", \""replates\""], [\""unstateable\"", \""untasteable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 942,
        ""words"": [
            ""reglowing"",
            ""glowering"",
            ""jaghir"",
            ""jirgah"",
            ""prelates"",
            ""pleaters"",
            ""replates"",
            ""koosin"",
            ""kinoos"",
            ""signeted"",
            ""ingested"",
            ""motographic"",
            ""tomographic"",
            ""unstateable"",
            ""untasteable""
        ],
        ""solution"": [
            [
                ""glowering"",
                ""reglowing""
            ],
            [
                ""ingested"",
                ""signeted""
            ],
            [
                ""jaghir"",
                ""jirgah""
            ],
            [
                ""kinoos"",
                ""koosin""
            ],
            [
                ""motographic"",
                ""tomographic""
            ],
            [
                ""pleaters"",
                ""prelates"",
                ""replates""
            ],
            [
                ""unstateable"",
                ""untasteable""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
943,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sneck"", ""necks"", ""muses"", ""smuse"", ""lenape"", ""pelean"", ""epenla"", ""alpeen"", ""loathly"", ""tallyho"", ""intrencher"", ""reintrench"", ""phu"", ""hup"", ""pranks"", ""sprank"", ""resenting"", ""stringene"", ""smiters"", ""misters""]
","[[""alpeen"", ""epenla"", ""lenape"", ""pelean""], [""hup"", ""phu""], [""intrencher"", ""reintrench""], [""loathly"", ""tallyho""], [""misters"", ""smiters""], [""muses"", ""smuse""], [""necks"", ""sneck""], [""pranks"", ""sprank""], [""resenting"", ""stringene""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sneck\"", \""necks\"", \""muses\"", \""smuse\"", \""lenape\"", \""pelean\"", \""epenla\"", \""alpeen\"", \""loathly\"", \""tallyho\"", \""intrencher\"", \""reintrench\"", \""phu\"", \""hup\"", \""pranks\"", \""sprank\"", \""resenting\"", \""stringene\"", \""smiters\"", \""misters\""]\n"",
    ""answer"": ""[[\""alpeen\"", \""epenla\"", \""lenape\"", \""pelean\""], [\""hup\"", \""phu\""], [\""intrencher\"", \""reintrench\""], [\""loathly\"", \""tallyho\""], [\""misters\"", \""smiters\""], [\""muses\"", \""smuse\""], [\""necks\"", \""sneck\""], [\""pranks\"", \""sprank\""], [\""resenting\"", \""stringene\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 943,
        ""words"": [
            ""sneck"",
            ""necks"",
            ""muses"",
            ""smuse"",
            ""lenape"",
            ""pelean"",
            ""epenla"",
            ""alpeen"",
            ""loathly"",
            ""tallyho"",
            ""intrencher"",
            ""reintrench"",
            ""phu"",
            ""hup"",
            ""pranks"",
            ""sprank"",
            ""resenting"",
            ""stringene"",
            ""smiters"",
            ""misters""
        ],
        ""solution"": [
            [
                ""alpeen"",
                ""epenla"",
                ""lenape"",
                ""pelean""
            ],
            [
                ""hup"",
                ""phu""
            ],
            [
                ""intrencher"",
                ""reintrench""
            ],
            [
                ""loathly"",
                ""tallyho""
            ],
            [
                ""misters"",
                ""smiters""
            ],
            [
                ""muses"",
                ""smuse""
            ],
            [
                ""necks"",
                ""sneck""
            ],
            [
                ""pranks"",
                ""sprank""
            ],
            [
                ""resenting"",
                ""stringene""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
944,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pristane"", ""pantries"", ""pinaster"", ""spartein"", ""painters"", ""timings"", ""smiting"", ""misting"", ""manbote"", ""boatmen"", ""syssarcotic"", ""sarcocystis"", ""snot"", ""tons"", ""neslia"", ""lianes"", ""scolog"", ""cologs""]
","[[""boatmen"", ""manbote""], [""cologs"", ""scolog""], [""lianes"", ""neslia""], [""misting"", ""smiting"", ""timings""], [""painters"", ""pantries"", ""pinaster"", ""pristane"", ""spartein""], [""sarcocystis"", ""syssarcotic""], [""snot"", ""tons""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pristane\"", \""pantries\"", \""pinaster\"", \""spartein\"", \""painters\"", \""timings\"", \""smiting\"", \""misting\"", \""manbote\"", \""boatmen\"", \""syssarcotic\"", \""sarcocystis\"", \""snot\"", \""tons\"", \""neslia\"", \""lianes\"", \""scolog\"", \""cologs\""]\n"",
    ""answer"": ""[[\""boatmen\"", \""manbote\""], [\""cologs\"", \""scolog\""], [\""lianes\"", \""neslia\""], [\""misting\"", \""smiting\"", \""timings\""], [\""painters\"", \""pantries\"", \""pinaster\"", \""pristane\"", \""spartein\""], [\""sarcocystis\"", \""syssarcotic\""], [\""snot\"", \""tons\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 944,
        ""words"": [
            ""pristane"",
            ""pantries"",
            ""pinaster"",
            ""spartein"",
            ""painters"",
            ""timings"",
            ""smiting"",
            ""misting"",
            ""manbote"",
            ""boatmen"",
            ""syssarcotic"",
            ""sarcocystis"",
            ""snot"",
            ""tons"",
            ""neslia"",
            ""lianes"",
            ""scolog"",
            ""cologs""
        ],
        ""solution"": [
            [
                ""boatmen"",
                ""manbote""
            ],
            [
                ""cologs"",
                ""scolog""
            ],
            [
                ""lianes"",
                ""neslia""
            ],
            [
                ""misting"",
                ""smiting"",
                ""timings""
            ],
            [
                ""painters"",
                ""pantries"",
                ""pinaster"",
                ""pristane"",
                ""spartein""
            ],
            [
                ""sarcocystis"",
                ""syssarcotic""
            ],
            [
                ""snot"",
                ""tons""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
945,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""xylose"", ""lyxose"", ""reharm"", ""harmer""]
","[[""harmer"", ""reharm""], [""lyxose"", ""xylose""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""xylose\"", \""lyxose\"", \""reharm\"", \""harmer\""]\n"",
    ""answer"": ""[[\""harmer\"", \""reharm\""], [\""lyxose\"", \""xylose\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 945,
        ""words"": [
            ""xylose"",
            ""lyxose"",
            ""reharm"",
            ""harmer""
        ],
        ""solution"": [
            [
                ""harmer"",
                ""reharm""
            ],
            [
                ""lyxose"",
                ""xylose""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
946,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""prononce"", ""penorcon"", ""semination"", ""antinomies"", ""antimonies"", ""drias"", ""raids"", ""undumped"", ""pudendum""]
","[[""antimonies"", ""antinomies"", ""semination""], [""drias"", ""raids""], [""penorcon"", ""prononce""], [""pudendum"", ""undumped""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""prononce\"", \""penorcon\"", \""semination\"", \""antinomies\"", \""antimonies\"", \""drias\"", \""raids\"", \""undumped\"", \""pudendum\""]\n"",
    ""answer"": ""[[\""antimonies\"", \""antinomies\"", \""semination\""], [\""drias\"", \""raids\""], [\""penorcon\"", \""prononce\""], [\""pudendum\"", \""undumped\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 946,
        ""words"": [
            ""prononce"",
            ""penorcon"",
            ""semination"",
            ""antinomies"",
            ""antimonies"",
            ""drias"",
            ""raids"",
            ""undumped"",
            ""pudendum""
        ],
        ""solution"": [
            [
                ""antimonies"",
                ""antinomies"",
                ""semination""
            ],
            [
                ""drias"",
                ""raids""
            ],
            [
                ""penorcon"",
                ""prononce""
            ],
            [
                ""pudendum"",
                ""undumped""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
947,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""oblast"", ""bloats"", ""bostal"", ""proa"", ""prao"", ""calentured"", ""crenulated"", ""sappare"", ""appears"", ""harmed"", ""derham"", ""barocco"", ""boccaro"", ""manty"", ""maynt"", ""narghiles"", ""ashlering"", ""shearling"", ""nargilehs"", ""ranges"", ""serang"", ""angers"", ""sanger""]
","[[""angers"", ""ranges"", ""sanger"", ""serang""], [""appears"", ""sappare""], [""ashlering"", ""narghiles"", ""nargilehs"", ""shearling""], [""barocco"", ""boccaro""], [""bloats"", ""bostal"", ""oblast""], [""calentured"", ""crenulated""], [""derham"", ""harmed""], [""manty"", ""maynt""], [""prao"", ""proa""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""oblast\"", \""bloats\"", \""bostal\"", \""proa\"", \""prao\"", \""calentured\"", \""crenulated\"", \""sappare\"", \""appears\"", \""harmed\"", \""derham\"", \""barocco\"", \""boccaro\"", \""manty\"", \""maynt\"", \""narghiles\"", \""ashlering\"", \""shearling\"", \""nargilehs\"", \""ranges\"", \""serang\"", \""angers\"", \""sanger\""]\n"",
    ""answer"": ""[[\""angers\"", \""ranges\"", \""sanger\"", \""serang\""], [\""appears\"", \""sappare\""], [\""ashlering\"", \""narghiles\"", \""nargilehs\"", \""shearling\""], [\""barocco\"", \""boccaro\""], [\""bloats\"", \""bostal\"", \""oblast\""], [\""calentured\"", \""crenulated\""], [\""derham\"", \""harmed\""], [\""manty\"", \""maynt\""], [\""prao\"", \""proa\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 947,
        ""words"": [
            ""oblast"",
            ""bloats"",
            ""bostal"",
            ""proa"",
            ""prao"",
            ""calentured"",
            ""crenulated"",
            ""sappare"",
            ""appears"",
            ""harmed"",
            ""derham"",
            ""barocco"",
            ""boccaro"",
            ""manty"",
            ""maynt"",
            ""narghiles"",
            ""ashlering"",
            ""shearling"",
            ""nargilehs"",
            ""ranges"",
            ""serang"",
            ""angers"",
            ""sanger""
        ],
        ""solution"": [
            [
                ""angers"",
                ""ranges"",
                ""sanger"",
                ""serang""
            ],
            [
                ""appears"",
                ""sappare""
            ],
            [
                ""ashlering"",
                ""narghiles"",
                ""nargilehs"",
                ""shearling""
            ],
            [
                ""barocco"",
                ""boccaro""
            ],
            [
                ""bloats"",
                ""bostal"",
                ""oblast""
            ],
            [
                ""calentured"",
                ""crenulated""
            ],
            [
                ""derham"",
                ""harmed""
            ],
            [
                ""manty"",
                ""maynt""
            ],
            [
                ""prao"",
                ""proa""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
948,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ossicule"", ""leucosis"", ""coulisse"", ""bines"", ""besin"", ""quitter"", ""triquet"", ""cachets"", ""catches"", ""crickle"", ""clicker"", ""coendured"", ""unrecoded"", ""smell"", ""mells"", ""pericles"", ""eclipser"", ""resplice""]
","[[""besin"", ""bines""], [""cachets"", ""catches""], [""clicker"", ""crickle""], [""coendured"", ""unrecoded""], [""coulisse"", ""leucosis"", ""ossicule""], [""eclipser"", ""pericles"", ""resplice""], [""mells"", ""smell""], [""quitter"", ""triquet""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ossicule\"", \""leucosis\"", \""coulisse\"", \""bines\"", \""besin\"", \""quitter\"", \""triquet\"", \""cachets\"", \""catches\"", \""crickle\"", \""clicker\"", \""coendured\"", \""unrecoded\"", \""smell\"", \""mells\"", \""pericles\"", \""eclipser\"", \""resplice\""]\n"",
    ""answer"": ""[[\""besin\"", \""bines\""], [\""cachets\"", \""catches\""], [\""clicker\"", \""crickle\""], [\""coendured\"", \""unrecoded\""], [\""coulisse\"", \""leucosis\"", \""ossicule\""], [\""eclipser\"", \""pericles\"", \""resplice\""], [\""mells\"", \""smell\""], [\""quitter\"", \""triquet\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 948,
        ""words"": [
            ""ossicule"",
            ""leucosis"",
            ""coulisse"",
            ""bines"",
            ""besin"",
            ""quitter"",
            ""triquet"",
            ""cachets"",
            ""catches"",
            ""crickle"",
            ""clicker"",
            ""coendured"",
            ""unrecoded"",
            ""smell"",
            ""mells"",
            ""pericles"",
            ""eclipser"",
            ""resplice""
        ],
        ""solution"": [
            [
                ""besin"",
                ""bines""
            ],
            [
                ""cachets"",
                ""catches""
            ],
            [
                ""clicker"",
                ""crickle""
            ],
            [
                ""coendured"",
                ""unrecoded""
            ],
            [
                ""coulisse"",
                ""leucosis"",
                ""ossicule""
            ],
            [
                ""eclipser"",
                ""pericles"",
                ""resplice""
            ],
            [
                ""mells"",
                ""smell""
            ],
            [
                ""quitter"",
                ""triquet""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
949,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""alytes"", ""astely"", ""lysate"", ""stealy"", ""auntly"", ""lutany"", ""deluged"", ""duledge"", ""swats"", ""wasts"", ""restricted"", ""derestrict""]
","[[""alytes"", ""astely"", ""lysate"", ""stealy""], [""auntly"", ""lutany""], [""deluged"", ""duledge""], [""derestrict"", ""restricted""], [""swats"", ""wasts""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""alytes\"", \""astely\"", \""lysate\"", \""stealy\"", \""auntly\"", \""lutany\"", \""deluged\"", \""duledge\"", \""swats\"", \""wasts\"", \""restricted\"", \""derestrict\""]\n"",
    ""answer"": ""[[\""alytes\"", \""astely\"", \""lysate\"", \""stealy\""], [\""auntly\"", \""lutany\""], [\""deluged\"", \""duledge\""], [\""derestrict\"", \""restricted\""], [\""swats\"", \""wasts\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 949,
        ""words"": [
            ""alytes"",
            ""astely"",
            ""lysate"",
            ""stealy"",
            ""auntly"",
            ""lutany"",
            ""deluged"",
            ""duledge"",
            ""swats"",
            ""wasts"",
            ""restricted"",
            ""derestrict""
        ],
        ""solution"": [
            [
                ""alytes"",
                ""astely"",
                ""lysate"",
                ""stealy""
            ],
            [
                ""auntly"",
                ""lutany""
            ],
            [
                ""deluged"",
                ""duledge""
            ],
            [
                ""derestrict"",
                ""restricted""
            ],
            [
                ""swats"",
                ""wasts""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
950,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""perau"", ""pareu"", ""aperu"", ""rubescent"", ""subcentre"", ""diagonial"", ""gadolinia"", ""isaurian"", ""anisuria"", ""trifler"", ""flirter"", ""relieved"", ""relevied"", ""chute"", ""chuet"", ""teuch"", ""sacrist"", ""racists"", ""nan"", ""ann"", ""weli"", ""wile""]
","[[""anisuria"", ""isaurian""], [""ann"", ""nan""], [""aperu"", ""pareu"", ""perau""], [""chuet"", ""chute"", ""teuch""], [""diagonial"", ""gadolinia""], [""flirter"", ""trifler""], [""racists"", ""sacrist""], [""relevied"", ""relieved""], [""rubescent"", ""subcentre""], [""weli"", ""wile""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""perau\"", \""pareu\"", \""aperu\"", \""rubescent\"", \""subcentre\"", \""diagonial\"", \""gadolinia\"", \""isaurian\"", \""anisuria\"", \""trifler\"", \""flirter\"", \""relieved\"", \""relevied\"", \""chute\"", \""chuet\"", \""teuch\"", \""sacrist\"", \""racists\"", \""nan\"", \""ann\"", \""weli\"", \""wile\""]\n"",
    ""answer"": ""[[\""anisuria\"", \""isaurian\""], [\""ann\"", \""nan\""], [\""aperu\"", \""pareu\"", \""perau\""], [\""chuet\"", \""chute\"", \""teuch\""], [\""diagonial\"", \""gadolinia\""], [\""flirter\"", \""trifler\""], [\""racists\"", \""sacrist\""], [\""relevied\"", \""relieved\""], [\""rubescent\"", \""subcentre\""], [\""weli\"", \""wile\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 950,
        ""words"": [
            ""perau"",
            ""pareu"",
            ""aperu"",
            ""rubescent"",
            ""subcentre"",
            ""diagonial"",
            ""gadolinia"",
            ""isaurian"",
            ""anisuria"",
            ""trifler"",
            ""flirter"",
            ""relieved"",
            ""relevied"",
            ""chute"",
            ""chuet"",
            ""teuch"",
            ""sacrist"",
            ""racists"",
            ""nan"",
            ""ann"",
            ""weli"",
            ""wile""
        ],
        ""solution"": [
            [
                ""anisuria"",
                ""isaurian""
            ],
            [
                ""ann"",
                ""nan""
            ],
            [
                ""aperu"",
                ""pareu"",
                ""perau""
            ],
            [
                ""chuet"",
                ""chute"",
                ""teuch""
            ],
            [
                ""diagonial"",
                ""gadolinia""
            ],
            [
                ""flirter"",
                ""trifler""
            ],
            [
                ""racists"",
                ""sacrist""
            ],
            [
                ""relevied"",
                ""relieved""
            ],
            [
                ""rubescent"",
                ""subcentre""
            ],
            [
                ""weli"",
                ""wile""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
951,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""popeling"", ""peopling"", ""gearman"", ""manager"", ""dilluer"", ""illuder"", ""swarve"", ""wavers"", ""swaver"", ""hitler"", ""lither"", ""minacities"", ""intimacies"", ""importunate"", ""permutation"", ""distillage"", ""sigillated"", ""acheulean"", ""euchlaena"", ""vintagers"", ""grievants""]
","[[""acheulean"", ""euchlaena""], [""dilluer"", ""illuder""], [""distillage"", ""sigillated""], [""gearman"", ""manager""], [""grievants"", ""vintagers""], [""hitler"", ""lither""], [""importunate"", ""permutation""], [""intimacies"", ""minacities""], [""peopling"", ""popeling""], [""swarve"", ""swaver"", ""wavers""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""popeling\"", \""peopling\"", \""gearman\"", \""manager\"", \""dilluer\"", \""illuder\"", \""swarve\"", \""wavers\"", \""swaver\"", \""hitler\"", \""lither\"", \""minacities\"", \""intimacies\"", \""importunate\"", \""permutation\"", \""distillage\"", \""sigillated\"", \""acheulean\"", \""euchlaena\"", \""vintagers\"", \""grievants\""]\n"",
    ""answer"": ""[[\""acheulean\"", \""euchlaena\""], [\""dilluer\"", \""illuder\""], [\""distillage\"", \""sigillated\""], [\""gearman\"", \""manager\""], [\""grievants\"", \""vintagers\""], [\""hitler\"", \""lither\""], [\""importunate\"", \""permutation\""], [\""intimacies\"", \""minacities\""], [\""peopling\"", \""popeling\""], [\""swarve\"", \""swaver\"", \""wavers\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 951,
        ""words"": [
            ""popeling"",
            ""peopling"",
            ""gearman"",
            ""manager"",
            ""dilluer"",
            ""illuder"",
            ""swarve"",
            ""wavers"",
            ""swaver"",
            ""hitler"",
            ""lither"",
            ""minacities"",
            ""intimacies"",
            ""importunate"",
            ""permutation"",
            ""distillage"",
            ""sigillated"",
            ""acheulean"",
            ""euchlaena"",
            ""vintagers"",
            ""grievants""
        ],
        ""solution"": [
            [
                ""acheulean"",
                ""euchlaena""
            ],
            [
                ""dilluer"",
                ""illuder""
            ],
            [
                ""distillage"",
                ""sigillated""
            ],
            [
                ""gearman"",
                ""manager""
            ],
            [
                ""grievants"",
                ""vintagers""
            ],
            [
                ""hitler"",
                ""lither""
            ],
            [
                ""importunate"",
                ""permutation""
            ],
            [
                ""intimacies"",
                ""minacities""
            ],
            [
                ""peopling"",
                ""popeling""
            ],
            [
                ""swarve"",
                ""swaver"",
                ""wavers""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
952,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""refr"", ""ferr"", ""laud"", ""auld"", ""udal"", ""dual"", ""cholangioitis"", ""angiocholitis""]
","[[""angiocholitis"", ""cholangioitis""], [""auld"", ""dual"", ""laud"", ""udal""], [""ferr"", ""refr""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""refr\"", \""ferr\"", \""laud\"", \""auld\"", \""udal\"", \""dual\"", \""cholangioitis\"", \""angiocholitis\""]\n"",
    ""answer"": ""[[\""angiocholitis\"", \""cholangioitis\""], [\""auld\"", \""dual\"", \""laud\"", \""udal\""], [\""ferr\"", \""refr\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 952,
        ""words"": [
            ""refr"",
            ""ferr"",
            ""laud"",
            ""auld"",
            ""udal"",
            ""dual"",
            ""cholangioitis"",
            ""angiocholitis""
        ],
        ""solution"": [
            [
                ""angiocholitis"",
                ""cholangioitis""
            ],
            [
                ""auld"",
                ""dual"",
                ""laud"",
                ""udal""
            ],
            [
                ""ferr"",
                ""refr""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
953,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""cavalier"", ""calvaire"", ""retested"", ""detester"", ""actionist"", ""citations"", ""unharbored"", ""unabhorred"", ""magic"", ""gamic"", ""undrag"", ""durgan"", ""phrenitis"", ""nephritis"", ""inspreith""]
","[[""actionist"", ""citations""], [""calvaire"", ""cavalier""], [""detester"", ""retested""], [""durgan"", ""undrag""], [""gamic"", ""magic""], [""inspreith"", ""nephritis"", ""phrenitis""], [""unabhorred"", ""unharbored""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""cavalier\"", \""calvaire\"", \""retested\"", \""detester\"", \""actionist\"", \""citations\"", \""unharbored\"", \""unabhorred\"", \""magic\"", \""gamic\"", \""undrag\"", \""durgan\"", \""phrenitis\"", \""nephritis\"", \""inspreith\""]\n"",
    ""answer"": ""[[\""actionist\"", \""citations\""], [\""calvaire\"", \""cavalier\""], [\""detester\"", \""retested\""], [\""durgan\"", \""undrag\""], [\""gamic\"", \""magic\""], [\""inspreith\"", \""nephritis\"", \""phrenitis\""], [\""unabhorred\"", \""unharbored\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 953,
        ""words"": [
            ""cavalier"",
            ""calvaire"",
            ""retested"",
            ""detester"",
            ""actionist"",
            ""citations"",
            ""unharbored"",
            ""unabhorred"",
            ""magic"",
            ""gamic"",
            ""undrag"",
            ""durgan"",
            ""phrenitis"",
            ""nephritis"",
            ""inspreith""
        ],
        ""solution"": [
            [
                ""actionist"",
                ""citations""
            ],
            [
                ""calvaire"",
                ""cavalier""
            ],
            [
                ""detester"",
                ""retested""
            ],
            [
                ""durgan"",
                ""undrag""
            ],
            [
                ""gamic"",
                ""magic""
            ],
            [
                ""inspreith"",
                ""nephritis"",
                ""phrenitis""
            ],
            [
                ""unabhorred"",
                ""unharbored""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
954,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""stubbier"", ""subtribe"", ""nay"", ""yan"", ""any"", ""redive"", ""reived"", ""derive""]
","[[""any"", ""nay"", ""yan""], [""derive"", ""redive"", ""reived""], [""stubbier"", ""subtribe""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""stubbier\"", \""subtribe\"", \""nay\"", \""yan\"", \""any\"", \""redive\"", \""reived\"", \""derive\""]\n"",
    ""answer"": ""[[\""any\"", \""nay\"", \""yan\""], [\""derive\"", \""redive\"", \""reived\""], [\""stubbier\"", \""subtribe\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 954,
        ""words"": [
            ""stubbier"",
            ""subtribe"",
            ""nay"",
            ""yan"",
            ""any"",
            ""redive"",
            ""reived"",
            ""derive""
        ],
        ""solution"": [
            [
                ""any"",
                ""nay"",
                ""yan""
            ],
            [
                ""derive"",
                ""redive"",
                ""reived""
            ],
            [
                ""stubbier"",
                ""subtribe""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
955,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sightly"", ""slighty"", ""hodad"", ""haddo"", ""phelonion"", ""phenolion"", ""reallude"", ""laureled"", ""headrig"", ""hagride"", ""hilloaing"", ""alilonghi"", ""aerodontic"", ""carotenoid"", ""coronadite"", ""acoustoelectric"", ""electroacoustic"", ""climaxes"", ""exclaims"", ""albian"", ""balian"", ""bilaan""]
","[[""acoustoelectric"", ""electroacoustic""], [""aerodontic"", ""carotenoid"", ""coronadite""], [""albian"", ""balian"", ""bilaan""], [""alilonghi"", ""hilloaing""], [""climaxes"", ""exclaims""], [""haddo"", ""hodad""], [""hagride"", ""headrig""], [""laureled"", ""reallude""], [""phelonion"", ""phenolion""], [""sightly"", ""slighty""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sightly\"", \""slighty\"", \""hodad\"", \""haddo\"", \""phelonion\"", \""phenolion\"", \""reallude\"", \""laureled\"", \""headrig\"", \""hagride\"", \""hilloaing\"", \""alilonghi\"", \""aerodontic\"", \""carotenoid\"", \""coronadite\"", \""acoustoelectric\"", \""electroacoustic\"", \""climaxes\"", \""exclaims\"", \""albian\"", \""balian\"", \""bilaan\""]\n"",
    ""answer"": ""[[\""acoustoelectric\"", \""electroacoustic\""], [\""aerodontic\"", \""carotenoid\"", \""coronadite\""], [\""albian\"", \""balian\"", \""bilaan\""], [\""alilonghi\"", \""hilloaing\""], [\""climaxes\"", \""exclaims\""], [\""haddo\"", \""hodad\""], [\""hagride\"", \""headrig\""], [\""laureled\"", \""reallude\""], [\""phelonion\"", \""phenolion\""], [\""sightly\"", \""slighty\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 955,
        ""words"": [
            ""sightly"",
            ""slighty"",
            ""hodad"",
            ""haddo"",
            ""phelonion"",
            ""phenolion"",
            ""reallude"",
            ""laureled"",
            ""headrig"",
            ""hagride"",
            ""hilloaing"",
            ""alilonghi"",
            ""aerodontic"",
            ""carotenoid"",
            ""coronadite"",
            ""acoustoelectric"",
            ""electroacoustic"",
            ""climaxes"",
            ""exclaims"",
            ""albian"",
            ""balian"",
            ""bilaan""
        ],
        ""solution"": [
            [
                ""acoustoelectric"",
                ""electroacoustic""
            ],
            [
                ""aerodontic"",
                ""carotenoid"",
                ""coronadite""
            ],
            [
                ""albian"",
                ""balian"",
                ""bilaan""
            ],
            [
                ""alilonghi"",
                ""hilloaing""
            ],
            [
                ""climaxes"",
                ""exclaims""
            ],
            [
                ""haddo"",
                ""hodad""
            ],
            [
                ""hagride"",
                ""headrig""
            ],
            [
                ""laureled"",
                ""reallude""
            ],
            [
                ""phelonion"",
                ""phenolion""
            ],
            [
                ""sightly"",
                ""slighty""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
956,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""kye"", ""key"", ""talcher"", ""latcher"", ""ratchel"", ""trachle"", ""clethra"", ""impressions"", ""permissions"", ""masarid"", ""aramids"", ""madrasi"", ""cembalon"", ""cobleman"", ""elaidin"", ""anilide""]
","[[""anilide"", ""elaidin""], [""aramids"", ""madrasi"", ""masarid""], [""cembalon"", ""cobleman""], [""clethra"", ""latcher"", ""ratchel"", ""talcher"", ""trachle""], [""impressions"", ""permissions""], [""key"", ""kye""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""kye\"", \""key\"", \""talcher\"", \""latcher\"", \""ratchel\"", \""trachle\"", \""clethra\"", \""impressions\"", \""permissions\"", \""masarid\"", \""aramids\"", \""madrasi\"", \""cembalon\"", \""cobleman\"", \""elaidin\"", \""anilide\""]\n"",
    ""answer"": ""[[\""anilide\"", \""elaidin\""], [\""aramids\"", \""madrasi\"", \""masarid\""], [\""cembalon\"", \""cobleman\""], [\""clethra\"", \""latcher\"", \""ratchel\"", \""talcher\"", \""trachle\""], [\""impressions\"", \""permissions\""], [\""key\"", \""kye\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 956,
        ""words"": [
            ""kye"",
            ""key"",
            ""talcher"",
            ""latcher"",
            ""ratchel"",
            ""trachle"",
            ""clethra"",
            ""impressions"",
            ""permissions"",
            ""masarid"",
            ""aramids"",
            ""madrasi"",
            ""cembalon"",
            ""cobleman"",
            ""elaidin"",
            ""anilide""
        ],
        ""solution"": [
            [
                ""anilide"",
                ""elaidin""
            ],
            [
                ""aramids"",
                ""madrasi"",
                ""masarid""
            ],
            [
                ""cembalon"",
                ""cobleman""
            ],
            [
                ""clethra"",
                ""latcher"",
                ""ratchel"",
                ""talcher"",
                ""trachle""
            ],
            [
                ""impressions"",
                ""permissions""
            ],
            [
                ""key"",
                ""kye""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
957,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""proselytes"", ""presystole"", ""poetryless"", ""polyesters"", ""avenge"", ""vangee"", ""geneva"", ""crenation"", ""cotarnine"", ""narcotine"", ""container"", ""connarite""]
","[[""avenge"", ""geneva"", ""vangee""], [""connarite"", ""container"", ""cotarnine"", ""crenation"", ""narcotine""], [""poetryless"", ""polyesters"", ""presystole"", ""proselytes""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""proselytes\"", \""presystole\"", \""poetryless\"", \""polyesters\"", \""avenge\"", \""vangee\"", \""geneva\"", \""crenation\"", \""cotarnine\"", \""narcotine\"", \""container\"", \""connarite\""]\n"",
    ""answer"": ""[[\""avenge\"", \""geneva\"", \""vangee\""], [\""connarite\"", \""container\"", \""cotarnine\"", \""crenation\"", \""narcotine\""], [\""poetryless\"", \""polyesters\"", \""presystole\"", \""proselytes\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 957,
        ""words"": [
            ""proselytes"",
            ""presystole"",
            ""poetryless"",
            ""polyesters"",
            ""avenge"",
            ""vangee"",
            ""geneva"",
            ""crenation"",
            ""cotarnine"",
            ""narcotine"",
            ""container"",
            ""connarite""
        ],
        ""solution"": [
            [
                ""avenge"",
                ""geneva"",
                ""vangee""
            ],
            [
                ""connarite"",
                ""container"",
                ""cotarnine"",
                ""crenation"",
                ""narcotine""
            ],
            [
                ""poetryless"",
                ""polyesters"",
                ""presystole"",
                ""proselytes""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
958,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hau"", ""ahu"", ""phiroze"", ""orphize"", ""chopdar"", ""pochard"", ""precatively"", ""preactively"", ""colleter"", ""coteller"", ""recollet"", ""coterell"", ""terp"", ""petr"", ""pret"", ""pert"", ""chiming"", ""miching"", ""sperma"", ""remaps"", ""haruspices"", ""chuprassie"", ""kilters"", ""kirtles"", ""klister""]
","[[""ahu"", ""hau""], [""chiming"", ""miching""], [""chopdar"", ""pochard""], [""chuprassie"", ""haruspices""], [""colleter"", ""coteller"", ""coterell"", ""recollet""], [""kilters"", ""kirtles"", ""klister""], [""orphize"", ""phiroze""], [""pert"", ""petr"", ""pret"", ""terp""], [""preactively"", ""precatively""], [""remaps"", ""sperma""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hau\"", \""ahu\"", \""phiroze\"", \""orphize\"", \""chopdar\"", \""pochard\"", \""precatively\"", \""preactively\"", \""colleter\"", \""coteller\"", \""recollet\"", \""coterell\"", \""terp\"", \""petr\"", \""pret\"", \""pert\"", \""chiming\"", \""miching\"", \""sperma\"", \""remaps\"", \""haruspices\"", \""chuprassie\"", \""kilters\"", \""kirtles\"", \""klister\""]\n"",
    ""answer"": ""[[\""ahu\"", \""hau\""], [\""chiming\"", \""miching\""], [\""chopdar\"", \""pochard\""], [\""chuprassie\"", \""haruspices\""], [\""colleter\"", \""coteller\"", \""coterell\"", \""recollet\""], [\""kilters\"", \""kirtles\"", \""klister\""], [\""orphize\"", \""phiroze\""], [\""pert\"", \""petr\"", \""pret\"", \""terp\""], [\""preactively\"", \""precatively\""], [\""remaps\"", \""sperma\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 958,
        ""words"": [
            ""hau"",
            ""ahu"",
            ""phiroze"",
            ""orphize"",
            ""chopdar"",
            ""pochard"",
            ""precatively"",
            ""preactively"",
            ""colleter"",
            ""coteller"",
            ""recollet"",
            ""coterell"",
            ""terp"",
            ""petr"",
            ""pret"",
            ""pert"",
            ""chiming"",
            ""miching"",
            ""sperma"",
            ""remaps"",
            ""haruspices"",
            ""chuprassie"",
            ""kilters"",
            ""kirtles"",
            ""klister""
        ],
        ""solution"": [
            [
                ""ahu"",
                ""hau""
            ],
            [
                ""chiming"",
                ""miching""
            ],
            [
                ""chopdar"",
                ""pochard""
            ],
            [
                ""chuprassie"",
                ""haruspices""
            ],
            [
                ""colleter"",
                ""coteller"",
                ""coterell"",
                ""recollet""
            ],
            [
                ""kilters"",
                ""kirtles"",
                ""klister""
            ],
            [
                ""orphize"",
                ""phiroze""
            ],
            [
                ""pert"",
                ""petr"",
                ""pret"",
                ""terp""
            ],
            [
                ""preactively"",
                ""precatively""
            ],
            [
                ""remaps"",
                ""sperma""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
959,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""evitation"", ""novitiate"", ""magistrate"", ""sterigmata"", ""cembalist"", ""blastemic"", ""coisns"", ""scions"", ""cosins""]
","[[""blastemic"", ""cembalist""], [""coisns"", ""cosins"", ""scions""], [""evitation"", ""novitiate""], [""magistrate"", ""sterigmata""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""evitation\"", \""novitiate\"", \""magistrate\"", \""sterigmata\"", \""cembalist\"", \""blastemic\"", \""coisns\"", \""scions\"", \""cosins\""]\n"",
    ""answer"": ""[[\""blastemic\"", \""cembalist\""], [\""coisns\"", \""cosins\"", \""scions\""], [\""evitation\"", \""novitiate\""], [\""magistrate\"", \""sterigmata\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 959,
        ""words"": [
            ""evitation"",
            ""novitiate"",
            ""magistrate"",
            ""sterigmata"",
            ""cembalist"",
            ""blastemic"",
            ""coisns"",
            ""scions"",
            ""cosins""
        ],
        ""solution"": [
            [
                ""blastemic"",
                ""cembalist""
            ],
            [
                ""coisns"",
                ""cosins"",
                ""scions""
            ],
            [
                ""evitation"",
                ""novitiate""
            ],
            [
                ""magistrate"",
                ""sterigmata""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
960,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""endangitis"", ""destaining"", ""reprograms"", ""programers"", ""sitella"", ""tailles"", ""tallies"", ""itaconate"", ""acetation"", ""wynne"", ""wenny""]
","[[""acetation"", ""itaconate""], [""destaining"", ""endangitis""], [""programers"", ""reprograms""], [""sitella"", ""tailles"", ""tallies""], [""wenny"", ""wynne""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""endangitis\"", \""destaining\"", \""reprograms\"", \""programers\"", \""sitella\"", \""tailles\"", \""tallies\"", \""itaconate\"", \""acetation\"", \""wynne\"", \""wenny\""]\n"",
    ""answer"": ""[[\""acetation\"", \""itaconate\""], [\""destaining\"", \""endangitis\""], [\""programers\"", \""reprograms\""], [\""sitella\"", \""tailles\"", \""tallies\""], [\""wenny\"", \""wynne\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 960,
        ""words"": [
            ""endangitis"",
            ""destaining"",
            ""reprograms"",
            ""programers"",
            ""sitella"",
            ""tailles"",
            ""tallies"",
            ""itaconate"",
            ""acetation"",
            ""wynne"",
            ""wenny""
        ],
        ""solution"": [
            [
                ""acetation"",
                ""itaconate""
            ],
            [
                ""destaining"",
                ""endangitis""
            ],
            [
                ""programers"",
                ""reprograms""
            ],
            [
                ""sitella"",
                ""tailles"",
                ""tallies""
            ],
            [
                ""wenny"",
                ""wynne""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
961,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""untucks"", ""unstuck"", ""stang"", ""gnats"", ""gnast"", ""tangs""]
","[[""gnast"", ""gnats"", ""stang"", ""tangs""], [""unstuck"", ""untucks""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""untucks\"", \""unstuck\"", \""stang\"", \""gnats\"", \""gnast\"", \""tangs\""]\n"",
    ""answer"": ""[[\""gnast\"", \""gnats\"", \""stang\"", \""tangs\""], [\""unstuck\"", \""untucks\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 961,
        ""words"": [
            ""untucks"",
            ""unstuck"",
            ""stang"",
            ""gnats"",
            ""gnast"",
            ""tangs""
        ],
        ""solution"": [
            [
                ""gnast"",
                ""gnats"",
                ""stang"",
                ""tangs""
            ],
            [
                ""unstuck"",
                ""untucks""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
962,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""percolated"", ""prelocated"", ""okehs"", ""hokes"", ""pyrophobia"", ""rypophobia"", ""nonpaid"", ""dipnoan"", ""pandion""]
","[[""dipnoan"", ""nonpaid"", ""pandion""], [""hokes"", ""okehs""], [""percolated"", ""prelocated""], [""pyrophobia"", ""rypophobia""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""percolated\"", \""prelocated\"", \""okehs\"", \""hokes\"", \""pyrophobia\"", \""rypophobia\"", \""nonpaid\"", \""dipnoan\"", \""pandion\""]\n"",
    ""answer"": ""[[\""dipnoan\"", \""nonpaid\"", \""pandion\""], [\""hokes\"", \""okehs\""], [\""percolated\"", \""prelocated\""], [\""pyrophobia\"", \""rypophobia\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 962,
        ""words"": [
            ""percolated"",
            ""prelocated"",
            ""okehs"",
            ""hokes"",
            ""pyrophobia"",
            ""rypophobia"",
            ""nonpaid"",
            ""dipnoan"",
            ""pandion""
        ],
        ""solution"": [
            [
                ""dipnoan"",
                ""nonpaid"",
                ""pandion""
            ],
            [
                ""hokes"",
                ""okehs""
            ],
            [
                ""percolated"",
                ""prelocated""
            ],
            [
                ""pyrophobia"",
                ""rypophobia""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
963,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""respiring"", ""springier"", ""reprising"", ""mohican"", ""monachi"", ""cohanim"", ""pericardiopleural"", ""pleuropericardial"", ""realised"", ""sidereal"", ""resailed""]
","[[""cohanim"", ""mohican"", ""monachi""], [""pericardiopleural"", ""pleuropericardial""], [""realised"", ""resailed"", ""sidereal""], [""reprising"", ""respiring"", ""springier""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""respiring\"", \""springier\"", \""reprising\"", \""mohican\"", \""monachi\"", \""cohanim\"", \""pericardiopleural\"", \""pleuropericardial\"", \""realised\"", \""sidereal\"", \""resailed\""]\n"",
    ""answer"": ""[[\""cohanim\"", \""mohican\"", \""monachi\""], [\""pericardiopleural\"", \""pleuropericardial\""], [\""realised\"", \""resailed\"", \""sidereal\""], [\""reprising\"", \""respiring\"", \""springier\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 963,
        ""words"": [
            ""respiring"",
            ""springier"",
            ""reprising"",
            ""mohican"",
            ""monachi"",
            ""cohanim"",
            ""pericardiopleural"",
            ""pleuropericardial"",
            ""realised"",
            ""sidereal"",
            ""resailed""
        ],
        ""solution"": [
            [
                ""cohanim"",
                ""mohican"",
                ""monachi""
            ],
            [
                ""pericardiopleural"",
                ""pleuropericardial""
            ],
            [
                ""realised"",
                ""resailed"",
                ""sidereal""
            ],
            [
                ""reprising"",
                ""respiring"",
                ""springier""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
964,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sulfonium"", ""fluminous"", ""fulminous"", ""parsic"", ""capris"", ""aquila"", ""qualia"", ""apiolin"", ""pinolia"", ""whitetop"", ""whitepot"", ""desponder"", ""responded"", ""marriages"", ""gramaries"", ""cation"", ""action"", ""atonic"", ""feet"", ""fete""]
","[[""action"", ""atonic"", ""cation""], [""apiolin"", ""pinolia""], [""aquila"", ""qualia""], [""capris"", ""parsic""], [""desponder"", ""responded""], [""feet"", ""fete""], [""fluminous"", ""fulminous"", ""sulfonium""], [""gramaries"", ""marriages""], [""whitepot"", ""whitetop""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sulfonium\"", \""fluminous\"", \""fulminous\"", \""parsic\"", \""capris\"", \""aquila\"", \""qualia\"", \""apiolin\"", \""pinolia\"", \""whitetop\"", \""whitepot\"", \""desponder\"", \""responded\"", \""marriages\"", \""gramaries\"", \""cation\"", \""action\"", \""atonic\"", \""feet\"", \""fete\""]\n"",
    ""answer"": ""[[\""action\"", \""atonic\"", \""cation\""], [\""apiolin\"", \""pinolia\""], [\""aquila\"", \""qualia\""], [\""capris\"", \""parsic\""], [\""desponder\"", \""responded\""], [\""feet\"", \""fete\""], [\""fluminous\"", \""fulminous\"", \""sulfonium\""], [\""gramaries\"", \""marriages\""], [\""whitepot\"", \""whitetop\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 964,
        ""words"": [
            ""sulfonium"",
            ""fluminous"",
            ""fulminous"",
            ""parsic"",
            ""capris"",
            ""aquila"",
            ""qualia"",
            ""apiolin"",
            ""pinolia"",
            ""whitetop"",
            ""whitepot"",
            ""desponder"",
            ""responded"",
            ""marriages"",
            ""gramaries"",
            ""cation"",
            ""action"",
            ""atonic"",
            ""feet"",
            ""fete""
        ],
        ""solution"": [
            [
                ""action"",
                ""atonic"",
                ""cation""
            ],
            [
                ""apiolin"",
                ""pinolia""
            ],
            [
                ""aquila"",
                ""qualia""
            ],
            [
                ""capris"",
                ""parsic""
            ],
            [
                ""desponder"",
                ""responded""
            ],
            [
                ""feet"",
                ""fete""
            ],
            [
                ""fluminous"",
                ""fulminous"",
                ""sulfonium""
            ],
            [
                ""gramaries"",
                ""marriages""
            ],
            [
                ""whitepot"",
                ""whitetop""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
965,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""eringo"", ""ignore"", ""conservation"", ""conversation"", ""clinger"", ""cringle"", ""embase"", ""beseam"", ""superseder"", ""depressure"", ""teenish"", ""theines"", ""philobotanist"", ""botanophilist"", ""dented"", ""tended"", ""boxhead"", ""headbox""]
","[[""beseam"", ""embase""], [""botanophilist"", ""philobotanist""], [""boxhead"", ""headbox""], [""clinger"", ""cringle""], [""conservation"", ""conversation""], [""dented"", ""tended""], [""depressure"", ""superseder""], [""eringo"", ""ignore""], [""teenish"", ""theines""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""eringo\"", \""ignore\"", \""conservation\"", \""conversation\"", \""clinger\"", \""cringle\"", \""embase\"", \""beseam\"", \""superseder\"", \""depressure\"", \""teenish\"", \""theines\"", \""philobotanist\"", \""botanophilist\"", \""dented\"", \""tended\"", \""boxhead\"", \""headbox\""]\n"",
    ""answer"": ""[[\""beseam\"", \""embase\""], [\""botanophilist\"", \""philobotanist\""], [\""boxhead\"", \""headbox\""], [\""clinger\"", \""cringle\""], [\""conservation\"", \""conversation\""], [\""dented\"", \""tended\""], [\""depressure\"", \""superseder\""], [\""eringo\"", \""ignore\""], [\""teenish\"", \""theines\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 965,
        ""words"": [
            ""eringo"",
            ""ignore"",
            ""conservation"",
            ""conversation"",
            ""clinger"",
            ""cringle"",
            ""embase"",
            ""beseam"",
            ""superseder"",
            ""depressure"",
            ""teenish"",
            ""theines"",
            ""philobotanist"",
            ""botanophilist"",
            ""dented"",
            ""tended"",
            ""boxhead"",
            ""headbox""
        ],
        ""solution"": [
            [
                ""beseam"",
                ""embase""
            ],
            [
                ""botanophilist"",
                ""philobotanist""
            ],
            [
                ""boxhead"",
                ""headbox""
            ],
            [
                ""clinger"",
                ""cringle""
            ],
            [
                ""conservation"",
                ""conversation""
            ],
            [
                ""dented"",
                ""tended""
            ],
            [
                ""depressure"",
                ""superseder""
            ],
            [
                ""eringo"",
                ""ignore""
            ],
            [
                ""teenish"",
                ""theines""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
966,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fleerish"", ""fleshier"", ""leerfish"", ""revises"", ""ivresse"", ""hammock"", ""hommack"", ""fireshaft"", ""tasheriff""]
","[[""fireshaft"", ""tasheriff""], [""fleerish"", ""fleshier"", ""leerfish""], [""hammock"", ""hommack""], [""ivresse"", ""revises""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fleerish\"", \""fleshier\"", \""leerfish\"", \""revises\"", \""ivresse\"", \""hammock\"", \""hommack\"", \""fireshaft\"", \""tasheriff\""]\n"",
    ""answer"": ""[[\""fireshaft\"", \""tasheriff\""], [\""fleerish\"", \""fleshier\"", \""leerfish\""], [\""hammock\"", \""hommack\""], [\""ivresse\"", \""revises\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 966,
        ""words"": [
            ""fleerish"",
            ""fleshier"",
            ""leerfish"",
            ""revises"",
            ""ivresse"",
            ""hammock"",
            ""hommack"",
            ""fireshaft"",
            ""tasheriff""
        ],
        ""solution"": [
            [
                ""fireshaft"",
                ""tasheriff""
            ],
            [
                ""fleerish"",
                ""fleshier"",
                ""leerfish""
            ],
            [
                ""hammock"",
                ""hommack""
            ],
            [
                ""ivresse"",
                ""revises""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
967,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unact"", ""tunca"", ""stenchiest"", ""tetchiness"", ""spadille"", ""illapsed""]
","[[""illapsed"", ""spadille""], [""stenchiest"", ""tetchiness""], [""tunca"", ""unact""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unact\"", \""tunca\"", \""stenchiest\"", \""tetchiness\"", \""spadille\"", \""illapsed\""]\n"",
    ""answer"": ""[[\""illapsed\"", \""spadille\""], [\""stenchiest\"", \""tetchiness\""], [\""tunca\"", \""unact\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 967,
        ""words"": [
            ""unact"",
            ""tunca"",
            ""stenchiest"",
            ""tetchiness"",
            ""spadille"",
            ""illapsed""
        ],
        ""solution"": [
            [
                ""illapsed"",
                ""spadille""
            ],
            [
                ""stenchiest"",
                ""tetchiness""
            ],
            [
                ""tunca"",
                ""unact""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
968,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""megapodius"", ""pseudimago"", ""procuress"", ""percussor"", ""siphonial"", ""aphislion"", ""doorman"", ""madrono"", ""demigrate"", ""emigrated"", ""alvan"", ""naval"", ""farrisite"", ""ratifiers"", ""sickbed"", ""bedsick""]
","[[""alvan"", ""naval""], [""aphislion"", ""siphonial""], [""bedsick"", ""sickbed""], [""demigrate"", ""emigrated""], [""doorman"", ""madrono""], [""farrisite"", ""ratifiers""], [""megapodius"", ""pseudimago""], [""percussor"", ""procuress""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""megapodius\"", \""pseudimago\"", \""procuress\"", \""percussor\"", \""siphonial\"", \""aphislion\"", \""doorman\"", \""madrono\"", \""demigrate\"", \""emigrated\"", \""alvan\"", \""naval\"", \""farrisite\"", \""ratifiers\"", \""sickbed\"", \""bedsick\""]\n"",
    ""answer"": ""[[\""alvan\"", \""naval\""], [\""aphislion\"", \""siphonial\""], [\""bedsick\"", \""sickbed\""], [\""demigrate\"", \""emigrated\""], [\""doorman\"", \""madrono\""], [\""farrisite\"", \""ratifiers\""], [\""megapodius\"", \""pseudimago\""], [\""percussor\"", \""procuress\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 968,
        ""words"": [
            ""megapodius"",
            ""pseudimago"",
            ""procuress"",
            ""percussor"",
            ""siphonial"",
            ""aphislion"",
            ""doorman"",
            ""madrono"",
            ""demigrate"",
            ""emigrated"",
            ""alvan"",
            ""naval"",
            ""farrisite"",
            ""ratifiers"",
            ""sickbed"",
            ""bedsick""
        ],
        ""solution"": [
            [
                ""alvan"",
                ""naval""
            ],
            [
                ""aphislion"",
                ""siphonial""
            ],
            [
                ""bedsick"",
                ""sickbed""
            ],
            [
                ""demigrate"",
                ""emigrated""
            ],
            [
                ""doorman"",
                ""madrono""
            ],
            [
                ""farrisite"",
                ""ratifiers""
            ],
            [
                ""megapodius"",
                ""pseudimago""
            ],
            [
                ""percussor"",
                ""procuress""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
969,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""peregrinism"", ""repremising"", ""precursory"", ""percursory""]
","[[""percursory"", ""precursory""], [""peregrinism"", ""repremising""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""peregrinism\"", \""repremising\"", \""precursory\"", \""percursory\""]\n"",
    ""answer"": ""[[\""percursory\"", \""precursory\""], [\""peregrinism\"", \""repremising\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 969,
        ""words"": [
            ""peregrinism"",
            ""repremising"",
            ""precursory"",
            ""percursory""
        ],
        ""solution"": [
            [
                ""percursory"",
                ""precursory""
            ],
            [
                ""peregrinism"",
                ""repremising""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
970,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unrig"", ""ruing"", ""lenis"", ""sline"", ""unpraising"", ""unaspiring"", ""racinage"", ""canaigre"", ""graecian"", ""oxane"", ""axone"", ""faretta"", ""atafter"", ""escolar"", ""recoals"", ""oof"", ""foo"", ""sasse"", ""asses"", ""sessa"", ""tactile"", ""lattice""]
","[[""asses"", ""sasse"", ""sessa""], [""atafter"", ""faretta""], [""axone"", ""oxane""], [""canaigre"", ""graecian"", ""racinage""], [""escolar"", ""recoals""], [""foo"", ""oof""], [""lattice"", ""tactile""], [""lenis"", ""sline""], [""ruing"", ""unrig""], [""unaspiring"", ""unpraising""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unrig\"", \""ruing\"", \""lenis\"", \""sline\"", \""unpraising\"", \""unaspiring\"", \""racinage\"", \""canaigre\"", \""graecian\"", \""oxane\"", \""axone\"", \""faretta\"", \""atafter\"", \""escolar\"", \""recoals\"", \""oof\"", \""foo\"", \""sasse\"", \""asses\"", \""sessa\"", \""tactile\"", \""lattice\""]\n"",
    ""answer"": ""[[\""asses\"", \""sasse\"", \""sessa\""], [\""atafter\"", \""faretta\""], [\""axone\"", \""oxane\""], [\""canaigre\"", \""graecian\"", \""racinage\""], [\""escolar\"", \""recoals\""], [\""foo\"", \""oof\""], [\""lattice\"", \""tactile\""], [\""lenis\"", \""sline\""], [\""ruing\"", \""unrig\""], [\""unaspiring\"", \""unpraising\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 970,
        ""words"": [
            ""unrig"",
            ""ruing"",
            ""lenis"",
            ""sline"",
            ""unpraising"",
            ""unaspiring"",
            ""racinage"",
            ""canaigre"",
            ""graecian"",
            ""oxane"",
            ""axone"",
            ""faretta"",
            ""atafter"",
            ""escolar"",
            ""recoals"",
            ""oof"",
            ""foo"",
            ""sasse"",
            ""asses"",
            ""sessa"",
            ""tactile"",
            ""lattice""
        ],
        ""solution"": [
            [
                ""asses"",
                ""sasse"",
                ""sessa""
            ],
            [
                ""atafter"",
                ""faretta""
            ],
            [
                ""axone"",
                ""oxane""
            ],
            [
                ""canaigre"",
                ""graecian"",
                ""racinage""
            ],
            [
                ""escolar"",
                ""recoals""
            ],
            [
                ""foo"",
                ""oof""
            ],
            [
                ""lattice"",
                ""tactile""
            ],
            [
                ""lenis"",
                ""sline""
            ],
            [
                ""ruing"",
                ""unrig""
            ],
            [
                ""unaspiring"",
                ""unpraising""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
971,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""shrove"", ""shover"", ""precedable"", ""deprecable"", ""clarences"", ""cancelers"", ""op"", ""po"", ""exprimable"", ""permixable"", ""reerects"", ""secreter"", ""erecters"", ""notehead"", ""headnote"", ""iodates"", ""estadio"", ""toadies"", ""intubated"", ""dubitante""]
","[[""cancelers"", ""clarences""], [""deprecable"", ""precedable""], [""dubitante"", ""intubated""], [""erecters"", ""reerects"", ""secreter""], [""estadio"", ""iodates"", ""toadies""], [""exprimable"", ""permixable""], [""headnote"", ""notehead""], [""op"", ""po""], [""shover"", ""shrove""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""shrove\"", \""shover\"", \""precedable\"", \""deprecable\"", \""clarences\"", \""cancelers\"", \""op\"", \""po\"", \""exprimable\"", \""permixable\"", \""reerects\"", \""secreter\"", \""erecters\"", \""notehead\"", \""headnote\"", \""iodates\"", \""estadio\"", \""toadies\"", \""intubated\"", \""dubitante\""]\n"",
    ""answer"": ""[[\""cancelers\"", \""clarences\""], [\""deprecable\"", \""precedable\""], [\""dubitante\"", \""intubated\""], [\""erecters\"", \""reerects\"", \""secreter\""], [\""estadio\"", \""iodates\"", \""toadies\""], [\""exprimable\"", \""permixable\""], [\""headnote\"", \""notehead\""], [\""op\"", \""po\""], [\""shover\"", \""shrove\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 971,
        ""words"": [
            ""shrove"",
            ""shover"",
            ""precedable"",
            ""deprecable"",
            ""clarences"",
            ""cancelers"",
            ""op"",
            ""po"",
            ""exprimable"",
            ""permixable"",
            ""reerects"",
            ""secreter"",
            ""erecters"",
            ""notehead"",
            ""headnote"",
            ""iodates"",
            ""estadio"",
            ""toadies"",
            ""intubated"",
            ""dubitante""
        ],
        ""solution"": [
            [
                ""cancelers"",
                ""clarences""
            ],
            [
                ""deprecable"",
                ""precedable""
            ],
            [
                ""dubitante"",
                ""intubated""
            ],
            [
                ""erecters"",
                ""reerects"",
                ""secreter""
            ],
            [
                ""estadio"",
                ""iodates"",
                ""toadies""
            ],
            [
                ""exprimable"",
                ""permixable""
            ],
            [
                ""headnote"",
                ""notehead""
            ],
            [
                ""op"",
                ""po""
            ],
            [
                ""shover"",
                ""shrove""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
972,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""archaists"", ""catharsis"", ""octastrophic"", ""postthoracic"", ""krises"", ""rekiss"", ""healer"", ""reheal"", ""motets"", ""totems"", ""mottes"", ""mendicate"", ""meditance"", ""glary"", ""gyral"", ""limacon"", ""malonic""]
","[[""archaists"", ""catharsis""], [""glary"", ""gyral""], [""healer"", ""reheal""], [""krises"", ""rekiss""], [""limacon"", ""malonic""], [""meditance"", ""mendicate""], [""motets"", ""mottes"", ""totems""], [""octastrophic"", ""postthoracic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""archaists\"", \""catharsis\"", \""octastrophic\"", \""postthoracic\"", \""krises\"", \""rekiss\"", \""healer\"", \""reheal\"", \""motets\"", \""totems\"", \""mottes\"", \""mendicate\"", \""meditance\"", \""glary\"", \""gyral\"", \""limacon\"", \""malonic\""]\n"",
    ""answer"": ""[[\""archaists\"", \""catharsis\""], [\""glary\"", \""gyral\""], [\""healer\"", \""reheal\""], [\""krises\"", \""rekiss\""], [\""limacon\"", \""malonic\""], [\""meditance\"", \""mendicate\""], [\""motets\"", \""mottes\"", \""totems\""], [\""octastrophic\"", \""postthoracic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 972,
        ""words"": [
            ""archaists"",
            ""catharsis"",
            ""octastrophic"",
            ""postthoracic"",
            ""krises"",
            ""rekiss"",
            ""healer"",
            ""reheal"",
            ""motets"",
            ""totems"",
            ""mottes"",
            ""mendicate"",
            ""meditance"",
            ""glary"",
            ""gyral"",
            ""limacon"",
            ""malonic""
        ],
        ""solution"": [
            [
                ""archaists"",
                ""catharsis""
            ],
            [
                ""glary"",
                ""gyral""
            ],
            [
                ""healer"",
                ""reheal""
            ],
            [
                ""krises"",
                ""rekiss""
            ],
            [
                ""limacon"",
                ""malonic""
            ],
            [
                ""meditance"",
                ""mendicate""
            ],
            [
                ""motets"",
                ""mottes"",
                ""totems""
            ],
            [
                ""octastrophic"",
                ""postthoracic""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
973,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""powerful"", ""upflower"", ""unedifying"", ""undeifying"", ""dragonize"", ""organized"", ""hatchery"", ""thearchy"", ""easing"", ""sangei"", ""stretcherman"", ""trenchmaster"", ""plumbagine"", ""impugnable"", ""milsey"", ""limeys"", ""smiley"", ""reconsider"", ""considerer""]
","[[""considerer"", ""reconsider""], [""dragonize"", ""organized""], [""easing"", ""sangei""], [""hatchery"", ""thearchy""], [""impugnable"", ""plumbagine""], [""limeys"", ""milsey"", ""smiley""], [""powerful"", ""upflower""], [""stretcherman"", ""trenchmaster""], [""undeifying"", ""unedifying""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""powerful\"", \""upflower\"", \""unedifying\"", \""undeifying\"", \""dragonize\"", \""organized\"", \""hatchery\"", \""thearchy\"", \""easing\"", \""sangei\"", \""stretcherman\"", \""trenchmaster\"", \""plumbagine\"", \""impugnable\"", \""milsey\"", \""limeys\"", \""smiley\"", \""reconsider\"", \""considerer\""]\n"",
    ""answer"": ""[[\""considerer\"", \""reconsider\""], [\""dragonize\"", \""organized\""], [\""easing\"", \""sangei\""], [\""hatchery\"", \""thearchy\""], [\""impugnable\"", \""plumbagine\""], [\""limeys\"", \""milsey\"", \""smiley\""], [\""powerful\"", \""upflower\""], [\""stretcherman\"", \""trenchmaster\""], [\""undeifying\"", \""unedifying\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 973,
        ""words"": [
            ""powerful"",
            ""upflower"",
            ""unedifying"",
            ""undeifying"",
            ""dragonize"",
            ""organized"",
            ""hatchery"",
            ""thearchy"",
            ""easing"",
            ""sangei"",
            ""stretcherman"",
            ""trenchmaster"",
            ""plumbagine"",
            ""impugnable"",
            ""milsey"",
            ""limeys"",
            ""smiley"",
            ""reconsider"",
            ""considerer""
        ],
        ""solution"": [
            [
                ""considerer"",
                ""reconsider""
            ],
            [
                ""dragonize"",
                ""organized""
            ],
            [
                ""easing"",
                ""sangei""
            ],
            [
                ""hatchery"",
                ""thearchy""
            ],
            [
                ""impugnable"",
                ""plumbagine""
            ],
            [
                ""limeys"",
                ""milsey"",
                ""smiley""
            ],
            [
                ""powerful"",
                ""upflower""
            ],
            [
                ""stretcherman"",
                ""trenchmaster""
            ],
            [
                ""undeifying"",
                ""unedifying""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
974,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""allasch"", ""challas"", ""carcels"", ""scclera"", ""peeling"", ""epingle"", ""acetified"", ""edificate"", ""bucksaw"", ""sawbuck"", ""inert"", ""trine"", ""nitre"", ""retin"", ""overcross"", ""crossover""]
","[[""acetified"", ""edificate""], [""allasch"", ""challas""], [""bucksaw"", ""sawbuck""], [""carcels"", ""scclera""], [""crossover"", ""overcross""], [""epingle"", ""peeling""], [""inert"", ""nitre"", ""retin"", ""trine""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""allasch\"", \""challas\"", \""carcels\"", \""scclera\"", \""peeling\"", \""epingle\"", \""acetified\"", \""edificate\"", \""bucksaw\"", \""sawbuck\"", \""inert\"", \""trine\"", \""nitre\"", \""retin\"", \""overcross\"", \""crossover\""]\n"",
    ""answer"": ""[[\""acetified\"", \""edificate\""], [\""allasch\"", \""challas\""], [\""bucksaw\"", \""sawbuck\""], [\""carcels\"", \""scclera\""], [\""crossover\"", \""overcross\""], [\""epingle\"", \""peeling\""], [\""inert\"", \""nitre\"", \""retin\"", \""trine\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 974,
        ""words"": [
            ""allasch"",
            ""challas"",
            ""carcels"",
            ""scclera"",
            ""peeling"",
            ""epingle"",
            ""acetified"",
            ""edificate"",
            ""bucksaw"",
            ""sawbuck"",
            ""inert"",
            ""trine"",
            ""nitre"",
            ""retin"",
            ""overcross"",
            ""crossover""
        ],
        ""solution"": [
            [
                ""acetified"",
                ""edificate""
            ],
            [
                ""allasch"",
                ""challas""
            ],
            [
                ""bucksaw"",
                ""sawbuck""
            ],
            [
                ""carcels"",
                ""scclera""
            ],
            [
                ""crossover"",
                ""overcross""
            ],
            [
                ""epingle"",
                ""peeling""
            ],
            [
                ""inert"",
                ""nitre"",
                ""retin"",
                ""trine""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
975,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""tropist"", ""protist"", ""rudiment"", ""unmitred""]
","[[""protist"", ""tropist""], [""rudiment"", ""unmitred""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""tropist\"", \""protist\"", \""rudiment\"", \""unmitred\""]\n"",
    ""answer"": ""[[\""protist\"", \""tropist\""], [\""rudiment\"", \""unmitred\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 975,
        ""words"": [
            ""tropist"",
            ""protist"",
            ""rudiment"",
            ""unmitred""
        ],
        ""solution"": [
            [
                ""protist"",
                ""tropist""
            ],
            [
                ""rudiment"",
                ""unmitred""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
976,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sopite"", ""epoist"", ""postie"", ""debase"", ""seabed"", ""angelot"", ""tangelo"", ""nieve"", ""venie"", ""petaly"", ""playte"", ""reapplaud"", ""applauder"", ""alenge"", ""geneal"", ""mappers"", ""preamps"", ""pampers"", ""ornamenting"", ""nonemigrant"", ""rethrash"", ""thrasher""]
","[[""alenge"", ""geneal""], [""angelot"", ""tangelo""], [""applauder"", ""reapplaud""], [""debase"", ""seabed""], [""epoist"", ""postie"", ""sopite""], [""mappers"", ""pampers"", ""preamps""], [""nieve"", ""venie""], [""nonemigrant"", ""ornamenting""], [""petaly"", ""playte""], [""rethrash"", ""thrasher""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sopite\"", \""epoist\"", \""postie\"", \""debase\"", \""seabed\"", \""angelot\"", \""tangelo\"", \""nieve\"", \""venie\"", \""petaly\"", \""playte\"", \""reapplaud\"", \""applauder\"", \""alenge\"", \""geneal\"", \""mappers\"", \""preamps\"", \""pampers\"", \""ornamenting\"", \""nonemigrant\"", \""rethrash\"", \""thrasher\""]\n"",
    ""answer"": ""[[\""alenge\"", \""geneal\""], [\""angelot\"", \""tangelo\""], [\""applauder\"", \""reapplaud\""], [\""debase\"", \""seabed\""], [\""epoist\"", \""postie\"", \""sopite\""], [\""mappers\"", \""pampers\"", \""preamps\""], [\""nieve\"", \""venie\""], [\""nonemigrant\"", \""ornamenting\""], [\""petaly\"", \""playte\""], [\""rethrash\"", \""thrasher\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 976,
        ""words"": [
            ""sopite"",
            ""epoist"",
            ""postie"",
            ""debase"",
            ""seabed"",
            ""angelot"",
            ""tangelo"",
            ""nieve"",
            ""venie"",
            ""petaly"",
            ""playte"",
            ""reapplaud"",
            ""applauder"",
            ""alenge"",
            ""geneal"",
            ""mappers"",
            ""preamps"",
            ""pampers"",
            ""ornamenting"",
            ""nonemigrant"",
            ""rethrash"",
            ""thrasher""
        ],
        ""solution"": [
            [
                ""alenge"",
                ""geneal""
            ],
            [
                ""angelot"",
                ""tangelo""
            ],
            [
                ""applauder"",
                ""reapplaud""
            ],
            [
                ""debase"",
                ""seabed""
            ],
            [
                ""epoist"",
                ""postie"",
                ""sopite""
            ],
            [
                ""mappers"",
                ""pampers"",
                ""preamps""
            ],
            [
                ""nieve"",
                ""venie""
            ],
            [
                ""nonemigrant"",
                ""ornamenting""
            ],
            [
                ""petaly"",
                ""playte""
            ],
            [
                ""rethrash"",
                ""thrasher""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
977,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""acervate"", ""revacate"", ""reforward"", ""forwarder"", ""canniest"", ""ancients"", ""phonetical"", ""pachnolite""]
","[[""acervate"", ""revacate""], [""ancients"", ""canniest""], [""forwarder"", ""reforward""], [""pachnolite"", ""phonetical""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""acervate\"", \""revacate\"", \""reforward\"", \""forwarder\"", \""canniest\"", \""ancients\"", \""phonetical\"", \""pachnolite\""]\n"",
    ""answer"": ""[[\""acervate\"", \""revacate\""], [\""ancients\"", \""canniest\""], [\""forwarder\"", \""reforward\""], [\""pachnolite\"", \""phonetical\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 977,
        ""words"": [
            ""acervate"",
            ""revacate"",
            ""reforward"",
            ""forwarder"",
            ""canniest"",
            ""ancients"",
            ""phonetical"",
            ""pachnolite""
        ],
        ""solution"": [
            [
                ""acervate"",
                ""revacate""
            ],
            [
                ""ancients"",
                ""canniest""
            ],
            [
                ""forwarder"",
                ""reforward""
            ],
            [
                ""pachnolite"",
                ""phonetical""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
978,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""hapsburg"", ""subgraph"", ""anice"", ""eniac"", ""encia"", ""seatings"", ""eastings"", ""giantess"", ""reenlists"", ""listeners"", ""enlisters"", ""eristic"", ""ectiris""]
","[[""anice"", ""encia"", ""eniac""], [""eastings"", ""giantess"", ""seatings""], [""ectiris"", ""eristic""], [""enlisters"", ""listeners"", ""reenlists""], [""hapsburg"", ""subgraph""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""hapsburg\"", \""subgraph\"", \""anice\"", \""eniac\"", \""encia\"", \""seatings\"", \""eastings\"", \""giantess\"", \""reenlists\"", \""listeners\"", \""enlisters\"", \""eristic\"", \""ectiris\""]\n"",
    ""answer"": ""[[\""anice\"", \""encia\"", \""eniac\""], [\""eastings\"", \""giantess\"", \""seatings\""], [\""ectiris\"", \""eristic\""], [\""enlisters\"", \""listeners\"", \""reenlists\""], [\""hapsburg\"", \""subgraph\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 978,
        ""words"": [
            ""hapsburg"",
            ""subgraph"",
            ""anice"",
            ""eniac"",
            ""encia"",
            ""seatings"",
            ""eastings"",
            ""giantess"",
            ""reenlists"",
            ""listeners"",
            ""enlisters"",
            ""eristic"",
            ""ectiris""
        ],
        ""solution"": [
            [
                ""anice"",
                ""encia"",
                ""eniac""
            ],
            [
                ""eastings"",
                ""giantess"",
                ""seatings""
            ],
            [
                ""ectiris"",
                ""eristic""
            ],
            [
                ""enlisters"",
                ""listeners"",
                ""reenlists""
            ],
            [
                ""hapsburg"",
                ""subgraph""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
979,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""pleach"", ""lepcha"", ""chapel"", ""aralie"", ""realia"", ""selagite"", ""egalites"", ""elegiast"", ""bickern"", ""bricken"", ""ramon"", ""manor"", ""moran"", ""roman"", ""repanel"", ""replane"", ""draconis"", ""sardonic""]
","[[""aralie"", ""realia""], [""bickern"", ""bricken""], [""chapel"", ""lepcha"", ""pleach""], [""draconis"", ""sardonic""], [""egalites"", ""elegiast"", ""selagite""], [""manor"", ""moran"", ""ramon"", ""roman""], [""repanel"", ""replane""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""pleach\"", \""lepcha\"", \""chapel\"", \""aralie\"", \""realia\"", \""selagite\"", \""egalites\"", \""elegiast\"", \""bickern\"", \""bricken\"", \""ramon\"", \""manor\"", \""moran\"", \""roman\"", \""repanel\"", \""replane\"", \""draconis\"", \""sardonic\""]\n"",
    ""answer"": ""[[\""aralie\"", \""realia\""], [\""bickern\"", \""bricken\""], [\""chapel\"", \""lepcha\"", \""pleach\""], [\""draconis\"", \""sardonic\""], [\""egalites\"", \""elegiast\"", \""selagite\""], [\""manor\"", \""moran\"", \""ramon\"", \""roman\""], [\""repanel\"", \""replane\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 979,
        ""words"": [
            ""pleach"",
            ""lepcha"",
            ""chapel"",
            ""aralie"",
            ""realia"",
            ""selagite"",
            ""egalites"",
            ""elegiast"",
            ""bickern"",
            ""bricken"",
            ""ramon"",
            ""manor"",
            ""moran"",
            ""roman"",
            ""repanel"",
            ""replane"",
            ""draconis"",
            ""sardonic""
        ],
        ""solution"": [
            [
                ""aralie"",
                ""realia""
            ],
            [
                ""bickern"",
                ""bricken""
            ],
            [
                ""chapel"",
                ""lepcha"",
                ""pleach""
            ],
            [
                ""draconis"",
                ""sardonic""
            ],
            [
                ""egalites"",
                ""elegiast"",
                ""selagite""
            ],
            [
                ""manor"",
                ""moran"",
                ""ramon"",
                ""roman""
            ],
            [
                ""repanel"",
                ""replane""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
980,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""sably"", ""basyl"", ""tabbis"", ""babist"", ""siddur"", ""druids"", ""guebre"", ""burgee"", ""kola"", ""loka"", ""kalo"", ""deiseal"", ""aediles"", ""essede"", ""deeses""]
","[[""aediles"", ""deiseal""], [""babist"", ""tabbis""], [""basyl"", ""sably""], [""burgee"", ""guebre""], [""deeses"", ""essede""], [""druids"", ""siddur""], [""kalo"", ""kola"", ""loka""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""sably\"", \""basyl\"", \""tabbis\"", \""babist\"", \""siddur\"", \""druids\"", \""guebre\"", \""burgee\"", \""kola\"", \""loka\"", \""kalo\"", \""deiseal\"", \""aediles\"", \""essede\"", \""deeses\""]\n"",
    ""answer"": ""[[\""aediles\"", \""deiseal\""], [\""babist\"", \""tabbis\""], [\""basyl\"", \""sably\""], [\""burgee\"", \""guebre\""], [\""deeses\"", \""essede\""], [\""druids\"", \""siddur\""], [\""kalo\"", \""kola\"", \""loka\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 980,
        ""words"": [
            ""sably"",
            ""basyl"",
            ""tabbis"",
            ""babist"",
            ""siddur"",
            ""druids"",
            ""guebre"",
            ""burgee"",
            ""kola"",
            ""loka"",
            ""kalo"",
            ""deiseal"",
            ""aediles"",
            ""essede"",
            ""deeses""
        ],
        ""solution"": [
            [
                ""aediles"",
                ""deiseal""
            ],
            [
                ""babist"",
                ""tabbis""
            ],
            [
                ""basyl"",
                ""sably""
            ],
            [
                ""burgee"",
                ""guebre""
            ],
            [
                ""deeses"",
                ""essede""
            ],
            [
                ""druids"",
                ""siddur""
            ],
            [
                ""kalo"",
                ""kola"",
                ""loka""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
981,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""perthite"", ""tephrite"", ""recharted"", ""chartered"", ""monadism"", ""nomadism"", ""respersive"", ""repressive"", ""orgies"", ""sergio"", ""peperino"", ""peperoni"", ""siller"", ""rilles"", ""somatosplanchnic"", ""splanchnosomatic"", ""tignum"", ""muting""]
","[[""chartered"", ""recharted""], [""monadism"", ""nomadism""], [""muting"", ""tignum""], [""orgies"", ""sergio""], [""peperino"", ""peperoni""], [""perthite"", ""tephrite""], [""repressive"", ""respersive""], [""rilles"", ""siller""], [""somatosplanchnic"", ""splanchnosomatic""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""perthite\"", \""tephrite\"", \""recharted\"", \""chartered\"", \""monadism\"", \""nomadism\"", \""respersive\"", \""repressive\"", \""orgies\"", \""sergio\"", \""peperino\"", \""peperoni\"", \""siller\"", \""rilles\"", \""somatosplanchnic\"", \""splanchnosomatic\"", \""tignum\"", \""muting\""]\n"",
    ""answer"": ""[[\""chartered\"", \""recharted\""], [\""monadism\"", \""nomadism\""], [\""muting\"", \""tignum\""], [\""orgies\"", \""sergio\""], [\""peperino\"", \""peperoni\""], [\""perthite\"", \""tephrite\""], [\""repressive\"", \""respersive\""], [\""rilles\"", \""siller\""], [\""somatosplanchnic\"", \""splanchnosomatic\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 981,
        ""words"": [
            ""perthite"",
            ""tephrite"",
            ""recharted"",
            ""chartered"",
            ""monadism"",
            ""nomadism"",
            ""respersive"",
            ""repressive"",
            ""orgies"",
            ""sergio"",
            ""peperino"",
            ""peperoni"",
            ""siller"",
            ""rilles"",
            ""somatosplanchnic"",
            ""splanchnosomatic"",
            ""tignum"",
            ""muting""
        ],
        ""solution"": [
            [
                ""chartered"",
                ""recharted""
            ],
            [
                ""monadism"",
                ""nomadism""
            ],
            [
                ""muting"",
                ""tignum""
            ],
            [
                ""orgies"",
                ""sergio""
            ],
            [
                ""peperino"",
                ""peperoni""
            ],
            [
                ""perthite"",
                ""tephrite""
            ],
            [
                ""repressive"",
                ""respersive""
            ],
            [
                ""rilles"",
                ""siller""
            ],
            [
                ""somatosplanchnic"",
                ""splanchnosomatic""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
982,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""overbait"", ""bravoite"", ""abortive"", ""tachist"", ""cattish"", ""characins"", ""saccharin"", ""agaricin"", ""garcinia"", ""manatee"", ""emanate"", ""enemata"", ""endfile"", ""enfield"", ""enfiled"", ""monometer"", ""monotreme"", ""metronome"", ""lumbars"", ""labrums"", ""markland"", ""landmark"", ""berseems"", ""bessemer""]
","[[""abortive"", ""bravoite"", ""overbait""], [""agaricin"", ""garcinia""], [""berseems"", ""bessemer""], [""cattish"", ""tachist""], [""characins"", ""saccharin""], [""emanate"", ""enemata"", ""manatee""], [""endfile"", ""enfield"", ""enfiled""], [""labrums"", ""lumbars""], [""landmark"", ""markland""], [""metronome"", ""monometer"", ""monotreme""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""overbait\"", \""bravoite\"", \""abortive\"", \""tachist\"", \""cattish\"", \""characins\"", \""saccharin\"", \""agaricin\"", \""garcinia\"", \""manatee\"", \""emanate\"", \""enemata\"", \""endfile\"", \""enfield\"", \""enfiled\"", \""monometer\"", \""monotreme\"", \""metronome\"", \""lumbars\"", \""labrums\"", \""markland\"", \""landmark\"", \""berseems\"", \""bessemer\""]\n"",
    ""answer"": ""[[\""abortive\"", \""bravoite\"", \""overbait\""], [\""agaricin\"", \""garcinia\""], [\""berseems\"", \""bessemer\""], [\""cattish\"", \""tachist\""], [\""characins\"", \""saccharin\""], [\""emanate\"", \""enemata\"", \""manatee\""], [\""endfile\"", \""enfield\"", \""enfiled\""], [\""labrums\"", \""lumbars\""], [\""landmark\"", \""markland\""], [\""metronome\"", \""monometer\"", \""monotreme\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 982,
        ""words"": [
            ""overbait"",
            ""bravoite"",
            ""abortive"",
            ""tachist"",
            ""cattish"",
            ""characins"",
            ""saccharin"",
            ""agaricin"",
            ""garcinia"",
            ""manatee"",
            ""emanate"",
            ""enemata"",
            ""endfile"",
            ""enfield"",
            ""enfiled"",
            ""monometer"",
            ""monotreme"",
            ""metronome"",
            ""lumbars"",
            ""labrums"",
            ""markland"",
            ""landmark"",
            ""berseems"",
            ""bessemer""
        ],
        ""solution"": [
            [
                ""abortive"",
                ""bravoite"",
                ""overbait""
            ],
            [
                ""agaricin"",
                ""garcinia""
            ],
            [
                ""berseems"",
                ""bessemer""
            ],
            [
                ""cattish"",
                ""tachist""
            ],
            [
                ""characins"",
                ""saccharin""
            ],
            [
                ""emanate"",
                ""enemata"",
                ""manatee""
            ],
            [
                ""endfile"",
                ""enfield"",
                ""enfiled""
            ],
            [
                ""labrums"",
                ""lumbars""
            ],
            [
                ""landmark"",
                ""markland""
            ],
            [
                ""metronome"",
                ""monometer"",
                ""monotreme""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
983,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""riposte"", ""reposit"", ""porites"", ""poister"", ""ropiest"", ""conspue"", ""pounces"", ""worts"", ""trows"", ""worst"", ""strow""]
","[[""conspue"", ""pounces""], [""poister"", ""porites"", ""reposit"", ""riposte"", ""ropiest""], [""strow"", ""trows"", ""worst"", ""worts""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""riposte\"", \""reposit\"", \""porites\"", \""poister\"", \""ropiest\"", \""conspue\"", \""pounces\"", \""worts\"", \""trows\"", \""worst\"", \""strow\""]\n"",
    ""answer"": ""[[\""conspue\"", \""pounces\""], [\""poister\"", \""porites\"", \""reposit\"", \""riposte\"", \""ropiest\""], [\""strow\"", \""trows\"", \""worst\"", \""worts\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 983,
        ""words"": [
            ""riposte"",
            ""reposit"",
            ""porites"",
            ""poister"",
            ""ropiest"",
            ""conspue"",
            ""pounces"",
            ""worts"",
            ""trows"",
            ""worst"",
            ""strow""
        ],
        ""solution"": [
            [
                ""conspue"",
                ""pounces""
            ],
            [
                ""poister"",
                ""porites"",
                ""reposit"",
                ""riposte"",
                ""ropiest""
            ],
            [
                ""strow"",
                ""trows"",
                ""worst"",
                ""worts""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
984,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""uncoated"", ""outdance"", ""godly"", ""goldy"", ""herophile"", ""rheophile"", ""deis"", ""ised"", ""dies"", ""removable"", ""overblame"", ""mohur"", ""humor"", ""benadryl"", ""bylander""]
","[[""benadryl"", ""bylander""], [""deis"", ""dies"", ""ised""], [""godly"", ""goldy""], [""herophile"", ""rheophile""], [""humor"", ""mohur""], [""outdance"", ""uncoated""], [""overblame"", ""removable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""uncoated\"", \""outdance\"", \""godly\"", \""goldy\"", \""herophile\"", \""rheophile\"", \""deis\"", \""ised\"", \""dies\"", \""removable\"", \""overblame\"", \""mohur\"", \""humor\"", \""benadryl\"", \""bylander\""]\n"",
    ""answer"": ""[[\""benadryl\"", \""bylander\""], [\""deis\"", \""dies\"", \""ised\""], [\""godly\"", \""goldy\""], [\""herophile\"", \""rheophile\""], [\""humor\"", \""mohur\""], [\""outdance\"", \""uncoated\""], [\""overblame\"", \""removable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 984,
        ""words"": [
            ""uncoated"",
            ""outdance"",
            ""godly"",
            ""goldy"",
            ""herophile"",
            ""rheophile"",
            ""deis"",
            ""ised"",
            ""dies"",
            ""removable"",
            ""overblame"",
            ""mohur"",
            ""humor"",
            ""benadryl"",
            ""bylander""
        ],
        ""solution"": [
            [
                ""benadryl"",
                ""bylander""
            ],
            [
                ""deis"",
                ""dies"",
                ""ised""
            ],
            [
                ""godly"",
                ""goldy""
            ],
            [
                ""herophile"",
                ""rheophile""
            ],
            [
                ""humor"",
                ""mohur""
            ],
            [
                ""outdance"",
                ""uncoated""
            ],
            [
                ""overblame"",
                ""removable""
            ]
        ],
        ""anagram_groups"": 7,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
985,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""unmasker"", ""unmakers"", ""liberation"", ""libationer"", ""renominate"", ""enantiomer"", ""boilers"", ""reboils"", ""sorbile"", ""purdy"", ""updry"", ""prudy"", ""antiptosis"", ""panostitis"", ""impeder"", ""demirep"", ""remiped"", ""uncorrugated"", ""counterguard"", ""appeal"", ""appale""]
","[[""antiptosis"", ""panostitis""], [""appale"", ""appeal""], [""boilers"", ""reboils"", ""sorbile""], [""counterguard"", ""uncorrugated""], [""demirep"", ""impeder"", ""remiped""], [""enantiomer"", ""renominate""], [""libationer"", ""liberation""], [""prudy"", ""purdy"", ""updry""], [""unmakers"", ""unmasker""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""unmasker\"", \""unmakers\"", \""liberation\"", \""libationer\"", \""renominate\"", \""enantiomer\"", \""boilers\"", \""reboils\"", \""sorbile\"", \""purdy\"", \""updry\"", \""prudy\"", \""antiptosis\"", \""panostitis\"", \""impeder\"", \""demirep\"", \""remiped\"", \""uncorrugated\"", \""counterguard\"", \""appeal\"", \""appale\""]\n"",
    ""answer"": ""[[\""antiptosis\"", \""panostitis\""], [\""appale\"", \""appeal\""], [\""boilers\"", \""reboils\"", \""sorbile\""], [\""counterguard\"", \""uncorrugated\""], [\""demirep\"", \""impeder\"", \""remiped\""], [\""enantiomer\"", \""renominate\""], [\""libationer\"", \""liberation\""], [\""prudy\"", \""purdy\"", \""updry\""], [\""unmakers\"", \""unmasker\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 985,
        ""words"": [
            ""unmasker"",
            ""unmakers"",
            ""liberation"",
            ""libationer"",
            ""renominate"",
            ""enantiomer"",
            ""boilers"",
            ""reboils"",
            ""sorbile"",
            ""purdy"",
            ""updry"",
            ""prudy"",
            ""antiptosis"",
            ""panostitis"",
            ""impeder"",
            ""demirep"",
            ""remiped"",
            ""uncorrugated"",
            ""counterguard"",
            ""appeal"",
            ""appale""
        ],
        ""solution"": [
            [
                ""antiptosis"",
                ""panostitis""
            ],
            [
                ""appale"",
                ""appeal""
            ],
            [
                ""boilers"",
                ""reboils"",
                ""sorbile""
            ],
            [
                ""counterguard"",
                ""uncorrugated""
            ],
            [
                ""demirep"",
                ""impeder"",
                ""remiped""
            ],
            [
                ""enantiomer"",
                ""renominate""
            ],
            [
                ""libationer"",
                ""liberation""
            ],
            [
                ""prudy"",
                ""purdy"",
                ""updry""
            ],
            [
                ""unmakers"",
                ""unmasker""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
986,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lit"", ""til"", ""phrenics"", ""pinscher"", ""pinchers"", ""dormancy"", ""mordancy"", ""nixon"", ""ninox"", ""pastural"", ""aplustra"", ""spatular"", ""numeric"", ""uncrime"", ""scamping"", ""campings"", ""trouper"", ""porture""]
","[[""aplustra"", ""pastural"", ""spatular""], [""campings"", ""scamping""], [""dormancy"", ""mordancy""], [""lit"", ""til""], [""ninox"", ""nixon""], [""numeric"", ""uncrime""], [""phrenics"", ""pinchers"", ""pinscher""], [""porture"", ""trouper""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lit\"", \""til\"", \""phrenics\"", \""pinscher\"", \""pinchers\"", \""dormancy\"", \""mordancy\"", \""nixon\"", \""ninox\"", \""pastural\"", \""aplustra\"", \""spatular\"", \""numeric\"", \""uncrime\"", \""scamping\"", \""campings\"", \""trouper\"", \""porture\""]\n"",
    ""answer"": ""[[\""aplustra\"", \""pastural\"", \""spatular\""], [\""campings\"", \""scamping\""], [\""dormancy\"", \""mordancy\""], [\""lit\"", \""til\""], [\""ninox\"", \""nixon\""], [\""numeric\"", \""uncrime\""], [\""phrenics\"", \""pinchers\"", \""pinscher\""], [\""porture\"", \""trouper\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 986,
        ""words"": [
            ""lit"",
            ""til"",
            ""phrenics"",
            ""pinscher"",
            ""pinchers"",
            ""dormancy"",
            ""mordancy"",
            ""nixon"",
            ""ninox"",
            ""pastural"",
            ""aplustra"",
            ""spatular"",
            ""numeric"",
            ""uncrime"",
            ""scamping"",
            ""campings"",
            ""trouper"",
            ""porture""
        ],
        ""solution"": [
            [
                ""aplustra"",
                ""pastural"",
                ""spatular""
            ],
            [
                ""campings"",
                ""scamping""
            ],
            [
                ""dormancy"",
                ""mordancy""
            ],
            [
                ""lit"",
                ""til""
            ],
            [
                ""ninox"",
                ""nixon""
            ],
            [
                ""numeric"",
                ""uncrime""
            ],
            [
                ""phrenics"",
                ""pinchers"",
                ""pinscher""
            ],
            [
                ""porture"",
                ""trouper""
            ]
        ],
        ""anagram_groups"": 8,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
987,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""daimones"", ""nomadise"", ""jacate"", ""cajeta""]
","[[""cajeta"", ""jacate""], [""daimones"", ""nomadise""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""daimones\"", \""nomadise\"", \""jacate\"", \""cajeta\""]\n"",
    ""answer"": ""[[\""cajeta\"", \""jacate\""], [\""daimones\"", \""nomadise\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 987,
        ""words"": [
            ""daimones"",
            ""nomadise"",
            ""jacate"",
            ""cajeta""
        ],
        ""solution"": [
            [
                ""cajeta"",
                ""jacate""
            ],
            [
                ""daimones"",
                ""nomadise""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
988,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""adighe"", ""hidage"", ""heteraxial"", ""exhilarate"", ""spill"", ""pills""]
","[[""adighe"", ""hidage""], [""exhilarate"", ""heteraxial""], [""pills"", ""spill""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""adighe\"", \""hidage\"", \""heteraxial\"", \""exhilarate\"", \""spill\"", \""pills\""]\n"",
    ""answer"": ""[[\""adighe\"", \""hidage\""], [\""exhilarate\"", \""heteraxial\""], [\""pills\"", \""spill\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 988,
        ""words"": [
            ""adighe"",
            ""hidage"",
            ""heteraxial"",
            ""exhilarate"",
            ""spill"",
            ""pills""
        ],
        ""solution"": [
            [
                ""adighe"",
                ""hidage""
            ],
            [
                ""exhilarate"",
                ""heteraxial""
            ],
            [
                ""pills"",
                ""spill""
            ]
        ],
        ""anagram_groups"": 3,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
989,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""greying"", ""gingery"", ""niggery"", ""fibroin"", ""biforin"", ""idolisms"", ""solidism"", ""lucretian"", ""ratiuncle"", ""whitetop"", ""whitepot"", ""chalkiest"", ""hackliest"", ""harikari"", ""harakiri"", ""segetal"", ""eaglets"", ""telegas"", ""legates"", ""gelates"", ""it"", ""ti"", ""ordene"", ""endore"", ""redone""]
","[[""biforin"", ""fibroin""], [""chalkiest"", ""hackliest""], [""eaglets"", ""gelates"", ""legates"", ""segetal"", ""telegas""], [""endore"", ""ordene"", ""redone""], [""gingery"", ""greying"", ""niggery""], [""harakiri"", ""harikari""], [""idolisms"", ""solidism""], [""it"", ""ti""], [""lucretian"", ""ratiuncle""], [""whitepot"", ""whitetop""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""greying\"", \""gingery\"", \""niggery\"", \""fibroin\"", \""biforin\"", \""idolisms\"", \""solidism\"", \""lucretian\"", \""ratiuncle\"", \""whitetop\"", \""whitepot\"", \""chalkiest\"", \""hackliest\"", \""harikari\"", \""harakiri\"", \""segetal\"", \""eaglets\"", \""telegas\"", \""legates\"", \""gelates\"", \""it\"", \""ti\"", \""ordene\"", \""endore\"", \""redone\""]\n"",
    ""answer"": ""[[\""biforin\"", \""fibroin\""], [\""chalkiest\"", \""hackliest\""], [\""eaglets\"", \""gelates\"", \""legates\"", \""segetal\"", \""telegas\""], [\""endore\"", \""ordene\"", \""redone\""], [\""gingery\"", \""greying\"", \""niggery\""], [\""harakiri\"", \""harikari\""], [\""idolisms\"", \""solidism\""], [\""it\"", \""ti\""], [\""lucretian\"", \""ratiuncle\""], [\""whitepot\"", \""whitetop\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 989,
        ""words"": [
            ""greying"",
            ""gingery"",
            ""niggery"",
            ""fibroin"",
            ""biforin"",
            ""idolisms"",
            ""solidism"",
            ""lucretian"",
            ""ratiuncle"",
            ""whitetop"",
            ""whitepot"",
            ""chalkiest"",
            ""hackliest"",
            ""harikari"",
            ""harakiri"",
            ""segetal"",
            ""eaglets"",
            ""telegas"",
            ""legates"",
            ""gelates"",
            ""it"",
            ""ti"",
            ""ordene"",
            ""endore"",
            ""redone""
        ],
        ""solution"": [
            [
                ""biforin"",
                ""fibroin""
            ],
            [
                ""chalkiest"",
                ""hackliest""
            ],
            [
                ""eaglets"",
                ""gelates"",
                ""legates"",
                ""segetal"",
                ""telegas""
            ],
            [
                ""endore"",
                ""ordene"",
                ""redone""
            ],
            [
                ""gingery"",
                ""greying"",
                ""niggery""
            ],
            [
                ""harakiri"",
                ""harikari""
            ],
            [
                ""idolisms"",
                ""solidism""
            ],
            [
                ""it"",
                ""ti""
            ],
            [
                ""lucretian"",
                ""ratiuncle""
            ],
            [
                ""whitepot"",
                ""whitetop""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
990,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""ecrevisse"", ""recessive"", ""mediocrity"", ""iridectomy"", ""sideral"", ""sadleir"", ""dialers"", ""derails"", ""annot"", ""tonna"", ""anton"", ""notan""]
","[[""annot"", ""anton"", ""notan"", ""tonna""], [""derails"", ""dialers"", ""sadleir"", ""sideral""], [""ecrevisse"", ""recessive""], [""iridectomy"", ""mediocrity""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""ecrevisse\"", \""recessive\"", \""mediocrity\"", \""iridectomy\"", \""sideral\"", \""sadleir\"", \""dialers\"", \""derails\"", \""annot\"", \""tonna\"", \""anton\"", \""notan\""]\n"",
    ""answer"": ""[[\""annot\"", \""anton\"", \""notan\"", \""tonna\""], [\""derails\"", \""dialers\"", \""sadleir\"", \""sideral\""], [\""ecrevisse\"", \""recessive\""], [\""iridectomy\"", \""mediocrity\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 990,
        ""words"": [
            ""ecrevisse"",
            ""recessive"",
            ""mediocrity"",
            ""iridectomy"",
            ""sideral"",
            ""sadleir"",
            ""dialers"",
            ""derails"",
            ""annot"",
            ""tonna"",
            ""anton"",
            ""notan""
        ],
        ""solution"": [
            [
                ""annot"",
                ""anton"",
                ""notan"",
                ""tonna""
            ],
            [
                ""derails"",
                ""dialers"",
                ""sadleir"",
                ""sideral""
            ],
            [
                ""ecrevisse"",
                ""recessive""
            ],
            [
                ""iridectomy"",
                ""mediocrity""
            ]
        ],
        ""anagram_groups"": 4,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
991,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""taboured"", ""obdurate"", ""pes"", ""sep"", ""esp"", ""kifs"", ""fisk"", ""pass"", ""asps"", ""elvers"", ""levers"", ""revels"", ""pornerastic"", ""cotranspire"", ""gadbee"", ""abedge"", ""lowering"", ""roweling"", ""visiters"", ""revisits""]
","[[""abedge"", ""gadbee""], [""asps"", ""pass""], [""cotranspire"", ""pornerastic""], [""elvers"", ""levers"", ""revels""], [""esp"", ""pes"", ""sep""], [""fisk"", ""kifs""], [""lowering"", ""roweling""], [""obdurate"", ""taboured""], [""revisits"", ""visiters""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""taboured\"", \""obdurate\"", \""pes\"", \""sep\"", \""esp\"", \""kifs\"", \""fisk\"", \""pass\"", \""asps\"", \""elvers\"", \""levers\"", \""revels\"", \""pornerastic\"", \""cotranspire\"", \""gadbee\"", \""abedge\"", \""lowering\"", \""roweling\"", \""visiters\"", \""revisits\""]\n"",
    ""answer"": ""[[\""abedge\"", \""gadbee\""], [\""asps\"", \""pass\""], [\""cotranspire\"", \""pornerastic\""], [\""elvers\"", \""levers\"", \""revels\""], [\""esp\"", \""pes\"", \""sep\""], [\""fisk\"", \""kifs\""], [\""lowering\"", \""roweling\""], [\""obdurate\"", \""taboured\""], [\""revisits\"", \""visiters\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 991,
        ""words"": [
            ""taboured"",
            ""obdurate"",
            ""pes"",
            ""sep"",
            ""esp"",
            ""kifs"",
            ""fisk"",
            ""pass"",
            ""asps"",
            ""elvers"",
            ""levers"",
            ""revels"",
            ""pornerastic"",
            ""cotranspire"",
            ""gadbee"",
            ""abedge"",
            ""lowering"",
            ""roweling"",
            ""visiters"",
            ""revisits""
        ],
        ""solution"": [
            [
                ""abedge"",
                ""gadbee""
            ],
            [
                ""asps"",
                ""pass""
            ],
            [
                ""cotranspire"",
                ""pornerastic""
            ],
            [
                ""elvers"",
                ""levers"",
                ""revels""
            ],
            [
                ""esp"",
                ""pes"",
                ""sep""
            ],
            [
                ""fisk"",
                ""kifs""
            ],
            [
                ""lowering"",
                ""roweling""
            ],
            [
                ""obdurate"",
                ""taboured""
            ],
            [
                ""revisits"",
                ""visiters""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
992,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""forlie"", ""foiler"", ""seminaries"", ""semainiers""]
","[[""foiler"", ""forlie""], [""semainiers"", ""seminaries""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""forlie\"", \""foiler\"", \""seminaries\"", \""semainiers\""]\n"",
    ""answer"": ""[[\""foiler\"", \""forlie\""], [\""semainiers\"", \""seminaries\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 992,
        ""words"": [
            ""forlie"",
            ""foiler"",
            ""seminaries"",
            ""semainiers""
        ],
        ""solution"": [
            [
                ""foiler"",
                ""forlie""
            ],
            [
                ""semainiers"",
                ""seminaries""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
993,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""lalopathies"", ""allopathies"", ""alaki"", ""akali"", ""buckwash"", ""bushwack"", ""defat"", ""fated"", ""cardo"", ""draco""]
","[[""akali"", ""alaki""], [""allopathies"", ""lalopathies""], [""buckwash"", ""bushwack""], [""cardo"", ""draco""], [""defat"", ""fated""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""lalopathies\"", \""allopathies\"", \""alaki\"", \""akali\"", \""buckwash\"", \""bushwack\"", \""defat\"", \""fated\"", \""cardo\"", \""draco\""]\n"",
    ""answer"": ""[[\""akali\"", \""alaki\""], [\""allopathies\"", \""lalopathies\""], [\""buckwash\"", \""bushwack\""], [\""cardo\"", \""draco\""], [\""defat\"", \""fated\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 993,
        ""words"": [
            ""lalopathies"",
            ""allopathies"",
            ""alaki"",
            ""akali"",
            ""buckwash"",
            ""bushwack"",
            ""defat"",
            ""fated"",
            ""cardo"",
            ""draco""
        ],
        ""solution"": [
            [
                ""akali"",
                ""alaki""
            ],
            [
                ""allopathies"",
                ""lalopathies""
            ],
            [
                ""buckwash"",
                ""bushwack""
            ],
            [
                ""cardo"",
                ""draco""
            ],
            [
                ""defat"",
                ""fated""
            ]
        ],
        ""anagram_groups"": 5,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
994,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""fibreboard"", ""fiberboard"", ""rouches"", ""rhoecus"", ""chouser"", ""choreus""]
","[[""choreus"", ""chouser"", ""rhoecus"", ""rouches""], [""fiberboard"", ""fibreboard""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""fibreboard\"", \""fiberboard\"", \""rouches\"", \""rhoecus\"", \""chouser\"", \""choreus\""]\n"",
    ""answer"": ""[[\""choreus\"", \""chouser\"", \""rhoecus\"", \""rouches\""], [\""fiberboard\"", \""fibreboard\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 994,
        ""words"": [
            ""fibreboard"",
            ""fiberboard"",
            ""rouches"",
            ""rhoecus"",
            ""chouser"",
            ""choreus""
        ],
        ""solution"": [
            [
                ""choreus"",
                ""chouser"",
                ""rhoecus"",
                ""rouches""
            ],
            [
                ""fiberboard"",
                ""fibreboard""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
995,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""yarr"", ""arry"", ""ungreenable"", ""ungenerable""]
","[[""arry"", ""yarr""], [""ungenerable"", ""ungreenable""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""yarr\"", \""arry\"", \""ungreenable\"", \""ungenerable\""]\n"",
    ""answer"": ""[[\""arry\"", \""yarr\""], [\""ungenerable\"", \""ungreenable\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 995,
        ""words"": [
            ""yarr"",
            ""arry"",
            ""ungreenable"",
            ""ungenerable""
        ],
        ""solution"": [
            [
                ""arry"",
                ""yarr""
            ],
            [
                ""ungenerable"",
                ""ungreenable""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
996,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""rishi"", ""sirih"", ""irish"", ""doorless"", ""odorless"", ""techous"", ""touches"", ""leet"", ""teel"", ""whangee"", ""wanghee"", ""semicha"", ""chamise"", ""pyrocomenic"", ""pyromeconic"", ""utricular"", ""turricula"", ""bouldering"", ""redoubling""]
","[[""bouldering"", ""redoubling""], [""chamise"", ""semicha""], [""doorless"", ""odorless""], [""irish"", ""rishi"", ""sirih""], [""leet"", ""teel""], [""pyrocomenic"", ""pyromeconic""], [""techous"", ""touches""], [""turricula"", ""utricular""], [""wanghee"", ""whangee""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""rishi\"", \""sirih\"", \""irish\"", \""doorless\"", \""odorless\"", \""techous\"", \""touches\"", \""leet\"", \""teel\"", \""whangee\"", \""wanghee\"", \""semicha\"", \""chamise\"", \""pyrocomenic\"", \""pyromeconic\"", \""utricular\"", \""turricula\"", \""bouldering\"", \""redoubling\""]\n"",
    ""answer"": ""[[\""bouldering\"", \""redoubling\""], [\""chamise\"", \""semicha\""], [\""doorless\"", \""odorless\""], [\""irish\"", \""rishi\"", \""sirih\""], [\""leet\"", \""teel\""], [\""pyrocomenic\"", \""pyromeconic\""], [\""techous\"", \""touches\""], [\""turricula\"", \""utricular\""], [\""wanghee\"", \""whangee\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 996,
        ""words"": [
            ""rishi"",
            ""sirih"",
            ""irish"",
            ""doorless"",
            ""odorless"",
            ""techous"",
            ""touches"",
            ""leet"",
            ""teel"",
            ""whangee"",
            ""wanghee"",
            ""semicha"",
            ""chamise"",
            ""pyrocomenic"",
            ""pyromeconic"",
            ""utricular"",
            ""turricula"",
            ""bouldering"",
            ""redoubling""
        ],
        ""solution"": [
            [
                ""bouldering"",
                ""redoubling""
            ],
            [
                ""chamise"",
                ""semicha""
            ],
            [
                ""doorless"",
                ""odorless""
            ],
            [
                ""irish"",
                ""rishi"",
                ""sirih""
            ],
            [
                ""leet"",
                ""teel""
            ],
            [
                ""pyrocomenic"",
                ""pyromeconic""
            ],
            [
                ""techous"",
                ""touches""
            ],
            [
                ""turricula"",
                ""utricular""
            ],
            [
                ""wanghee"",
                ""whangee""
            ]
        ],
        ""anagram_groups"": 9,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
997,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""neurope"", ""neepour"", ""kraters"", ""starker"", ""strung"", ""grunts"", ""bowmaker"", ""beamwork"", ""prenatal"", ""parental"", ""pithecan"", ""pantheic""]
","[[""beamwork"", ""bowmaker""], [""grunts"", ""strung""], [""kraters"", ""starker""], [""neepour"", ""neurope""], [""pantheic"", ""pithecan""], [""parental"", ""prenatal""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""neurope\"", \""neepour\"", \""kraters\"", \""starker\"", \""strung\"", \""grunts\"", \""bowmaker\"", \""beamwork\"", \""prenatal\"", \""parental\"", \""pithecan\"", \""pantheic\""]\n"",
    ""answer"": ""[[\""beamwork\"", \""bowmaker\""], [\""grunts\"", \""strung\""], [\""kraters\"", \""starker\""], [\""neepour\"", \""neurope\""], [\""pantheic\"", \""pithecan\""], [\""parental\"", \""prenatal\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 997,
        ""words"": [
            ""neurope"",
            ""neepour"",
            ""kraters"",
            ""starker"",
            ""strung"",
            ""grunts"",
            ""bowmaker"",
            ""beamwork"",
            ""prenatal"",
            ""parental"",
            ""pithecan"",
            ""pantheic""
        ],
        ""solution"": [
            [
                ""beamwork"",
                ""bowmaker""
            ],
            [
                ""grunts"",
                ""strung""
            ],
            [
                ""kraters"",
                ""starker""
            ],
            [
                ""neepour"",
                ""neurope""
            ],
            [
                ""pantheic"",
                ""pithecan""
            ],
            [
                ""parental"",
                ""prenatal""
            ]
        ],
        ""anagram_groups"": 6,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
998,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""empress"", ""sempres"", ""philter"", ""philtre"", ""thripel""]
","[[""empress"", ""sempres""], [""philter"", ""philtre"", ""thripel""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""empress\"", \""sempres\"", \""philter\"", \""philtre\"", \""thripel\""]\n"",
    ""answer"": ""[[\""empress\"", \""sempres\""], [\""philter\"", \""philtre\"", \""thripel\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 998,
        ""words"": [
            ""empress"",
            ""sempres"",
            ""philter"",
            ""philtre"",
            ""thripel""
        ],
        ""solution"": [
            [
                ""empress"",
                ""sempres""
            ],
            [
                ""philter"",
                ""philtre"",
                ""thripel""
            ]
        ],
        ""anagram_groups"": 2,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
999,group_anagrams,"An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.

Your job is to group the anagrams together. You can return the answer in any order.

The output is a list of lists of strings enclosed in triple angle brackets, where each outer list contains a group of anagrams, e.g. <<<[[""eat"", ""tea""], [""tan"", ""nat""]]>>>.

Group the following list of words into anagrams:
[""gaura"", ""guara"", ""garau"", ""garua"", ""gamdia"", ""agamid"", ""scouress"", ""sucroses"", ""courtside"", ""custodier"", ""creels"", ""sclere"", ""screel"", ""pala"", ""paal"", ""sketchers"", ""tcherkess"", ""ragshag"", ""shagrag"", ""trapnests"", ""transepts"", ""dichter"", ""ditcher""]
","[[""agamid"", ""gamdia""], [""courtside"", ""custodier""], [""creels"", ""sclere"", ""screel""], [""dichter"", ""ditcher""], [""garau"", ""garua"", ""gaura"", ""guara""], [""paal"", ""pala""], [""ragshag"", ""shagrag""], [""scouress"", ""sucroses""], [""sketchers"", ""tcherkess""], [""transepts"", ""trapnests""]]","{
    ""question"": ""An anagram is a word formed by rearranging the letters of a different word, using all the original letters exactly once.\n\nYour job is to group the anagrams together. You can return the answer in any order.\n\nThe output is a list of lists of strings, where each outer list contains a group of anagrams, e.g. [[\""eat\"", \""tea\""], [\""tan\"", \""nat\""]].\n\nGroup the following list of words into anagrams:\n[\""gaura\"", \""guara\"", \""garau\"", \""garua\"", \""gamdia\"", \""agamid\"", \""scouress\"", \""sucroses\"", \""courtside\"", \""custodier\"", \""creels\"", \""sclere\"", \""screel\"", \""pala\"", \""paal\"", \""sketchers\"", \""tcherkess\"", \""ragshag\"", \""shagrag\"", \""trapnests\"", \""transepts\"", \""dichter\"", \""ditcher\""]\n"",
    ""answer"": ""[[\""agamid\"", \""gamdia\""], [\""courtside\"", \""custodier\""], [\""creels\"", \""sclere\"", \""screel\""], [\""dichter\"", \""ditcher\""], [\""garau\"", \""garua\"", \""gaura\"", \""guara\""], [\""paal\"", \""pala\""], [\""ragshag\"", \""shagrag\""], [\""scouress\"", \""sucroses\""], [\""sketchers\"", \""tcherkess\""], [\""transepts\"", \""trapnests\""]]"",
    ""metadata"": {
        ""source_dataset"": ""group_anagrams"",
        ""source_index"": 999,
        ""words"": [
            ""gaura"",
            ""guara"",
            ""garau"",
            ""garua"",
            ""gamdia"",
            ""agamid"",
            ""scouress"",
            ""sucroses"",
            ""courtside"",
            ""custodier"",
            ""creels"",
            ""sclere"",
            ""screel"",
            ""pala"",
            ""paal"",
            ""sketchers"",
            ""tcherkess"",
            ""ragshag"",
            ""shagrag"",
            ""trapnests"",
            ""transepts"",
            ""dichter"",
            ""ditcher""
        ],
        ""solution"": [
            [
                ""agamid"",
                ""gamdia""
            ],
            [
                ""courtside"",
                ""custodier""
            ],
            [
                ""creels"",
                ""sclere"",
                ""screel""
            ],
            [
                ""dichter"",
                ""ditcher""
            ],
            [
                ""garau"",
                ""garua"",
                ""gaura"",
                ""guara""
            ],
            [
                ""paal"",
                ""pala""
            ],
            [
                ""ragshag"",
                ""shagrag""
            ],
            [
                ""scouress"",
                ""sucroses""
            ],
            [
                ""sketchers"",
                ""tcherkess""
            ],
            [
                ""transepts"",
                ""trapnests""
            ]
        ],
        ""anagram_groups"": 10,
        ""difficulty"": {
            ""anagram_groups"": [
                2,
                10
            ],
            ""words_per_group"": [
                2,
                5
            ]
        }
    }
}"
